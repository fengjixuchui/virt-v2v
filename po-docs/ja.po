# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Red Hat Inc.
# This file is distributed under the same license as the libguestfs package.
#
# Translators:
# Hajime Taira <htaira@redhat.com>, 2012
# rjones <rjones@redhat.com>, 2011
# Tomoyuki KATO <tomo@dream.daynight.jp>, 2012-2013
# carrotsoft <www.carrotsoft@gmail.com>, 2011
# carrotsoft <www.carrotsoft@gmail.com>, 2011
# Richard Jones <rjones@redhat.com>, 2017. #zanata
msgid ""
msgstr ""
"Project-Id-Version: libguestfs 1.39.12\n"
"Report-Msgid-Bugs-To: libguestfs@redhat.com\n"
"POT-Creation-Date: 2020-07-06 15:21+0100\n"
"PO-Revision-Date: 2017-02-24 07:33+0000\n"
"Last-Translator: Copied by Zanata <copied-by-zanata@zanata.org>\n"
"Language-Team: Japanese (http://www.transifex.com/projects/p/libguestfs/"
"language/ja/)\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Zanata 4.6.2\n"

#. type: =end
#: ../common/mlcustomize/customize-options.pod:1
#: ../common/mlcustomize/customize-options.pod:25
#: ../docs/virt-v2v-release-notes-1.42.pod:141
#: ../docs/virt-v2v-release-notes-1.42.pod:145
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:1
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:25
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:141
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:145
msgid "comment"
msgstr "コメント"

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:3
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:3
#, no-wrap
msgid ""
"libguestfs generated file\n"
" WARNING: THIS FILE IS GENERATED FROM THE FOLLOWING FILES:\n"
"          generator/customize.ml\n"
"          and from the code in the generator/ subdirectory.\n"
" ANY CHANGES YOU MAKE TO THIS FILE WILL BE LOST.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:9
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:9
#, no-wrap
msgid ""
" Copyright (C) 2009-2020 Red Hat Inc.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:11
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:11
#, no-wrap
msgid ""
" This program is free software; you can redistribute it and/or modify\n"
" it under the terms of the GNU General Public License as published by\n"
" the Free Software Foundation; either version 2 of the License, or\n"
" (at your option) any later version.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:16
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:16
#, no-wrap
msgid ""
" This program is distributed in the hope that it will be useful,\n"
" but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
" GNU General Public License for more details.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:21
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:21
#, no-wrap
msgid ""
" You should have received a copy of the GNU General Public License along\n"
" with this program; if not, write to the Free Software Foundation, Inc.,\n"
" 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"
"\n"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:29
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:29
msgid "B<--append-line> FILE:LINE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:31
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:31
msgid ""
"Append a single line of text to the C<FILE>.  If the file does not already "
"end with a newline, then one is added before the appended line.  Also a "
"newline is added to the end of the C<LINE> string automatically."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:36
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:36
msgid "For example (assuming ordinary shell quoting) this command:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:38
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:38
#, no-wrap
msgid ""
" --append-line '/etc/hosts:10.0.0.1 foo'\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:40
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:40
msgid ""
"will add either C<10.0.0.1 foo⏎> or C<⏎10.0.0.1 foo⏎> to the file, the "
"latter only if the existing file does not already end with a newline."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:44
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:44
msgid ""
"C<⏎> represents a newline character, which is guessed by looking at the "
"existing content of the file, so this command does the right thing for files "
"using Unix or Windows line endings.  It also works for empty or non-existent "
"files."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:49
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:49
msgid "To insert several lines, use the same option several times:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:51
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:51
#, no-wrap
msgid ""
" --append-line '/etc/hosts:10.0.0.1 foo'\n"
" --append-line '/etc/hosts:10.0.0.2 bar'\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:54
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:54
msgid "To insert a blank line before the appended line, do:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:56
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:56
#, no-wrap
msgid ""
" --append-line '/etc/hosts:'\n"
" --append-line '/etc/hosts:10.0.0.1 foo'\n"
"\n"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:59
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:59
msgid "B<--chmod> PERMISSIONS:FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:61
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:61
msgid "Change the permissions of C<FILE> to C<PERMISSIONS>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:63
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:63
msgid ""
"I<Note>: C<PERMISSIONS> by default would be decimal, unless you prefix it "
"with C<0> to get octal, ie. use C<0700> not C<700>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:66
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:66
msgid "B<--commands-from-file> FILENAME"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:68
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:68
msgid ""
"Read the customize commands from a file, one (and its arguments)  each line."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:71
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:71
msgid ""
"Each line contains a single customization command and its arguments, for "
"example:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:74
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:74
#, no-wrap
msgid ""
" delete /some/file\n"
" install some-package\n"
" password some-user:password:its-new-password\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:78
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:78
msgid ""
"Empty lines are ignored, and lines starting with C<#> are comments and are "
"ignored as well.  Furthermore, arguments can be spread across multiple "
"lines, by adding a C<\\> (continuation character) at the of a line, for "
"example"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:83
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:83
#, no-wrap
msgid ""
" edit /some/file:\\\n"
"   s/^OPT=.*/OPT=ok/\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:86
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:86
msgid ""
"The commands are handled in the same order as they are in the file, as if "
"they were specified as I<--delete /some/file> on the command line."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:90
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:90
msgid "B<--copy> SOURCE:DEST"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:92
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:92
msgid "Copy files or directories recursively inside the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:94
#: ../common/mlcustomize/customize-options.pod:101
#: ../common/mlcustomize/customize-options.pod:199
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:94
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:101
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:199
msgid "Wildcards cannot be used."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:96
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:96
msgid "B<--copy-in> LOCALPATH:REMOTEDIR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:98
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:98
msgid ""
"Copy local files or directories recursively into the disk image, placing "
"them in the directory C<REMOTEDIR> (which must exist)."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:103
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:103
msgid "B<--delete> PATH"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:105
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:105
msgid ""
"Delete a file from the guest.  Or delete a directory (and all its contents, "
"recursively)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:108
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:108
msgid ""
"You can use shell glob characters in the specified path.  Be careful to "
"escape glob characters from the host shell, if that is required.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:112
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:112
#, no-wrap
msgid ""
" virt-customize --delete '/var/log/*.log'.\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:114
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:114
msgid "See also: I<--upload>, I<--scrub>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:116
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:116
msgid "B<--edit> FILE:EXPR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:118
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:118
msgid "Edit C<FILE> using the Perl expression C<EXPR>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:120
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:120
msgid ""
"Be careful to properly quote the expression to prevent it from being altered "
"by the shell."
msgstr ""
"表現がシェルにより変更されるのを防ぐために、適切に引用符でくくるよう注意して"
"ください。"

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:123
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:123
msgid "Note that this option is only available when Perl 5 is installed."
msgstr ""
"このオプションは Perl 5 がインストールされているときのみ利用可能であることに"
"注意してください。"

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:125
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:125
msgid "See L<virt-edit(1)/NON-INTERACTIVE EDITING>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:127
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:127
msgid "B<--firstboot> SCRIPT"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:129
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:129
msgid ""
"Install C<SCRIPT> inside the guest, so that when the guest first boots up, "
"the script runs (as root, late in the boot process)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:132
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:132
msgid "The script is automatically chmod +x after installation in the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:134
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:134
msgid ""
"The alternative version I<--firstboot-command> is the same, but it "
"conveniently wraps the command up in a single line script for you."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:137
#: ../common/mlcustomize/customize-options.pod:150
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:137
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:150
msgid ""
"You can have multiple I<--firstboot> options.  They run in the same order "
"that they appear on the command line."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:140
#: ../common/mlcustomize/customize-options.pod:153
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:140
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:153
msgid ""
"Please take a look at L<virt-builder(1)/FIRST BOOT SCRIPTS> for more "
"information and caveats about the first boot scripts."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:143
#: ../common/mlcustomize/customize-options.pod:156
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:143
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:156
msgid "See also I<--run>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:145
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:145
msgid "B<--firstboot-command> 'CMD+ARGS'"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:147
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:147
msgid ""
"Run command (and arguments) inside the guest when the guest first boots up "
"(as root, late in the boot process)."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:158
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:158
msgid "B<--firstboot-install> PKG,PKG.."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:160
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:160
msgid ""
"Install the named packages (a comma-separated list).  These are installed "
"when the guest first boots using the guest’s package manager (eg. apt, yum, "
"etc.) and the guest’s network connection."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:164
#: ../common/mlcustomize/customize-options.pod:178
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:164
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:178
msgid ""
"For an overview on the different ways to install packages, see L<virt-"
"builder(1)/INSTALLING PACKAGES>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:167
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:167
msgid "B<--hostname> HOSTNAME"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:169
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:169
msgid ""
"Set the hostname of the guest to C<HOSTNAME>.  You can use a dotted hostname."
"domainname (FQDN) if you want."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:172
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:172
msgid "B<--install> PKG,PKG.."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:174
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:174
msgid ""
"Install the named packages (a comma-separated list).  These are installed "
"during the image build using the guest’s package manager (eg. apt, yum, "
"etc.) and the host’s network connection."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:181
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:181
msgid "See also I<--update>, I<--uninstall>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:183
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:183
msgid "B<--link> TARGET:LINK[:LINK..]"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:185
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:185
msgid ""
"Create symbolic link(s) in the guest, starting at C<LINK> and pointing at "
"C<TARGET>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:188
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:188
msgid "B<--mkdir> DIR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:190
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:190
msgid "Create a directory in the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:192
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:192
msgid ""
"This uses S<C<mkdir -p>> so any intermediate directories are created, and it "
"also works if the directory already exists."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:195
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:195
msgid "B<--move> SOURCE:DEST"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:197
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:197
msgid "Move files or directories inside the guest."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:201
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:201
msgid "B<--no-logfile>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:203
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:203
msgid ""
"Scrub C<builder.log> (log file from build commands) from the image after "
"building is complete.  If you don't want to reveal precisely how the image "
"was built, use this option."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:207
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:207
msgid "See also: L</LOG FILE>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:209
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:209
msgid "B<--password> USER:SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:211
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:211
msgid ""
"Set the password for C<USER>.  (Note this option does I<not> create the user "
"account)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:214
#: ../common/mlcustomize/customize-options.pod:243
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:214
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:243
msgid ""
"See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR> "
"field, and also how to set up user accounts."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:217
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:217
msgid "B<--password-crypto> md5|sha256|sha512"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:219
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:219
msgid ""
"When the virt tools change or set a password in the guest, this option sets "
"the password encryption of that password to C<md5>, C<sha256> or C<sha512>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:223
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:223
msgid ""
"C<sha256> and C<sha512> require glibc E<ge> 2.7 (check crypt(3) inside the "
"guest)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:226
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:226
msgid ""
"C<md5> will work with relatively old Linux guests (eg. RHEL 3), but is not "
"secure against modern attacks."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:229
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:229
msgid ""
"The default is C<sha512> unless libguestfs detects an old guest that didn't "
"have support for SHA-512, in which case it will use C<md5>.  You can "
"override libguestfs by specifying this option."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:233
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:233
msgid ""
"Note this does not change the default password encryption used by the guest "
"when you create new user accounts inside the guest.  If you want to do that, "
"then you should use the I<--edit> option to modify C</etc/sysconfig/"
"authconfig> (Fedora, RHEL) or C</etc/pam.d/common-password> (Debian, Ubuntu)."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:239
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:239
msgid "B<--root-password> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:241
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:241
msgid "Set the root password."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:246
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:246
msgid ""
"Note: In virt-builder, if you I<don't> set I<--root-password> then the guest "
"is given a I<random> root password."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:249
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:249
msgid "B<--run> SCRIPT"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:251
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:251
msgid ""
"Run the shell script (or any program) called C<SCRIPT> on the disk image.  "
"The script runs virtualized inside a small appliance, chrooted into the "
"guest filesystem."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:255
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:255
msgid "The script is automatically chmod +x."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:257
#: ../common/mlcustomize/customize-options.pod:273
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:257
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:273
msgid ""
"If libguestfs supports it then a limited network connection is available but "
"it only allows outgoing network connections.  You can also attach data disks "
"(eg. ISO files) as another way to provide data (eg. software packages) to "
"the script without needing a network connection (I<--attach>).  You can also "
"upload data files (I<--upload>)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:263
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:263
msgid ""
"You can have multiple I<--run> options.  They run in the same order that "
"they appear on the command line."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:266
#: ../common/mlcustomize/customize-options.pod:282
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:266
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:282
msgid "See also: I<--firstboot>, I<--attach>, I<--upload>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:268
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:268
msgid "B<--run-command> 'CMD+ARGS'"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:270
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:270
msgid ""
"Run the command and arguments on the disk image.  The command runs "
"virtualized inside a small appliance, chrooted into the guest filesystem."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:279
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:279
msgid ""
"You can have multiple I<--run-command> options.  They run in the same order "
"that they appear on the command line."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:284
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:284
msgid "B<--scrub> FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:286
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:286
msgid "Scrub a file from the guest.  This is like I<--delete> except that:"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:290
#: ../common/mlcustomize/customize-options.pod:294
#: ../docs/virt-v2v-copy-to-local.pod:29 ../docs/virt-v2v-hacking.pod:23
#: ../docs/virt-v2v-hacking.pod:27 ../docs/virt-v2v-input-vmware.pod:411
#: ../docs/virt-v2v-input-vmware.pod:415 ../docs/virt-v2v-input-vmware.pod:419
#: ../docs/virt-v2v-input-vmware.pod:423 ../docs/virt-v2v-input-vmware.pod:427
#: ../docs/virt-v2v-output-local.pod:81 ../docs/virt-v2v-output-local.pod:86
#: ../docs/virt-v2v-output-local.pod:91 ../docs/virt-v2v-output-rhv.pod:121
#: ../docs/virt-v2v-output-rhv.pod:126 ../docs/virt-v2v.pod:179
#: ../docs/virt-v2v.pod:183 ../docs/virt-v2v.pod:188 ../docs/virt-v2v.pod:192
#: ../docs/virt-v2v.pod:196 ../docs/virt-v2v.pod:700 ../docs/virt-v2v.pod:705
#: ../docs/virt-v2v.pod:710 ../docs/virt-v2v.pod:714 ../docs/virt-v2v.pod:1053
#: ../docs/virt-v2v.pod:1058 ../docs/virt-v2v.pod:1069
#: ../docs/virt-v2v.pod:1081 ../docs/virt-v2v.pod:1087
#: ../docs/virt-v2v.pod:1092 ../docs/virt-v2v.pod:1110
#: ../docs/virt-v2v.pod:1114 ../test-harness/virt-v2v-test-harness.pod:175
#: ../test-harness/virt-v2v-test-harness.pod:179
#: ../test-harness/virt-v2v-test-harness.pod:183
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:290
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:294
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:29
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:23
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:27
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:411
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:415
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:419
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:423
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:427
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:81
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:86
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:91
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:121
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:126
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:179
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:183
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:188
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:192
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:196
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:700
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:705
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:710
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:714
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1053
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1058
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1069
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1081
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1087
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1092
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1110
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1114
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:175
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:179
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:183
msgid "*"
msgstr "*"

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:292
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:292
msgid "It scrubs the data so a guest could not recover it."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:296
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:296
msgid "It cannot delete directories, only regular files."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:300
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:300
msgid "B<--selinux-relabel>"
msgstr "B<--selinux-relabel>"

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:302
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:302
msgid "Relabel files in the guest so that they have the correct SELinux label."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:304
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:304
msgid ""
"This will attempt to relabel files immediately, but if the operation fails "
"this will instead touch F</.autorelabel> on the image to schedule a relabel "
"operation for the next time the image boots."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:308
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:308
msgid "You should only use this option for guests which support SELinux."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:310
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:310
msgid "B<--sm-attach> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:312
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:312
msgid "Attach to a pool using C<subscription-manager>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:314
#: ../common/mlcustomize/customize-options.pod:321
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:314
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:321
msgid ""
"See L<virt-builder(1)/SUBSCRIPTION-MANAGER> for the format of the "
"C<SELECTOR> field."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:317
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:317
msgid "B<--sm-credentials> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:319
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:319
msgid "Set the credentials for C<subscription-manager>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:324
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:324
msgid "B<--sm-register>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:326
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:326
msgid "Register the guest using C<subscription-manager>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:328
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:328
msgid "This requires credentials being set using I<--sm-credentials>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:330
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:330
msgid "B<--sm-remove>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:332
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:332
msgid ""
"Remove all the subscriptions from the guest using C<subscription-manager>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:335
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:335
msgid "B<--sm-unregister>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:337
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:337
msgid "Unregister the guest using C<subscription-manager>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:339
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:339
msgid "B<--ssh-inject> USER[:SELECTOR]"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:341
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:341
msgid ""
"Inject an ssh key so the given C<USER> will be able to log in over ssh "
"without supplying a password.  The C<USER> must exist already in the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:345
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:345
msgid ""
"See L<virt-builder(1)/SSH KEYS> for the format of the C<SELECTOR> field."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:348
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:348
msgid ""
"You can have multiple I<--ssh-inject> options, for different users and also "
"for more keys for each user."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:351
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:351
msgid "B<--timezone> TIMEZONE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:353
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:353
msgid ""
"Set the default timezone of the guest to C<TIMEZONE>.  Use a location string "
"like C<Europe/London>"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:356
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:356
msgid "B<--touch> FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:358
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:358
msgid "This command performs a L<touch(1)>-like operation on C<FILE>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:360
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:360
msgid "B<--truncate> FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:362
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:362
msgid ""
"This command truncates C<FILE> to a zero-length file. The file must exist "
"already."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:365
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:365
msgid "B<--truncate-recursive> PATH"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:367
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:367
msgid ""
"This command recursively truncates all files under C<PATH> to zero-length."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:369
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:369
msgid "B<--uninstall> PKG,PKG.."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:371
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:371
msgid ""
"Uninstall the named packages (a comma-separated list).  These are removed "
"during the image build using the guest’s package manager (eg. apt, yum, "
"etc.).  Dependent packages may also need to be uninstalled to satisfy the "
"request."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:376
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:376
msgid "See also I<--install>, I<--update>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:378
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:378
msgid "B<--update>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:380
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:380
msgid ""
"Do the equivalent of C<yum update>, C<apt-get upgrade>, or whatever command "
"is required to update the packages already installed in the template to "
"their latest versions."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:384
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:384
msgid "See also I<--install>, I<--uninstall>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:386
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:386
msgid "B<--upload> FILE:DEST"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:388
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:388
msgid ""
"Upload local file C<FILE> to destination C<DEST> in the disk image.  File "
"owner and permissions from the original are preserved, so you should set "
"them to what you want them to be in the disk image."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:392
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:392
msgid ""
"C<DEST> could be the final filename.  This can be used to rename the file on "
"upload."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:395
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:395
msgid ""
"If C<DEST> is a directory name (which must already exist in the guest)  then "
"the file is uploaded into that directory, and it keeps the same name as on "
"the local filesystem."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:399
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:399
msgid "See also: I<--mkdir>, I<--delete>, I<--scrub>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:401
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:401
msgid "B<--write> FILE:CONTENT"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:403
#: ../virt-v2v-1.43.1/common/mlcustomize/customize-options.pod:403
msgid "Write C<CONTENT> to C<FILE>."
msgstr ""

#. type: =item
#: ../common/options/blocksize-option.pod:1
#: ../virt-v2v-1.43.1/common/options/blocksize-option.pod:1
#, fuzzy
#| msgid "C<blocksize>"
msgid "B<--blocksize=512>"
msgstr "C<blocksize>"

#. type: =item
#: ../common/options/blocksize-option.pod:3
#: ../virt-v2v-1.43.1/common/options/blocksize-option.pod:3
#, fuzzy
#| msgid "C<blocksize>"
msgid "B<--blocksize=4096>"
msgstr "C<blocksize>"

#. type: =item
#: ../common/options/blocksize-option.pod:5
#: ../virt-v2v-1.43.1/common/options/blocksize-option.pod:5
#, fuzzy
#| msgid "C<blocksize>"
msgid "B<--blocksize>"
msgstr "C<blocksize>"

#. type: textblock
#: ../common/options/blocksize-option.pod:7
#: ../virt-v2v-1.43.1/common/options/blocksize-option.pod:7
msgid ""
"This parameter sets the sector size of the disk image.  It affects all "
"explicitly added subsequent disks after this parameter.  Using I<--"
"blocksize> with no argument switches the disk sector size to the default "
"value which is usually 512 bytes.  See also L<guestfs(3)/"
"guestfs_add_drive_opts>."
msgstr ""

#. type: =item
#: ../common/options/key-option.pod:1
#: ../virt-v2v-1.43.1/common/options/key-option.pod:1
msgid "B<--key> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/options/key-option.pod:3
#: ../virt-v2v-1.43.1/common/options/key-option.pod:3
msgid ""
"Specify a key for LUKS, to automatically open a LUKS device when using the "
"inspection.  C<ID> can be either the libguestfs device name, or the UUID of "
"the LUKS device."
msgstr ""

#. type: =item
#: ../common/options/key-option.pod:9
#: ../virt-v2v-1.43.1/common/options/key-option.pod:9
msgid "B<--key> C<ID>:key:KEY_STRING"
msgstr ""

#. type: textblock
#: ../common/options/key-option.pod:11
#: ../virt-v2v-1.43.1/common/options/key-option.pod:11
msgid "Use the specified C<KEY_STRING> as passphrase."
msgstr ""

#. type: =item
#: ../common/options/key-option.pod:13
#: ../virt-v2v-1.43.1/common/options/key-option.pod:13
msgid "B<--key> C<ID>:file:FILENAME"
msgstr ""

#. type: textblock
#: ../common/options/key-option.pod:15
#: ../virt-v2v-1.43.1/common/options/key-option.pod:15
msgid "Read the passphrase from F<FILENAME>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:1 ../docs/virt-v2v-hacking.pod:1
#: ../docs/virt-v2v-input-vmware.pod:1 ../docs/virt-v2v-input-xen.pod:1
#: ../docs/virt-v2v-output-local.pod:1 ../docs/virt-v2v-output-openstack.pod:1
#: ../docs/virt-v2v-output-rhv.pod:1 ../docs/virt-v2v-release-notes-1.42.pod:1
#: ../docs/virt-v2v-support.pod:1 ../docs/virt-v2v.pod:1
#: ../test-harness/virt-v2v-test-harness.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:1
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:1
msgid "NAME"
msgstr "名前"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:3
msgid "virt-v2v-copy-to-local - Copy a remote guest to the local machine"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:5 ../docs/virt-v2v-input-vmware.pod:5
#: ../docs/virt-v2v-input-xen.pod:5 ../docs/virt-v2v-output-local.pod:6
#: ../docs/virt-v2v-output-openstack.pod:5 ../docs/virt-v2v-output-rhv.pod:5
#: ../docs/virt-v2v.pod:5 ../test-harness/virt-v2v-test-harness.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:6
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:5
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:5
msgid "SYNOPSIS"
msgstr "書式"

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:7
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic LIBVIRT_URI GUEST\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:9
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:9
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com xen_guest\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:11 ../docs/virt-v2v-hacking.pod:5
#: ../docs/virt-v2v-input-vmware.pod:29 ../docs/virt-v2v-input-xen.pod:12
#: ../docs/virt-v2v-output-local.pod:19
#: ../docs/virt-v2v-output-openstack.pod:15 ../docs/virt-v2v-output-rhv.pod:23
#: ../docs/virt-v2v-release-notes-1.42.pod:5 ../docs/virt-v2v-support.pod:6
#: ../docs/virt-v2v.pod:15 ../test-harness/virt-v2v-test-harness.pod:17
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:11
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:29
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:12
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:19
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:15
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:23
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:5
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:6
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:15
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:17
msgid "DESCRIPTION"
msgstr "説明"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:13
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:13
msgid ""
"C<virt-v2v-copy-to-local> copies a guest from a remote hypervisor to the "
"local machine, in preparation for conversion by L<virt-v2v(1)>.  Note this "
"tool alone B<does not> do the virt-v2v conversion."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-copy-to-local.pod:17
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:17
msgid "When to use this tool"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:19
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:19
msgid ""
"This tool is not usually necessary, but there are a few special cases (see "
"list below) where you might need it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:22
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:22
msgid ""
"If your case does not fit one of these special cases, then ignore this tool "
"and read L<virt-v2v(1)> instead.  The virt-v2v-copy-to-local process is "
"slower than using virt-v2v directly, because it has to copy unused parts of "
"the guest disk."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:31
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:31
msgid ""
"You have a Xen guest using host block devices.  Virt-v2v cannot convert such "
"guests directly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:34
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:34
msgid "See L<virt-v2v-input-xen(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-copy-to-local.pod:38
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:38
msgid "How this tool works"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:40
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:40
msgid ""
"This tool uses libvirt to get the libvirt XML (metadata) of the remote "
"guest, essentially equivalent to running C<virsh dumpxml guest>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:43
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:43
msgid ""
"It then uses the XML to locate the remote guest disks, which are copied over "
"using a hypervisor-specific method.  It uses ssh for remote Xen hypervisors."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:47
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:47
msgid ""
"It then modifies the libvirt XML so that it points at the local copies of "
"the guest disks."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:50
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:50
msgid ""
"The libvirt XML is output to a file called F<guest.xml> (where I<guest> is "
"the name of the guest).  The disk(s) are output to file(s)  called F<guest-"
"disk1>, F<guest-disk2> and so on."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:54
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:54
msgid "After copying the guest locally, you can convert it using:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:56
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:56
#, no-wrap
msgid ""
" virt-v2v -i libvirtxml guest.xml [-o options ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:58
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:58
msgid "Virt-v2v finds the local copies of the disks by looking in the XML."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:60 ../docs/virt-v2v.pod:66
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:60
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:66
msgid "EXAMPLES"
msgstr "例"

#. type: =head2
#: ../docs/virt-v2v-copy-to-local.pod:62
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:62
msgid "Copy and convert from Xen hypervisor that uses host block devices"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:64
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:64
msgid "For full instructions, see L<virt-v2v-input-xen(1)>."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:66
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:66
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com xen_guest\n"
" virt-v2v -i libvirtxml xen_guest.xml -o local -os /var/tmp\n"
" rm xen_guest.xml xen_guest-disk*\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:70 ../docs/virt-v2v.pod:152
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:70
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:152
msgid "OPTIONS"
msgstr "オプション"

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:74 ../docs/virt-v2v.pod:156
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:74
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:156
msgid "B<--help>"
msgstr "B<--help>"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:76 ../docs/virt-v2v.pod:158
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:76
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:158
msgid "Display help."
msgstr "ヘルプを表示します。"

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:78 ../docs/virt-v2v.pod:291
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:78
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:291
msgid "B<-ic> libvirtURI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:80
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:80
msgid "Specify a libvirt connection URI"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:82
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:82
msgid "B<-ip> file"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:84
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:84
msgid ""
"Instead of asking for password(s) interactively, pass the password through a "
"file.  Note the file should contain the whole password, B<without any "
"trailing newline>, and for security the file should have mode C<0600> so "
"that others cannot read it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:89
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:89
msgid ""
"Currently this option does not have any effect on xen+ssh transfers, but "
"that is a bug."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:92 ../docs/virt-v2v.pod:826
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:92
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:826
msgid "B<-q>"
msgstr "B<-q>"

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:94 ../docs/virt-v2v.pod:828
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:94
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:828
msgid "B<--quiet>"
msgstr "B<--quiet>"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:96 ../docs/virt-v2v.pod:830
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:96
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:830
msgid "This disables progress bars and other unnecessary output."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:98 ../docs/virt-v2v.pod:875
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:98
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:875
msgid "B<-v>"
msgstr "B<-v>"

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:100 ../docs/virt-v2v.pod:877
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:100
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:877
msgid "B<--verbose>"
msgstr "B<--verbose>"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:102 ../docs/virt-v2v.pod:879
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:102
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:879
msgid "Enable verbose messages for debugging."
msgstr "デバッグ用の冗長なメッセージを有効にします。"

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:104 ../docs/virt-v2v.pod:881
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:104
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:881
msgid "B<-V>"
msgstr "B<-V>"

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:106 ../docs/virt-v2v.pod:883
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:106
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:883
msgid "B<--version>"
msgstr "B<--version>"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:108 ../docs/virt-v2v.pod:885
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:108
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:885
msgid "Display version number and exit."
msgstr "バージョン番号を表示して、終了します。"

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:112 ../docs/virt-v2v-hacking.pod:48
#: ../docs/virt-v2v-input-vmware.pod:583 ../docs/virt-v2v-input-xen.pod:117
#: ../docs/virt-v2v-output-local.pod:198
#: ../docs/virt-v2v-output-openstack.pod:210
#: ../docs/virt-v2v-output-rhv.pod:228
#: ../docs/virt-v2v-release-notes-1.42.pod:211 ../docs/virt-v2v-support.pod:143
#: ../docs/virt-v2v.pod:1668 ../test-harness/virt-v2v-test-harness.pod:263
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:112
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:48
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:583
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:117
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:198
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:210
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:228
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:211
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:143
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1668
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:263
msgid "SEE ALSO"
msgstr "関連項目"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:114
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:114
msgid ""
"L<virt-v2v(1)>, L<virsh(1)>, L<http://libguestfs.org/>, L<https://libvirt."
"org/uri.html>, L<https://libvirt.org/remote.html>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:120 ../docs/virt-v2v-hacking.pod:53
#: ../docs/virt-v2v-release-notes-1.42.pod:218 ../docs/virt-v2v.pod:1687
#: ../test-harness/virt-v2v-test-harness.pod:273
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:120
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:53
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:218
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1687
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:273
msgid "AUTHORS"
msgstr "著者"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:122
#: ../test-harness/virt-v2v-test-harness.pod:275
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:122
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:275
msgid "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"
msgstr "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:124 ../docs/virt-v2v-hacking.pod:57
#: ../docs/virt-v2v-input-vmware.pod:591 ../docs/virt-v2v-input-xen.pod:125
#: ../docs/virt-v2v-output-local.pod:206
#: ../docs/virt-v2v-output-openstack.pod:220
#: ../docs/virt-v2v-output-rhv.pod:236
#: ../docs/virt-v2v-release-notes-1.42.pod:236 ../docs/virt-v2v-support.pod:152
#: ../docs/virt-v2v.pod:1709 ../test-harness/virt-v2v-test-harness.pod:277
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:124
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:57
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:591
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:125
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:206
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:220
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:236
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:236
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:152
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1709
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:277
msgid "COPYRIGHT"
msgstr "COPYRIGHT"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:126 ../docs/virt-v2v-hacking.pod:59
#: ../docs/virt-v2v-input-vmware.pod:593 ../docs/virt-v2v-input-xen.pod:127
#: ../docs/virt-v2v-output-local.pod:208
#: ../docs/virt-v2v-output-openstack.pod:222
#: ../docs/virt-v2v-output-rhv.pod:238
#: ../docs/virt-v2v-release-notes-1.42.pod:238 ../docs/virt-v2v-support.pod:154
#: ../docs/virt-v2v.pod:1711
#: ../virt-v2v-1.43.1/docs/virt-v2v-copy-to-local.pod:126
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:59
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:593
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:127
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:208
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:222
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:238
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:238
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:154
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1711
msgid "Copyright (C) 2009-2020 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:3
msgid "virt-v2v-hacking -"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:7
msgid ""
"First a little history.  Virt-v2v has been through at least two complete "
"rewrites, so this is probably about the third version (but we don't intend "
"to rewrite it again).  The previous version was written in Perl and can be "
"found here: L<https://git.fedorahosted.org/git/virt-v2v.git>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:13
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:13
msgid ""
"The current version started out as almost a line-for-line rewrite of the "
"Perl code in OCaml + C, and it still has a fairly similar structure.  "
"Therefore if there are details of this code that you don't understand "
"(especially in the details of guest conversion), checking the Perl code may "
"help."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:19
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:19
msgid "The files to start with when reading this code are:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:25
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:25
msgid "F<types.mli>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:29
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:29
msgid "F<v2v.ml>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:33
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:33
msgid ""
"F<types.mli> defines all the structures used and passed around when "
"communicating between different bits of the program.  F<v2v.ml> controls how "
"the program runs in stages."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:37
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:37
msgid ""
"After studying those files, you may want to branch out into the input "
"modules (F<input_*>), the output modules (F<output_*>) or the conversion "
"modules (F<convert_*>).  The input and output modules define I<-i> and I<-o> "
"options (see the manual).  The conversion modules define what guest types we "
"can handle and the detailed steps involved in converting them."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:44
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:44
msgid ""
"Every other file in this directory is a support module / library of some "
"sort.  Some code is written in C, especially where we want to use an "
"external C library such as libxml2."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:50
#: ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:50
msgid "L<virt-p2v(1)>, L<virt-v2v(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:55 ../docs/virt-v2v-input-vmware.pod:589
#: ../docs/virt-v2v-input-xen.pod:123 ../docs/virt-v2v-output-local.pod:204
#: ../docs/virt-v2v-output-openstack.pod:218
#: ../docs/virt-v2v-output-rhv.pod:234
#: ../docs/virt-v2v-release-notes-1.42.pod:222 ../docs/virt-v2v-support.pod:150
#: ../docs/virt-v2v.pod:1703 ../virt-v2v-1.43.1/docs/virt-v2v-hacking.pod:55
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:589
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:123
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:204
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:218
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:234
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:222
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:150
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1703
msgid "Richard W.M. Jones"
msgstr "Richard W.M. Jones"

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:3
msgid "virt-v2v-input-vmware - Using virt-v2v to convert guests from VMware"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:7
#, no-wrap
msgid ""
" virt-v2v -i vmx GUEST.vmx [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:9
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:9
#, no-wrap
msgid ""
" virt-v2v -i vmx\n"
"    -it ssh\n"
"    -ip passwordfile\n"
"    'ssh://root@esxi.example.com/vmfs/volumes/datastore1/guest/guest.vmx'\n"
"    [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:15
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:15
#, no-wrap
msgid ""
" virt-v2v\n"
"    -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1'\n"
"    -it vddk\n"
"    -io vddk-libdir=/path/to/vmware-vix-disklib-distrib\n"
"    -io vddk-thumbprint=xx:xx:xx:...\n"
"    \"GUEST NAME\"\n"
"    [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:23
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:23
#, no-wrap
msgid ""
" virt-v2v -i ova DISK.ova [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:25
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:25
#, no-wrap
msgid ""
" virt-v2v\n"
"    -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1'\n"
"    \"GUEST NAME\" [-o* options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:31
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:31
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests from "
"VMware.  There are currently five different methods to access VMware:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:36
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:36
msgid "B<-i vmx> GUESTB<.vmx>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:38 ../docs/virt-v2v-input-vmware.pod:46
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:38
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:46
msgid "Full documentation: L</INPUT FROM VMWARE VMX>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:40
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:40
msgid ""
"If you either have a F<GUEST.vmx> file and one or more F<GUEST.vmdk> disk "
"image files, or if you are able to NFS-mount the VMware storage, then you "
"can use the I<-i vmx> method to read the source guest."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:44
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:44
msgid "B<-i vmx> B<-it ssh> ssh://..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:48
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:48
msgid ""
"This is similar to the method above, except it uses an SSH connection to "
"ESXi to read the F<GUEST.vmx> file and associated disks.  This requires that "
"you have enabled SSH access to the VMware ESXi hypervisor - in the default "
"ESXi configuration this is turned off."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:53
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:53
msgid "B<-ic vpx://...> B<-it vddk>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:55
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:55
msgid "B<-ic esx://...> B<-it vddk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:57
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:57
msgid "Full documentation: L</INPUT FROM VDDK>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:59
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:59
msgid ""
"This method uses the proprietary VDDK library (a.k.a. VixDiskLib) to access "
"the VMware vCenter server or VMware ESXi hypervisor."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:62
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:62
msgid ""
"If you have the proprietary library then this method is usually the fastest "
"and most flexible.  If you don't have or don't want to use non-free software "
"then the VMX or SSH methods above will be best."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:66
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:66
msgid "B<-i ova> DISKB<.ova>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:68
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:68
msgid "Full documentation: L</INPUT FROM VMWARE OVA>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:70
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:70
msgid ""
"With this method you must first export the guest (eg. from vSphere) as an F<."
"ova> file, which virt-v2v can then read directly.  Note this method only "
"works with files exported from VMware, not OVA files that come from other "
"hypervisors or management systems, since OVA is only a pretend standard and "
"is not compatible or interoperable between vendors."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:77
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:77
msgid "B<-ic vpx://...> \"GUEST NAME\""
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:79
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:79
msgid "Full documentation: L</INPUT FROM VMWARE VCENTER SERVER>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:81
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:81
msgid ""
"If none of the above methods is available, then use this method to import a "
"guest from VMware vCenter.  This is the slowest method."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:86
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:86
msgid "INPUT FROM VMWARE VMX"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:88
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:88
msgid "Virt-v2v is able to import guests from VMware’s vmx files."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:90
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:90
msgid "This is useful in two cases:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:94 ../docs/virt-v2v-input-vmware.pod:180
#: ../docs/virt-v2v-input-vmware.pod:495 ../docs/virt-v2v-output-local.pod:102
#: ../docs/virt-v2v.pod:1516
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:94
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:180
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:495
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:102
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1516
msgid "1."
msgstr "1."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:96
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:96
msgid ""
"VMware virtual machines are stored on a separate NFS server and you are able "
"to mount the NFS storage directly."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:99 ../docs/virt-v2v-input-vmware.pod:187
#: ../docs/virt-v2v-input-vmware.pod:499 ../docs/virt-v2v-output-local.pod:116
#: ../docs/virt-v2v.pod:1523
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:99
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:187
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:499
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:116
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1523
msgid "2."
msgstr "2."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:101
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:101
msgid ""
"You have enabled SSH access to the VMware ESXi hypervisor and there is a C</"
"vmfs/volumes> folder containing the virtual machines."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:106
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:106
msgid ""
"If you find a folder of files called F<I<guest>.vmx>, F<I<guest>.vmxf>, "
"F<I<guest>.nvram> and one or more F<.vmdk> disk images, then you can use "
"this method."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:110
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:110
msgid "VMX: Guest must be shut down"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:112
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:112
msgid ""
"B<The guest must be shut down before conversion starts>.  If you don't shut "
"it down, you will end up with a corrupted VM disk on the target.  With other "
"methods, virt-v2v tries to prevent concurrent access, but because the I<-i "
"vmx> method works directly against the storage, checking for concurrent "
"access is not possible."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:118
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:118
msgid "VMX: Access to the storage containing the VMX and VMDK files"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:120
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:120
msgid ""
"If the vmx and vmdk files aren't available locally then you must I<either> "
"mount the NFS storage on the conversion server I<or> enable passwordless SSH "
"on the ESXi hypervisor."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:124
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:124
msgid "VMX: SSH authentication"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:126 ../docs/virt-v2v-input-xen.pod:21
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:126
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:21
msgid ""
"You can use SSH password authentication, by supplying the name of a file "
"containing the password to the I<-ip> option (note this option does I<not> "
"take the password directly)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:130
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:130
msgid ""
"If you are not using password authentication, an alternative is to use ssh-"
"agent, and add your ssh public key to F</etc/ssh/keys-root/authorized_keys> "
"(on the ESXi hypervisor).  After doing this, you should check that "
"passwordless access works from the virt-v2v server to the ESXi hypervisor.  "
"For example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:136
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:136
#, no-wrap
msgid ""
" $ ssh root@esxi.example.com\n"
" [ logs straight into the shell, no password is requested ]\n"
"\n"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:139
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:139
msgid "VMX: Construct the SSH URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:141
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:141
msgid ""
"When using the SSH input transport you must specify a remote C<ssh://...> "
"URI pointing to the VMX file.  A typical URI looks like:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:144
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:144
#, no-wrap
msgid ""
" ssh://root@esxi.example.com/vmfs/volumes/datastore1/my%20guest/my%20guest.vmx\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:146
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:146
msgid ""
"Any space must be escaped with C<%20> and other non-ASCII characters may "
"also need to be URI-escaped."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:149
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:149
msgid "The username is not required if it is the same as your local username."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:151
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:151
msgid ""
"You may optionally supply a port number after the hostname if the SSH server "
"is not listening on the default port (22)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:154
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:154
msgid "VMX: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:156
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:156
msgid "To import a vmx file from a local file or NFS, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:158
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:158
#, no-wrap
msgid ""
" $ virt-v2v -i vmx guest.vmx -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:160
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:160
msgid ""
"To import a vmx file over SSH, add I<-it ssh> to select the SSH transport "
"and supply a remote SSH URI:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:163
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:163
#, no-wrap
msgid ""
" $ virt-v2v \\\n"
"     -i vmx -it ssh \\\n"
"     \"ssh://root@esxi.example.com/vmfs/volumes/datastore1/guest/guest.vmx\" \\\n"
"     -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:168
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:168
msgid ""
"Virt-v2v processes the vmx file and uses it to find the location of any vmdk "
"disks."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:171
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:171
msgid "INPUT FROM VDDK"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:173
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:173
msgid ""
"Virt-v2v is able to import guests using VMware’s proprietary VDDK library (a."
"k.a. VixDiskLib)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:176
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:176
msgid "VDDK: Prerequisites"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:182
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:182
msgid ""
"As the VDDK library is not open source, and the license of this library does "
"not permit redistribution or commercial use, you must obtain VDDK yourself "
"and satisfy yourself that your usage of the library is permitted by the "
"license."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:189
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:189
msgid ""
"nbdkit E<ge> 1.6 is recommended, as it ships with the VDDK plugin enabled "
"unconditionally."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:192 ../docs/virt-v2v-output-local.pod:124
#: ../docs/virt-v2v.pod:1529
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:192
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:124
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1529
msgid "3."
msgstr "3."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:194
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:194
msgid ""
"You must find the SSL \"thumbprint\" of your VMware server.  How to do this "
"is explained in L<nbdkit-vddk-plugin(1)>, also available at the link above."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:198 ../docs/virt-v2v-output-local.pod:145
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:198
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:145
msgid "4."
msgstr "4."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:200
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:200
msgid "VDDK imports require a feature added in libvirt E<ge> 3.7."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:204
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:204
msgid "VDDK: ESXi NFC service memory limits"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:206
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:206
msgid "In the verbose log you may see errors like:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:208
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:208
#, no-wrap
msgid ""
" nbdkit: vddk[3]: error: [NFC ERROR] NfcFssrvrProcessErrorMsg:\n"
" received NFC error 5 from server: Failed to allocate the\n"
" requested 2097176 bytes\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:212
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:212
msgid ""
"This seems especially common when there are multiple parallel connections "
"open to the VMware server."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:215
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:215
msgid ""
"These can be caused by resource limits set on the VMware server.  You can "
"increase the limit for the NFC service by editing F</etc/vmware/hostd/config."
"xml> and adjusting the C<E<lt>maxMemoryE<gt>> setting:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:220
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:220
#, no-wrap
msgid ""
" <nfcsvc>\n"
"   <path>libnfcsvc.so</path>\n"
"   <enabled>true</enabled>\n"
"   <maxMemory>50331648</maxMemory>\n"
"   <maxStreamMemory>10485760</maxStreamMemory>\n"
" </nfcsvc>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:227
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:227
msgid "and restarting the C<hostd> service:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:229
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:229
#, no-wrap
msgid ""
" # /etc/init.d/hostd restart\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:231
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:231
msgid "For more information see L<https://bugzilla.redhat.com/1614276>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:233
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:233
msgid "VDDK: URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:235
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:235
msgid ""
"Construct the correct C<vpx://> (for vCenter) or C<esx://> (for ESXi)  URL.  "
"It will look something like these:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:238
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:238
#, no-wrap
msgid ""
" vpx://root@vcenter.example.com/Datacenter/esxi\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:240
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:240
#, no-wrap
msgid ""
" esx://root@esxi.example.com\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:242
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:242
msgid ""
"To verify that you have the correct URL, use the L<virsh(1)> command to list "
"the guests on the server:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:245 ../docs/virt-v2v-input-vmware.pod:438
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:245
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:438
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' list --all\n"
" Enter root's password for vcenter.example.com: ***\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:248 ../docs/virt-v2v-input-vmware.pod:441
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:248
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:441
#, no-wrap
msgid ""
"  Id    Name                           State\n"
" ----------------------------------------------------\n"
"  -     Fedora 20                      shut off\n"
"  -     Windows 2003                   shut off\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:253 ../docs/virt-v2v-input-vmware.pod:446
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:253
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:446
msgid ""
"If you get an error \"Peer certificate cannot be authenticated with given CA "
"certificates\" or similar, then you can either import the vCenter host’s "
"certificate, or bypass signature verification by adding the C<?no_verify=1> "
"flag:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:258 ../docs/virt-v2v-input-vmware.pod:451
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:258
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:451
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' list --all\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:260 ../docs/virt-v2v-input-vmware.pod:453
#: ../docs/virt-v2v-input-xen.pod:51
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:260
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:453
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:51
msgid ""
"You should also try dumping the metadata from any guest on your server, like "
"this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:263
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:263
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' dumpxml \"Windows 2003\"\n"
" <domain type='vmware'>\n"
"   <name>Windows 2003</name>\n"
"   [...]\n"
"   <vmware:moref>vm-123</vmware:moref>\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:270
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:270
msgid ""
"If C<E<lt>vmware:morefE<gt>> does not appear in the metadata, then you need "
"to upgrade libvirt."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:273
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:273
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your URI and/or your VMware server before continuing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:277
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:277
msgid "VDDK: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:279
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:279
msgid ""
"The I<-it vddk> parameter selects VDDK as the input transport for disks."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:281
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:281
msgid ""
"To import a particular guest from vCenter server or ESXi hypervisor, use a "
"command like the following, substituting the URI, guest name and SSL "
"thumbprint:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:285
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:285
#, no-wrap
msgid ""
" $ virt-v2v \\\n"
"     -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' \\\n"
"     -it vddk \\\n"
"     -io vddk-libdir=/path/to/vmware-vix-disklib-distrib \\\n"
"     -io vddk-thumbprint=xx:xx:xx:... \\\n"
"     \"Windows 2003\" \\\n"
"     -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:293
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:293
msgid ""
"Other options that you might need to add in rare circumstances include I<-io "
"vddk-config>, I<-io vddk-cookie>, I<-io vddk-nfchostport>, I<-io vddk-port>, "
"I<-io vddk-snapshot>, and I<-io vddk-transports>, which are all explained in "
"the L<nbdkit-vddk-plugin(1)> documentation.  Do not use these options unless "
"you know what you are doing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:299
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:299
msgid "VDDK: Debugging VDDK failures"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:301
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:301
msgid ""
"The VDDK library can be operated in a verbose mode where it gives (very) "
"verbose messages.  Use ‘virt-v2v -v -x’ as usual to enable verbose messages."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:305
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:305
msgid "INPUT FROM VMWARE OVA"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:307
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:307
msgid ""
"Virt-v2v is able to import guests from VMware’s OVA (Open Virtualization "
"Appliance) files.  Only OVAs exported from VMware vSphere will work."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:311
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:311
msgid "OVA: Create OVA"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:313
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:313
msgid ""
"To create an OVA in vSphere, use the \"Export OVF Template\" option (from "
"the VM context menu, or from the File menu).  Either \"Folder of files"
"\" (OVF) or \"Single file\" (OVA) will work, but OVA is probably easier to "
"deal with.  OVA files are really just uncompressed tar files, so you can use "
"commands like C<tar tf VM.ova> to view their contents."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:320
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:320
msgid "Create OVA with ovftool"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:322
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:322
msgid "You can also use VMware’s proprietary C<ovftool>:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:324
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:324
#, no-wrap
msgid ""
" ovftool --noSSLVerify \\\n"
"   vi://USER:PASSWORD@esxi.example.com/VM \\\n"
"   VM.ova\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:328
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:328
msgid "To connect to vCenter:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:330
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:330
#, no-wrap
msgid ""
" ovftool  --noSSLVerify \\\n"
"   vi://USER:PASSWORD@vcenter.example.com/DATACENTER-NAME/vm/VM \\\n"
"   VM.ova\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:334
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:334
msgid ""
"For Active Directory-aware authentication using down-level logon names "
"(C<DOMAIN\\USER>), you have to express the C<\\> character in the form of "
"its ascii hex-code (C<%5c>):"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:338
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:338
#, no-wrap
msgid ""
" vi://DOMAIN%5cUSER:PASSWORD@...\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:340
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:340
msgid "OVA: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:342
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:342
msgid "To import an OVA file called F<VM.ova>, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:344
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:344
#, no-wrap
msgid ""
" $ virt-v2v -i ova VM.ova -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:346
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:346
msgid ""
"If you exported the guest as a \"Folder of files\", I<or> if you unpacked "
"the OVA tarball yourself, then you can point virt-v2v at the directory "
"containing the files:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:350
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:350
#, no-wrap
msgid ""
" $ virt-v2v -i ova /path/to/files -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:352
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:352
msgid "INPUT FROM VMWARE VCENTER SERVER"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:354
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:354
msgid "Virt-v2v is able to import guests from VMware vCenter Server."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:356
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:356
msgid ""
"vCenter E<ge> 5.0 is required.  If you don’t have vCenter, using OVA or VMX "
"is recommended instead (see L</INPUT FROM VMWARE OVA> and/or L</INPUT FROM "
"VMWARE VMX>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:360
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:360
msgid ""
"Virt-v2v uses libvirt for access to vCenter, and therefore the input mode "
"should be I<-i libvirt>.  As this is the default, you don't need to specify "
"it on the command line."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:364
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:364
msgid "vCenter: URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:366
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:366
msgid "The libvirt URI of a vCenter server looks something like this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:368
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:368
#, no-wrap
msgid ""
" vpx://user@server/Datacenter/esxi\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:370
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:370
msgid "where:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:374
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:374
msgid "C<user@>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:376
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:376
msgid "is the (optional, but recommended) user to connect as."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:378
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:378
msgid ""
"If the username contains a backslash (eg. C<DOMAIN\\USER>) then you will "
"need to URI-escape that character using C<%5c>: C<DOMAIN%5cUSER> (5c is the "
"hexadecimal ASCII code for backslash.)  Other punctuation may also have to "
"be escaped."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:383
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:383
msgid "C<server>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:385
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:385
msgid "is the vCenter Server (I<not> hypervisor)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:387
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:387
msgid "C<Datacenter>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:389
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:389
msgid "is the name of the datacenter."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:391
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:391
msgid ""
"If the name contains a space, replace it with the URI-escape code C<%20>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:394
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:394
msgid "C<esxi>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:396
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:396
msgid "is the name of the ESXi hypervisor running the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:400
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:400
msgid ""
"If the VMware deployment is using folders, then these may need to be added "
"to the URI, eg:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:403
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:403
#, no-wrap
msgid ""
" vpx://user@server/Folder/Datacenter/esxi\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:405
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:405
msgid ""
"For full details of libvirt URIs, see: L<http://libvirt.org/drvesx.html>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:407
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:407
msgid "Typical errors from libvirt / virsh when the URI is wrong include:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:413
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:413
msgid "Could not find datacenter specified in [...]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:417
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:417
msgid "Could not find compute resource specified in [...]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:421
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:421
msgid "Path [...] does not specify a compute resource"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:425
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:425
msgid "Path [...] does not specify a host system"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:429
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:429
msgid "Could not find host system specified in [...]"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:433
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:433
msgid "vCenter: Test libvirt connection to vCenter"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:435
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:435
msgid ""
"Use the L<virsh(1)> command to list the guests on the vCenter Server like "
"this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:456
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:456
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' dumpxml \"Windows 2003\"\n"
" <domain type='vmware'>\n"
"   <name>Windows 2003</name>\n"
"   [...]\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:462
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:462
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your libvirt configuration and/or your VMware vCenter Server "
"before continuing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:466
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:466
msgid "vCenter: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:468
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:468
msgid "To import a particular guest from vCenter Server, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:470
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:470
#, no-wrap
msgid ""
" $ virt-v2v -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' \\\n"
"   \"Windows 2003\" \\\n"
"   -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:474
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:474
msgid ""
"where C<Windows 2003> is the name of the guest (which must be shut down)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:477
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:477
msgid ""
"Note that you may be asked for the vCenter password I<twice>.  This happens "
"once because libvirt needs it, and a second time because virt-v2v itself "
"connects directly to the server.  Use I<-ip> F<filename> to supply a "
"password via a file."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:482 ../docs/virt-v2v-input-xen.pod:80
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:482
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:80
msgid ""
"In this case the output flags are set to write the converted guest to a "
"temporary directory as this is just an example, but you can also write to "
"libvirt or any other supported target."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:486
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:486
msgid "vCenter: Non-administrator role"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:488
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:488
msgid ""
"Instead of using the vCenter Administrator role, you can create a custom non-"
"administrator role to perform the conversion.  You will however need to give "
"it a minimum set of permissions as follows (using VMware vCenter 6.5):"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:497
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:497
msgid "Create a custom role in vCenter."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:501
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:501
msgid "Enable (check) the following objects:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:503
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:503
#, no-wrap
msgid ""
" Datastore:\n"
"  - Browse datastore\n"
"  - Low level file operations\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:507
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:507
#, no-wrap
msgid ""
" Sessions:\n"
"  - Validate session\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:510
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:510
#, no-wrap
msgid ""
" Virtual Machine:\n"
"   Interaction:\n"
"     - Guest operating system management by VIX API\n"
"   Provisioning:\n"
"     - Allow disk access\n"
"     - Allow read-only disk access\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:519
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:519
msgid "vCenter: Firewall and proxy settings"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:521
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:521
msgid "vCenter: Ports"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:523
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:523
msgid ""
"If there is a firewall between the virt-v2v conversion server and the "
"vCenter server, then you will need to open port 443 (https) and port 5480."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:527
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:527
msgid ""
"Port 443 is used to copy the guest disk image(s).  Port 5480 is used to "
"query vCenter for guest metadata."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:530
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:530
msgid ""
"These port numbers are only the defaults.  It is possible to reconfigure "
"vCenter to use other port numbers.  In that case you would need to specify "
"those ports in the C<vpx://> URI.  See L</vCenter: URI> above."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:535
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:535
msgid ""
"These ports only apply to virt-v2v conversions.  You may have to open other "
"ports for other vCenter functionality, for example the web user interface.  "
"VMware documents the required ports for vCenter in their online "
"documentation."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:540
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:540
#, no-wrap
msgid ""
" ┌────────────┐   port 443 ┌────────────┐        ┌────────────┐\n"
" │ virt-v2v   │────────────▶ vCenter    │────────▶ ESXi       │\n"
" │ conversion │────────────▶ server     │        │ hypervisor │\n"
" │ server     │  port 5480 │            │        │   ┌─────┐  │\n"
" └────────────┘            └────────────┘        │   │guest│  │\n"
"                                                 └───┴─────┴──┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:547
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:547
msgid ""
"(In the diagram above the arrows show the direction in which the TCP "
"connection is initiated, I<not> necessarily the direction of data transfer.)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:551
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:551
msgid ""
"Virt-v2v itself does not connect directly to the ESXi hypervisor containing "
"the guest.  However vCenter connects to the hypervisor and forwards the "
"information, so if you have a firewall between vCenter and its hypervisors "
"you may need to open additional ports (consult VMware documentation)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:557
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:557
msgid ""
"The proxy environment variables (C<https_proxy>, C<all_proxy>, C<no_proxy>, "
"C<HTTPS_PROXY>, C<ALL_PROXY> and C<NO_PROXY>) are B<ignored> when doing "
"vCenter conversions."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:561
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:561
msgid "vCenter: SSL/TLS certificate problems"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:563
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:563
msgid "You may see this error:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:565
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:565
#, no-wrap
msgid ""
"  CURL: Error opening file: SSL: no alternative certificate subject\n"
"  name matches target host name\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:568
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:568
msgid ""
"(You may need to enable debugging with ‘virt-v2v -v -x’ to see this message)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:571
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:571
msgid ""
"This can be caused by using an IP address instead of the fully-qualified DNS "
"domain name of the vCenter server, ie.  use C<vpx://vcenter.example.com/...> "
"instead of C<vpx://11.22.33.44/...>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:575
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:575
msgid ""
"Another certificate problem can be caused by the vCenter server having a "
"mismatching FQDN and IP address, for example if the server acquired a new IP "
"address from DHCP.  To fix this you need to change your DHCP server or "
"network configuration so that the vCenter server always gets a stable IP "
"address.  After that log in to the vCenter server’s admin console at "
"C<https://vcenter:5480/>.  Under the C<Admin> tab, select C<Certificate "
"regeneration enabled> and then reboot it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:585 ../docs/virt-v2v-input-xen.pod:119
#: ../docs/virt-v2v-output-local.pod:200 ../docs/virt-v2v-output-rhv.pod:230
#: ../docs/virt-v2v-release-notes-1.42.pod:213
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:585
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:119
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:200
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:230
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:213
msgid "L<virt-v2v(1)>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:587 ../docs/virt-v2v-input-xen.pod:121
#: ../docs/virt-v2v-output-local.pod:202
#: ../docs/virt-v2v-output-openstack.pod:216
#: ../docs/virt-v2v-output-rhv.pod:232 ../docs/virt-v2v-support.pod:148
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-vmware.pod:587
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:121
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:202
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:216
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:232
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:148
msgid "AUTHOR"
msgstr "著者"

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:3
msgid "virt-v2v-input-xen - Using virt-v2v to convert guests from Xen"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:7
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=direct\n"
" virt-v2v -ic 'xen+ssh://root@xen.example.com'\n"
"          -ip passwordfile\n"
"          GUEST_NAME [-o* options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:14
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:14
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests from RHEL 5 "
"Xen, or SLES and OpenSUSE Xen hosts."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-xen.pod:17
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:17
msgid "INPUT FROM XEN"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:19
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:19
msgid "SSH authentication"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:25
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:25
msgid ""
"If you are not using password authentication, an alternative is to use ssh-"
"agent, and add your ssh public key to F</root/.ssh/authorized_keys> (on the "
"Xen host).  After doing this, you should check that passwordless access "
"works from the virt-v2v server to the Xen host.  For example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:31
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:31
#, no-wrap
msgid ""
" $ ssh root@xen.example.com\n"
" [ logs straight into the shell, no password is requested ]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:34
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:34
msgid ""
"With some modern ssh implementations, legacy crypto policies required to "
"interoperate with RHEL 5 sshd are disabled.  To enable them you may need to "
"run this command on the conversion server (ie. ssh client), but read "
"L<update-crypto-policies(8)> first:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:39
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:39
#, no-wrap
msgid ""
" # update-crypto-policies --set LEGACY\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:41
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:41
msgid "Test libvirt connection to remote Xen host"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:43
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:43
msgid "Use the L<virsh(1)> command to list the guests on the remote Xen host:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:45
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:45
#, no-wrap
msgid ""
" $ virsh -c xen+ssh://root@xen.example.com list --all\n"
"  Id    Name                           State\n"
" ----------------------------------------------------\n"
"  0     Domain-0                       running\n"
"  -     rhel49-x86_64-pv               shut off\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:54
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:54
#, no-wrap
msgid ""
" $ virsh -c xen+ssh://root@xen.example.com dumpxml rhel49-x86_64-pv\n"
" <domain type='xen'>\n"
"   <name>rhel49-x86_64-pv</name>\n"
"   [...]\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:60
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:60
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your libvirt configuration or the remote server before "
"continuing."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:64
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:64
msgid ""
"B<If the guest disks are located on a host block device>, then the "
"conversion will fail.  See L</Xen or ssh conversions from block devices> "
"below for a workaround."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:68
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:68
msgid "Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:70
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:70
msgid "To import a particular guest from a Xen server, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:72
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:72
#, no-wrap
msgid ""
" $ LIBGUESTFS_BACKEND=direct \\\n"
"       virt-v2v -ic 'xen+ssh://root@xen.example.com' \\\n"
"           rhel49-x86_64-pv \\\n"
"           -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:77
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:77
msgid ""
"where C<rhel49-x86_64-pv> is the name of the guest (which must be shut down)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:84
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:84
msgid ""
"Setting the L<backend|guestfs(3)/BACKEND> to C<direct> is a temporary "
"workaround until L<libvirt bug 1140166|https://bugzilla.redhat.com/1140166> "
"is fixed."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:88
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:88
msgid "Xen or ssh conversions from block devices"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:90
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:90
msgid ""
"Currently virt-v2v cannot directly access a Xen guest (or any guest located "
"remotely over ssh) if that guest’s disks are located on host block devices."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:94
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:94
msgid ""
"To tell if a Xen guest uses host block devices, look at the guest XML.  You "
"will see:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:97
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:97
#, no-wrap
msgid ""
"  <disk type='block' device='disk'>\n"
"    ...\n"
"    <source dev='/dev/VG/guest'/>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:101
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:101
msgid ""
"where C<type='block'>, C<source dev=> and C</dev/...> are all indications "
"that the disk is located on a host block device."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:104
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:104
msgid ""
"This happens because the qemu ssh block driver that we use to access remote "
"disks uses the ssh sftp protocol, and this protocol cannot correctly detect "
"the size of host block devices."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:108
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:108
msgid ""
"The workaround is to copy the guest over to the conversion server, using the "
"separate L<virt-v2v-copy-to-local(1)> tool, followed by running virt-v2v.  "
"You will need sufficient space on the conversion server to store a full copy "
"of the guest."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:113
#: ../virt-v2v-1.43.1/docs/virt-v2v-input-xen.pod:113
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com guest\n"
" virt-v2v -i libvirtxml guest.xml -o local -os /var/tmp\n"
" rm guest.xml guest-disk*\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:3
msgid ""
"virt-v2v-output-local - Using virt-v2v to convert guests to local files or "
"libvirt"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:8
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:8
#, no-wrap
msgid ""
" virt-v2v [-i* options] [-o libvirt] -os POOL\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:10
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:10
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o local -os DIRECTORY\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:12
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:12
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o qemu -os DIRECTORY [--qemu-boot]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:14
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:14
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o json -os DIRECTORY\n"
"                        [-oo json-disks-pattern=PATTERN]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:17
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:17
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o null\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:21
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:21
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests to local "
"files or to a locally running libvirt instance.  There are four output modes "
"you can select on the virt-v2v command line:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:27
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:27
msgid "B<-o libvirt -os> C<POOL>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:29
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:29
msgid "B<-os> C<POOL>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:31
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:31
msgid ""
"This converts the guest to a libvirt directory pool call C<POOL>, and "
"instantiates the guest in libvirt (but does not start it running).  See L</"
"OUTPUT TO LIBVIRT> below."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:35
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:35
msgid ""
"I<-o libvirt> is the default if no I<-o> option is given, so you can omit it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:38
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:38
msgid "B<-o local -os> C<DIRECTORY>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:40
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:40
msgid ""
"This converts the guest to files in C<DIRECTORY>.  A libvirt XML file is "
"also created, but unlike I<-o libvirt> the guest is not instantiated in "
"libvirt, only files are created."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:44
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:44
msgid "The files will be called:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:46
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:46
#, no-wrap
msgid ""
" NAME-sda, NAME-sdb, etc.      Guest disk(s).\n"
" NAME.xml                      Libvirt XML.\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:49 ../docs/virt-v2v-output-local.pod:160
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:49
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:160
msgid "where C<NAME> is the guest name."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:51
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:51
msgid "B<-o qemu -os> C<DIRECTORY>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:53
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:53
msgid "B<-o qemu -os> C<DIRECTORY> B<--qemu-boot>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:55
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:55
msgid ""
"This converts the guest to files in C<DIRECTORY>.  Unlike I<-o local> above, "
"a shell script is created which contains the raw qemu command you would need "
"to boot the guest.  However the shell script is not run, I<unless> you also "
"add the I<--qemu-boot> option."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:60
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:60
msgid "B<-o json -os> C<DIRECTORY>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:62
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:62
msgid ""
"This converts the guest to files in C<DIRECTORY>.  The metadata produced is "
"a JSON file containing the majority of the data virt-v2v gathers during the "
"conversion.  See L</OUTPUT TO JSON> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:67
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:67
msgid "B<-o null>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:69
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:69
msgid ""
"The guest is converted, but the final result is thrown away and no metadata "
"is created.  This is mainly useful for testing."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-local.pod:74
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:74
msgid "OUTPUT TO LIBVIRT"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:76
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:76
msgid ""
"The I<-o libvirt> option lets you upload the converted guest to a libvirt-"
"managed host.  There are several limitations:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:83
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:83
msgid ""
"You can only use a local libvirt connection [see below for how to workaround "
"this]."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:88
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:88
msgid ""
"The I<-os pool> option must specify a directory pool, not anything more "
"exotic such as iSCSI [but see below]."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:93
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:93
msgid "You can only upload to a KVM hypervisor."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-local.pod:97
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:97
msgid ""
"Workaround for output to a remote libvirt instance and/or a non-directory "
"storage pool"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:104
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:104
msgid ""
"Use virt-v2v in I<-o local> mode to convert the guest disks and metadata "
"into a local temporary directory:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:107
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:107
#, no-wrap
msgid ""
" virt-v2v [...] -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:109
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:109
msgid "This creates two (or more) files in F</var/tmp> called:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:111
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:111
#, no-wrap
msgid ""
" /var/tmp/NAME.xml     # the libvirt XML (metadata)\n"
" /var/tmp/NAME-sda     # the guest’s first disk\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:114
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:114
msgid "(for C<NAME> substitute the guest’s name)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:118
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:118
msgid "Upload the converted disk(s) into the storage pool called C<POOL>:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:120
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:120
#, no-wrap
msgid ""
" size=$(stat -c%s /var/tmp/NAME-sda)\n"
" virsh vol-create-as POOL NAME-sda $size --format raw\n"
" virsh vol-upload --pool POOL NAME-sda /var/tmp/NAME-sda\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:126
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:126
msgid ""
"Edit F</var/tmp/NAME.xml> to change F</var/tmp/NAME-sda> to the pool name.  "
"In other words, locate the following bit of XML:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:129
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:129
#, no-wrap
msgid ""
" <disk type='file' device='disk'>\n"
"   <driver name='qemu' type='raw' />\n"
"   <source file='/var/tmp/NAME-sda' />\n"
"   <target dev='hda' bus='ide' />\n"
" </disk>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:135
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:135
msgid ""
"and change two things: The C<type='file'> attribute must be changed to "
"C<type='volume'>, and the C<E<lt>sourceE<gt>> element must be changed to "
"include C<pool> and C<volume> attributes:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:139
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:139
#, no-wrap
msgid ""
" <disk type='volume' device='disk'>\n"
"   ...\n"
"   <source pool='POOL' volume='NAME-sda' />\n"
"   ...\n"
" </disk>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:147
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:147
msgid "Define the final guest in libvirt:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:149
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:149
#, no-wrap
msgid ""
" virsh define /var/tmp/NAME.xml\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-local.pod:153
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:153
#, fuzzy
#| msgid "OUTPUT MODES"
msgid "OUTPUT TO JSON"
msgstr "出力モード"

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:155
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:155
msgid "The I<-o json> option produces the following files by default:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:157
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:157
#, no-wrap
msgid ""
" NAME.json                     JSON metadata.\n"
" NAME-sda, NAME-sdb, etc.      Guest disk(s).\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:162
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:162
msgid ""
"It is possible to change the pattern of the disks using the I<-oo json-disks-"
"pattern=...> option: it allows parameters in form of C<%{...}> variables, "
"for example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:166
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:166
#, no-wrap
msgid ""
" -oo json-disks-pattern=disk%{DiskNo}.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:168
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:168
msgid "Recognized variables are:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:172
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:172
msgid "C<%{DiskNo}>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:174
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:174
#, fuzzy
#| msgid "The index of this device within the array."
msgid "The index of the disk, starting from 1."
msgstr "配列の中にあるこのデバイスのインデックスです。"

#. type: =item
#: ../docs/virt-v2v-output-local.pod:176
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:176
msgid "C<%{DiskDeviceName}>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:178
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:178
msgid "The destination device of the disk, e.g. C<sda>, C<sdb>, etc."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:180
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:180
msgid "C<%{GuestName}>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:182
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:182
#, fuzzy
#| msgid "The name of the MD device."
msgid "The name of the guest."
msgstr "MD デバイスの名前。"

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:186
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:186
msgid ""
"Using a pattern it is possible use subdirectories for the disks, even with "
"names depending on variables; for example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:189
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:189
#, no-wrap
msgid ""
" -oo json-disks-pattern=%{GuestName}-%{DiskNo}/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:191
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:191
msgid "The default pattern is C<%{GuestName}-%{DiskDeviceName}>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:193
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-local.pod:193
msgid ""
"If the literal C<%{...}> text is needed, it is possible to avoid the escape "
"it with a leading C<%>; for example, C<%%{GuestName}-%{DiskNo}.img> will "
"create file names for the disks like C<%%{GuestName}-1.img>, C<%"
"%{GuestName}-2.img>, etc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:3
msgid ""
"virt-v2v-output-openstack - Using virt-v2v to convert guests to OpenStack"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:7
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o openstack\n"
"                        -oo server-id=SERVER\n"
"                        [-oo guest-id=GUEST]\n"
"                        [-oo verify-server-certificate=false]\n"
"                        [-oo os-username=admin] [-oo os-*=*]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:13
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:13
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o glance\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:17
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:17
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests to run on "
"OpenStack.  There are two output modes you can select, but only I<-o "
"openstack> should be used normally."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-openstack.pod:23
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:23
msgid "B<-o openstack> B<-oo server-id=>SERVER [...]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:25
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:25
msgid "Full description: L</OUTPUT TO OPENSTACK>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:27
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:27
msgid ""
"This is the modern method for uploading to OpenStack via the REST API.  "
"Guests can be directly converted into Cinder volumes."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-openstack.pod:30
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:30
msgid "B<-o glance>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:32
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:32
msgid "Full description: L</OUTPUT TO GLANCE>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:34
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:34
msgid ""
"This is the old method for uploading to Glance.  Unfortunately Glance is not "
"well suited to storing converted guests (since virt-v2v deals with \"pets\" "
"not templated \"cattle\"), so this method is not recommended unless you "
"really know what you are doing."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-openstack.pod:41
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:41
msgid "OUTPUT TO OPENSTACK"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:43
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:43
msgid "To output to OpenStack, use the I<-o openstack> option."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:45
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:45
msgid "OpenStack: Setting up a conversion appliance"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:47
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:47
msgid ""
"When virt-v2v is converting to OpenStack, it is unusual in that virt-v2v "
"B<must> be running inside a virtual machine running on top of the OpenStack "
"overcloud.  This virtual machine is called the \"conversion appliance\".  "
"Note this virtual machine is unrelated to the guest which is being converted."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:53
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:53
msgid ""
"The reason for this is because to create Cinder volumes that will contain "
"the guest data (for the converted guest) we must attach those Cinder volumes "
"to an OpenStack virtual machine."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:57
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:57
msgid ""
"The C<openstack> command must be installed in the appliance.  We use it for "
"communicating with OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:60
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:60
msgid ""
"When virt-v2v is running in the conversion appliance, you must supply the "
"name or UUID of the conversion appliance to virt-v2v, eg:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:63
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:63
#, no-wrap
msgid ""
" $ openstack server list\n"
" +--------------------------------------+-----------+--------+\n"
" | ID                                   | Name      | Status |\n"
" +--------------------------------------+-----------+--------+\n"
" | bbb0147a-44b9-4d19-9a9d-10ca9a984744 | test1     | ACTIVE |\n"
" +--------------------------------------+-----------+--------+\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:70
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:70
#, no-wrap
msgid ""
" # virt-v2v [...] \\\n"
"       -o openstack -oo server-id=bbb0147a-44b9-4d19-9a9d-10ca9a984744\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:73
#: ../docs/virt-v2v-output-openstack.pod:99
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:73
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:99
msgid "or:"
msgstr "または:"

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:75
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:75
#, no-wrap
msgid ""
" # virt-v2v [...] -o openstack -oo server-id=test1\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:77
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:77
msgid ""
"You can run many parallel conversions inside a single conversion appliance "
"if you want, subject to having enough resources available.  However "
"OpenStack itself imposes a limit that you should be aware of: OpenStack "
"cannot attach more than around 25 disks [the exact number varies with "
"configuration] to a single appliance, and that limits the number of guests "
"which can be converted in parallel, because each guest's disk must be "
"attached to the appliance while being copied."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:85
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:85
msgid "OpenStack: Authentication"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:87
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:87
msgid ""
"Converting to OpenStack requires access to the tenant (non-admin) API "
"endpoints.  You will need to either set up your C<$OS_*> environment "
"variables or use output options on the virt-v2v command line to authenticate "
"with OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:92
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:92
msgid ""
"Normally there is a file called something like C<stackrc>, C<overcloudrc> "
"etc which you can simply C<source> to set everything up."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:95
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:95
msgid "For example:"
msgstr "例:"

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:97
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:97
#, no-wrap
msgid ""
" export OS_USERNAME=admin\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:101
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:101
#, no-wrap
msgid ""
" virt-v2v [...] -o openstack -oo os-username=admin\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:103
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:103
msgid ""
"are equivalent, and have the same effect as using I<--os-username> on the "
"command line of OpenStack tools."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:106
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:106
msgid "OpenStack: Running as root"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:108
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:108
msgid ""
"Because virt-v2v must access Cinder volumes which are presented as F</dev> "
"devices to the conversion appliance, virt-v2v must usually run as root in I<-"
"o openstack> mode."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:112
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:112
msgid ""
"If you use C<sudo> to start virt-v2v and you are using environment variables "
"for authentication, remember to use the C<sudo -E> option to preserve the "
"environment."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:116
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:116
msgid "OpenStack: Guest ID"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:118
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:118
#, no-wrap
msgid ""
" virt-v2v [...] -o openstack -oo guest-id=123-456-7890\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:120
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:120
msgid ""
"You may optionally specify I<-oo guest-id=...> on the command line.  The ID "
"(which can be any string) is saved on each Cinder volume in the "
"C<virt_v2v_guest_id> volume property."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:124
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:124
msgid ""
"This can be used to find disks associated with a guest, or to associate "
"which disks are related to which guests when converting many guests."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:128
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:128
msgid "OpenStack: Ignore server certificate"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:130
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:130
msgid ""
"Using I<-oo verify-server-certificate=false> you can tell the openstack "
"client to ignore the server certificate when connecting to the OpenStack API "
"endpoints.  This has the same effect as passing the I<--insecure> option to "
"the C<openstack> command."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:135
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:135
msgid "OpenStack: Converting a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:137
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:137
msgid "The final command to convert the guest, running as root, will be:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:139
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:139
#, no-wrap
msgid ""
" # virt-v2v [-i options ...] \\\n"
"       -o openstack -oo server-id=NAME|UUID [-oo guest-id=ID]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:142
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:142
msgid "If you include authentication options on the command line then:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:144
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:144
#, no-wrap
msgid ""
" # virt-v2v [-i options ...] \\\n"
"       -o openstack -oo server-id=NAME|UUID -oo os-username=admin [etc]\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:147
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:147
msgid "OpenStack: Booting the guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:149
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:149
msgid ""
"Guests are converted as Cinder volume(s) (one volume per disk in the "
"original guest).  To boot them use the C<openstack server create --volume> "
"option:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:153
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:153
#, no-wrap
msgid ""
" $ openstack volume list\n"
" +--------------------------------------+---------------+-----------+\n"
" | ID                                   | Name          | Status    |\n"
" +--------------------------------------+---------------+-----------+\n"
" | c4d06d15-22ef-462e-9eff-ab54ab285a1f | fedora-27-sda | available |\n"
" +--------------------------------------+---------------+-----------+\n"
" $ openstack server create \\\n"
"       --flavor x1.small \\\n"
"       --volume c4d06d15-22ef-462e-9eff-ab54ab285a1f \\\n"
"       myguest\n"
" $ openstack console url show myguest\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:165
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:165
msgid "OpenStack: Other conversion options"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:167
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:167
msgid ""
"To specify the Cinder volume type, use I<-os>.  If not specified then no "
"Cinder volume type is used."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:170
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:170
msgid ""
"The following options are B<not> supported with OpenStack: I<-oa>, I<-of>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-openstack.pod:173
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:173
msgid "OUTPUT TO GLANCE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:175
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:175
msgid ""
"Note this is a legacy option.  In most cases you should use L</OUTPUT TO "
"OPENSTACK> instead."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:178
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:178
msgid "To output to OpenStack Glance, use the I<-o glance> option."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:180
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:180
msgid ""
"This runs the L<glance(1)> CLI program which must be installed on the virt-"
"v2v conversion host.  For authentication to work, you will need to set "
"C<OS_*> environment variables.  In most cases you can do this by sourcing a "
"file called something like F<keystonerc_admin>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:185
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:185
msgid ""
"Virt-v2v adds metadata for the guest to Glance, describing such things as "
"the guest operating system and what drivers it requires.  The command "
"C<glance image-show> will display the metadata as \"Property\" fields such "
"as C<os_type> and C<hw_disk_bus>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:190
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:190
msgid "Glance and sparseness"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:192
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:192
msgid ""
"Glance image upload doesn't appear to correctly handle sparseness.  For this "
"reason, using qcow2 will be faster and use less space on the Glance server.  "
"Use the virt-v2v S<I<-of qcow2>> option."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:196
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:196
msgid "Glance and multiple disks"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:198
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:198
msgid ""
"If the guest has a single disk, then the name of the disk in Glance will be "
"the name of the guest.  You can control this using the I<-on> option."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:202
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:202
msgid ""
"Glance doesn't have a concept of associating multiple disks with a single "
"guest, and Nova doesn't allow you to boot a guest from multiple Glance disks "
"either.  If the guest has multiple disks, then the first (assumed to be the "
"system disk) will have the name of the guest, and the second and subsequent "
"data disks will be called C<I<guestname>-disk2>, C<I<guestname>-disk3> etc.  "
"It may be best to leave the system disk in Glance, and import the data disks "
"to Cinder."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:212
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-openstack.pod:212
msgid ""
"L<virt-v2v(1)>, L<https://docs.openstack.org/python-openstackclient/latest/"
"cli/man/openstack.html>, L<glance(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:3
msgid "virt-v2v-output-rhv - Using virt-v2v to convert guests to oVirt or RHV"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:7
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o rhv-upload [-oc ENGINE_URL] -os STORAGE\n"
"                        [-op PASSWORD] [-of raw]\n"
"                        [-oo rhv-cafile=FILE]\n"
"                        [-oo rhv-cluster=CLUSTER]\n"
"                        [-oo rhv-direct]\n"
"                        [-oo rhv-disk-uuid=UUID ...]\n"
"                        [-oo rhv-verifypeer]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:15
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:15
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o rhv -os [esd:/path|/path]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:17
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:17
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o vdsm\n"
"                        [-oo vdsm-image-uuid=UUID]\n"
"                        [-oo vdsm-vol-uuid=UUID]\n"
"                        [-oo vdsm-vm-uuid=UUID]\n"
"                        [-oo vdsm-ovf-output=DIR]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:25
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:25
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests to an oVirt "
"or RHV management instance.  There are three output modes that you can "
"select, but only I<-o rhv-upload> should be used normally, the other two are "
"deprecated:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:32
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:32
msgid "B<-o rhv-upload> B<-os> STORAGE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:34
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:34
msgid "Full description: L</OUTPUT TO RHV>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:36
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:36
msgid ""
"This is the modern method for uploading to oVirt/RHV via the REST API.  It "
"requires oVirt/RHV E<ge> 4.2."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:39
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:39
msgid "B<-o rhv> B<-os> esd:/path"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:41
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:41
msgid "B<-o rhv> B<-os> /path"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:43
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:43
msgid "Full description: L</OUTPUT TO EXPORT STORAGE DOMAIN>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:45
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:45
msgid ""
"This is the old method for uploading to oVirt/RHV via the Export Storage "
"Domain (ESD).  The ESD can either be accessed over NFS (using the I<-os esd:/"
"path> form) or if you have already NFS-mounted it somewhere specify the path "
"to the mountpoint as I<-os /path>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:51
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:51
msgid ""
"The Export Storage Domain was deprecated in oVirt 4, and so we expect that "
"this method will stop working at some point in the future."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:54
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:54
msgid "B<-o vdsm>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:56
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:56
msgid ""
"This is the old method used internally by the RHV-M user interface.  It is "
"never intended to be used directly by end users."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-rhv.pod:61
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:61
msgid "OUTPUT TO RHV"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:63
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:63
msgid ""
"This new method to upload guests to oVirt or RHV directly via the REST API "
"requires oVirt/RHV E<ge> 4.2."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:66
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:66
msgid ""
"You need to specify I<-o rhv-upload> as well as the following extra "
"parameters:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:71
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:71
msgid "I<-oc> C<https://ovirt-engine.example.com/ovirt-engine/api>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:73
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:73
msgid ""
"The URL of the REST API which is usually the server name with C</ovirt-"
"engine/api> appended, but might be different if you installed oVirt Engine "
"on a different path."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:77
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:77
msgid ""
"You can optionally add a username and port number to the URL.  If the "
"username is not specified then virt-v2v defaults to using C<admin@internal> "
"which is the typical superuser account for oVirt instances."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:82
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:82
msgid "I<-of raw>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:84
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:84
msgid ""
"Currently you must use I<-of raw> and you cannot use I<-oa preallocated>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:86
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:86
msgid "These restrictions will be loosened in a future version."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:88
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:88
msgid "I<-op> F<password-file>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:90
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:90
msgid ""
"A file containing a password to be used when connecting to the oVirt "
"engine.  Note the file should contain the whole password, B<without any "
"trailing newline>, and for security the file should have mode C<0600> so "
"that others cannot read it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:95
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:95
msgid "I<-os> C<ovirt-data>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:97
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:97
msgid "The storage domain."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:99
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:99
msgid "I<-oo rhv-cafile=>F<ca.pem>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:101
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:101
msgid ""
"The F<ca.pem> file (Certificate Authority), copied from F</etc/pki/ovirt-"
"engine/ca.pem> on the oVirt engine."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:104
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:104
msgid ""
"If I<-oo rhv-verifypeer> is enabled then this option can be used to control "
"which CA is used to verify the client’s identity.  If this option is not "
"used then the system’s global trust store is used."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:109
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:109
msgid "I<-oo rhv-cluster=>C<CLUSTERNAME>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:111
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:111
msgid "Set the RHV Cluster Name.  If not given it uses C<Default>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:113
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:113
msgid "I<-oo rhv-disk-uuid=>C<UUID>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:115
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:115
msgid ""
"This option can used to manually specify UUIDs for the disks when creating "
"the virtual machine.  If not specified, the oVirt engine will generate "
"random UUIDs for the disks.  Please note that:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:123
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:123
msgid ""
"you B<must> pass as many I<-oo rhv-disk-uuid=UUID> options as the amount of "
"disks in the guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:128
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:128
msgid ""
"the specified UUIDs are used as they are, without checking whether they are "
"already used by other disks"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:133
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:133
msgid ""
"This option is considered advanced, and to be used mostly in combination "
"with I<--no-copy>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:136
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:136
msgid "I<-oo rhv-direct>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:138
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:138
msgid ""
"If this option is given then virt-v2v will attempt to directly upload the "
"disk to the oVirt node, otherwise it will proxy the upload through the oVirt "
"engine.  Direct upload requires that you have network access to the oVirt "
"nodes.  Non-direct upload is slightly slower but should work in all "
"situations."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:144
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:144
msgid "I<-oo rhv-verifypeer>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:146
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:146
msgid ""
"Verify the oVirt/RHV server’s identity by checking the server‘s certificate "
"against the Certificate Authority."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-rhv.pod:151
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:151
msgid "OUTPUT TO EXPORT STORAGE DOMAIN"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:153
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:153
msgid ""
"This section only applies to the I<-o rhv> output mode.  If you use virt-v2v "
"from the RHV-M user interface, then behind the scenes the import is managed "
"by VDSM using the I<-o vdsm> output mode (which end users should not try to "
"use directly)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:158
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:158
msgid ""
"You have to specify I<-o rhv> and an I<-os> option that points to the RHV-M "
"Export Storage Domain.  You can either specify the NFS server and "
"mountpoint, eg. S<C<-os rhv-storage:/rhv/export>>, or you can mount that "
"first and point to the directory where it is mounted, eg. S<C<-os /tmp/"
"mnt>>.  Be careful not to point to the Data Storage Domain by accident as "
"that will not work."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:165
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:165
msgid ""
"On successful completion virt-v2v will have written the new guest to the "
"Export Storage Domain, but it will not yet be ready to run.  It must be "
"imported into RHV using the UI before it can be used."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:169
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:169
msgid ""
"In RHV E<ge> 2.2 this is done from the Storage tab.  Select the export "
"domain the guest was written to.  A pane will appear underneath the storage "
"domain list displaying several tabs, one of which is \"VM Import\".  The "
"converted guest will be listed here.  Select the appropriate guest an click "
"\"Import\".  See the RHV documentation for additional details."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:176
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:176
msgid ""
"If you export several guests, then you can import them all at the same time "
"through the UI."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-rhv.pod:179
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:179
msgid "Testing RHV conversions"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:181
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:181
msgid ""
"If you do not have an oVirt or RHV instance to test against, then you can "
"test conversions by creating a directory structure which looks enough like a "
"RHV-M Export Storage Domain to trick virt-v2v:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:185
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:185
#, no-wrap
msgid ""
" uuid=`uuidgen`\n"
" mkdir /tmp/rhv\n"
" mkdir /tmp/rhv/$uuid\n"
" mkdir /tmp/rhv/$uuid/images\n"
" mkdir /tmp/rhv/$uuid/master\n"
" mkdir /tmp/rhv/$uuid/master/vms\n"
" touch /tmp/rhv/$uuid/dom_md\n"
" virt-v2v [...] -o rhv -os /tmp/rhv\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-rhv.pod:194
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:194
msgid "Debugging RHV-M import failures"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:196
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:196
msgid ""
"When you export to the RHV-M Export Storage Domain, and then import that "
"guest through the RHV-M UI, you may encounter an import failure.  Diagnosing "
"these failures is infuriatingly difficult as the UI generally hides the true "
"reason for the failure."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:201
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:201
msgid "There are several log files of interest:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:205
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:205
msgid "F</var/log/vdsm/import/>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:207
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:207
msgid ""
"In oVirt E<ge> 4.1.0, VDSM preserves the virt-v2v log file for 30 days in "
"this directory."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:210
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:210
msgid ""
"This directory is found on the host which performed the conversion.  The "
"host can be selected in the import dialog, or can be found under the "
"C<Events> tab in oVirt administration."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:214
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:214
msgid "F</var/log/vdsm/vdsm.log>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:216
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:216
msgid ""
"As above, this file is present on the host which performed the conversion.  "
"It contains detailed error messages from low-level operations executed by "
"VDSM, and is useful if the error was not caused by virt-v2v, but by VDSM."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:221
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:221
msgid "F</var/log/ovirt-engine/engine.log>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:223
#: ../virt-v2v-1.43.1/docs/virt-v2v-output-rhv.pod:223
msgid ""
"This log file is stored on the RHV-M server.  It contains more detail for "
"any errors caused by the oVirt GUI."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:3
#, fuzzy
#| msgid "guestfs-release-notes - libguestfs Release Notes"
msgid "virt-v2v-release-notes - virt-v2v Release Notes"
msgstr "guestfs-release-notes - libguestfs リリースノート"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:7
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:7
msgid ""
"These are the release notes for S<B<virt-v2v 1.42>>, released on S<B<16th "
"April 2020>>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:10
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:10
#, fuzzy
#| msgid "C<features>"
msgid "New features"
msgstr "C<特徴>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:12
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:12
msgid ""
"This is the first release where virt-v2v lives in a separate repository from "
"libguestfs.  The two projects are now broadly decoupled from one another."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:16
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:16
msgid ""
"Add a new I<-o json> output mode.  Primarily this is used to do conversions "
"to KubeVirt (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:19
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:19
msgid ""
"Use new libvirt C<E<lt>firmwareE<gt>> feature to get the source guest "
"firmware (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:22
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:22
msgid ""
"virt-v2v I<-o rhv-upload> new option I<-oo rhv-disk-uuid> allows disk UUIDs "
"to be specified.  Also I<-oo rhv-cafile> is now optional (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:26
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:26
msgid ""
"Conversions over ssh now use L<nbdkit-ssh-plugin(1)> instead of the QEMU ssh "
"driver.  Similarly L<nbdkit-curl-plugin(1)> is used instead of the QEMU curl "
"driver.  This allowed us to add more flexible features such as password "
"authentication, bandwidth throttling (new I<--bandwidth> option), readahead, "
"and automatic retry on network failures."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:33
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:33
msgid ""
"For Windows guests, QEMU Guest Agent MSI may now be installed (Tomáš "
"Golembiovský)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:36
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:36
#, fuzzy
#| msgid "Other Linux distro"
msgid "Other fixes"
msgstr "他の Linux ディストリビューション"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:38
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:38
msgid "In I<-o libvirt> mode, support Windows Server 2019 (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:40
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:40
msgid "Fix Ubuntu Server conversions (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:42
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:42
msgid ""
"Fix installation of qemu-ga by only installing arch-specific files in the "
"guest (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:45
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:45
msgid ""
"Delay installation of qemu-ga until after virtio-win drivers have been "
"installed and rebooted (Tomáš Golembiovský)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:48
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:48
msgid ""
"Save the log from running RHEV-APT installer to allow debugging (Tomáš "
"Golembiovský)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:51
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:51
msgid ""
"Check RHV cluster exists before trying to convert when using I<-o rhv-"
"upload> mode.  Also allows us to detect and reject various other conditions "
"early.  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:55
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:55
msgid "Label nbdkit sockets correctly for SELinux/sVirt (Martin Kletzander)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:58
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:58
msgid "You can use a block device as the Windows virtio driver ISO."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:60
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:60
msgid ""
"Multiple fixes to RHV uploads: Set C<DISKTYPE> field correctly when "
"converting to RHV and VDSM.  Properly clean up on failure.  Display disk ID "
"in error messages, and log script parameters, to help with debugging.  "
"Multiple code cleanups.  (Nir Soffer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:65
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:65
msgid "Support conversions to RHV in qcow2 format (Nir Soffer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:67
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:67
msgid ""
"Fix detection of disk status and failures after conversion to RHV (Daniel "
"Erez)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:70
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:70
msgid ""
"Cancel disk transfer and remove uploaded disks on failure of conversion to "
"RHV (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:73
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:73
msgid ""
"Images containing small holes (sparse regions) should now convert faster "
"(Nir Soffer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:76
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:76
msgid ""
"The L<nbdkit-cacheextents-filter(1)> is used to accelerate sources which "
"have slow sparseness detection, primarily this means VMware sources using "
"VDDK (Martin Kletzander)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:80
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:80
msgid ""
"Require at least 100 free inodes on each guest filesystem before doing "
"conversion, since lack of inodes could cause conversion failures (Pino "
"Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:84
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:84
msgid "Fix osinfo output for CentOS 8 conversions (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:86
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:86
msgid ""
"VMware tools are now removed from Windows guests automatically in most cases "
"(Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:89
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:89
msgid ""
"I<-i ova> mode no longer reads the whole input OVF into memory, but parses "
"it off disk (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:92
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:92
msgid ""
"When converting to OpenStack, we now wait up to 5 minutes (instead of 60 "
"seconds) for the Cinder volume to get attached to the conversion appliance, "
"since in some cases it was taking a long time."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:96
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:96
msgid ""
"If using a new enough version of nbdkit, virt-v2v logs should be much less "
"verbose."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:99
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:99
msgid "Security"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:101
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:101
msgid "There were no security-related bugs found in this release."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:103
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:103
msgid "Build changes"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:105
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:105
msgid ""
"Libguestfs E<ge> 1.40 is required, it is now packaged and distributed "
"separately from virt-v2v.  For developers you can use a locally built (and "
"not installed) copy of libguestfs."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:109
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:109
msgid ""
"Libvirt is now required to build virt-v2v.  Additionally you will require "
"the OCaml bindings to libvirt (L<https://libvirt.org/ocaml/>), although a "
"copy is bundled for now (it will be removed later).  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:114
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:114
msgid ""
"Libosinfo is required to build virt-v2v.  It is used to query information "
"about guest drivers.  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:117
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:117
msgid ""
"Fixes for OCaml E<ge> 4.10.  The minimum version of OCaml required is still "
"4.01, but may be increased to 4.05 in future."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:120
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:120
msgid "Test conversions of Debian 9 and Fedora 29 (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:122
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:122
msgid "Various fixes to srcdir != builddir (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:124
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:124
msgid "Remove gnulib modules not used by virt-v2v (Pino Toscano)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:126
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:126
msgid "Internals"
msgstr "内部"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:128
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:128
msgid ""
"When converting SUSE guests, always try to install QXL driver (Mike Latimer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:131
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:131
msgid ""
"Two new modules (Nbdkit and Nbdkit_sources) factor out generic nbdkit "
"operations and nbdkit source operations respectively."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:134
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:134
msgid "Format Python code to comply with PEP 8 / pycodestyle (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:136
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:136
msgid ""
"Tests have been moved to the F<tests/> subdirectory, and manuals to the "
"F<docs/> subdirectory."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:139
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:139
msgid "Bugs fixed"
msgstr "バグ修正"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:143
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:143
#, fuzzy
#| msgid "./bugs-in-changelog.sh 1.20.0.."
msgid "https_proxy= ./bugs-in-changelog.sh v1.40.0.."
msgstr "./bugs-in-changelog.sh 1.20.0.."

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:149
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:149
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/978302>"
msgid "L<https://bugzilla.redhat.com/1791802>"
msgstr "L<https://bugzilla.redhat.com/978302>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:151
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:151
msgid "virt-v2v does not install qemu-ga on EL8 guest"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:153
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:153
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/981715>"
msgid "L<https://bugzilla.redhat.com/1791257>"
msgstr "L<https://bugzilla.redhat.com/981715>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:155
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:155
msgid ""
"update-crypto-policies command example is incorrect in virt-v2v-input-xen"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:157
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:157
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/912499>"
msgid "L<https://bugzilla.redhat.com/1791240>"
msgstr "L<https://bugzilla.redhat.com/912499>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:159
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:159
msgid "[RFE] Make the rhv-cafile optional"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:161
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:161
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/858128>"
msgid "L<https://bugzilla.redhat.com/1785528>"
msgstr "L<https://bugzilla.redhat.com/858128>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:163
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:163
msgid ""
"Should remove info about \"Remove VMware tools from Windows guests\" in virt-"
"v2v-input-vmware man page"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:165
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:165
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/912499>"
msgid "L<https://bugzilla.redhat.com/1746699>"
msgstr "L<https://bugzilla.redhat.com/912499>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:167
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:167
msgid ""
"Can't import guest from export domain to data domain on rhv4.3 due to error "
"\"Invalid parameter: 'DiskType=1'\""
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:169
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:169
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/713678>"
msgid "L<https://bugzilla.redhat.com/1733168>"
msgstr "L<https://bugzilla.redhat.com/713678>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:171
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:171
msgid "virt-v2v: Use scp -T in -i vmx -it ssh mode"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:173
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:173
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/752375>"
msgid "L<https://bugzilla.redhat.com/1723305>"
msgstr "L<https://bugzilla.redhat.com/752375>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:175
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:175
msgid ""
"Delete info \"export PATH=/path/to/nbdkit-1.1.x:$PATH\" in virt-v2v-input-"
"vmware manual page"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:177
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:177
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/811649>"
msgid "L<https://bugzilla.redhat.com/1691659>"
msgstr "L<https://bugzilla.redhat.com/811649>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:179
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:179
msgid ""
"virt-v2v should show a message when qemu-guest-agent is installed in guest "
"successfully during conversion"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:181
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:181
#, fuzzy
msgid "L<https://bugzilla.redhat.com/1690574>"
msgstr "L<https://bugzilla.redhat.com/1001876>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:183
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:183
msgid ""
"virt-v2v fails to import a guest while cannot find `file_architecture` for a "
"file"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:185
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:185
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/981683>"
msgid "L<https://bugzilla.redhat.com/1680361>"
msgstr "L<https://bugzilla.redhat.com/981683>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:187
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:187
msgid ""
"[v2v][RHV][Scale] v2v Migration to RHV failed on timed out waiting for "
"transfer to finalize"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:189
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:189
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/981663>"
msgid "L<https://bugzilla.redhat.com/1626503>"
msgstr "L<https://bugzilla.redhat.com/981663>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:191
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:191
msgid "Unable to maintain static IP address configuration post VM migration"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:193
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:193
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/916780>"
msgid "L<https://bugzilla.redhat.com/1612653>"
msgstr "L<https://bugzilla.redhat.com/916780>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:195
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:195
msgid ""
"Guest has no disk after rhv-upload converting if target data domain has "
"similar name with other data domain on rhv4.2"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:197
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:197
#, fuzzy
msgid "L<https://bugzilla.redhat.com/1605242>"
msgstr "L<https://bugzilla.redhat.com/998513>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:199
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:199
msgid "Update nbdkit info for vddk in v2v man page"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:201
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:201
#, fuzzy
#| msgid "L<https://bugzilla.redhat.com/858696>"
msgid "L<https://bugzilla.redhat.com/1584678>"
msgstr "L<https://bugzilla.redhat.com/858696>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:203
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:203
msgid ""
"On W2K12r2 rhev-apt does not run non-interactively, causing race when "
"starting rhev-apt service from the command line"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:205
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:205
#, fuzzy
msgid "L<https://bugzilla.redhat.com/1518539>"
msgstr "L<https://bugzilla.redhat.com/957380>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:207
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:207
msgid "Macvtap network will be lost during v2v conversion"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:215
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:215
msgid ""
"Previous release notes covering virt-v2v can be found in the libguestfs "
"project: L<guestfs-release-notes-1.40(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:220
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:220
msgid "Daniel Erez"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:224 ../docs/virt-v2v.pod:1693
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:224
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1693
msgid "Tomáš Golembiovský"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:226
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:226
msgid "Martin Kletzander"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:228 ../docs/virt-v2v.pod:1699
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:228
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1699
msgid "Mike Latimer"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:230 ../docs/virt-v2v.pod:1701
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:230
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1701
msgid "Nir Soffer"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:232 ../docs/virt-v2v.pod:1705
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:232
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1705
msgid "Pino Toscano"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:234
#: ../virt-v2v-1.43.1/docs/virt-v2v-release-notes-1.42.pod:234
msgid "Ming Xie"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:3
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:3
msgid ""
"virt-v2v-support - Supported hypervisors, virtualization management systems "
"and guests in virt-v2v"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:8
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:8
msgid ""
"This page documents which foreign hypervisors, virtualization management "
"systems and guest types that L<virt-v2v(1)> can support."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:11
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:11
msgid ""
"Note this page applies to upstream virt-v2v from L<http://libguestfs.org> "
"and in downstream distributions of virt-v2v sometimes features are "
"intentionally removed, or are present but not supported."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:16
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:16
msgid "Hypervisors (Input)"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:20
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:20
msgid "VMware ESXi"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:22
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:22
msgid "Must be managed by VMware vCenter E<ge> 5.0 unless VDDK is available."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:24
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:24
msgid "OVA exported from VMware"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:26
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:26
msgid "OVAs from other hypervisors will not work."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:28
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:28
msgid "VMX from VMware"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:30
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:30
msgid "VMX files generated by other hypervisors will not work."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:32
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:32
#, fuzzy
msgid "RHEL 5 Xen"
msgstr "RHEL 5"

#. type: =item
#: ../docs/virt-v2v-support.pod:34
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:34
msgid "SUSE Xen"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:36
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:36
msgid "Citrix Xen"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:38
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:38
msgid "Citrix Xen has not been recently tested."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:40
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:40
msgid "Hyper-V"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:42
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:42
msgid ""
"Not recently tested.  Requires that you export the disk or use L<virt-"
"p2v(1)> on Hyper-V."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:45
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:45
#, fuzzy
msgid "Direct from disk images"
msgstr "空のディスクイメージを作成します"

#. type: textblock
#: ../docs/virt-v2v-support.pod:47
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:47
msgid ""
"Only disk images exported from supported hypervisors, and using container "
"formats supported by qemu."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:50
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:50
msgid "Physical machines"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:52
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:52
#, fuzzy
msgid "Using the L<virt-p2v(1)> tool."
msgstr "L<virt-ls(1)> を使用します。"

#. type: =head2
#: ../docs/virt-v2v-support.pod:56
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:56
msgid "Hypervisors (Output)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:58
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:58
msgid "QEMU and KVM only."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:60
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:60
msgid "Virtualization management systems (Output)"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:64
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:64
msgid "OpenStack"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:66
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:66
msgid "Red Hat Virtualization (RHV) 4.1 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:68
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:68
#, fuzzy
msgid "Local libvirt"
msgstr "C<libvirt>"

#. type: textblock
#: ../docs/virt-v2v-support.pod:70
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:70
msgid "And hence L<virsh(1)>, L<virt-manager(1)>, and similar tools."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:72
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:72
msgid "Local disk"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:76
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:76
#, fuzzy
msgid "Guests"
msgstr "テストします。"

#. type: =item
#: ../docs/virt-v2v-support.pod:80
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:80
#, fuzzy
msgid "Red Hat Enterprise Linux 3, 4, 5, 6, 7"
msgstr "Red Hat Enterprise Linux"

#. type: =item
#: ../docs/virt-v2v-support.pod:82
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:82
msgid "CentOS 3, 4, 5, 6, 7"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:84
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:84
#, fuzzy
msgid "Scientific Linux 3, 4, 5, 6, 7"
msgstr "Scientific Linux."

#. type: =item
#: ../docs/virt-v2v-support.pod:86
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:86
#, fuzzy
msgid "Oracle Linux"
msgstr "Arch Linux."

#. type: =item
#: ../docs/virt-v2v-support.pod:88
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:88
#, fuzzy
msgid "Fedora"
msgstr "Fedora."

#. type: =item
#: ../docs/virt-v2v-support.pod:90
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:90
msgid "SLES 10 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:92
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:92
msgid "OpenSUSE 10 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:94
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:94
msgid "Debian 6 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:96
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:96
msgid "Ubuntu 10.04, 12.04, 14.04, 16.04, and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:98
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:98
msgid "Windows XP to Windows 10 / Windows Server 2016"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:100
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:100
msgid ""
"We use Windows internal version numbers, see L<https://en.wikipedia.org/wiki/"
"List_of_Microsoft_Windows_versions>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:103
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:103
msgid "Currently NT 5.2 to NT 6.3 are supported."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:105
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:105
msgid ""
"See L</WINDOWS> below for additional notes on converting Windows guests."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:110
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:110
msgid "Guest firmware"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:112
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:112
msgid "BIOS is supported for all guest types and hypervisors."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:114
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:114
msgid ""
"VMware allows you to present UEFI firmware to guests (instead of the "
"ordinary PC BIOS).  Virt-v2v can convert these guests, but requires that "
"UEFI is supported by the target hypervisor."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:118
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:118
msgid ""
"Currently KVM supports OVMF, an open source UEFI firmware, and can run these "
"guests."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:121
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:121
msgid ""
"Since OVMF support was only recently added to KVM (in 2014/2015), not all "
"target environments support UEFI guests yet:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:126
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:126
msgid "UEFI on libvirt, qemu"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:128
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:128
msgid ""
"Supported.  Virt-v2v will generate the correct libvirt XML (metadata)  "
"automatically, but note that the same version of OVMF must be installed on "
"the conversion host as is installed on the target hypervisor, else you will "
"have to adjust paths in the metadata."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:133
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:133
msgid "UEFI on OpenStack"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:135
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:135
msgid "Not supported."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:137
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:137
msgid "UEFI on oVirt or RHV"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:139
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:139
msgid "Supported since oVirt/RHV E<ge> 4.2 and virt-v2v E<ge> 1.39.12."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:145
#: ../virt-v2v-1.43.1/docs/virt-v2v-support.pod:145
msgid "L<virt-v2v(1)>, L<http://libguestfs.org>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:3 ../virt-v2v-1.43.1/docs/virt-v2v.pod:3
msgid "virt-v2v - Convert a guest to use KVM"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:7 ../virt-v2v-1.43.1/docs/virt-v2v.pod:7
#, no-wrap
msgid ""
" virt-v2v [-i mode] [other -i* options]\n"
"          [-o mode] [other -o* options]\n"
"          [guest|filename]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:11 ../virt-v2v-1.43.1/docs/virt-v2v.pod:11
#, no-wrap
msgid ""
" virt-v2v --in-place\n"
"          [-i mode] [other -i* options]\n"
"          [guest|filename]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:17 ../virt-v2v-1.43.1/docs/virt-v2v.pod:17
msgid ""
"Virt-v2v converts a single guest from a foreign hypervisor to run on KVM.  "
"It can read Linux and Windows guests running on VMware, Xen, Hyper-V and "
"some other hypervisors, and convert them to KVM managed by libvirt, "
"OpenStack, oVirt, Red Hat Virtualisation (RHV) or several other targets.  It "
"can modify the guest to make it bootable on KVM and install virtio drivers "
"so it will run quickly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:24 ../virt-v2v-1.43.1/docs/virt-v2v.pod:24
msgid ""
"There is also a companion front-end called L<virt-p2v(1)> which comes as an "
"ISO, CD or PXE image that can be booted on physical machines to virtualize "
"those machines (physical to virtual, or p2v)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:28 ../virt-v2v-1.43.1/docs/virt-v2v.pod:28
msgid "Input and Output"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:30 ../virt-v2v-1.43.1/docs/virt-v2v.pod:30
msgid ""
"You normally run virt-v2v with several I<-i*> options controlling the input "
"mode and also several I<-o*> options controlling the output mode.  In this "
"sense, \"input\" refers to the source foreign hypervisor such as VMware, and "
"\"output\" refers to the target KVM-based management system such as oVirt or "
"OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:36 ../virt-v2v-1.43.1/docs/virt-v2v.pod:36
msgid ""
"The input and output sides of virt-v2v are separate and unrelated.  Virt-v2v "
"can read from any input and write to any output.  Therefore these sides of "
"virt-v2v are documented separately in this manual."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:40 ../virt-v2v-1.43.1/docs/virt-v2v.pod:40
msgid ""
"Virt-v2v normally copies from the input to the output, called \"copying mode"
"\".  In this case the source guest is always left unchanged.  In-place "
"conversion (I<--in-place>) only uses the I<-i*> options and modifies the "
"source guest in-place.  (See L</In-place conversion> below.)"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:46 ../virt-v2v-1.43.1/docs/virt-v2v.pod:46
msgid "Other virt-v2v topics"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:48 ../virt-v2v-1.43.1/docs/virt-v2v.pod:48
msgid ""
"L<virt-v2v-support(1)> — Supported hypervisors, virtualization management "
"systems, guests."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:51 ../virt-v2v-1.43.1/docs/virt-v2v.pod:51
msgid "L<virt-v2v-input-vmware(1)> — Input from VMware."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:53 ../virt-v2v-1.43.1/docs/virt-v2v.pod:53
msgid "L<virt-v2v-input-xen(1)> — Input from Xen."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:55 ../virt-v2v-1.43.1/docs/virt-v2v.pod:55
msgid "L<virt-v2v-output-local(1)> — Output to local files or local libvirt."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:57 ../virt-v2v-1.43.1/docs/virt-v2v.pod:57
msgid "L<virt-v2v-output-rhv(1)> — Output to oVirt or RHV."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:59 ../virt-v2v-1.43.1/docs/virt-v2v.pod:59
msgid "L<virt-v2v-output-openstack(1)> — Output to OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:61 ../virt-v2v-1.43.1/docs/virt-v2v.pod:61
msgid "L<virt-v2v-release-notes-1.42(1)> — Release notes for this release."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:63 ../virt-v2v-1.43.1/docs/virt-v2v.pod:63
msgid ""
"L<virt-v2v-copy-to-local(1)> — Deprecated tool to handle Xen guests using "
"host block device storage."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:68 ../virt-v2v-1.43.1/docs/virt-v2v.pod:68
msgid "Convert from VMware vCenter server to local libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:70 ../virt-v2v-1.43.1/docs/virt-v2v.pod:70
msgid ""
"You have a VMware vCenter server called C<vcenter.example.com>, a datacenter "
"called C<Datacenter>, and an ESXi hypervisor called C<esxi>.  You want to "
"convert a guest called C<vmware_guest> to run locally under libvirt."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:75 ../virt-v2v-1.43.1/docs/virt-v2v.pod:75
#, no-wrap
msgid ""
" virt-v2v -ic vpx://vcenter.example.com/Datacenter/esxi vmware_guest\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:77 ../virt-v2v-1.43.1/docs/virt-v2v.pod:77
msgid ""
"In this case you will most likely have to run virt-v2v as C<root>, since it "
"needs to talk to the system libvirt daemon and copy the guest disks to F</"
"var/lib/libvirt/images>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:81 ../virt-v2v-1.43.1/docs/virt-v2v.pod:81
msgid "For more information see L<virt-v2v-input-vmware(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:83 ../virt-v2v-1.43.1/docs/virt-v2v.pod:83
msgid "Convert from VMware to RHV/oVirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:85 ../virt-v2v-1.43.1/docs/virt-v2v.pod:85
msgid ""
"This is the same as the previous example, except you want to send the guest "
"to a RHV Data Domain using the RHV REST API.  Guest network interface(s) are "
"connected to the target network called C<ovirtmgmt>."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:89 ../virt-v2v-1.43.1/docs/virt-v2v.pod:89
#, no-wrap
msgid ""
" virt-v2v -ic vpx://vcenter.example.com/Datacenter/esxi vmware_guest \\\n"
"   -o rhv-upload -oc https://ovirt-engine.example.com/ovirt-engine/api \\\n"
"   -os ovirt-data -op /tmp/ovirt-admin-password -of raw \\\n"
"   -oo rhv-cafile=/tmp/ca.pem -oo rhv-direct \\\n"
"   --bridge ovirtmgmt\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:95 ../virt-v2v-1.43.1/docs/virt-v2v.pod:95
msgid "In this case the host running virt-v2v acts as a B<conversion server>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:97 ../virt-v2v-1.43.1/docs/virt-v2v.pod:97
msgid "For more information see L<virt-v2v-output-rhv(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:99 ../virt-v2v-1.43.1/docs/virt-v2v.pod:99
msgid "Convert from ESXi hypervisor over SSH to local libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:101 ../virt-v2v-1.43.1/docs/virt-v2v.pod:101
msgid ""
"You have an ESXi hypervisor called C<esxi.example.com> with SSH access "
"enabled.  You want to convert from VMFS storage on that server to a local "
"file."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:105 ../virt-v2v-1.43.1/docs/virt-v2v.pod:105
#, no-wrap
msgid ""
" virt-v2v \\\n"
"   -i vmx -it ssh \\\n"
"   \"ssh://root@esxi.example.com/vmfs/volumes/datastore1/guest/guest.vmx\" \\\n"
"   -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:110 ../virt-v2v-1.43.1/docs/virt-v2v.pod:110
msgid ""
"The guest must not be running.  Virt-v2v would I<not> need to be run as root "
"in this case."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:113 ../virt-v2v-1.43.1/docs/virt-v2v.pod:113
msgid ""
"For more information about converting from VMX files see L<virt-v2v-input-"
"vmware(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:116 ../virt-v2v-1.43.1/docs/virt-v2v.pod:116
msgid "Convert disk image to OpenStack"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:118 ../virt-v2v-1.43.1/docs/virt-v2v.pod:118
msgid ""
"Given a disk image from another hypervisor that you want to convert to run "
"on OpenStack (only KVM-based OpenStack is supported), you can run virt-v2v "
"inside an OpenStack VM (called C<v2v-vm> below), and do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:122 ../virt-v2v-1.43.1/docs/virt-v2v.pod:122
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o openstack -oo server-id=v2v-vm\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:124 ../virt-v2v-1.43.1/docs/virt-v2v.pod:124
msgid "See L<virt-v2v-output-openstack(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:126 ../virt-v2v-1.43.1/docs/virt-v2v.pod:126
msgid "Convert disk image to disk image"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:128 ../virt-v2v-1.43.1/docs/virt-v2v.pod:128
msgid ""
"Given a disk image from another hypervisor that you want to convert to run "
"on KVM, you have two options.  The simplest way is to try:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:131 ../virt-v2v-1.43.1/docs/virt-v2v.pod:131
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:133 ../virt-v2v-1.43.1/docs/virt-v2v.pod:133
msgid ""
"where virt-v2v guesses everything about the input F<disk.img> and (in this "
"case) writes the converted result to F</var/tmp>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:136 ../virt-v2v-1.43.1/docs/virt-v2v.pod:136
msgid ""
"A more complex method is to write some L<libvirt XML|http://libvirt.org/"
"formatdomain.html> describing the input guest (if you can get the source "
"hypervisor to provide you with libvirt XML, then so much the better).  You "
"can then do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:141 ../virt-v2v-1.43.1/docs/virt-v2v.pod:141
#, no-wrap
msgid ""
" virt-v2v -i libvirtxml guest-domain.xml -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:143 ../virt-v2v-1.43.1/docs/virt-v2v.pod:143
msgid ""
"Since F<guest-domain.xml> contains the path(s) to the guest disk image(s) "
"you do not need to specify the name of the disk image on the command line."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:147 ../virt-v2v-1.43.1/docs/virt-v2v.pod:147
msgid ""
"To convert a local disk image and immediately boot it in local qemu, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:150 ../virt-v2v-1.43.1/docs/virt-v2v.pod:150
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o qemu -os /var/tmp --qemu-boot\n"
"\n"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:160 ../virt-v2v-1.43.1/docs/virt-v2v.pod:160
#, fuzzy
#| msgid "B<--add> URI"
msgid "B<--bandwidth> bps"
msgstr "B<--add> URI"

#. type: =item
#: ../docs/virt-v2v.pod:162 ../virt-v2v-1.43.1/docs/virt-v2v.pod:162
#, fuzzy
#| msgid "B<--add> file"
msgid "B<--bandwidth-file> filename"
msgstr "B<--add> file"

#. type: textblock
#: ../docs/virt-v2v.pod:164 ../virt-v2v-1.43.1/docs/virt-v2v.pod:164
msgid ""
"Some input methods are able to limit the network bandwidth they will use "
"statically or dynamically.  In the first variant this sets the bandwidth "
"limit statically in bits per second.  Formats like C<10M> may be used "
"(meaning 10 megabits per second)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:169 ../virt-v2v-1.43.1/docs/virt-v2v.pod:169
msgid ""
"In the second variant the bandwidth is limited dynamically from the content "
"of the file (also in bits per second, in the same formats supported by the "
"first variant).  You may use both parameters together, meaning: first limit "
"to a static rate, then you can create the file while virt-v2v is running to "
"adjust the rate dynamically."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:175 ../virt-v2v-1.43.1/docs/virt-v2v.pod:175
msgid "This is only supported for:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:181 ../virt-v2v-1.43.1/docs/virt-v2v.pod:181
msgid "L<input from Xen|virt-v2v-input-xen(1)>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:185 ../virt-v2v-1.43.1/docs/virt-v2v.pod:185
msgid ""
"L<input from VMware VMX|virt-v2v-input-vmware(1)/INPUT FROM VMWARE VMX> when "
"using the SSH transport method"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:190 ../virt-v2v-1.43.1/docs/virt-v2v.pod:190
msgid "L<input from VDDK|virt-v2v-input-vmware(1)/INPUT FROM VDDK>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:194 ../virt-v2v-1.43.1/docs/virt-v2v.pod:194
msgid "I<-i libvirtxml> when using HTTP or HTTPS disks"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:198 ../virt-v2v-1.43.1/docs/virt-v2v.pod:198
msgid ""
"L<input from VMware vCenter server|virt-v2v-input-vmware(1)/INPUT FROM "
"VMWARE VCENTER SERVER>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:202 ../virt-v2v-1.43.1/docs/virt-v2v.pod:202
msgid "The options are silently ignored for other input methods."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:204 ../virt-v2v-1.43.1/docs/virt-v2v.pod:204
msgid "B<-b> ..."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:206 ../virt-v2v-1.43.1/docs/virt-v2v.pod:206
msgid "B<--bridge> ..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:208 ../virt-v2v-1.43.1/docs/virt-v2v.pod:208
msgid "See I<--network> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:210 ../virt-v2v-1.43.1/docs/virt-v2v.pod:210
msgid "B<--colors>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:212 ../virt-v2v-1.43.1/docs/virt-v2v.pod:212
msgid "B<--colours>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:214 ../virt-v2v-1.43.1/docs/virt-v2v.pod:214
msgid ""
"Use ANSI colour sequences to colourize messages.  This is the default when "
"the output is a tty.  If the output of the program is redirected to a file, "
"ANSI colour sequences are disabled unless you use this option."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:219 ../virt-v2v-1.43.1/docs/virt-v2v.pod:219
msgid "B<--compressed>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:221 ../virt-v2v-1.43.1/docs/virt-v2v.pod:221
msgid ""
"Write a compressed output file.  This is only allowed if the output format "
"is qcow2 (see I<-of> below), and is equivalent to the I<-c> option of L<qemu-"
"img(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:225 ../virt-v2v-1.43.1/docs/virt-v2v.pod:225
msgid "B<--debug-overlays>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:227 ../virt-v2v-1.43.1/docs/virt-v2v.pod:227
msgid ""
"Save the overlay file(s) created during conversion.  This option is only "
"used for debugging virt-v2v and may be removed in a future version."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:231 ../virt-v2v-1.43.1/docs/virt-v2v.pod:231
msgid "B<--echo-keys>"
msgstr "B<--echo-keys>"

#. type: textblock
#: ../docs/virt-v2v.pod:233 ../virt-v2v-1.43.1/docs/virt-v2v.pod:233
msgid ""
"When prompting for keys and passphrases, virt-v2v normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:238 ../docs/virt-v2v.pod:390
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:238
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:390
msgid ""
"Note this options only applies to keys and passphrases for encrypted devices "
"and partitions, not for passwords used to connect to remote servers."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:242 ../virt-v2v-1.43.1/docs/virt-v2v.pod:242
msgid "B<-i> B<disk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:244 ../virt-v2v-1.43.1/docs/virt-v2v.pod:244
msgid "Set the input method to I<disk>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:246 ../virt-v2v-1.43.1/docs/virt-v2v.pod:246
msgid ""
"In this mode you can read a virtual machine disk image with no metadata.  "
"virt-v2v tries to guess the best default metadata.  This is usually adequate "
"but you can get finer control (eg. of memory and vCPUs) by using I<-i "
"libvirtxml> instead.  Only guests that use a single disk can be imported "
"this way."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:252 ../virt-v2v-1.43.1/docs/virt-v2v.pod:252
msgid "B<-i> B<libvirt>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:254 ../virt-v2v-1.43.1/docs/virt-v2v.pod:254
msgid "Set the input method to I<libvirt>.  This is the default."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:256 ../virt-v2v-1.43.1/docs/virt-v2v.pod:256
msgid ""
"In this mode you have to specify a libvirt guest name or UUID on the command "
"line.  You may also specify a libvirt connection URI (see I<-ic>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:260 ../virt-v2v-1.43.1/docs/virt-v2v.pod:260
msgid "B<-i> B<libvirtxml>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:262 ../virt-v2v-1.43.1/docs/virt-v2v.pod:262
msgid "Set the input method to I<libvirtxml>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:264 ../virt-v2v-1.43.1/docs/virt-v2v.pod:264
msgid ""
"In this mode you have to pass a libvirt XML file on the command line.  This "
"file is read in order to get metadata about the source guest (such as its "
"name, amount of memory), and also to locate the input disks.  See L</Minimal "
"XML for -i libvirtxml option> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:269 ../virt-v2v-1.43.1/docs/virt-v2v.pod:269
msgid "B<-i> B<local>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:271 ../virt-v2v-1.43.1/docs/virt-v2v.pod:271
msgid "This is the same as I<-i disk>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:273 ../virt-v2v-1.43.1/docs/virt-v2v.pod:273
msgid "B<-i> B<ova>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:275 ../virt-v2v-1.43.1/docs/virt-v2v.pod:275
msgid "Set the input method to I<ova>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:277 ../virt-v2v-1.43.1/docs/virt-v2v.pod:277
msgid ""
"In this mode you can read a VMware ova file.  Virt-v2v will read the ova "
"manifest file and check the vmdk volumes for validity (checksums)  as well "
"as analyzing the ovf file, and then convert the guest.  See L<virt-v2v-input-"
"vmware(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:282 ../virt-v2v-1.43.1/docs/virt-v2v.pod:282
msgid "B<-i> B<vmx>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:284 ../virt-v2v-1.43.1/docs/virt-v2v.pod:284
msgid "Set the input method to I<vmx>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:286 ../virt-v2v-1.43.1/docs/virt-v2v.pod:286
msgid ""
"In this mode you can read a VMware vmx file directly or over SSH.  This is "
"useful when VMware VMs are stored on an NFS server which you can mount "
"directly, or where you have access by SSH to an ESXi hypervisor.  See L<virt-"
"v2v-input-vmware(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:293 ../virt-v2v-1.43.1/docs/virt-v2v.pod:293
msgid ""
"Specify a libvirt connection URI to use when reading the guest.  This is "
"only used when S<I<-i libvirt>>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:296 ../virt-v2v-1.43.1/docs/virt-v2v.pod:296
msgid ""
"Only local libvirt connections, VMware vCenter connections, or RHEL 5 Xen "
"remote connections can be used.  Other remote libvirt connections will not "
"work in general."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:300 ../virt-v2v-1.43.1/docs/virt-v2v.pod:300
msgid "See also L<virt-v2v-input-vmware(1)>, L<virt-v2v-input-xen(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:303 ../virt-v2v-1.43.1/docs/virt-v2v.pod:303
msgid "B<-if> format"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:305 ../virt-v2v-1.43.1/docs/virt-v2v.pod:305
msgid ""
"For I<-i disk> only, this specifies the format of the input disk image.  For "
"other input methods you should specify the input format in the metadata."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:309 ../virt-v2v-1.43.1/docs/virt-v2v.pod:309
msgid "B<--in-place>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:311 ../virt-v2v-1.43.1/docs/virt-v2v.pod:311
msgid ""
"Do not create an output virtual machine in the target hypervisor.  Instead, "
"adjust the guest OS in the source VM to run in the input hypervisor."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:315 ../virt-v2v-1.43.1/docs/virt-v2v.pod:315
msgid ""
"This mode is meant for integration with other toolsets, which take the "
"responsibility of converting the VM configuration, providing for rollback in "
"case of errors, transforming the storage, etc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:319 ../virt-v2v-1.43.1/docs/virt-v2v.pod:319
msgid "See L</In-place conversion> below."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:321 ../virt-v2v-1.43.1/docs/virt-v2v.pod:321
msgid "Conflicts with all I<-o *> options."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:323 ../virt-v2v-1.43.1/docs/virt-v2v.pod:323
msgid "B<-io> OPTION=VALUE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:325 ../virt-v2v-1.43.1/docs/virt-v2v.pod:325
msgid ""
"Set input option(s) related to the current input mode or transport.  To "
"display short help on what options are available you can use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:328 ../virt-v2v-1.43.1/docs/virt-v2v.pod:328
#, no-wrap
msgid ""
" virt-v2v -it vddk -io \"?\"\n"
"\n"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:330 ../virt-v2v-1.43.1/docs/virt-v2v.pod:330
msgid "B<-io vddk-libdir=>LIBDIR"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:332 ../virt-v2v-1.43.1/docs/virt-v2v.pod:332
msgid ""
"Set the VDDK library directory.  This directory should I<contain> "
"subdirectories called F<include>, F<lib64> etc., but do not include F<lib64> "
"actually in the parameter."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:336 ../virt-v2v-1.43.1/docs/virt-v2v.pod:336
msgid ""
"In most cases this parameter is required when using the I<-it vddk> (VDDK) "
"transport.  See L<virt-v2v-input-vmware(1)> for details."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:339 ../virt-v2v-1.43.1/docs/virt-v2v.pod:339
msgid "B<-io vddk-thumbprint=>xx:xx:xx:..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:341 ../virt-v2v-1.43.1/docs/virt-v2v.pod:341
msgid "Set the thumbprint of the remote VMware server."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:343 ../virt-v2v-1.43.1/docs/virt-v2v.pod:343
msgid ""
"This parameter is required when using the I<-it vddk> (VDDK) transport.  See "
"L<virt-v2v-input-vmware(1)> for details."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:346 ../virt-v2v-1.43.1/docs/virt-v2v.pod:346
msgid "B<-io vddk-config=>FILENAME"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:348 ../virt-v2v-1.43.1/docs/virt-v2v.pod:348
msgid "B<-io vddk-cookie=>COOKIE"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:350 ../virt-v2v-1.43.1/docs/virt-v2v.pod:350
msgid "B<-io vddk-nfchostport=>PORT"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:352 ../virt-v2v-1.43.1/docs/virt-v2v.pod:352
msgid "B<-io vddk-port=>PORT"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:354 ../virt-v2v-1.43.1/docs/virt-v2v.pod:354
msgid "B<-io vddk-snapshot=>SNAPSHOT-MOREF"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:356 ../virt-v2v-1.43.1/docs/virt-v2v.pod:356
msgid "B<-io vddk-transports=>MODE:MODE:..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:358 ../virt-v2v-1.43.1/docs/virt-v2v.pod:358
msgid ""
"When using VDDK mode, these options are passed unmodified to the "
"L<nbdkit(1)> VDDK plugin.  Please refer to L<nbdkit-vddk-plugin(1)>.  Do not "
"use these options unless you know what you are doing.  These are all "
"optional."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:363 ../virt-v2v-1.43.1/docs/virt-v2v.pod:363
msgid "B<-ip> filename"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:365 ../virt-v2v-1.43.1/docs/virt-v2v.pod:365
msgid ""
"Supply a file containing a password to be used when connecting to the target "
"hypervisor.  If this is omitted then the input hypervisor may ask for the "
"password interactively.  Note the file should contain the whole password, "
"B<without any trailing newline>, and for security the file should have mode "
"C<0600> so that others cannot read it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:371 ../virt-v2v-1.43.1/docs/virt-v2v.pod:371
msgid "B<-it> B<ssh>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:373 ../virt-v2v-1.43.1/docs/virt-v2v.pod:373
msgid ""
"When using I<-i vmx>, this enables the ssh transport.  See L<virt-v2v-input-"
"vmware(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:376 ../virt-v2v-1.43.1/docs/virt-v2v.pod:376
msgid "B<-it> B<vddk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:378 ../virt-v2v-1.43.1/docs/virt-v2v.pod:378
msgid ""
"Use VMware VDDK as a transport to copy the input disks.  See L<virt-v2v-"
"input-vmware(1)>.  If you use this parameter then you may need to use other "
"I<-io vddk*> options to specify how to connect through VDDK."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:383 ../virt-v2v-1.43.1/docs/virt-v2v.pod:383
msgid "__INCLUDE:key-option.pod__"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:385 ../virt-v2v-1.43.1/docs/virt-v2v.pod:385
msgid "B<--keys-from-stdin>"
msgstr "B<--keys-from-stdin>"

#. type: textblock
#: ../docs/virt-v2v.pod:387 ../virt-v2v-1.43.1/docs/virt-v2v.pod:387
msgid ""
"Read key or passphrase parameters from stdin.  The default is to try to read "
"passphrases from the user by opening F</dev/tty>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:394 ../virt-v2v-1.43.1/docs/virt-v2v.pod:394
msgid "B<--mac> aa:bb:cc:dd:ee:ffB<:network:>out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:396 ../virt-v2v-1.43.1/docs/virt-v2v.pod:396
msgid "B<--mac> aa:bb:cc:dd:ee:ffB<:bridge:>out"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:398 ../virt-v2v-1.43.1/docs/virt-v2v.pod:398
msgid "Map source NIC MAC address to a network or bridge."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:400 ../docs/virt-v2v.pod:448
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:400
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:448
msgid "See L</Networks and bridges> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:402 ../virt-v2v-1.43.1/docs/virt-v2v.pod:402
msgid "B<--mac> aa:bb:cc:dd:ee:ffB<:ip:>ipaddr[,gw[,len[,ns,ns,...]]]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:404 ../virt-v2v-1.43.1/docs/virt-v2v.pod:404
msgid ""
"Force a particular interface (controlled by its MAC address) to have a "
"static IP address after boot."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:407 ../virt-v2v-1.43.1/docs/virt-v2v.pod:407
msgid ""
"The fields in the parameter are: C<ipaddr> is the IP address.  C<gw> is the "
"optional gateway IP address.  C<len> is the subnet mask length (an "
"integer).  The final parameters are zero or more nameserver IP addresses."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:412 ../virt-v2v-1.43.1/docs/virt-v2v.pod:412
msgid "This option can be supplied zero or more times."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:414 ../virt-v2v-1.43.1/docs/virt-v2v.pod:414
msgid ""
"You only need to use this option for certain broken guests such as Windows "
"which are unable to preserve MAC to static IP address mappings "
"automatically.  You don't need to use it if Windows is using DHCP.  It is "
"currently ignored for Linux guests since they do not have this problem."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:420 ../virt-v2v-1.43.1/docs/virt-v2v.pod:420
msgid "B<--machine-readable>"
msgstr "B<--machine-readable>"

#. type: =item
#: ../docs/virt-v2v.pod:422 ../virt-v2v-1.43.1/docs/virt-v2v.pod:422
msgid "B<--machine-readable>=format"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:424 ../virt-v2v-1.43.1/docs/virt-v2v.pod:424
msgid ""
"This option is used to make the output more machine friendly when being "
"parsed by other programs.  See L</Machine readable output> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:428 ../virt-v2v-1.43.1/docs/virt-v2v.pod:428
msgid "B<-n> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:430 ../virt-v2v-1.43.1/docs/virt-v2v.pod:430
msgid "B<-n> out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:432 ../virt-v2v-1.43.1/docs/virt-v2v.pod:432
msgid "B<--network> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:434 ../virt-v2v-1.43.1/docs/virt-v2v.pod:434
msgid "B<--network> out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:436 ../virt-v2v-1.43.1/docs/virt-v2v.pod:436
msgid "B<-b> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:438 ../virt-v2v-1.43.1/docs/virt-v2v.pod:438
msgid "B<-b> out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:440 ../virt-v2v-1.43.1/docs/virt-v2v.pod:440
msgid "B<--bridge> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:442 ../virt-v2v-1.43.1/docs/virt-v2v.pod:442
msgid "B<--bridge> out"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:444 ../virt-v2v-1.43.1/docs/virt-v2v.pod:444
msgid ""
"Map network (or bridge) called C<in> to network (or bridge) called C<out>.  "
"If no C<in:> prefix is given, all other networks (or bridges)  are mapped to "
"C<out>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:450 ../virt-v2v-1.43.1/docs/virt-v2v.pod:450
msgid "B<--no-copy>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:452 ../virt-v2v-1.43.1/docs/virt-v2v.pod:452
msgid ""
"Don’t copy the disks.  Instead, conversion is performed (and thrown away), "
"and metadata is written, but no disks are created.  See also discussion of "
"S<I<-o null>> below."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:456 ../virt-v2v-1.43.1/docs/virt-v2v.pod:456
msgid ""
"This is useful in two cases: Either you want to test if conversion is likely "
"to succeed, without the long copying process.  Or you are only interested in "
"looking at the metadata."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:460 ../virt-v2v-1.43.1/docs/virt-v2v.pod:460
msgid ""
"This option is not compatible with I<-o libvirt> since it would create a "
"faulty guest (one with no disks)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:463 ../virt-v2v-1.43.1/docs/virt-v2v.pod:463
msgid "This option is not compatible with I<-o glance> for technical reasons."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:465 ../virt-v2v-1.43.1/docs/virt-v2v.pod:465
msgid "B<-o> B<disk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:467 ../virt-v2v-1.43.1/docs/virt-v2v.pod:467
msgid "This is the same as I<-o local>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:469 ../virt-v2v-1.43.1/docs/virt-v2v.pod:469
msgid "B<-o> B<glance>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:471 ../virt-v2v-1.43.1/docs/virt-v2v.pod:471
msgid ""
"This is a legacy option.  You should probably use I<-o openstack> instead."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:474 ../virt-v2v-1.43.1/docs/virt-v2v.pod:474
msgid ""
"Set the output method to OpenStack Glance.  In this mode the converted guest "
"is uploaded to Glance.  See L<virt-v2v-output-openstack(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:477 ../virt-v2v-1.43.1/docs/virt-v2v.pod:477
msgid "B<-o> B<json>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:479 ../virt-v2v-1.43.1/docs/virt-v2v.pod:479
msgid "Set the output method to I<json>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:481 ../virt-v2v-1.43.1/docs/virt-v2v.pod:481
msgid ""
"In this mode, the converted guest is written to a local directory specified "
"by I<-os /dir> (the directory must exist), with a JSON file containing the "
"majority of the metadata that virt-v2v gathered during the conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:486 ../docs/virt-v2v.pod:495
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:486
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:495
msgid "See L<virt-v2v-output-local(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:488 ../virt-v2v-1.43.1/docs/virt-v2v.pod:488
msgid "B<-o> B<libvirt>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:490 ../virt-v2v-1.43.1/docs/virt-v2v.pod:490
msgid "Set the output method to I<libvirt>.  This is the default."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:492 ../virt-v2v-1.43.1/docs/virt-v2v.pod:492
msgid ""
"In this mode, the converted guest is created as a libvirt guest.  You may "
"also specify a libvirt connection URI (see I<-oc>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:497 ../virt-v2v-1.43.1/docs/virt-v2v.pod:497
msgid "B<-o> B<local>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:499 ../virt-v2v-1.43.1/docs/virt-v2v.pod:499
msgid "Set the output method to I<local>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:501 ../virt-v2v-1.43.1/docs/virt-v2v.pod:501
msgid ""
"In this mode, the converted guest is written to a local directory specified "
"by I<-os /dir> (the directory must exist).  The converted guest’s disks are "
"written as:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:505 ../virt-v2v-1.43.1/docs/virt-v2v.pod:505
#, no-wrap
msgid ""
" /dir/name-sda\n"
" /dir/name-sdb\n"
" [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:509 ../virt-v2v-1.43.1/docs/virt-v2v.pod:509
msgid "and a libvirt XML file is created containing guest metadata:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:511 ../virt-v2v-1.43.1/docs/virt-v2v.pod:511
#, no-wrap
msgid ""
" /dir/name.xml\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:513 ../virt-v2v-1.43.1/docs/virt-v2v.pod:513
msgid "where C<name> is the guest name."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:515 ../virt-v2v-1.43.1/docs/virt-v2v.pod:515
msgid "B<-o> B<null>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:517 ../virt-v2v-1.43.1/docs/virt-v2v.pod:517
msgid "Set the output method to I<null>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:519 ../virt-v2v-1.43.1/docs/virt-v2v.pod:519
msgid ""
"The guest is converted and copied (unless you also specify I<--no-copy>), "
"but the results are thrown away and no metadata is written."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:523 ../virt-v2v-1.43.1/docs/virt-v2v.pod:523
msgid "B<-o> B<openstack>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:525 ../virt-v2v-1.43.1/docs/virt-v2v.pod:525
msgid ""
"Set the output method to OpenStack.  See L<virt-v2v-output-openstack(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:527 ../virt-v2v-1.43.1/docs/virt-v2v.pod:527
msgid "B<-o> B<ovirt>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:529 ../docs/virt-v2v.pod:548
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:529
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:548
msgid "This is the same as I<-o rhv>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:531 ../virt-v2v-1.43.1/docs/virt-v2v.pod:531
msgid "B<-o> B<ovirt-upload>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:533 ../virt-v2v-1.43.1/docs/virt-v2v.pod:533
msgid "This is the same as I<-o rhv-upload>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:535 ../virt-v2v-1.43.1/docs/virt-v2v.pod:535
msgid "B<-o> B<qemu>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:537 ../virt-v2v-1.43.1/docs/virt-v2v.pod:537
msgid "Set the output method to I<qemu>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:539 ../virt-v2v-1.43.1/docs/virt-v2v.pod:539
msgid ""
"This is similar to I<-o local>, except that a shell script is written which "
"you can use to boot the guest in qemu.  The converted disks and shell script "
"are written to the directory specified by I<-os>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:543 ../virt-v2v-1.43.1/docs/virt-v2v.pod:543
msgid ""
"When using this output mode, you can also specify the I<--qemu-boot> option "
"which boots the guest under qemu immediately."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:546 ../virt-v2v-1.43.1/docs/virt-v2v.pod:546
msgid "B<-o> B<rhev>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:550 ../virt-v2v-1.43.1/docs/virt-v2v.pod:550
msgid "B<-o> B<rhv>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:552 ../virt-v2v-1.43.1/docs/virt-v2v.pod:552
msgid "Set the output method to I<rhv>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:554 ../virt-v2v-1.43.1/docs/virt-v2v.pod:554
msgid ""
"The converted guest is written to a RHV Export Storage Domain.  The I<-os> "
"parameter must also be used to specify the location of the Export Storage "
"Domain.  Note this does not actually import the guest into RHV.  You have to "
"do that manually later using the UI."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:559 ../docs/virt-v2v.pod:569
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:559
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:569
msgid "See L<virt-v2v-output-rhv(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:561 ../virt-v2v-1.43.1/docs/virt-v2v.pod:561
msgid "B<-o> B<rhv-upload>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:563 ../virt-v2v-1.43.1/docs/virt-v2v.pod:563
msgid "Set the output method to I<rhv-upload>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:565 ../virt-v2v-1.43.1/docs/virt-v2v.pod:565
msgid ""
"The converted guest is written directly to a RHV Data Domain.  This is a "
"faster method than I<-o rhv>, but requires oVirt or RHV E<ge> 4.2."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:571 ../virt-v2v-1.43.1/docs/virt-v2v.pod:571
msgid "B<-o> B<vdsm>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:573 ../virt-v2v-1.43.1/docs/virt-v2v.pod:573
msgid "Set the output method to I<vdsm>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:575 ../virt-v2v-1.43.1/docs/virt-v2v.pod:575
msgid ""
"This mode is similar to I<-o rhv>, but the full path to the data domain must "
"be given: F</rhv/data-center/E<lt>data-center-uuidE<gt>/E<lt>data-domain-"
"uuidE<gt>>.  This mode is only used when virt-v2v runs under VDSM control."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:580 ../virt-v2v-1.43.1/docs/virt-v2v.pod:580
msgid "B<-oa> B<sparse>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:582 ../virt-v2v-1.43.1/docs/virt-v2v.pod:582
msgid "B<-oa> B<preallocated>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:584 ../virt-v2v-1.43.1/docs/virt-v2v.pod:584
msgid "Set the output file allocation mode.  The default is C<sparse>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:586 ../virt-v2v-1.43.1/docs/virt-v2v.pod:586
msgid "B<-oc> URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:588 ../virt-v2v-1.43.1/docs/virt-v2v.pod:588
msgid "Specify a connection URI to use when writing the converted guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:590 ../virt-v2v-1.43.1/docs/virt-v2v.pod:590
msgid ""
"For S<I<-o libvirt>> this is the libvirt URI.  Only local libvirt "
"connections can be used.  Remote libvirt connections will not work.  See "
"L<virt-v2v-output-local(1)> for further information."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:594 ../virt-v2v-1.43.1/docs/virt-v2v.pod:594
msgid "B<-of> format"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:596 ../virt-v2v-1.43.1/docs/virt-v2v.pod:596
msgid "When converting the guest, convert the disks to the given format."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:598 ../virt-v2v-1.43.1/docs/virt-v2v.pod:598
msgid "If not specified, then the input format is used."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:600 ../virt-v2v-1.43.1/docs/virt-v2v.pod:600
msgid "B<-on> name"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:602 ../virt-v2v-1.43.1/docs/virt-v2v.pod:602
msgid ""
"Rename the guest when converting it.  If this option is not used then the "
"output name is the same as the input name."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:605 ../virt-v2v-1.43.1/docs/virt-v2v.pod:605
msgid "B<-oo> OPTION=VALUE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:607 ../virt-v2v-1.43.1/docs/virt-v2v.pod:607
msgid ""
"Set output option(s) related to the current output mode.  To display short "
"help on what options are available you can use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:610 ../virt-v2v-1.43.1/docs/virt-v2v.pod:610
#, no-wrap
msgid ""
" virt-v2v -o rhv-upload -oo \"?\"\n"
"\n"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:612 ../virt-v2v-1.43.1/docs/virt-v2v.pod:612
msgid "B<-oo guest-id=>C<ID>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:614 ../virt-v2v-1.43.1/docs/virt-v2v.pod:614
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, set a guest ID "
"which is saved on each Cinder volume in the C<virt_v2v_guest_id> volume "
"property."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:618 ../virt-v2v-1.43.1/docs/virt-v2v.pod:618
msgid "B<-oo verify-server-certificate>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:620 ../virt-v2v-1.43.1/docs/virt-v2v.pod:620
msgid "B<-oo verify-server-certificate=>C<true|false>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:622 ../virt-v2v-1.43.1/docs/virt-v2v.pod:622
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, this can be used "
"to disable SSL certification validation when connecting to OpenStack by "
"specifying I<-oo verify-server-certificate=false>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:626 ../virt-v2v-1.43.1/docs/virt-v2v.pod:626
msgid "B<-oo os->*B<=>*"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:628 ../virt-v2v-1.43.1/docs/virt-v2v.pod:628
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, set optional "
"OpenStack authentication.  For example I<-oo os-username=>NAME is equivalent "
"to C<openstack --os-username=NAME>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:632 ../virt-v2v-1.43.1/docs/virt-v2v.pod:632
msgid "B<-oo rhv-cafile=>F<ca.pem>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:634 ../virt-v2v-1.43.1/docs/virt-v2v.pod:634
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, the F<ca.pem> file "
"(Certificate Authority), copied from F</etc/pki/ovirt-engine/ca.pem> on the "
"oVirt engine."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:638 ../virt-v2v-1.43.1/docs/virt-v2v.pod:638
msgid "B<-oo rhv-cluster=>C<CLUSTERNAME>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:640 ../virt-v2v-1.43.1/docs/virt-v2v.pod:640
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, set the RHV Cluster "
"Name.  If not given it uses C<Default>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:643 ../virt-v2v-1.43.1/docs/virt-v2v.pod:643
msgid "B<-oo rhv-direct>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:645 ../virt-v2v-1.43.1/docs/virt-v2v.pod:645
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, if this option is "
"given then virt-v2v will attempt to directly upload the disk to the oVirt "
"node, otherwise it will proxy the upload through the oVirt engine.  Direct "
"upload requires that you have network access to the oVirt nodes.  Non-direct "
"upload is slightly slower but should work in all situations."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:652 ../virt-v2v-1.43.1/docs/virt-v2v.pod:652
msgid "B<-oo rhv-verifypeer>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:654 ../virt-v2v-1.43.1/docs/virt-v2v.pod:654
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, verify the oVirt/RHV "
"server’s identity by checking the server‘s certificate against the "
"Certificate Authority."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:658 ../virt-v2v-1.43.1/docs/virt-v2v.pod:658
msgid "B<-oo server-id=>C<NAME|UUID>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:660 ../virt-v2v-1.43.1/docs/virt-v2v.pod:660
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, set the name of "
"the conversion appliance where virt-v2v is running."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:663 ../virt-v2v-1.43.1/docs/virt-v2v.pod:663
msgid "B<-oo vdsm-compat=0.10>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:665 ../virt-v2v-1.43.1/docs/virt-v2v.pod:665
msgid "B<-oo vdsm-compat=1.1>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:667 ../virt-v2v-1.43.1/docs/virt-v2v.pod:667
msgid ""
"If I<-o vdsm> and the output format is qcow2, then we add the qcow2 "
"I<compat=0.10> option to the output file for compatibility with RHEL 6 (see "
"L<https://bugzilla.redhat.com/1145582>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:671 ../virt-v2v-1.43.1/docs/virt-v2v.pod:671
msgid ""
"If I<-oo vdsm-compat=1.1> is used then modern qcow2 (I<compat=1.1>)  files "
"are generated instead."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:674 ../virt-v2v-1.43.1/docs/virt-v2v.pod:674
msgid ""
"Currently I<-oo vdsm-compat=0.10> is the default, but this will change to I<-"
"oo vdsm-compat=1.1> in a future version of virt-v2v (when we can assume that "
"everyone is using a modern version of qemu)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:678 ../virt-v2v-1.43.1/docs/virt-v2v.pod:678
msgid ""
"B<Note this option only affects I<-o vdsm> output>.  All other output modes "
"(including I<-o rhv>) generate modern qcow2 I<compat=1.1> files, always."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:682 ../virt-v2v-1.43.1/docs/virt-v2v.pod:682
msgid ""
"If this option is available, then C<vdsm-compat-option> will appear in the "
"I<--machine-readable> output."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:685 ../virt-v2v-1.43.1/docs/virt-v2v.pod:685
msgid "B<-oo vdsm-image-uuid=>UUID"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:687 ../virt-v2v-1.43.1/docs/virt-v2v.pod:687
msgid "B<-oo vdsm-vol-uuid=>UUID"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:689 ../virt-v2v-1.43.1/docs/virt-v2v.pod:689
msgid "B<-oo vdsm-vm-uuid=>UUID"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:691 ../virt-v2v-1.43.1/docs/virt-v2v.pod:691
msgid "B<-oo vdsm-ovf-output=>DIR"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:693 ../virt-v2v-1.43.1/docs/virt-v2v.pod:693
msgid ""
"Normally the RHV output mode chooses random UUIDs for the target guest.  "
"However VDSM needs to control the UUIDs and passes these parameters when "
"virt-v2v runs under VDSM control.  The parameters control:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:702 ../virt-v2v-1.43.1/docs/virt-v2v.pod:702
msgid ""
"the image directory of each guest disk (I<-oo vdsm-image-uuid>) (this option "
"is passed once for each guest disk)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:707 ../virt-v2v-1.43.1/docs/virt-v2v.pod:707
msgid ""
"UUIDs for each guest disk (I<-oo vdsm-vol-uuid>) (this option is passed once "
"for each guest disk)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:712 ../virt-v2v-1.43.1/docs/virt-v2v.pod:712
msgid "the OVF file name (I<-oo vdsm-vm-uuid>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:716 ../virt-v2v-1.43.1/docs/virt-v2v.pod:716
msgid ""
"the OVF output directory (default current directory) (I<-oo vdsm-ovf-"
"output>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:720 ../virt-v2v-1.43.1/docs/virt-v2v.pod:720
msgid ""
"The format of UUIDs is: C<12345678-1234-1234-1234-123456789abc> (each hex "
"digit can be C<0-9> or C<a-f>), conforming to S<OSF DCE 1.1>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:723 ../virt-v2v-1.43.1/docs/virt-v2v.pod:723
msgid "These options can only be used with I<-o vdsm>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:725 ../virt-v2v-1.43.1/docs/virt-v2v.pod:725
msgid "B<-oo vdsm-ovf-flavour=>flavour"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:727 ../virt-v2v-1.43.1/docs/virt-v2v.pod:727
msgid ""
"This option controls the format of the OVF generated at the end of "
"conversion.  Currently there are two possible flavours:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:732 ../virt-v2v-1.43.1/docs/virt-v2v.pod:732
msgid "rhvexp"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:734 ../virt-v2v-1.43.1/docs/virt-v2v.pod:734
msgid "The OVF format used in RHV export storage domain."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:736 ../virt-v2v-1.43.1/docs/virt-v2v.pod:736
msgid "ovirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:738 ../virt-v2v-1.43.1/docs/virt-v2v.pod:738
msgid "The OVF format understood by oVirt REST API."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:742 ../virt-v2v-1.43.1/docs/virt-v2v.pod:742
msgid ""
"For backward compatibility the default is I<rhvexp>, but this may change in "
"the future."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:745 ../virt-v2v-1.43.1/docs/virt-v2v.pod:745
msgid "B<-op> file"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:747 ../virt-v2v-1.43.1/docs/virt-v2v.pod:747
msgid ""
"Supply a file containing a password to be used when connecting to the target "
"hypervisor.  Note the file should contain the whole password, B<without any "
"trailing newline>, and for security the file should have mode C<0600> so "
"that others cannot read it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:752 ../virt-v2v-1.43.1/docs/virt-v2v.pod:752
msgid "B<-os> storage"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:754 ../virt-v2v-1.43.1/docs/virt-v2v.pod:754
msgid "The location of the storage for the converted guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:756 ../virt-v2v-1.43.1/docs/virt-v2v.pod:756
msgid ""
"For I<-o libvirt>, this is a libvirt directory pool (see S<C<virsh pool-"
"list>>) or pool UUID."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:759 ../virt-v2v-1.43.1/docs/virt-v2v.pod:759
msgid ""
"For I<-o json>, I<-o local> and I<-o qemu>, this is a directory name.  The "
"directory must exist."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:762 ../virt-v2v-1.43.1/docs/virt-v2v.pod:762
msgid ""
"For I<-o rhv-upload>, this is the name of the destination Storage Domain."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:765 ../virt-v2v-1.43.1/docs/virt-v2v.pod:765
msgid "For I<-o openstack>, this is the optional Cinder volume type."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:767 ../virt-v2v-1.43.1/docs/virt-v2v.pod:767
msgid ""
"For I<-o rhv>, this can be an NFS path of the Export Storage Domain of the "
"form C<E<lt>hostE<gt>:E<lt>pathE<gt>>, eg:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:770 ../virt-v2v-1.43.1/docs/virt-v2v.pod:770
#, no-wrap
msgid ""
" rhv-storage.example.com:/rhv/export\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:772 ../virt-v2v-1.43.1/docs/virt-v2v.pod:772
msgid ""
"The NFS export must be mountable and writable by the user and host running "
"virt-v2v, since the virt-v2v program has to actually mount it when it runs.  "
"So you probably have to run virt-v2v as C<root>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:776 ../virt-v2v-1.43.1/docs/virt-v2v.pod:776
msgid ""
"B<Or:> You can mount the Export Storage Domain yourself, and point I<-os> to "
"the mountpoint.  Note that virt-v2v will still need to write to this remote "
"directory, so virt-v2v will still need to run as C<root>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:781 ../virt-v2v-1.43.1/docs/virt-v2v.pod:781
msgid ""
"You will get an error if virt-v2v is unable to mount/write to the Export "
"Storage Domain."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:784 ../virt-v2v-1.43.1/docs/virt-v2v.pod:784
msgid "B<--print-estimate>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:786 ../virt-v2v-1.43.1/docs/virt-v2v.pod:786
msgid ""
"Print the estimated size of the data which will be copied from the source "
"disk(s) and stop.  One number (the size in bytes) is printed per disk, and a "
"total:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:790 ../virt-v2v-1.43.1/docs/virt-v2v.pod:790
#, no-wrap
msgid ""
" $ virt-v2v --print-estimate\n"
" ...\n"
" disk 1: 100000\n"
" disk 2: 200000\n"
" total: 300000\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:796 ../virt-v2v-1.43.1/docs/virt-v2v.pod:796
msgid ""
"With the I<--machine-readable> option you get JSON output which can be "
"directed into a file or elsewhere:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:799 ../virt-v2v-1.43.1/docs/virt-v2v.pod:799
#, no-wrap
msgid ""
" $ virt-v2v --print-estimate --machine-readable=file:estimates\n"
" ...\n"
" $ cat estimates\n"
" {\n"
"  \"disks\": [ 100000, 200000 ],\n"
"  \"total\": 300000\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:807 ../virt-v2v-1.43.1/docs/virt-v2v.pod:807
msgid ""
"When using this option you must specify an output mode.  This is because "
"virt-v2v has to perform the conversion in order to print the estimate, and "
"the conversion depends on the output mode.  Using I<-o null> should be safe "
"for most purposes."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:812 ../virt-v2v-1.43.1/docs/virt-v2v.pod:812
msgid ""
"When this option is used along with I<--machine-readable> you can direct the "
"output to an alternate file."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:815 ../virt-v2v-1.43.1/docs/virt-v2v.pod:815
msgid "B<--print-source>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:817 ../virt-v2v-1.43.1/docs/virt-v2v.pod:817
msgid ""
"Print information about the source guest and stop.  This option is useful "
"when you are setting up network and bridge maps.  See L</Networks and "
"bridges>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:821 ../virt-v2v-1.43.1/docs/virt-v2v.pod:821
msgid "B<--qemu-boot>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:823 ../virt-v2v-1.43.1/docs/virt-v2v.pod:823
msgid ""
"When using I<-o qemu> only, this boots the guest immediately after virt-v2v "
"finishes."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:832 ../virt-v2v-1.43.1/docs/virt-v2v.pod:832
msgid "B<--root ask>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:834 ../virt-v2v-1.43.1/docs/virt-v2v.pod:834
msgid "B<--root single>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:836 ../virt-v2v-1.43.1/docs/virt-v2v.pod:836
msgid "B<--root first>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:838 ../virt-v2v-1.43.1/docs/virt-v2v.pod:838
msgid "B<--root> /dev/sdX"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:840 ../virt-v2v-1.43.1/docs/virt-v2v.pod:840
msgid "B<--root> /dev/VG/LV"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:842 ../virt-v2v-1.43.1/docs/virt-v2v.pod:842
msgid "Choose the root filesystem to be converted."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:844 ../virt-v2v-1.43.1/docs/virt-v2v.pod:844
msgid ""
"In the case where the virtual machine is dual-boot or multi-boot, or where "
"the VM has other filesystems that look like operating systems, this option "
"can be used to select the root filesystem (a.k.a. C<C:> drive or F</>) of "
"the operating system that is to be converted.  The Windows Recovery Console, "
"certain attached DVD drives, and bugs in libguestfs inspection heuristics, "
"can make a guest look like a multi-boot operating system."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:852 ../virt-v2v-1.43.1/docs/virt-v2v.pod:852
msgid ""
"The default in virt-v2v E<le> 0.7.1 was S<I<--root single>>, which causes "
"virt-v2v to die if a multi-boot operating system is found."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:855 ../virt-v2v-1.43.1/docs/virt-v2v.pod:855
msgid ""
"Since virt-v2v E<ge> 0.7.2 the default is now S<I<--root ask>>: If the VM is "
"found to be multi-boot, then virt-v2v will stop and list the possible root "
"filesystems and ask the user which to use.  This requires that virt-v2v is "
"run interactively."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:860 ../virt-v2v-1.43.1/docs/virt-v2v.pod:860
msgid ""
"S<I<--root first>> means to choose the first root device in the case of a "
"multi-boot operating system.  Since this is a heuristic, it may sometimes "
"choose the wrong one."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:864 ../virt-v2v-1.43.1/docs/virt-v2v.pod:864
msgid ""
"You can also name a specific root device, eg. S<I<--root /dev/sda2>> would "
"mean to use the second partition on the first hard drive.  If the named root "
"device does not exist or was not detected as a root device, then virt-v2v "
"will fail."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:869 ../virt-v2v-1.43.1/docs/virt-v2v.pod:869
msgid ""
"Note that there is a bug in grub which prevents it from successfully booting "
"a multiboot system if virtio is enabled.  Grub is only able to boot an "
"operating system from the first virtio disk.  Specifically, F</boot> must be "
"on the first virtio disk, and it cannot chainload an OS which is not in the "
"first virtio disk."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:887 ../virt-v2v-1.43.1/docs/virt-v2v.pod:887
msgid "B<-x>"
msgstr "B<-x>"

#. type: textblock
#: ../docs/virt-v2v.pod:889 ../virt-v2v-1.43.1/docs/virt-v2v.pod:889
msgid "Enable tracing of libguestfs API calls."
msgstr "libguestfs API 呼び出しのトレースを有効にします。"

#. type: =head1
#: ../docs/virt-v2v.pod:893 ../virt-v2v-1.43.1/docs/virt-v2v.pod:893
msgid "NOTES"
msgstr "注記"

#. type: =head2
#: ../docs/virt-v2v.pod:895 ../virt-v2v-1.43.1/docs/virt-v2v.pod:895
msgid "Xen paravirtualized guests"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:897 ../virt-v2v-1.43.1/docs/virt-v2v.pod:897
msgid ""
"Older versions of virt-v2v could turn a Xen paravirtualized (PV) guest into "
"a KVM guest by installing a new kernel.  This version of virt-v2v does "
"I<not> attempt to install any new kernels.  Instead it will give you an "
"error if there are I<only> Xen PV kernels available."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:902 ../virt-v2v-1.43.1/docs/virt-v2v.pod:902
msgid ""
"Therefore before conversion you should check that a regular kernel is "
"installed.  For some older Linux distributions, this means installing a "
"kernel from the table below:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:906 ../virt-v2v-1.43.1/docs/virt-v2v.pod:906
#, no-wrap
msgid ""
" RHEL 3         (Does not apply, as there was no Xen PV kernel)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:908 ../virt-v2v-1.43.1/docs/virt-v2v.pod:908
#, no-wrap
msgid ""
" RHEL 4         i686 with > 10GB of RAM: install 'kernel-hugemem'\n"
"                i686 SMP: install 'kernel-smp'\n"
"                other i686: install 'kernel'\n"
"                x86-64 SMP with > 8 CPUs: install 'kernel-largesmp'\n"
"                x86-64 SMP: install 'kernel-smp'\n"
"                other x86-64: install 'kernel'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:915 ../virt-v2v-1.43.1/docs/virt-v2v.pod:915
#, no-wrap
msgid ""
" RHEL 5         i686: install 'kernel-PAE'\n"
"                x86-64: install 'kernel'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:918 ../virt-v2v-1.43.1/docs/virt-v2v.pod:918
#, no-wrap
msgid ""
" SLES 10        i586 with > 10GB of RAM: install 'kernel-bigsmp'\n"
"                i586 SMP: install 'kernel-smp'\n"
"                other i586: install 'kernel-default'\n"
"                x86-64 SMP: install 'kernel-smp'\n"
"                other x86-64: install 'kernel-default'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:924 ../virt-v2v-1.43.1/docs/virt-v2v.pod:924
#, no-wrap
msgid ""
" SLES 11+       i586: install 'kernel-pae'\n"
"                x86-64: install 'kernel-default'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:927 ../virt-v2v-1.43.1/docs/virt-v2v.pod:927
#, no-wrap
msgid ""
" Windows        (Does not apply, as there is no Xen PV Windows kernel)\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:929 ../virt-v2v-1.43.1/docs/virt-v2v.pod:929
msgid "Enabling virtio"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:931 ../virt-v2v-1.43.1/docs/virt-v2v.pod:931
msgid ""
"\"Virtio\" is the name for a set of drivers which make disk (block device), "
"network and other guest operations work much faster on KVM."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:934 ../virt-v2v-1.43.1/docs/virt-v2v.pod:934
msgid ""
"Older versions of virt-v2v could install these drivers for certain Linux "
"guests.  This version of virt-v2v does I<not> attempt to install new Linux "
"kernels or drivers, but will warn you if they are not installed already."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:939 ../virt-v2v-1.43.1/docs/virt-v2v.pod:939
msgid ""
"In order to enable virtio, and hence improve performance of the guest after "
"conversion, you should ensure that the B<minimum> versions of packages are "
"installed I<before> conversion, by consulting the table below."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:944 ../virt-v2v-1.43.1/docs/virt-v2v.pod:944
#, no-wrap
msgid ""
" RHEL 3         No virtio drivers are available\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:946 ../virt-v2v-1.43.1/docs/virt-v2v.pod:946
#, no-wrap
msgid ""
" RHEL 4         kernel >= 2.5.9-89.EL\n"
"                lvm2 >= 2.02.42-5.el4\n"
"                device-mapper >= 1.02.28-2.el4\n"
"                selinux-policy-targeted >= 1.17.30-2.152.el4\n"
"                policycoreutils >= 1.18.1-4.13\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:952 ../virt-v2v-1.43.1/docs/virt-v2v.pod:952
#, no-wrap
msgid ""
" RHEL 5         kernel >= 2.6.18-128.el5\n"
"                lvm2 >= 2.02.40-6.el5\n"
"                selinux-policy-targeted >= 2.4.6-203.el5\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:956 ../virt-v2v-1.43.1/docs/virt-v2v.pod:956
#, no-wrap
msgid ""
" RHEL 6+        All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:958 ../virt-v2v-1.43.1/docs/virt-v2v.pod:958
#, no-wrap
msgid ""
" Fedora         All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:960 ../virt-v2v-1.43.1/docs/virt-v2v.pod:960
#, no-wrap
msgid ""
" SLES 11+       All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:962 ../virt-v2v-1.43.1/docs/virt-v2v.pod:962
#, no-wrap
msgid ""
" SLES 10        kernel >= 2.6.16.60-0.85.1\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:964 ../virt-v2v-1.43.1/docs/virt-v2v.pod:964
#, no-wrap
msgid ""
" OpenSUSE 11+   All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:966 ../virt-v2v-1.43.1/docs/virt-v2v.pod:966
#, no-wrap
msgid ""
" OpenSUSE 10    kernel >= 2.6.25.5-1.1\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:968 ../virt-v2v-1.43.1/docs/virt-v2v.pod:968
#, no-wrap
msgid ""
" Debian 6+      All versions support virtio\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:970 ../virt-v2v-1.43.1/docs/virt-v2v.pod:970
#, no-wrap
msgid ""
" Ubuntu 10.04+  All versions support virtio\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:972 ../virt-v2v-1.43.1/docs/virt-v2v.pod:972
#, no-wrap
msgid ""
" Windows        Drivers are installed from the ISO or directory pointed\n"
"                to by \"VIRTIO_WIN\" environment variable if present\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:975 ../virt-v2v-1.43.1/docs/virt-v2v.pod:975
msgid "RHEL 4: SELinux relabel appears to hang forever"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:977 ../virt-v2v-1.43.1/docs/virt-v2v.pod:977
msgid ""
"In RHEL E<le> 4.7 there was a bug which causes SELinux relabelling to appear "
"to hang forever at:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:980 ../virt-v2v-1.43.1/docs/virt-v2v.pod:980
#, no-wrap
msgid ""
" *** Warning -- SELinux relabel is required. ***\n"
" *** Disabling security enforcement.         ***\n"
" *** Relabeling could take a very long time, ***\n"
" *** depending on file system size.          ***\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:985 ../virt-v2v-1.43.1/docs/virt-v2v.pod:985
msgid ""
"In reality it is waiting for you to press a key (but there is no visual "
"indication of this).  You can either hit the C<[Return]> key, at which point "
"the guest will finish relabelling and reboot, or you can install "
"policycoreutils E<ge> 1.18.1-4.13 before starting the v2v conversion.  See "
"also L<https://bugzilla.redhat.com/show_bug.cgi?id=244636>"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:992 ../virt-v2v-1.43.1/docs/virt-v2v.pod:992
msgid "Debian and Ubuntu"
msgstr "Debian および Ubuntu"

#. type: =head3
#: ../docs/virt-v2v.pod:994 ../virt-v2v-1.43.1/docs/virt-v2v.pod:994
msgid ""
"\"warning: could not determine a way to update the configuration of Grub2\""
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:996 ../virt-v2v-1.43.1/docs/virt-v2v.pod:996
msgid ""
"Currently, virt-v2v has no way to set the default kernel in Debian and "
"Ubuntu guests using GRUB 2 as bootloader.  This means that virt-v2v will not "
"change the default kernel used for booting, even in case it is not the best "
"kernel available on the guest.  A recommended procedure is, before using "
"virt-v2v, to check that the boot kernel is the best kernel available in the "
"guest (for example by making sure the guest is up-to-date)."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1004 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1004
msgid "\"vsyscall attempted with vsyscall=none\""
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1006 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1006
msgid ""
"When run on a recent Debian host virt-v2v may fail to convert guests which "
"were created before 2013.  In the debugging output you will see a crash "
"message similar to:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1010 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1010
#, no-wrap
msgid ""
" vsyscall attempted with vsyscall=none ip:...\n"
" segfault at ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1013 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1013
msgid ""
"This is caused because Debian removed support for running old binaries which "
"used the legacy vsyscall page to call into the kernel."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1016 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1016
msgid ""
"You can work around this problem by running this command before running virt-"
"v2v:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1019 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1019
#, no-wrap
msgid ""
" export LIBGUESTFS_APPEND=\"vsyscall=emulate\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1021 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1021
msgid "For more information, see L<https://bugzilla.redhat.com/1592061>"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1023 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1023
msgid "Windows"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1025 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1025
msgid "Windows E<ge> 8 Fast Startup is incompatible with virt-v2v"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1027 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1027
msgid ""
"Guests which use the Windows E<ge> 8 \"Fast Startup\" feature (or guests "
"which are hibernated) cannot be converted with virt-v2v.  You will see an "
"error:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1031 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1031
#, no-wrap
msgid ""
" virt-v2v: error: unable to mount the disk image for writing. This has\n"
" probably happened because Windows Hibernation or Fast Restart is being\n"
" used in this guest. You have to disable this (in the guest) in order\n"
" to use virt-v2v.\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1036 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1036
msgid ""
"As the message says, you need to boot the guest and disable the \"Fast "
"Startup\" feature (Control Panel → Power Options → Choose what the power "
"buttons do → Change settings that are currently unavailable → Turn on fast "
"startup), and shut down the guest, and then you will be able to convert it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1042 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1042
msgid ""
"For more information, see: L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 "
"FAST STARTUP>."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1045 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1045
msgid "Boot failure: 0x0000007B"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1047 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1047
msgid ""
"This boot failure is caused by Windows being unable to find or load the "
"right disk driver (eg. F<viostor.sys>).  If you experience this error, here "
"are some things to check:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1055 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1055
msgid ""
"First ensure that the guest boots on the source hypervisor before conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1060 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1060
msgid ""
"Check you have the Windows virtio drivers available in F</usr/share/virtio-"
"win>, and that virt-v2v did not print any warning about not being able to "
"install virtio drivers."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1064 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1064
msgid ""
"On S<Red Hat Enterprise Linux 7>, you will need to install the signed "
"drivers available in the C<virtio-win> package.  If you do not have access "
"to the signed drivers, then you will probably need to disable driver signing "
"in the boot menus."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1071 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1071
msgid ""
"Check that you are presenting a virtio-blk interface (B<not> virtio-scsi and "
"B<not> ide) to the guest.  On the qemu/KVM command line you should see "
"something similar to this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1075 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1075
#, no-wrap
msgid ""
" ... -drive file=windows-sda,if=virtio ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1077 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1077
msgid "In libvirt XML, you should see:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1079 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1079
#, no-wrap
msgid ""
" <target dev='vda' bus='virtio'/>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1083 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1083
msgid ""
"Check that Windows Group Policy does not prevent the driver from being "
"installed or used.  Try deleting Windows Group Policy before conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1089 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1089
msgid ""
"Check there is no anti-virus or other software which implements Group Policy-"
"like prohibitions on installing or using new drivers."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1094 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1094
msgid ""
"Enable boot debugging and check the F<viostor.sys> driver is being loaded."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1099 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1099
msgid "OpenStack and Windows reactivation"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1101 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1101
msgid ""
"OpenStack does not offer stable device / PCI addresses to guests.  Every "
"time it creates or starts a guest, it regenerates the libvirt XML for that "
"guest from scratch.  The libvirt XML will have no E<lt>addressE<gt> fields.  "
"Libvirt will then assign addresses to devices, in a predictable manner.  "
"Addresses may change if any of the following are true:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1112 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1112
msgid "A new disk or network device has been added or removed from the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1116 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1116
msgid "The version of OpenStack or (possibly) libvirt has changed."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1120 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1120
msgid ""
"Because Windows does not like \"hardware\" changes of this kind, it may "
"trigger Windows reactivation."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1123 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1123
msgid ""
"This can also prevent booting with a 7B error [see previous section] if the "
"guest has group policy containing C<Device Installation Restrictions>."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1127 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1127
msgid "Support for SHA-2 certificates in Windows 7 and Windows Server 2008 R2"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1129 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1129
msgid ""
"Later versions of the Windows virtio drivers are signed using SHA-2 "
"certificates (instead of SHA-1).  The original shipping Windows 7 and "
"Windows Server 2008 R2 did not understand SHA-2 certificates and so the "
"Windows virtio drivers will not install properly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1134 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1134
msgid ""
"To fix this you must apply SHA-2 Code Signing Support from: L<https://docs."
"microsoft.com/en-us/security-updates/SecurityAdvisories/2015/3033929> before "
"converting the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1138 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1138
msgid ""
"For further information see: L<https://bugzilla.redhat.com/show_bug.cgi?"
"id=1624878>"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1141 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1141
msgid "Networks and bridges"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1143 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1143
msgid ""
"Guests are usually connected to one or more networks, and when converted to "
"the target hypervisor you usually want to reconnect those networks at the "
"destination.  The options I<--network>, I<--bridge> and I<--mac> allow you "
"to do that."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1148 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1148
msgid ""
"If you are unsure of what networks and bridges are in use on the source "
"hypervisor, then you can examine the source metadata (libvirt XML, vCenter "
"information, etc.).  Or you can run virt-v2v with the I<--print-source> "
"option which causes virt-v2v to print out the information it has about the "
"guest on the source and then exit."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1154 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1154
msgid ""
"In the I<--print-source> output you will see a section showing the guest’s "
"Network Interface Cards (NICs):"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1157 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1157
#, no-wrap
msgid ""
" $ virt-v2v [-i ...] --print-source name\n"
" [...]\n"
" NICs:\n"
"     Network \"default\" mac: 52:54:00:d0:cf:0e\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1162 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1162
msgid ""
"Bridges are special classes of network devices which are attached to a named "
"external network on the source hypervisor, for example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1165 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1165
#, no-wrap
msgid ""
" $ virt-v2v [-i ...] --print-source name\n"
" [...]\n"
" NICs:\n"
"     Bridge \"br0\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1170 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1170
msgid ""
"To map a specific source bridge to a target network, for example C<br0> on "
"the source to C<ovirtmgmt> on the target, use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1173 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1173
#, no-wrap
msgid ""
" virt-v2v [...] --bridge br0:ovirtmgmt\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1175 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1175
msgid "To map every bridge to a target network, use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1177 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1177
#, no-wrap
msgid ""
" virt-v2v [...] --bridge ovirtmgmt\n"
"\n"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1179 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1179
msgid "Fine-grained mapping of guest NICs"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1181 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1181
msgid ""
"The I<--mac> option gives you more control over the mapping, letting you map "
"single NICs to either networks or bridges on the target.  For example a "
"source guest with two NICs could map them individually to two networks "
"called C<mgmt> and C<clientdata> like this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1186 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1186
#, no-wrap
msgid ""
" $ virt-v2v [...] \\\n"
"    --mac 52:54:00:d0:cf:0e:network:mgmt \\\n"
"    --mac 52:54:00:d0:cf:0f:network:clientdata\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1190 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1190
msgid ""
"Note that virt-v2v does not have the ability to change a guest’s MAC "
"address.  The MAC address is part of the guest metadata and must remain the "
"same on source and target hypervisors.  Most guests will use the MAC address "
"to set up persistent associations between NICs and internal names (like "
"C<eth0>), with firewall settings, or even for other purposes like software "
"licensing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1197 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1197
msgid "Resource requirements"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1199 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1199
msgid "Network"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1201 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1201
msgid ""
"The most important resource for virt-v2v appears to be network bandwidth.  "
"Virt-v2v should be able to copy guest data at gigabit ethernet speeds or "
"greater."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1205 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1205
msgid ""
"Ensure that the network connections between servers (conversion server, NFS "
"server, vCenter, Xen) are as fast and as low latency as possible."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1209 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1209
msgid "Disk space"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1211 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1211
msgid ""
"Virt-v2v places potentially large temporary files in C<$LIBGUESTFS_CACHEDIR> "
"(which is F</var/tmp> if you don't set it).  Using tmpfs is a bad idea."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1215 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1215
msgid ""
"For each guest disk, an overlay is stored temporarily.  This stores the "
"changes made during conversion, and is used as a cache.  The overlays are "
"not particularly large - tens or low hundreds of megabytes per disk is "
"typical.  In addition to the overlay(s), input and output methods may use "
"disk space, as outlined in the table below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1223 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1223
msgid "I<-i ova>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1225 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1225
msgid ""
"This temporarily places a full copy of the uncompressed source disks in C<"
"$LIBGUESTFS_CACHEDIR> (or F</var/tmp>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1228 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1228
msgid "I<-o glance>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1230 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1230
msgid ""
"This temporarily places a full copy of the output disks in C<"
"$LIBGUESTFS_CACHEDIR> (or F</var/tmp>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1233 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1233
msgid "I<-o local>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1235 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1235
msgid "I<-o qemu>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1237 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1237
msgid ""
"You must ensure there is sufficient space in the output directory for the "
"converted guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1242 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1242
msgid "See also L</Minimum free space check in the host> below."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1244 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1244
msgid "VMware vCenter resources"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1246 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1246
msgid ""
"Copying from VMware vCenter is currently quite slow, but we believe this to "
"be an issue with VMware.  Ensuring the VMware ESXi hypervisor and vCenter "
"are running on fast hardware with plenty of memory should alleviate this."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1251 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1251
msgid "Compute power and RAM"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1253 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1253
msgid ""
"Virt-v2v is not especially compute or RAM intensive.  If you are running "
"many parallel conversions, then you may consider allocating one CPU core and "
"2 GB of RAM per running instance."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1257 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1257
msgid "Virt-v2v can be run in a virtual machine."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1259 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1259
msgid "Trimming"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1261 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1261
msgid ""
"Virt-v2v attempts to optimize the speed of conversion by ignoring guest "
"filesystem data which is not used.  This would include unused filesystem "
"blocks, blocks containing zeroes, and deleted files."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1265 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1265
msgid ""
"To do this, virt-v2v issues a non-destructive L<fstrim(8)> operation.  As "
"this happens to an overlay placed over the guest data, it does B<not> affect "
"the source in any way."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1269 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1269
msgid ""
"If this fstrim operation fails, you will see a warning, but virt-v2v will "
"continue anyway.  It may run more slowly (in some cases much more slowly), "
"because it is copying the unused parts of the disk."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1273 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1273
msgid ""
"Unfortunately support for fstrim is not universal, and it also depends on "
"specific details of the filesystem, partition alignment, and backing "
"storage.  As an example, NTFS filesystems cannot be fstrimmed if they occupy "
"a partition which is not aligned to the underlying storage.  That was the "
"default on Windows before Vista.  As another example, VFAT filesystems (used "
"by UEFI guests) cannot be trimmed at all."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1281 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1281
msgid ""
"fstrim support in the Linux kernel is improving gradually, so over time some "
"of these restrictions will be lifted and virt-v2v will work faster."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1285 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1285
msgid "Post-conversion tasks"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1287 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1287
msgid "Guest network configuration"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1289 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1289
msgid ""
"Virt-v2v cannot currently reconfigure a guest’s network configuration.  If "
"the converted guest is not connected to the same subnet as the source, its "
"network configuration may have to be updated.  See also L<virt-customize(1)>."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1294 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1294
msgid "Converting a Windows guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1296 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1296
msgid ""
"When converting a Windows guests, the conversion process is split into two "
"stages:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1301 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1301
msgid "1"
msgstr "1"

#. type: textblock
#: ../docs/virt-v2v.pod:1303 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1303
msgid "Offline conversion."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1305 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1305
msgid "2"
msgstr "2"

#. type: textblock
#: ../docs/virt-v2v.pod:1307 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1307
msgid "First boot."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1311 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1311
msgid ""
"The guest will be bootable after the offline conversion stage, but will not "
"yet have all necessary drivers installed to work correctly.  These will be "
"installed automatically the first time the guest boots."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1315 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1315
msgid ""
"B<N.B.> Take care not to interrupt the automatic driver installation process "
"when logging in to the guest for the first time, as this may prevent the "
"guest from subsequently booting correctly."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1319 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1319
msgid "Free space for conversion"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1321 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1321
msgid "Free space in the guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1323 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1323
msgid ""
"Virt-v2v checks there is sufficient free space in the guest filesystem to "
"perform the conversion.  Currently it checks:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1328 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1328
msgid "Linux root filesystem or Windows C<C:> drive"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1330 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1330
msgid "Minimum free space: 20 MB"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1332 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1332
msgid "Linux F</boot>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1334 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1334
msgid "Minimum free space: 50 MB"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1336 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1336
msgid ""
"This is because we need to build a new initramfs for some Enterprise Linux "
"conversions."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1339 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1339
#, fuzzy
msgid "Any other mountable filesystem"
msgstr "これはマウントされたファイルシステムをすべてアンマウントします。"

#. type: textblock
#: ../docs/virt-v2v.pod:1341 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1341
msgid "Minimum free space: 10 MB"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1345 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1345
msgid ""
"In addition to the actual free space, each filesystem is required to have at "
"least 100 available inodes."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1348 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1348
msgid "Minimum free space check in the host"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1350 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1350
msgid ""
"You must have sufficient free space in the host directory used to store "
"temporary overlays (except in I<--in-place> mode).  To find out which "
"directory this is, use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1354 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1354
#, no-wrap
msgid ""
" $ df -h \"`guestfish get-cachedir`\"\n"
" Filesystem        Size  Used Avail Use% Mounted on\n"
" /dev/mapper/root   50G   40G  6.8G  86% /\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1358 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1358
msgid ""
"and look under the C<Avail> column.  Virt-v2v will refuse to do the "
"conversion at all unless at least 1GB is available there."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1361 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1361
msgid "See also L</Resource requirements> above."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1363 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1363
msgid "Running virt-v2v as root or non-root"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1365 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1365
msgid ""
"Nothing in virt-v2v inherently needs root access, and it will run just fine "
"as a non-root user.  However, certain external features may require either "
"root or a special user:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1371 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1371
msgid "Mounting the Export Storage Domain"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1373 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1373
msgid ""
"When using I<-o rhv -os server:/esd> virt-v2v has to have sufficient "
"privileges to NFS mount the Export Storage Domain from C<server>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1376 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1376
msgid ""
"You can avoid needing root here by mounting it yourself before running virt-"
"v2v, and passing I<-os /mountpoint> instead, but first of all read the next "
"S<section ...>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1380 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1380
msgid "Writing to the Export Storage Domain as 36:36"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1382 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1382
msgid ""
"RHV-M cannot read files and directories from the Export Storage Domain "
"unless they have UID:GID 36:36.  You will see VM import problems if the UID:"
"GID is not correct."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1386 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1386
msgid ""
"When you run virt-v2v I<-o rhv> as root, virt-v2v attempts to create files "
"and directories with the correct ownership.  If you run virt-v2v as non-"
"root, it will probably still work, but you will need to manually change "
"ownership after virt-v2v has finished."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1391 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1391
msgid "Writing to libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1393 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1393
msgid ""
"When using I<-o libvirt>, you may need to run virt-v2v as root so that it "
"can write to the libvirt system instance (ie. C<qemu:///system>)  and to the "
"default location for disk images (usually F</var/lib/libvirt/images>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1398 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1398
msgid ""
"You can avoid this by setting up libvirt connection authentication, see "
"L<http://libvirt.org/auth.html>.  Alternatively, use I<-oc qemu:///session>, "
"which will write to your per-user libvirt instance."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1403 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1403
msgid "Writing to Openstack"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1405 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1405
msgid ""
"Because of how Cinder volumes are presented as F</dev> block devices, using "
"I<-o openstack> normally requires that virt-v2v is run as root."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1408 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1408
msgid "Writing to Glance"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1410 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1410
msgid ""
"This does I<not> need root (in fact it probably won’t work), but may require "
"either a special user and/or for you to source a script that sets "
"authentication environment variables.  Consult the Glance documentation."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1417 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1417
msgid "Minimal XML for -i libvirtxml option"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1419 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1419
msgid ""
"When using the I<-i libvirtxml> option, you have to supply some libvirt "
"XML.  Writing this from scratch is hard, so the template below is helpful."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1423 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1423
msgid ""
"B<Note this should only be used for testing and/or where you know what "
"you're doing!> If you have libvirt metadata for the guest, always use that "
"instead."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1427 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1427
#, no-wrap
msgid ""
" <domain type='kvm'>\n"
"   <name> NAME </name>\n"
"   <memory>1048576</memory>\n"
"   <vcpu>2</vcpu>\n"
"   <os>\n"
"     <type>hvm</type>\n"
"     <boot dev='hd'/>\n"
"   </os>\n"
"   <features>\n"
"     <acpi/>\n"
"     <apic/>\n"
"     <pae/>\n"
"   </features>\n"
"   <devices>\n"
"     <disk type='file' device='disk'>\n"
"       <driver name='qemu' type='raw'/>\n"
"       <source file='/path/to/disk/image'/>\n"
"       <target dev='hda' bus='ide'/>\n"
"     </disk>\n"
"     <interface type='network'>\n"
"       <mac address='52:54:00:01:02:03'/>\n"
"       <source network='default'/>\n"
"       <model type='rtl8139'/>\n"
"     </interface>\n"
"   </devices>\n"
" </domain>\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1454 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1454
msgid "In-place conversion"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1456 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1456
msgid ""
"It is also possible to use virt-v2v in scenarios where a foreign VM has "
"already been imported into a KVM-based hypervisor, but still needs "
"adjustments in the guest to make it run in the new virtual hardware."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1460 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1460
msgid ""
"In that case it is assumed that a third-party tool has created the target VM "
"in the supported KVM-based hypervisor based on the source VM configuration "
"and contents, but using virtual devices more appropriate for KVM (e.g. "
"virtio storage and network, etc.)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1465 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1465
msgid ""
"Then, to make the guest OS boot and run in the changed environment, one can "
"use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1468 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1468
#, no-wrap
msgid ""
" virt-v2v -ic qemu:///system converted_vm --in-place\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1470 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1470
msgid ""
"Virt-v2v will analyze the configuration of C<converted_vm> in the C<qemu:///"
"system> libvirt instance, and apply various fixups to the guest OS "
"configuration to make it match the VM configuration.  This may include "
"installing virtio drivers, configuring the bootloader, the mountpoints, the "
"network interfaces, and so on."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1476 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1476
msgid ""
"Should an error occur during the operation, virt-v2v exits with an error "
"code leaving the VM in an undefined state."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1479 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1479
msgid "Machine readable output"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1481 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1481
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-v2v from other programs, GUIs "
"etc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1485 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1485
msgid "There are two ways to use this option."
msgstr "このオプションを使用するには 2 通りの方法があります。"

#. type: textblock
#: ../docs/virt-v2v.pod:1487 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1487
msgid ""
"Firstly use the option on its own to query the capabilities of the virt-v2v "
"binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1490 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1490
#, no-wrap
msgid ""
" $ virt-v2v --machine-readable\n"
" virt-v2v\n"
" libguestfs-rewrite\n"
" colours-option\n"
" vdsm-compat-option\n"
" input:disk\n"
" [...]\n"
" output:local\n"
" [...]\n"
" convert:linux\n"
" convert:windows\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1502 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1502
msgid ""
"A list of features is printed, one per line, and the program exits with "
"status 0."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1505 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1505
msgid ""
"The C<input:> and C<output:> features refer to I<-i> and I<-o> (input and "
"output mode) options supported by this binary.  The C<convert:> features "
"refer to guest types that this binary knows how to convert."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1509 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1509
msgid ""
"Secondly use the option in conjunction with other options to make the "
"regular program output more machine friendly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1512 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1512
msgid "At the moment this means:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1518 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1518
msgid ""
"Progress bar messages can be parsed from stdout by looking for this regular "
"expression:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1521 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1521
#, no-wrap
msgid ""
" ^[0-9]+/[0-9]+$\n"
"\n"
msgstr ""
" ^[0-9]+/[0-9]+$\n"
"\n"

#. type: textblock
#: ../docs/virt-v2v.pod:1525 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1525
msgid ""
"The calling program should treat messages sent to stdout (except for "
"progress bar messages) as status messages.  They can be logged and/or "
"displayed to the user."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1531 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1531
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-v2v exits with a non-zero status code if there was a fatal "
"error."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1537 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1537
msgid ""
"Virt-v2v E<le> 0.9.1 did not support the I<--machine-readable> option at "
"all.  The option was added when virt-v2v was rewritten in 2014."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1540 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1540
msgid ""
"It is possible to specify a format string for controlling the output; see "
"L<guestfs(3)/ADVANCED MACHINE READABLE OUTPUT>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v.pod:1543 ../test-harness/virt-v2v-test-harness.pod:245
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1543
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:245
msgid "FILES"
msgstr "ファイル"

#. type: =item
#: ../docs/virt-v2v.pod:1547 ../docs/virt-v2v.pod:1625
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1547
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1625
msgid "F</usr/share/virtio-win>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1549 ../docs/virt-v2v.pod:1597
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1549
#: ../virt-v2v-1.43.1/docs/virt-v2v.pod:1597
msgid "(Optional)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1551 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1551
msgid ""
"If this directory is present, then virtio drivers for Windows guests will be "
"found from this directory and installed in the guest during conversion."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v.pod:1557 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1557
msgid "ENVIRONMENT VARIABLES"
msgstr "環境変数"

#. type: =item
#: ../docs/virt-v2v.pod:1561 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1561
#, fuzzy
#| msgid "LIBGUESTFS_CACHEDIR"
msgid "C<LIBGUESTFS_CACHEDIR>"
msgstr "LIBGUESTFS_CACHEDIR"

#. type: textblock
#: ../docs/virt-v2v.pod:1563 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1563
msgid ""
"Location of the temporary directory used for the potentially large temporary "
"overlay file.  If not set, F</var/tmp> is used."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1566 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1566
msgid "See the L</Disk space> section above."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1568 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1568
msgid "C<VIRT_TOOLS_DATA_DIR>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1570 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1570
msgid ""
"This can point to the directory containing data files used for Windows "
"conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1573 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1573
msgid ""
"Normally you do not need to set this.  If not set, a compiled-in default "
"will be used (something like F</usr/share/virt-tools>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1576 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1576
msgid "This directory may contain the following files:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1580 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1580
msgid "F<rhsrvany.exe>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1582 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1582
msgid "(Required when doing conversions of Windows guests)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1584 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1584
msgid ""
"This is the RHSrvAny Windows binary, used to install a \"firstboot\" script "
"in the guest during conversion of Windows guests."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1587 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1587
msgid "See also: C<https://github.com/rwmjones/rhsrvany>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1589 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1589
msgid "F<pvvxsvc.exe>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1591 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1591
msgid ""
"This is a Windows binary shipped with SUSE VMDP, used to install a "
"\"firstboot\" script in Windows guests.  It is required if you intend to use "
"the I<--firstboot> or I<--firstboot-command> options with Windows guests."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1595 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1595
msgid "F<rhev-apt.exe>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1599 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1599
msgid ""
"The RHV Application Provisioning Tool (RHEV APT).  If this file is present, "
"then RHEV APT will be installed in the Windows guest during conversion.  "
"This tool is a guest agent which ensures that the virtio drivers remain up "
"to date when the guest is running on Red Hat Virtualization (RHV)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1605 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1605
msgid ""
"This file comes from Red Hat Virtualization (RHV), and is not distributed "
"with virt-v2v."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1610 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1610
msgid "C<VIRTIO_WIN>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1612 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1612
msgid ""
"This is where virtio drivers for Windows are searched for.  It can be a "
"directory I<or> point to F<virtio-win.iso> (CD ROM image containing drivers)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1616 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1616
msgid ""
"If unset, then we look for drivers in whichever of these paths is found "
"first:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1621 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1621
msgid "F</usr/share/virtio-win/virtio-win.iso>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1623 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1623
msgid "The ISO containing virtio drivers for Windows."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1627 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1627
msgid ""
"The exploded tree of virtio drivers for Windows.  This is usually "
"incomplete, hence the ISO is preferred."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1632 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1632
msgid "See L</Enabling virtio>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1636 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1636
msgid ""
"For other environment variables, see L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr "他の環境変数は L<guestfs(3)/環境変数> を参照してください。"

#. type: =head1
#: ../docs/virt-v2v.pod:1638 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1638
msgid "OTHER TOOLS"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1642 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1642
msgid "L<virt-v2v-copy-to-local(1)>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1644 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1644
msgid ""
"There are some special cases where virt-v2v cannot directly access the "
"remote hypervisor.  In that case you have to use L<virt-v2v-copy-to-"
"local(1)> to make a local copy of the guest first, followed by running "
"C<virt-v2v -i libvirtxml> to perform the conversion."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1650 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1650
msgid "L<engine-image-uploader(8)>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1652 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1652
msgid ""
"Variously called C<engine-image-uploader>, C<ovirt-image-uploader> or "
"C<rhevm-image-uploader>, this tool allows you to copy a guest from one oVirt "
"or RHV Export Storage Domain to another.  It only permits importing a guest "
"that was previously exported from another oVirt/RHV instance."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1658 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1658
msgid "L<import-to-ovirt.pl|http://git.annexia.org/?p=import-to-ovirt.git>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1660 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1660
msgid ""
"This script can be used to import guests that already run on KVM to oVirt or "
"RHV.  For more information, see this blog posting by the author of virt-v2v:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1664 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1664
msgid ""
"L<https://rwmj.wordpress.com/2015/09/18/importing-kvm-guests-to-ovirt-or-"
"rhev/#content>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1670 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1670
msgid ""
"L<virt-p2v(1)>, L<virt-customize(1)>, L<virt-df(1)>, L<virt-filesystems(1)>, "
"L<virt-sparsify(1)>, L<virt-sysprep(1)>, L<guestfs(3)>, L<guestfish(1)>, "
"L<qemu-img(1)>, L<virt-v2v-copy-to-local(1)>, L<virt-v2v-test-harness(1)>, "
"L<engine-image-uploader(8)>, L<import-to-ovirt.pl|http://git.annexia.org/?"
"p=import-to-ovirt.git>, L<nbdkit(1)>, L<nbdkit-vddk-plugin(1)>, L<http://"
"libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1689 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1689
msgid "Matthew Booth"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1691 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1691
msgid "Cédric Bosdonnat"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1695 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1695
msgid "Shahar Havivi"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1697 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1697
msgid "Roman Kagan"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1707 ../virt-v2v-1.43.1/docs/virt-v2v.pod:1707
msgid "Tingting Zheng"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:3
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:3
msgid "virt-v2v-test-harness - Used to test virt-v2v against real test cases"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:7
#: ../test-harness/virt-v2v-test-harness.pod:165
#: ../test-harness/virt-v2v-test-harness.pod:194
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:7
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:165
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:194
#, no-wrap
msgid ""
" open V2v_test_harness\n"
" \n"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:9
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:9
#, no-wrap
msgid ""
" let test = \"rhel_45_i386_fv\"\n"
" let test_plan = {\n"
"   default_plan with\n"
"     boot_plan = Boot_to_screenshot (test ^ \"-login.ppm\")\n"
" }\n"
" \n"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:15
#: ../test-harness/virt-v2v-test-harness.pod:202
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:15
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:202
#, no-wrap
msgid ""
" let () = run ~test ~test_plan ()\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:19
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:19
msgid ""
"L<virt-v2v(1)> converts guests from a foreign hypervisor to run on KVM, "
"managed by libvirt, OpenStack, oVirt, Red Hat Virtualisation (RHV) or "
"several other targets."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:23
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:23
msgid ""
"Virt-v2v-test-harness is a small library (module name: C<V2v_test_harness>) "
"used to run virt-v2v against a set of test cases consisting of real virtual "
"machines."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:27
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:27
msgid ""
"It acts as a test harness, taking a test case, running virt-v2v on it (non-"
"destructively), then test-booting the result.  It can ensure that the test "
"case converts successfully, boots successfully, and reaches a milestone "
"(such as a particular screenshot).  It can also test that the conversion "
"created, modified or deleted the expected files from within the guest."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:34
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:34
msgid "GETTING THE TEST CASES"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:36
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:36
msgid ""
"Because the test cases are actual virtual machines, we split them into two "
"groups: test cases which are freely redistributable and those which are "
"proprietary.  The former are things like Fedora or CentOS images, which are "
"free software.  The latter are things like Windows or Red Hat Enterprise "
"Linux."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:42
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:42
msgid ""
"The freely redistributable test cases can be downloaded from: L<http://git."
"annexia.org/?p=virt-v2v-test-cases-free.git> I<B<not available yet>>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:46
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:46
msgid ""
"The proprietary test cases are available at L<http://git.annexia.org/?p=virt-"
"v2v-test-cases-nonfree.git> This I<does not> contain the proprietary images "
"themselves, which are not made available to the public for licensing reasons."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:51
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:51
msgid ""
"The test cases consist of disk images which are very large, from 250 MB "
"through to tens of gigabytes I<each>.  This means that distributing test "
"cases can be very time-consuming and expensive.  We use L<git-annex(1)> to "
"distribute the test images."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:56
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:56
msgid "REQUIREMENTS"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:58
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:58
msgid ""
"It’s recommended to use an idle machine for testing.  You will need B<a lot "
"of disk space> to run the tests, in excess of S<100 GB>.  You should also "
"ensure the test machine has plenty of RAM, at least S<16 GB>."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:63
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:63
msgid "GETTING THE TEST HARNESS"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:65
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:65
msgid "To run the test cases you must have the virt-v2v test harness."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:67
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:67
msgid "The OCaml module is C<V2v_test_harness>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:69
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:69
msgid ""
"The easiest way is to compile libguestfs from source (I<note> do not install "
"it).  The test harness will be in C<virt-v2v.git/test-harness>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:73
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:73
msgid "It is also possible to install test harness as an OCaml module."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:75
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:75
msgid "RUNNING THE TEST CASES"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:77
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:77
msgid ""
"Once you have checked out the freely redistributed test cases from the "
"repository, do:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:80
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:80
#, no-wrap
msgid ""
" ./configure [--with-test-harness=/path/to/virt-v2v/test-harness]\n"
" make\n"
" make check -k\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:84
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:84
msgid ""
"Using the I<-k> option is recommended so the test doesn't stop at the first "
"failure."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:87
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:87
msgid "PARALLEL TESTS"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:89
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:89
msgid "You can run test cases in parallel by doing:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:91
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:91
#, no-wrap
msgid ""
" make check -k -j<N>\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:93
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:93
msgid ""
"(eg. I<-j2> for running up to 2 tests in parallel).  Be careful about "
"running too many parallel tests, as it can slow down each test enough to "
"cause false failures."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:97
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:97
msgid "RUNNING TEST CASES AGAINST UPSTREAM VIRT-V2V"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:99
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:99
msgid ""
"Using C<make check> picks up whatever C<virt-v2v> binary is on your C<$PATH>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:102
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:102
msgid ""
"If you have compiled libguestfs from source and want to test that version of "
"virt-v2v, use the libguestfs C<run> script (in the top-level build directory "
"of the libguestfs sources).  eg:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:106
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:106
#, no-wrap
msgid ""
" ../libguestfs/run make check -k\n"
"\n"
msgstr ""

#. type: =head1
#: ../test-harness/virt-v2v-test-harness.pod:108
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:108
msgid "WRITING NEW TEST CASES"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:110
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:110
msgid ""
"If you are interested in writing test cases, it is suggested that you start "
"by downloading the freely redistributable test cases, or at least look at "
"them online."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:114
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:114
msgid ""
"Also you must have the virt-v2v test harness - see L</GETTING THE TEST "
"HARNESS> above."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:117
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:117
msgid "FILES IN EACH TEST CASE"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:119
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:119
msgid "Each test case consists of:"
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:123
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:123
msgid "I<test>.img.xz"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:125
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:125
msgid ""
"The disk image of the virtual machine before conversion.  Usually this "
"should be converted to raw format and xz-compressed."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:128
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:128
msgid "I<test>.ova"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:130
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:130
msgid "Alternatively, an OVA, exported from VMware, may be used."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:132
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:132
msgid "I<test>.xml"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:134
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:134
msgid ""
"The libvirt XML used as input to virt-v2v.  See the discussion of I<-i "
"libvirtxml> in L<virt-v2v(1)>."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:137
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:137
msgid "I<test>.ppm"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:139
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:139
msgid "An optional screenshot or screenshots."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:141
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:141
msgid ""
"You can supply zero or more \"known good\" screenshots which represent "
"intermediate steps where the guest is booting.  This is useful where a guest "
"sits for some time doing something, and lets the test harness know that it "
"should allow the guest to continue to boot."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:146
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:146
msgid ""
"You can supply zero or one \"final\" screenshot.  This is often a screenshot "
"of the login page which indicates that the guest booted successfully."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:150
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:150
msgid ""
"The screenshots are captured using L<virsh(1)>.  Comparison of screenshots "
"against the test images is done using the ImageMagick L<compare(1)> program."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:154
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:154
msgid "I<test>.ml"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:156
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:156
msgid "The test itself - see below."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:160
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:160
msgid "WRITING THE TEST"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:162
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:162
msgid ""
"The test file (F<*.ml>) is used to control the test harness, and minimally "
"it would look something like this:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:167
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:167
#, no-wrap
msgid ""
" let test = \"short_name\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:169
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:169
#, no-wrap
msgid ""
" let () = run ~test ()\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:171
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:171
msgid "That would instruct the test harness to:"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:177
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:177
msgid "Uncompress F<I<short_name>.img.xz>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:181
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:181
msgid "Run C<virt-v2v -i libvirtxml I<short_name>.xml [...]>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:185
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:185
msgid ""
"Boot the resulting guest and check that it writes to its disk and then the "
"disk becomes idle."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:190
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:190
msgid ""
"The above is a rather simplistic test.  A more realistic test is to ensure "
"the guest reaches a final milestone (screenshot), eg. a login page.  To do "
"that you have to supply a C<~test_plan> parameter:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:196
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:196
#, no-wrap
msgid ""
" let test = \"short_name\"\n"
" let test_plan = {\n"
"   default_plan with\n"
"     boot_plan = Boot_to_screenshot (test ^ \".ppm\")\n"
" }\n"
" \n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:204
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:204
msgid ""
"For an even better test, you can supply post-conversion and post-boot test "
"cases which examine the disk image (using libguestfs) to verify that files "
"have been created, modified or deleted as expected within the disk image.  "
"See F<V2v_test_harness.mli> for more information on how to do that."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:210
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:210
msgid "FILES GENERATED BY RUNNING THE TEST"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:212
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:212
msgid "When you run each test, the following files can be created:"
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:216
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:216
msgid "I<test>-I<yyyymmdd-hhmmss>.scrn"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:218
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:218
msgid ""
"Screenshot(s) of the guest’s graphical console.  These are helpful when "
"writing tests or debugging test failures."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:221
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:221
msgid "The screenshot format is Portable Pixmap (PPM)."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:223
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:223
msgid "I<test>.img"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:225
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:225
msgid "The uncompressed original disk image (before conversion)."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:227
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:227
msgid "I<test>-converted-sda"
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:229
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:229
msgid "I<test>-converted.xml"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:231
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:231
msgid ""
"The result of conversion, ie. after running virt-v2v but before test-booting "
"the guest.  See the L<virt-v2v(1)> manual page description of I<-o local>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:235
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:235
msgid "The disk image format is qcow2."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:237
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:237
msgid "I<test>-booted-sda"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:239
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:239
msgid ""
"The disk image after test-booting.  This is a qcow2 file which uses the "
"I<test>-converted-sda file as a backing disk, in order to save disk space."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:249
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:249
msgid "F<$ocamllibdir/v2v_test_harness/v2v_test_harness.mli>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:251
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:251
msgid ""
"The test library interface.  Read this for detailed programming "
"documentation."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:254
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:254
msgid "C<$ocamllibdir/v2v_test_harness/META>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:256
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:256
msgid ""
"The findlib META file allowing you to use the library from L<ocamlfind(1)>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:261
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:261
msgid "NB: To find the value of C<$ocamllibdir>, run C<ocamlc -where>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:265
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:265
msgid ""
"L<virt-v2v(1)>, L<virt-p2v(1)>, L<guestfs(3)>, L<virsh(1)>, L<compare(1)>, "
"L<git-annex(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:279
#: ../virt-v2v-1.43.1/test-harness/virt-v2v-test-harness.pod:279
msgid "Copyright (C) 2014-2020 Red Hat Inc."
msgstr ""

#~ msgid "virt-alignment-scan - Check alignment of virtual machine partitions"
#~ msgstr ""
#~ "virt-alignment-scan - 仮想マシンのパーティションにおけるアライメントの確認"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan [--options]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan [--options]\n"
#~ "\n"

#~ msgid ""
#~ "When older operating systems install themselves, the partitioning tools "
#~ "place partitions at a sector misaligned with the underlying storage "
#~ "(commonly the first partition starts on sector C<63>).  Misaligned "
#~ "partitions can result in an operating system issuing more I/O than should "
#~ "be necessary."
#~ msgstr ""
#~ "古いオペレーティングシステムが自身をインストールするとき、パーティション"
#~ "ツールが基礎となるストレージと一致しないセクターにパーティションを配置しま"
#~ "す (一般的に最初のパーティションはセクター C<63> から始まります)。一致しな"
#~ "いパーティションにより、必要以上に I/O を発生させるというオペレーティング"
#~ "システムの問題を引き起こします。"

#~ msgid ""
#~ "The virt-alignment-scan tool checks the alignment of partitions in "
#~ "virtual machines and disk images and warns you if there are alignment "
#~ "problems."
#~ msgstr ""
#~ "virt-alignment-scan ツールは、仮想マシンおよびディスクイメージにあるパー"
#~ "ティションの配置を確認します。配置に問題があれば警告します。"

#~ msgid ""
#~ "Currently there is no virt tool for fixing alignment problems.  You can "
#~ "only reinstall the guest operating system.  The following NetApp document "
#~ "summarises the problem and possible solutions: L<http://media.netapp.com/"
#~ "documents/tr-3747.pdf>"
#~ msgstr ""
#~ "現在、配置の問題を修正するための仮想化ツールはありません。ゲストオペレー"
#~ "ティングシステムを再インストールすることだけができます。以下の NetApp のド"
#~ "キュメントが、問題と取り得る解決策をまとめています: L<http://media.netapp."
#~ "com/documents/tr-3747.pdf>"

#~ msgid "OUTPUT"
#~ msgstr "出力"

#~ msgid "To run this tool on a disk image directly, use the I<-a> option:"
#~ msgstr ""
#~ "このツールをディスクイメージにおいて直接実行するには、I<-a> オプションを使"
#~ "用します:"

#, no-wrap
#~ msgid ""
#~ " $ virt-alignment-scan -a winxp.img\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-alignment-scan -a winxp.img\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-alignment-scan -a fedora16.img\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2      2097152         2048K   ok\n"
#~ " /dev/sda3    526385152         2048K   ok\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-alignment-scan -a fedora16.img\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2      2097152         2048K   ok\n"
#~ " /dev/sda3    526385152         2048K   ok\n"
#~ "\n"

#~ msgid ""
#~ "To run the tool on a guest known to libvirt, use the I<-d> option and "
#~ "possibly the I<-c> option:"
#~ msgstr ""
#~ "libvirt が把握している仮想マシンにおいてツールを実行するには、I<-d> オプ"
#~ "ションおよびおそらく I<-c> オプションを使用します:"

#, no-wrap
#~ msgid ""
#~ " # virt-alignment-scan -d RHEL5\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ " /dev/sda2    106928640          512    bad (alignment < 4K)\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-alignment-scan -d RHEL5\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ " /dev/sda2    106928640          512    bad (alignment < 4K)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2    105906176         1024K   ok\n"
#~ " /dev/sdb1        65536           64K   ok\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2    105906176         1024K   ok\n"
#~ " /dev/sdb1        65536           64K   ok\n"
#~ "\n"

#~ msgid ""
#~ "Run virt-alignment-scan without any I<-a> or I<-d> options to scan all "
#~ "libvirt domains."
#~ msgstr ""
#~ "すべての libvirt 仮想マシンをスキャンするには I<-a> や I<-d> オプションを"
#~ "つけずに virt-alignment-scan を実行します。"

#, no-wrap
#~ msgid ""
#~ " # virt-alignment-scan\n"
#~ " F16x64:/dev/sda1      1048576         1024K   ok\n"
#~ " F16x64:/dev/sda2      2097152         2048K   ok\n"
#~ " F16x64:/dev/sda3    526385152         2048K   ok\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-alignment-scan\n"
#~ " F16x64:/dev/sda1      1048576         1024K   ok\n"
#~ " F16x64:/dev/sda2      2097152         2048K   ok\n"
#~ " F16x64:/dev/sda3    526385152         2048K   ok\n"
#~ "\n"

#~ msgid ""
#~ "The output consists of 4 or more whitespace-separated columns.  Only the "
#~ "first 4 columns are significant if you want to parse this from a "
#~ "program.  The columns are:"
#~ msgstr ""
#~ "出力は 4 つまたはそれより多い、空白区切りの項目から構成されます。プログラ"
#~ "ムからこれを構文解析する場合、最初の 4 列のみが重要です。各項目は次のとお"
#~ "りです:"

#~ msgid "col 1"
#~ msgstr "1 列目"

#~ msgid ""
#~ "When listing all libvirt domains (no I<-a> or I<-d> option given) this "
#~ "column is prefixed by the libvirt name or UUID (if I<--uuid> is given).  "
#~ "eg: C<WinXP:/dev/sda1>"
#~ msgstr ""
#~ "すべての libvirt 仮想マシンを一覧表示するとき (I<-a> や I<-d> オプションな"
#~ "し)、この列は libvirt 名または UUID が先頭につきます (I<--uuid> が指定され"
#~ "ていると)。例: C<WinXP:/dev/sda1>"

#~ msgid "col 2"
#~ msgstr "2 列目"

#~ msgid "the start of the partition in bytes"
#~ msgstr "パーティションの開始位置（バイト単位）"

#~ msgid "col 3"
#~ msgstr "3 列目"

#~ msgid "the alignment in bytes or Kbytes (eg. C<512> or C<4K>)"
#~ msgstr "バイトまたはキロバイト単位のアライメント（例: C<512>, C<4K>）"

#~ msgid "col 4"
#~ msgstr "4 列目"

#~ msgid ""
#~ "C<ok> if the alignment is best for performance, or C<bad> if the "
#~ "alignment can cause performance problems"
#~ msgstr ""
#~ "アライメントが最適なパフォーマンスの場合に C<ok>、アライメントがパフォーマ"
#~ "ンスの問題を引き起こす可能性がある場合に C<bad>。"

#~ msgid "cols 5+"
#~ msgstr "5 列目以降"

#~ msgid "optional free-text explanation."
#~ msgstr "オプションの自由なテキスト説明。"

#~ msgid ""
#~ "The exit code from the program changes depending on whether poorly "
#~ "aligned partitions were found.  See L</EXIT STATUS> below."
#~ msgstr ""
#~ "プログラムからの終了コードは、不適切に配置されたパーティションが見つかった"
#~ "かどうかに依存して変わります。以下の L</終了ステータス> を参照してくださ"
#~ "い。"

#~ msgid "If you just want the exit code with no output, use the I<-q> option."
#~ msgstr ""
#~ "出力なしで終了コードを欲しいならば、I<-q> オプションを使用してください。"

#~ msgid "Display brief help."
#~ msgstr "簡単なヘルプを表示します。"

#~ msgid "B<-a> file"
#~ msgstr "B<-a> file"

#~ msgid "B<--add> file"
#~ msgstr "B<--add> file"

#~ msgid "Add I<file> which should be a disk image from a virtual machine."
#~ msgstr "仮想マシンからディスクイメージの I<file> を追加します。"

#~ msgid ""
#~ "The format of the disk image is auto-detected.  To override this and "
#~ "force a particular format use the I<--format=..> option."
#~ msgstr ""
#~ "ディスクイメージの形式は自動検知されます。 これを上書きして強制的に特定の"
#~ "形式を使用する場合、 I<--format=..> オプションを使用します。"

#~ msgid "Add a remote disk.  See L<guestfish(1)/ADDING REMOTE STORAGE>."
#~ msgstr ""
#~ "リモートディスクを追加します。 L<guestfish(1)/リモートストレージの追加> 参"
#~ "照。"

#~ msgid "B<-c> URI"
#~ msgstr "B<-c> URI"

#~ msgid "B<--connect> URI"
#~ msgstr "B<--connect> URI"

#~ msgid ""
#~ "If using libvirt, connect to the given I<URI>.  If omitted, then we "
#~ "connect to the default libvirt hypervisor."
#~ msgstr ""
#~ "libvirt を使用していると、指定された I<URI> に接続します。  省略すると、デ"
#~ "フォルトの libvirt ハイパーバイザーに接続します。"

#~ msgid ""
#~ "If you specify guest block devices directly (I<-a>), then libvirt is not "
#~ "used at all."
#~ msgstr ""
#~ "ゲストのブロックデバイスを直接指定していると（(I<-a>)）、libvirt は何も使"
#~ "用されません。"

#~ msgid "B<-d> guest"
#~ msgstr "B<-d> guest"

#~ msgid "B<--domain> guest"
#~ msgstr "B<--domain> guest"

#~ msgid ""
#~ "Add all the disks from the named libvirt guest.  Domain UUIDs can be used "
#~ "instead of names."
#~ msgstr ""
#~ "名前付きの libvirt 仮想マシンからすべてのディスクを追加します。  名前の代"
#~ "わりに仮想マシンの UUID を使用できます。"

#~ msgid "B<--format=raw|qcow2|..>"
#~ msgstr "B<--format=raw|qcow2|..>"

#~ msgid "B<--format>"
#~ msgstr "B<--format>"

#~ msgid ""
#~ "The default for the I<-a> option is to auto-detect the format of the disk "
#~ "image.  Using this forces the disk format for I<-a> options which follow "
#~ "on the command line.  Using I<--format> with no argument switches back to "
#~ "auto-detection for subsequent I<-a> options."
#~ msgstr ""
#~ "I<-a> オプションは標準状態でディスクイメージの形式を自動検知します。 これ"
#~ "を使用することにより、コマンドラインで後続の I<-a> オプションのディスク形"
#~ "式を強制的に指定できます。 引数なしで I<--format> を使用することにより、 "
#~ "後続の I<-a> オプションに対して自動検知に戻せます。"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#~ msgid ""
#~ "If you have untrusted raw-format guest disk images, you should use this "
#~ "option to specify the disk format.  This avoids a possible security "
#~ "problem with malicious guests (CVE-2010-3851)."
#~ msgstr ""
#~ "仮想マシンのディスクイメージが信頼できない raw 形式である場合、 ディスク形"
#~ "式を指定するためにこのオプションを使用すべきです。 これにより、悪意のある"
#~ "仮想マシンにより起こり得る セキュリティ問題を回避できます "
#~ "(CVE-2010-3851)。"

#~ msgid "B<-P> nr_threads"
#~ msgstr "B<-P> nr_threads"

#~ msgid "B<--uuid>"
#~ msgstr "B<--uuid>"

#~ msgid ""
#~ "Print UUIDs instead of names.  This is useful for following a guest even "
#~ "when the guest is migrated or renamed, or when two guests happen to have "
#~ "the same name."
#~ msgstr ""
#~ "名前の代わりに UUID を表示します。仮想マシンがマイグレーションまたは名前変"
#~ "更されたとき、または偶然 2 つの仮想マシンが同じ名前を持つとき、仮想マシン"
#~ "に使用させるために有用です。"

#~ msgid ""
#~ "This option only applies when listing all libvirt domains (when no I<-a> "
#~ "or I<-d> options are specified)."
#~ msgstr ""
#~ "すべての libvirt 仮想マシンを一覧表示するとき (I<-a> や I<-d> オプションが"
#~ "指定されていないとき)、 このオプションのみが適用されます。"

#~ msgid "RECOMMENDED ALIGNMENT"
#~ msgstr "推奨されるアライメント"

#~ msgid ""
#~ "Operating systems older than Windows 2008 and Linux before ca.2010 place "
#~ "the first sector of the first partition at sector 63, with a 512 byte "
#~ "sector size.  This happens because of a historical accident.  Drives have "
#~ "to report a cylinder / head / sector (CHS) geometry to the BIOS.  The "
#~ "geometry is completely meaningless on modern drives, but it happens that "
#~ "the geometry reported always has 63 sectors per track.  The operating "
#~ "system therefore places the first partition at the start of the second "
#~ "\"track\", at sector 63."
#~ msgstr ""
#~ "Windows 2008 および ca.2010 以前のLinux よりも古いオペレーティングシステム"
#~ "は、512 バイトのセクター容量でセクター 63 に、第 1 パーティションの第1セク"
#~ "ターを配置しなければいけません。これは古くからの障害によるものです。ドライ"
#~ "ブは BIOS にシリンダー/ヘッド/セクター (CHS) の配置を通知する必要がありま"
#~ "す。配置は最近のドライブにおいては意味がありませんが、必ずトラックあたり "
#~ "63 セクターを持つことをときどき通知します。そのため、オペレーティングシス"
#~ "テムはセクター 63 にある、第 2 \"トラック\" の先頭にある第 1 パーティショ"
#~ "ンに置かれます。"

#~ msgid ""
#~ "When the guest OS is virtualized, the host operating system and "
#~ "hypervisor may prefer accesses aligned to one of:"
#~ msgstr ""
#~ "ゲスト OS が仮想化されているとき、ホストオペレーティングシステムおよびハイ"
#~ "パーバイザーは以下のどれかにアライメントされていることが好ましいでしょう。"

#~ msgid "* 512 bytes"
#~ msgstr "* 512 バイト"

#~ msgid ""
#~ "if the host OS uses local storage directly on hard drive partitions, and "
#~ "the hard drive has 512 byte physical sectors."
#~ msgstr ""
#~ "ホスト OS がハードディスクのパーティションに直接ローカルストレージを使用し"
#~ "て、ハードディスクが 512 バイトの物理セクターを持っている場合。"

#~ msgid "* 4 Kbytes"
#~ msgstr "* 4 K バイト"

#~ msgid ""
#~ "for local storage on new hard drives with 4Kbyte physical sectors; for "
#~ "file-backed storage on filesystems with 4Kbyte block size; or for some "
#~ "types of network-attached storage."
#~ msgstr ""
#~ "4K バイトの物理セクターを持つ新規ハードディスクにおけるローカルストレージ"
#~ "向け。 4K バイトのブロック容量を持つファイルシステムにおけるファイル形式の"
#~ "ストレージ向け。もしくは、何種類かのネットワークストレージ（NAS）向け。"

#~ msgid "* 64 Kbytes"
#~ msgstr "* 64 K バイト"

#~ msgid ""
#~ "for high-end network-attached storage.  This is the optimal block size "
#~ "for some NetApp hardware."
#~ msgstr ""
#~ "ハイエンドの NAS 向け。いくつかの NetApp ハードウェアに最適なブロックサイ"
#~ "ズです。"

#~ msgid "* 1 Mbyte"
#~ msgstr "* 1 M バイト"

#~ msgid "see L</1 MB PARTITION ALIGNMENT> below."
#~ msgstr "以下の L</1 MB パーティションアライメント> 参照。"

#~ msgid ""
#~ "Partitions which are not aligned correctly to the underlying storage "
#~ "cause extra I/O.  For example:"
#~ msgstr ""
#~ "基礎となるストレージに正しくアライメントされていないパーティションは余計"
#~ "な I/O を引き起こします。たとえば:"

#~ msgid ""
#~ "In this example, each time a 4K guest block is read, two blocks on the "
#~ "host must be accessed (so twice as much I/O is done).  When a 4K guest "
#~ "block is written, two host blocks must first be read, the old and new "
#~ "data combined, and the two blocks written back (4x I/O)."
#~ msgstr ""
#~ "この例では、4K ブロックが読み込まれるたびに、ホストにある 2 つのブロックに"
#~ "アクセスする必要があります（そのため I/O が 2 倍になります）。仮想マシン"
#~ "の 4K ブロックが書き込まれるとき、まず 2 つのホストブロックを読み込む必要"
#~ "があり、古いデータと新しいデータが結合され、2 つのブロックが書き込まれます"
#~ "（4 倍の I/O）。"

#~ msgid "LINUX HOST BLOCK AND I/O SIZE"
#~ msgstr "Linux ホストブロック"

#~ msgid ""
#~ "New versions of the Linux kernel expose the physical and logical block "
#~ "size, and minimum and recommended I/O size."
#~ msgstr ""
#~ "新しいバージョンの Linux カーネルは、物理ブロック容量、論理ブロック容量お"
#~ "よび最小かつ推奨の I/O サイズを明らかにします。"

#~ msgid "For a typical consumer hard drive with 512 byte sectors:"
#~ msgstr "一般的な 512 バイトセクターのハードディスク向け:"

#, no-wrap
#~ msgid ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"
#~ msgstr ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"

#~ msgid "For a new consumer hard drive with 4Kbyte sectors:"
#~ msgstr "新しい 4K バイトセクターのハードディスク向け:"

#, no-wrap
#~ msgid ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"
#~ msgstr ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"

#~ msgid "For a NetApp LUN:"
#~ msgstr "NetApp LUN 向け:"

#, no-wrap
#~ msgid ""
#~ " $ cat /sys/block/sdc/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sdc/queue/optimal_io_size\n"
#~ " 65536\n"
#~ "\n"
#~ msgstr ""
#~ " $ cat /sys/block/sdc/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sdc/queue/optimal_io_size\n"
#~ " 65536\n"
#~ "\n"

#~ msgid ""
#~ "The NetApp allows 512 byte accesses (but they will be very inefficient), "
#~ "prefers a minimum 4K I/O size, but the optimal I/O size is 64K."
#~ msgstr ""
#~ "NetApp は、最小の 4K I/O サイズより好ましい 512 バイトアクセスが可能です"
#~ "（しかし、非常に効率が悪いです）、しかし最適な I/O サイズは 64K です。"

#~ msgid ""
#~ "For detailed information about what these numbers mean, see L<http://docs."
#~ "redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/6/html/"
#~ "Storage_Administration_Guide/newstorage-iolimits.html>"
#~ msgstr ""
#~ "これらの数字の意味に関する詳細は L<http://docs.redhat.com/docs/en-US/"
#~ "Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/newstorage-"
#~ "iolimits.html> を参照してください。"

#~ msgid ""
#~ "[Thanks to Matt Booth for providing 4K drive data.  Thanks to Mike "
#~ "Snitzer for providing NetApp data and additional information.]"
#~ msgstr ""
#~ "[4K ドライブデータを提供してくれた Matt Booth に感謝します。NetApp のデー"
#~ "タと追加情報を提供してくれた Mike Snitzer に感謝します。]"

#~ msgid "1 MB PARTITION ALIGNMENT"
#~ msgstr "1 MB パーティションアライメント"

#~ msgid ""
#~ "Microsoft picked 1 MB as the default alignment for all partitions "
#~ "starting with Windows 2008 Server, and Linux has followed this."
#~ msgstr ""
#~ "Microsoft は Windows Server 2008 以降、すべてのパーティションに対してデ"
#~ "フォルトのアライメントとして 1 MB を選択しました。 Linux はこれに従ってき"
#~ "ました。"

#~ msgid ""
#~ "Assuming 512 byte sectors in the guest, you will now see the first "
#~ "partition starting at sector 2048, and subsequent partitions (if any)  "
#~ "will start at a multiple of 2048 sectors."
#~ msgstr ""
#~ "仮想マシンにおいて 512 バイトのセクターと仮定すると、セクター 2048 に開始"
#~ "されている最初のパーティションを参照してください。また、（もしあれば）後続"
#~ "のパーティションは 2048 セクターの倍数から始まります。"

#~ msgid ""
#~ "1 MB alignment is compatible with all current alignment requirements (4K, "
#~ "64K) and provides room for future growth in physical block sizes."
#~ msgstr ""
#~ "1 MB アライメントはすべての現行アライメント要求 (4K, 64K) と互換性がありま"
#~ "す。また、物理ブロック容量における将来的な拡張の余地を残します。"

#~ msgid "SETTING ALIGNMENT"
#~ msgstr "アライメントの設定法"

#~ msgid ""
#~ "For older versions of Windows, the following NetApp document contains "
#~ "useful information: L<http://media.netapp.com/documents/tr-3747.pdf>"
#~ msgstr ""
#~ "古いバージョンの Windows は、次の NetApp ドキュメントに有用な情報がありま"
#~ "す: L<http://media.netapp.com/documents/tr-3747.pdf>"

#~ msgid "EXIT STATUS"
#~ msgstr "終了ステータス"

#~ msgid "This program returns:"
#~ msgstr "このプログラムは以下を返します:"

#~ msgid "0"
#~ msgstr "0"

#~ msgid ""
#~ "successful exit, all partitions are aligned E<ge> 64K for best performance"
#~ msgstr ""
#~ "正常終了、すべてのパーティションが最高のパフォーマンスのために E<ge> 64K "
#~ "に配置されています"

#~ msgid "an error scanning the disk image or guest"
#~ msgstr "ディスクイメージまたは仮想マシンのスキャン中にエラーが発生しました"

#~ msgid ""
#~ "successful exit, some partitions have alignment E<lt> 64K which can "
#~ "result in poor performance on high end network storage"
#~ msgstr ""
#~ "正常終了、いくつかのパーティションがハイエンドのネットワークストレージにお"
#~ "いてパフォーマンスの悪い E<lt> 64K のアライメントを持ちます"

#~ msgid "3"
#~ msgstr "3"

#~ msgid ""
#~ "successful exit, some partitions have alignment E<lt> 4K which can result "
#~ "in poor performance on most hypervisors"
#~ msgstr ""
#~ "正常終了、いくつかのパーティションが多くのハイパーバイザーにおいてパフォー"
#~ "マンスの悪い E<lt> 4K のアライメントを持ちます"

#~ msgid ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-"
#~ "rescue(1)>, L<virt-resize(1)>, L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-"
#~ "rescue(1)>, L<virt-resize(1)>, L<http://libguestfs.org/>."

#~ msgid "Copyright (C) 2011 Red Hat Inc."
#~ msgstr "Copyright (C) 2011 Red Hat Inc."

#~ msgid ""
#~ "libguestfs-make-fixed-appliance - Make a \"fixed appliance\" for "
#~ "libguestfs"
#~ msgstr ""
#~ "libguestfs-make-fixed-appliance - libguestfs 向け \"fixed appliance\" (固"
#~ "定アプライアンス) を作成します"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance [--options] OUTPUTDIR\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance [--options] OUTPUTDIR\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance [--options] --xz\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance [--options] --xz\n"
#~ "\n"

#~ msgid ""
#~ "libguestfs-make-fixed-appliance lets you make a pre-built binary "
#~ "appliance for libguestfs."
#~ msgstr ""
#~ "libguestfs-make-fixed-appliance により、事前に構築されたバイナリーの "
#~ "libguestfs 向けアプライアンスを作成できます。"

#~ msgid "There are two ways to use this tool."
#~ msgstr "このツールを使用する方法が二つあります。"

#~ msgid "Specify an output directory, for example:"
#~ msgstr "出力ディレクトリーを指定します、たとえば:"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
#~ "\n"

#~ msgid ""
#~ "The output directory is created if it does not exist.  Four files are "
#~ "created in this directory:"
#~ msgstr ""
#~ "出力ディレクトリーが存在しなければ、作成されます。4 つのファイルがこのディ"
#~ "レクトリーに作成されます:"

#, no-wrap
#~ msgid ""
#~ " <OUTPUTDIR>/kernel\n"
#~ " <OUTPUTDIR>/initrd\n"
#~ " <OUTPUTDIR>/root\n"
#~ " <OUTPUTDIR>/README.fixed\n"
#~ "\n"
#~ msgstr ""
#~ " <OUTPUTDIR>/kernel\n"
#~ " <OUTPUTDIR>/initrd\n"
#~ " <OUTPUTDIR>/root\n"
#~ " <OUTPUTDIR>/README.fixed\n"
#~ "\n"

#~ msgid ""
#~ "Note that C<I<OUTPUTDIR>/root> is a sparse file, so take care when "
#~ "copying it."
#~ msgstr ""
#~ "C<I<OUTPUTDIR>/root> はスパースなファイルのため、これをコピーするときに注"
#~ "意する必要があります。"

#~ msgid ""
#~ "The alternative method is to use the I<--xz> option to create a "
#~ "compressed tarball:"
#~ msgstr ""
#~ "圧縮 tar ファイルを作成する、もう一つの方法は I<--xz> オプションを使用する"
#~ "ことです:"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance --xz\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance --xz\n"
#~ "\n"

#~ msgid "This creates a tarball in the I<current> directory called:"
#~ msgstr ""
#~ "これは呼び出した I<カレント> ディレクトリーに tar ファイルを作成します:"

#, no-wrap
#~ msgid ""
#~ " appliance-<VERSION>.tar.xz\n"
#~ "\n"
#~ msgstr ""
#~ " appliance-<VERSION>.tar.xz\n"
#~ "\n"

#~ msgid ""
#~ "(where C<VERSION> is the version of libguestfs).  The tarball contains "
#~ "the four files:"
#~ msgstr ""
#~ "(ここで C<VERSION> は libguestfs のバージョンです)。  tar ファイルは 4 つ"
#~ "のファイルを含みます:"

#, no-wrap
#~ msgid ""
#~ " appliance/kernel\n"
#~ " appliance/initrd\n"
#~ " appliance/root\n"
#~ " appliance/README.fixed\n"
#~ "\n"
#~ msgstr ""
#~ " appliance/kernel\n"
#~ " appliance/initrd\n"
#~ " appliance/root\n"
#~ " appliance/README.fixed\n"
#~ "\n"

#~ msgid ""
#~ "Note that C<appliance/root> is a sparse file, so take care when copying "
#~ "it."
#~ msgstr ""
#~ "C<appliance/root> はスパースファイルであるため、コピーするときには気をつけ"
#~ "る必要があるため、注意してください。"

#~ msgid "Display short usage information and exit."
#~ msgstr "簡単な使用法を表示して、終了します。"

#~ msgid "Display the version number and exit."
#~ msgstr "バージョン番号を表示して、終了します。"

#~ msgid "B<--xz>"
#~ msgstr "B<--xz>"

#~ msgid "LICENSING"
#~ msgstr "ライセンス"

#~ msgid ""
#~ "libguestfs-make-fixed-appliance returns I<0> if the appliance was built "
#~ "without errors."
#~ msgstr ""
#~ "アプライアンスがエラーなくビルドされると、libguestfs-make-fixed-appliance "
#~ "は I<0> を返します。"

#~ msgid ""
#~ "For the full list of environment variables which may affect libguestfs, "
#~ "please see the L<guestfs(3)> manual page."
#~ msgstr ""
#~ "libguestfs に影響する環境変数の完全な一覧は L<guestfs(3)> マニュアルページ"
#~ "を参照してください。"

#~ msgid "Richard W.M. Jones (C<rjones at redhat dot com>)"
#~ msgstr "Richard W.M. Jones (C<rjones at redhat dot com>)"

#~ msgid "html"
#~ msgstr "HTML"

#~ msgid "B<-i>"
#~ msgstr "B<-i>"

#~ msgid ""
#~ "This option is used to make the output more machine friendly when being "
#~ "parsed by other programs.  See L</MACHINE READABLE OUTPUT> below."
#~ msgstr ""
#~ "このオプションは、他のプログラムにより解析されるときに、よりマシンに易しい"
#~ "出力を作成するために使用されます。以下の L</マシン可読な出力> 参照。"

#~ msgid "MACHINE READABLE OUTPUT"
#~ msgstr "マシン可読な出力"

#~ msgid ""
#~ "This program returns 0 if successful, or non-zero if there was an error."
#~ msgstr ""
#~ "このプログラムは、成功すると 0 を、エラーがあると 0 以外を返します。"

#~ msgid "B<--format> qcow2"
#~ msgstr "B<--format> qcow2"

#~ msgid "B<--format> raw"
#~ msgstr "B<--format> raw"

#~ msgid "B<--network>"
#~ msgstr "B<--network>"

#~ msgid "B<--no-sync>"
#~ msgstr "B<--no-sync>"

#~ msgid "B<--smp> N"
#~ msgstr "B<--smp> N"

#~ msgid "This is the default."
#~ msgstr "これがデフォルトです。"

#~ msgid "Notes:"
#~ msgstr "注:"

#~ msgid "ARCHITECTURE"
#~ msgstr "アーキテクチャー"

#~ msgid "SECURITY"
#~ msgstr "セキュリティ"

#~ msgid "SELINUX"
#~ msgstr "SELinux"

#~ msgid "Copyright (C) 2013 Red Hat Inc."
#~ msgstr "Copyright (C) 2013 Red Hat Inc."

#~ msgid "virt-cat - Display files in a virtual machine"
#~ msgstr "virt-cat - 仮想マシンにあるファイルの表示"

#, no-wrap
#~ msgid ""
#~ " virt-cat [--options] -d domname file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat [--options] -d domname file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"

#~ msgid "Old-style:"
#~ msgstr "古い形式:"

#, no-wrap
#~ msgid ""
#~ " virt-cat domname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat domname file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat disk.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat disk.img file\n"
#~ "\n"

#~ msgid ""
#~ "C<virt-cat> is a command line tool to display the contents of C<file> "
#~ "where C<file> exists in the named virtual machine (or disk image)."
#~ msgstr ""
#~ "C<virt-cat> は C<file> の内容を表示するためにコマンドラインツールです。こ"
#~ "こで C<file> は仮想マシン (またはディスクイメージ) の中に存在します。"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /etc/fstab\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /etc/fstab\n"
#~ "\n"

#~ msgid "Find out what packages were recently installed:"
#~ msgstr "どのパッケージが最新インストールされたかを見つけるには:"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /var/log/yum.log | tail\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /var/log/yum.log | tail\n"
#~ "\n"

#~ msgid "Find out who is logged on inside a virtual machine:"
#~ msgstr "どのユーザーが仮想マシンにログインしているかを見つけるには:"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
#~ " who /tmp/utmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
#~ " who /tmp/utmp\n"
#~ "\n"

#~ msgid "or who was logged on:"
#~ msgstr "または、だれがログオンしたかを見つけるには:"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
#~ " last -f /tmp/wtmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
#~ " last -f /tmp/wtmp\n"
#~ "\n"

#~ msgid ""
#~ "When prompting for keys and passphrases, virt-cat normally turns echoing "
#~ "off so you cannot see what you are typing.  If you are not worried about "
#~ "Tempest attacks and there is no one else in the room you can specify this "
#~ "flag to see what you are typing."
#~ msgstr ""
#~ "キーやパスフレーズを入力するとき、通常 virt-cat はエコーを無効化します。 "
#~ "そのため、入力内容を確認できません。 テンペスト攻撃の心配がなく、 部屋に誰"
#~ "も居なければ、 入力内容を確認するためにこのフラグを指定できます。"

#, no-wrap
#~ msgid ""
#~ " virt-cat --format=raw -a disk.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat --format=raw -a disk.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"

#~ msgid "Mount the named partition or logical volume on the given mountpoint."
#~ msgstr ""
#~ "指定されたマウントポイントにある、 名前付きパーティションまたは論理ボ"
#~ "リュームをマウントします。"

#~ msgid ""
#~ "The third (and rarely used) part of the mount parameter is the list of "
#~ "mount options used to mount the underlying filesystem.  If this is not "
#~ "given, then the mount options are either the empty string or C<ro> (the "
#~ "latter if the I<--ro> flag is used).  By specifying the mount options, "
#~ "you override this default choice.  Probably the only time you would use "
#~ "this is to enable ACLs and/or extended attributes if the filesystem can "
#~ "support them:"
#~ msgstr ""
#~ "マウントパラメーターの三番目の (ほとんど使用されない) 項目は、 バックエン"
#~ "ドのファイルシステムをマウントするために使用される マウントオプションの一"
#~ "覧です。 これが指定されていない場合、 マウントオプションは空文字列または "
#~ "C<ro> (I<--ro> フラグが使用されている場合) になります。"

#, no-wrap
#~ msgid ""
#~ " -m /dev/sda1:/:acl,user_xattr\n"
#~ "\n"
#~ msgstr ""
#~ " -m /dev/sda1:/:acl,user_xattr\n"
#~ "\n"

#~ msgid "Using this flag is equivalent to using the C<mount-options> command."
#~ msgstr ""
#~ "このフラグを使用することは、 C<mount-options> コマンドを使用することと同等"
#~ "です。"

#~ msgid ""
#~ "The fourth part of the parameter is the filesystem driver to use, such as "
#~ "C<ext3> or C<ntfs>. This is rarely needed, but can be useful if multiple "
#~ "drivers are valid for a filesystem (eg: C<ext2> and C<ext3>), or if "
#~ "libguestfs misidentifies a filesystem."
#~ msgstr ""
#~ "パラメーターの四番目の項目は使用するファイルシステムドライバー (C<ext3> "
#~ "や C<ntfs> など) です。 これはほとんど必要ありません。 しかし、複数のドラ"
#~ "イバーがファイルシステムに対して有効である場合 (例: C<ext2> と C<ext3>)、 "
#~ "または libguestfs がファイルシステムを誤検知している場合、 これは有用で"
#~ "す。"

#~ msgid "OLD-STYLE COMMAND LINE ARGUMENTS"
#~ msgstr "旧形式のコマンドライン引数"

#~ msgid "Previous versions of virt-cat allowed you to write either:"
#~ msgstr "以前のバージョンの virt-cat はどちらの書き込みもできます:"

#, no-wrap
#~ msgid ""
#~ " virt-cat disk.img [disk.img ...] file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat disk.img [disk.img ...] file\n"
#~ "\n"

#~ msgid "or"
#~ msgstr "または"

#, no-wrap
#~ msgid ""
#~ " virt-cat guestname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat guestname file\n"
#~ "\n"

#~ msgid "For compatibility the old style is still supported."
#~ msgstr "互換性のため古い形式がまだサポートされています。"

#~ msgid "WINDOWS PATHS"
#~ msgstr "Windows のパス"

#~ msgid "If and only if the guest is running Windows then:"
#~ msgstr "仮想マシンが Windows を実行している場合に限り:"

#~ msgid "USING GUESTFISH"
#~ msgstr "guestfish の使用法"

#~ msgid ""
#~ "L<guestfish(1)> is a more powerful, lower level tool which you can use "
#~ "when C<virt-cat> doesn't work."
#~ msgstr ""
#~ "L<guestfish(1)> は C<virt-cat> がうまく機能しないときに使用できる、より強"
#~ "力な、より低レベルなツールです。"

#~ msgid "Using C<virt-cat> is approximately equivalent to doing:"
#~ msgstr "C<virt-cat> を使用することは、次のこととほぼ同等です:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -i -d domname download file -\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -i -d domname download file -\n"
#~ "\n"

#~ msgid ""
#~ "where C<domname> is the name of the libvirt guest, and C<file> is the "
#~ "full path to the file.  Note the final C<-> (meaning \"output to stdout"
#~ "\")."
#~ msgstr ""
#~ "ここで C<domname> は libvirt 仮想マシンの名前です。また、C<file> はファイ"
#~ "ルの完全パスです。最後の C<-> (\"標準出力に出力\" を意味します) に注意して"
#~ "ください。"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -m /dev/sda1 download file -\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -m /dev/sda1 download file -\n"
#~ "\n"

#~ msgid "Copyright (C) 2010-2012 Red Hat Inc."
#~ msgstr "Copyright (C) 2010-2012 Red Hat Inc."

#~ msgid ""
#~ "virt-filesystems - List filesystems, partitions, block devices, LVM in a "
#~ "virtual machine or disk image"
#~ msgstr ""
#~ "virt-filesystems - 仮想マシンまたはディスクイメージにあるファイルシステ"
#~ "ム、パーティション、ブロックデバイスおよび LVM の一覧表示"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " for fs in $(virt-filesystems -a disk.img); do\n"
#~ "   # ...\n"
#~ " done\n"
#~ "\n"
#~ msgstr ""
#~ " for fs in $(virt-filesystems -a disk.img); do\n"
#~ "   # ...\n"
#~ " done\n"
#~ "\n"

#~ msgid ""
#~ "Another use is to list partitions before using another tool to modify "
#~ "those partitions (such as L<virt-resize(1)>).  If you are curious about "
#~ "what an unknown disk image contains, use this tool along with L<virt-"
#~ "inspector(1)>."
#~ msgstr ""
#~ "他の使用方法は、これらのパーティションを変更するために (L<virt-resize(1)> "
#~ "のような) 他のツールを使用する前に、パーティションを一覧表示することです。"
#~ "未知のディスクイメージが含んでいるものについてわからなければ、L<virt-"
#~ "inspector(1)> とともにこのツールを使用します。"

#~ msgid ""
#~ "Various command line options control what this program displays.  You "
#~ "need to give either I<-a> or I<-d> options to specify the disk image or "
#~ "libvirt guest respectively.  If you just specify that then the program "
#~ "shows filesystems found, one per line, like this:"
#~ msgstr ""
#~ "さまざまなコマンドラインオプションがこのプログラムが表示するものを制御しま"
#~ "す。それぞれディスクイメージまたは libvirt 仮想マシンを指定するには I<-a> "
#~ "または I<-d> オプションを与える必要があります。単にそれを指定すると、見つ"
#~ "けたファイルシステムを 1 行ごとに 1 つずつこのように表示します:"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ "\n"

#~ msgid ""
#~ "If you add I<-l> or I<--long> then the output includes extra information:"
#~ msgstr "I<-l> または I<--long> を追加すると、追加の情報が出力に含まれます:"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img -l\n"
#~ " Name                   Type         VFS   Label  Size\n"
#~ " /dev/sda1              filesystem   ext4  boot   524288000\n"
#~ " /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img -l\n"
#~ " 名前                   種類         VFS   ラベル 容量\n"
#~ " /dev/sda1              filesystem   ext4  boot   524288000\n"
#~ " /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
#~ "\n"

#~ msgid ""
#~ "If you add I<--extra> then non-mountable (swap, unknown) filesystems are "
#~ "shown as well:"
#~ msgstr ""
#~ "I<--extra> を追加すると、マウント不可能な（swap や未知の）ファイルシステム"
#~ "も同様に表示されます:"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img --extra\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ " /dev/vg_guest/lv_swap\n"
#~ " /dev/vg_guest/lv_data\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img --extra\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ " /dev/vg_guest/lv_swap\n"
#~ " /dev/vg_guest/lv_data\n"
#~ "\n"

#~ msgid ""
#~ "If you add I<--partitions> then partitions are shown instead of "
#~ "filesystems:"
#~ msgstr ""
#~ "I<--partitions> を追加すると、ファイルシステムの代わりにパーティションが表"
#~ "示されます:"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img --partitions\n"
#~ " /dev/sda1\n"
#~ " /dev/sda2\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img --partitions\n"
#~ " /dev/sda1\n"
#~ " /dev/sda2\n"
#~ "\n"

#~ msgid ""
#~ "Similarly you can use I<--logical-volumes>, I<--volume-groups>, I<--"
#~ "physical-volumes>, I<--block-devices> to list those items."
#~ msgstr ""
#~ "同様に、それらの項目を一覧表示するには I<--logical-volumes>, I<--volume-"
#~ "groups>, I<--physical-volumes>, I<--block-devices> を使用できます。"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a win.img --all --long --uuid -h\n"
#~ " Name      Type       VFS  Label           Size Parent   UUID\n"
#~ " /dev/sda1 filesystem ntfs System Reserved 100M -        F81C92571C92112C\n"
#~ " /dev/sda2 filesystem ntfs -               20G  -        F2E8996AE8992E3B\n"
#~ " /dev/sda1 partition  -    -               100M /dev/sda -\n"
#~ " /dev/sda2 partition  -    -               20G  /dev/sda -\n"
#~ " /dev/sda  device     -    -               20G  -        -\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a win.img --all --long --uuid -h\n"
#~ " Name      Type       VFS  Label           Size Parent   UUID\n"
#~ " /dev/sda1 filesystem ntfs System Reserved 100M -        F81C92571C92112C\n"
#~ " /dev/sda2 filesystem ntfs -               20G  -        F2E8996AE8992E3B\n"
#~ " /dev/sda1 partition  -    -               100M /dev/sda -\n"
#~ " /dev/sda2 partition  -    -               20G  /dev/sda -\n"
#~ " /dev/sda  device     -    -               20G  -        -\n"
#~ "\n"

#~ msgid ""
#~ "For machine-readable output, use I<--csv> to get Comma-Separated Values."
#~ msgstr ""
#~ "マシン読み込み可能な出力のために、カンマ区切り値を取得するために I<--csv> "
#~ "を使用します。"

#~ msgid "B<--all>"
#~ msgstr "B<--all>"

#~ msgid ""
#~ "Display everything.  This is currently the same as specifying these "
#~ "options: I<--filesystems>, I<--extra>, I<--partitions>, I<--block-"
#~ "devices>, I<--logical-volumes>, I<--volume-groups>, I<--physical-"
#~ "volumes>.  (More may be added to this list in future)."
#~ msgstr ""
#~ "すべてを表示します。これは現在これらのオプションを指定するのと同じです: "
#~ "I<--filesystems>, I<--extra>, I<--partitions>, I<--block-devices>, I<--"
#~ "logical-volumes>, I<--volume-groups>, I<--physical-volumes>。（将来この一"
#~ "覧にさらに追加されるかもしれません。）"

#~ msgid "See also I<--long>."
#~ msgstr "I<--long> 参照。"

#~ msgid "B<--blkdevs>"
#~ msgstr "B<--blkdevs>"

#~ msgid "B<--block-devices>"
#~ msgstr "B<--block-devices>"

#~ msgid "Display block devices."
#~ msgstr "ブロックデバイスを表示します。"

#~ msgid "B<--csv>"
#~ msgstr "B<--csv>"

#~ msgid ""
#~ "When prompting for keys and passphrases, virt-filesystems normally turns "
#~ "echoing off so you cannot see what you are typing.  If you are not "
#~ "worried about Tempest attacks and there is no one else in the room you "
#~ "can specify this flag to see what you are typing."
#~ msgstr ""
#~ "キーやパスフレーズを入力するとき、通常 virt-filesystems はエコーを無効化し"
#~ "ます。 そのため、入力内容を確認できません。 テンペスト攻撃の心配がなく、 "
#~ "部屋に誰も居なければ、 入力内容を確認するためにこのフラグを指定できます。"

#~ msgid "B<--extra>"
#~ msgstr "B<--extra>"

#~ msgid "This option implies I<--filesystems>."
#~ msgstr "このオプションは I<--filesystems> を意味します。"

#~ msgid "B<--filesystems>"
#~ msgstr "B<--filesystems>"

#~ msgid ""
#~ "Display mountable filesystems.  If no display option was selected then "
#~ "this option is implied."
#~ msgstr ""
#~ "マウント可能なファイルシステムを表示します。表示オプションが選択されていな"
#~ "ければ、このオプションが暗に指定されます。"

#~ msgid "With I<--extra>, non-mountable filesystems are shown too."
#~ msgstr ""
#~ "I<--extra> を用いると、マウントできないファイルシステムも表示されます。"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#~ msgid "B<-h>"
#~ msgstr "B<-h>"

#~ msgid "B<--human-readable>"
#~ msgstr "B<--human-readable>"

#~ msgid "In I<--long> mode, display sizes in human-readable format."
#~ msgstr "I<--long> モードでは、読みやすい形式で容量を表示します。"

#~ msgid "B<-l>"
#~ msgstr "B<-l>"

#~ msgid "B<--long>"
#~ msgstr "B<--long>"

#~ msgid "Use I<--uuid> to display UUIDs too."
#~ msgstr "UUID も表示するには I<--uuid> を使用します。"

#~ msgid "B<--lvs>"
#~ msgstr "B<--lvs>"

#~ msgid "B<--logvols>"
#~ msgstr "B<--logvols>"

#~ msgid "B<--logical-volumes>"
#~ msgstr "B<--logical-volumes>"

#~ msgid ""
#~ "Display LVM logical volumes.  In this mode, these are displayed "
#~ "irrespective of whether the LVs contain filesystems."
#~ msgstr ""
#~ "LVM 論理ボリュームを表示します。  このモードでは、論理ボリュームが含むファ"
#~ "イルシステムにかかわりなく表示します。"

#~ msgid "B<--no-title>"
#~ msgstr "B<--no-title>"

#~ msgid "B<--parts>"
#~ msgstr "B<--parts>"

#~ msgid "B<--partitions>"
#~ msgstr "B<--partitions>"

#~ msgid ""
#~ "Display partitions.  In this mode, these are displayed irrespective of "
#~ "whether the partitions contain filesystems."
#~ msgstr ""
#~ "パーティションを表示します。  このモードでは、パーティションが含むファイル"
#~ "システムにかかわりなく表示します。"

#~ msgid "B<--pvs>"
#~ msgstr "B<--pvs>"

#~ msgid "B<--physvols>"
#~ msgstr "B<--physvols>"

#~ msgid "B<--physical-volumes>"
#~ msgstr "B<--physical-volumes>"

#~ msgid "Display LVM physical volumes."
#~ msgstr "LVM 物理ボリュームを表示します。"

#~ msgid "B<--uuids>"
#~ msgstr "B<--uuids>"

#~ msgid "In I<--long> mode, display UUIDs as well."
#~ msgstr "I<--long> モードでは UUID も表示されます。"

#~ msgid "B<--vgs>"
#~ msgstr "B<--vgs>"

#~ msgid "B<--volgroups>"
#~ msgstr "B<--volgroups>"

#~ msgid "B<--volume-groups>"
#~ msgstr "B<--volume-groups>"

#~ msgid "Display LVM volume groups."
#~ msgstr "LVM ボリュームグループを表示します。"

#~ msgid "COLUMNS"
#~ msgstr "列"

#~ msgid ""
#~ "Note that columns in the output are subject to reordering and change in "
#~ "future versions of this tool."
#~ msgstr ""
#~ "出力にある列はこのツールの将来のバージョンにおいて並び替えられる場合や変更"
#~ "される場合があることに注意してください。"

#~ msgid "B<Name>"
#~ msgstr "B<名前>"

#~ msgid "The filesystem, partition, block device or LVM name."
#~ msgstr ""
#~ "ファイルシステム、パーティション、ブロックデバイスまたは LVM の名前。"

#~ msgid ""
#~ "If the I<--long> option is B<not> specified, then only the name column is "
#~ "shown in the output."
#~ msgstr ""
#~ "I<--long> オプションが指定されてB<いない>と、名前の列のみが出力に表示され"
#~ "ます。"

#~ msgid "B<Type>"
#~ msgstr "B<種類>"

#~ msgid "The object type, for example C<filesystem>, C<lv>, C<device> etc."
#~ msgstr "対象の形式。たとえば、C<filesystem>, C<lv>, C<device> など。"

#~ msgid "B<VFS>"
#~ msgstr "B<VFS>"

#~ msgid ""
#~ "If there is a filesystem, then this column displays the filesystem type "
#~ "if one could be detected, eg. C<ext4>."
#~ msgstr ""
#~ "ファイルシステムがあれば、この列は最初に検知されたファイルシステムの形式を"
#~ "表示します。例: C<ext4>。"

#~ msgid "B<Label>"
#~ msgstr "B<ラベル>"

#~ msgid ""
#~ "If the object has a label (used for identifying and mounting filesystems) "
#~ "then this column contains the label."
#~ msgstr ""
#~ "（ファイルシステムの識別とマウントのために使用される）ラベルがオブジェクト"
#~ "にあれば、この列はラベルを含みます。"

#~ msgid "B<MBR>"
#~ msgstr "B<MBR>"

#~ msgid ""
#~ "The partition type byte, displayed as a two digit hexadecimal number.  A "
#~ "comprehensive list of partition types can be found here: L<http://www.win."
#~ "tue.nl/~aeb/partitions/partition_types-1.html>"
#~ msgstr ""
#~ "パーティション形式のバイト、2 桁の 16 進数として表示されます。パーティショ"
#~ "ン形式の完全な一覧は次のところにあります: L<http://www.win.tue.nl/~aeb/"
#~ "partitions/partition_types-1.html>"

#~ msgid "This is only applicable for DOS (MBR) partitions."
#~ msgstr "これは DOS (MBR) パーティションに対してのみ適用できます。"

#~ msgid "B<Size>"
#~ msgstr "B<容量>"

#~ msgid ""
#~ "The size of the object in bytes.  If the I<--human> option is used then "
#~ "the size is displayed in a human-readable form."
#~ msgstr ""
#~ "オブジェクトのバイト単位の容量。I<--human> オプションが使用されていると、"
#~ "容量が人間可読な形式で表示されます。"

#~ msgid "B<Parent>"
#~ msgstr "B<親>"

#~ msgid "The parent column records the parent relationship between objects."
#~ msgstr "親カラムはオブジェクト間の親子関係を記録します。"

#~ msgid ""
#~ "For example, if the object is a partition, then this column contains the "
#~ "name of the containing device.  If the object is a logical volume, then "
#~ "this column is the name of the volume group."
#~ msgstr ""
#~ "たとえば、オブジェクトがパーティションならば、このカラムは含んでいるデバイ"
#~ "スの名前が含まれます。オブジェクトが論理ボリュームならば、このカラムはボ"
#~ "リュームグループの名前です。"

#~ msgid ""
#~ "If there is more than one parent, then this column is (internal to the "
#~ "column) a comma-separated list, eg. C</dev/sda,/dev/sdb>."
#~ msgstr ""
#~ "複数の親があると、この列は (内部に列を持つ) カンマ区切りの一覧になります。"
#~ "例: C</dev/sda,/dev/sdb>。"

#~ msgid "B<UUID>"
#~ msgstr "B<UUID>"

#~ msgid "The UUID is only displayed if the I<--uuid> option is given."
#~ msgstr "I<--uuid> オプションが指定されると、 UUID のみが表示されます。"

#~ msgid "NOTE ABOUT CSV FORMAT"
#~ msgstr "CSV 形式に関する注意"

#~ msgid ""
#~ "Myth: Just split fields at commas.  Reality: This does I<not> work "
#~ "reliably.  This example has two columns:"
#~ msgstr ""
#~ "神話: ただコンマで項目を区切る。 真実: これは正しく動き I<ません>。この例"
#~ "は 2 つの列があります:"

#, no-wrap
#~ msgid ""
#~ " \"foo,bar\",baz\n"
#~ "\n"
#~ msgstr ""
#~ " \"foo,bar\",baz\n"
#~ "\n"

#~ msgid ""
#~ "Myth: Read the file one line at a time.  Reality: This does I<not> work "
#~ "reliably.  This example has one row:"
#~ msgstr ""
#~ "神話: 同時にファイルの 1 行を読み込みます。 真実: これは正しく動き I<ませ"
#~ "ん>。この例は 1 つの行があります:"

#, no-wrap
#~ msgid ""
#~ " \"foo\n"
#~ " bar\",baz\n"
#~ "\n"
#~ msgstr ""
#~ " \"foo\n"
#~ " bar\",baz\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-df(1)>, L<virt-"
#~ "list-filesystems(1)>, L<virt-list-partitions(1)>, L<csvtool(1)>, L<http://"
#~ "libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-df(1)>, L<virt-"
#~ "list-filesystems(1)>, L<virt-list-partitions(1)>, L<csvtool(1)>, L<http://"
#~ "libguestfs.org/>."

#~ msgid "Find out what DHCP IP address a VM acquired:"
#~ msgstr "仮想マシンが取得している DHCP IP アドレスを発見するには:"

#~ msgid "virt-ls - List files in a virtual machine"
#~ msgstr "virt-ls - 仮想マシンのファイルの一覧表示"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] -d domname directory [directory ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] -d domname directory [directory ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] -a disk.img [-a disk.img ...] directory [directory ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] -a disk.img [-a disk.img ...] directory [directory ...]\n"
#~ "\n"

#~ msgid "Old style:"
#~ msgstr "古い形式:"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] domname directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] domname directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] disk.img [disk.img ...] directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] disk.img [disk.img ...] directory\n"
#~ "\n"

#~ msgid "Get a list of all files and directories in a virtual machine:"
#~ msgstr "仮想マシンにあるファイルおよびディレクトリーをすべて取得します:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -R -d guest /\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -R -d guest /\n"
#~ "\n"

#~ msgid "List all setuid or setgid programs in a Linux virtual machine:"
#~ msgstr ""
#~ "Linux 仮想マシンにある setuid または setgid プログラムを一覧表示します:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep '^- [42]'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep '^- [42]'\n"
#~ "\n"

#~ msgid "List all public-writable directories in a Linux virtual machine:"
#~ msgstr ""
#~ "Linux 仮想マシンにあるすべての全体書き込み可能なディレクトリーを一覧表示し"
#~ "ます:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep '^d ...7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep '^d ...7'\n"
#~ "\n"

#~ msgid "List all Unix domain sockets in a Linux virtual machine:"
#~ msgstr ""
#~ "Linux 仮想マシンにあるすべての Unix ドメインソケットを一覧表示します:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep '^s'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep '^s'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"

#~ msgid "To display files larger than 10MB in home directories:"
#~ msgstr "ホームディレクトリにある 10MB より大きなファイルを表示するには:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"

#~ msgid "Find everything modified in the last 7 days:"
#~ msgstr "7日以内に変更されたものをすべて検索します:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"

#~ msgid "Find regular files modified in the last 24 hours:"
#~ msgstr "24時間以内に変更された通常のファイルを検索します:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"

#~ msgid "OUTPUT MODES"
#~ msgstr "出力モード"

#~ msgid ""
#~ "C<virt-ls> has four output modes, controlled by different combinations of "
#~ "the I<-l> and I<-R> options."
#~ msgstr ""
#~ "C<virt-ls> は 4 つの出力モードがあります。I<-l> および I<-R> オプションの"
#~ "異なる組み合わせにより制御されます。"

#~ msgid "SIMPLE LISTING"
#~ msgstr "簡単な一覧方法"

#~ msgid "A simple listing is like the ordinary L<ls(1)> command:"
#~ msgstr "簡単な一覧方法は通常の L<ls(1)> コマンドと似ています:"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -d guest /\n"
#~ " bin\n"
#~ " boot\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -d guest /\n"
#~ " bin\n"
#~ " boot\n"
#~ " [etc.]\n"
#~ "\n"

#~ msgid "LONG LISTING"
#~ msgstr "ロング形式の一覧方法"

#~ msgid ""
#~ "With the I<-l> (I<--long>) option, the output is like the C<ls -l> "
#~ "command (more specifically, like the C<guestfs_ll> function)."
#~ msgstr ""
#~ "I<-l> (I<--long>) オプションを用いると、出力は C<ls -l> コマンドのようにな"
#~ "ります（より具体的には C<guestfs_ll> 関数と似ています）。"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -l -d guest /\n"
#~ " total 204\n"
#~ " dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
#~ " dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -l -d guest /\n"
#~ " total 204\n"
#~ " dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
#~ " dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
#~ " [etc.]\n"
#~ "\n"

#~ msgid ""
#~ "Note that while this is useful for displaying a directory, do not try "
#~ "parsing this output in another program.  Use L</RECURSIVE LONG LISTING> "
#~ "instead."
#~ msgstr ""
#~ "これはディレクトリーを表示するために有用ですが、他のプログラムにおいてこの"
#~ "出力を解析しないよう注意してください。代わりに L</再帰的なロング形式の一覧"
#~ "方法> を使用してください。"

#~ msgid "RECURSIVE LISTING"
#~ msgstr "再帰的な一覧方法"

#~ msgid ""
#~ "With the I<-R> (I<--recursive>) option, C<virt-ls> lists the names of "
#~ "files and directories recursively:"
#~ msgstr ""
#~ "I<-R> (I<--recursive>) オプションを用いると、C<virt-ls> はファイルおよび"
#~ "ディレクトリーを再帰的に一覧表示します:"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -R -d guest /tmp\n"
#~ " foo\n"
#~ " foo/bar\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -R -d guest /tmp\n"
#~ " foo\n"
#~ " foo/bar\n"
#~ " [etc.]\n"
#~ "\n"

#~ msgid ""
#~ "To generate this output, C<virt-ls> runs the C<guestfs_find0> function "
#~ "and converts C<\\0> characters to C<\\n>."
#~ msgstr ""
#~ "この出力を生成するには、C<virt-ls> が C<guestfs_find0> 関数を実行して、C<"
#~ "\\0> 文字を C<\\n> に変換します。"

#~ msgid "RECURSIVE LONG LISTING"
#~ msgstr "再帰的なロング形式の一覧方法"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -lR -d guest /bin\n"
#~ " d 0555       4096 /bin\n"
#~ " - 0755        123 /bin/alsaunmute\n"
#~ " - 0755      28328 /bin/arch\n"
#~ " l 0777          4 /bin/awk -> gawk\n"
#~ " - 0755      27216 /bin/basename\n"
#~ " - 0755     943360 /bin/bash\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -lR -d guest /bin\n"
#~ " d 0555       4096 /bin\n"
#~ " - 0755        123 /bin/alsaunmute\n"
#~ " - 0755      28328 /bin/arch\n"
#~ " l 0777          4 /bin/awk -> gawk\n"
#~ " - 0755      27216 /bin/basename\n"
#~ " - 0755     943360 /bin/bash\n"
#~ " [etc.]\n"
#~ "\n"

#~ msgid "These basic fields are always shown:"
#~ msgstr "これらの基本的な項目は常に表示されます:"

#~ msgid "type"
#~ msgstr "type"

#~ msgid ""
#~ "The file type, one of: C<-> (regular file), C<d> (directory), C<c> "
#~ "(character device), C<b> (block device), C<p> (named pipe), C<l> "
#~ "(symbolic link), C<s> (socket) or C<u> (unknown)."
#~ msgstr ""
#~ "ファイル形式。次のどれかです: C<-> (通常のファイル), C<d> (ディレクト"
#~ "リー), C<c> (キャラクターデバイス), C<b> (ブロックデバイス), C<p> (名前付"
#~ "きパイプ), C<l> (シンボリックリンク), C<s> (ソケット) or C<u> (不明)。"

#~ msgid "permissions"
#~ msgstr "パーミッション"

#~ msgid "The Unix permissions, displayed as a 4 digit octal number."
#~ msgstr "Unix パーティション。4 桁の8進数として表示されます。"

#~ msgid "size"
#~ msgstr "容量"

#~ msgid ""
#~ "The size of the file.  This is shown in bytes unless I<-h> or I<--human-"
#~ "readable> option is given, in which case this is shown as a human-"
#~ "readable number."
#~ msgstr ""
#~ "ファイルの容量。  読みやすい形式の数値として表示する I<-h> または I<--"
#~ "human-readable> オプションが指定されていなければ、バイト単位で表示されま"
#~ "す。"

#~ msgid "path"
#~ msgstr "パス"

#~ msgid "The full path of the file or directory."
#~ msgstr "ファイルまたはディレクトリの完全パス。"

#~ msgid "link"
#~ msgstr "リンク"

#~ msgid "For symbolic links only, the link target."
#~ msgstr "シンボリックリンクのみに対して、リンク先。"

#~ msgid ""
#~ "In I<-lR> mode, additional command line options enable the display of "
#~ "more fields."
#~ msgstr ""
#~ "I<-lR> モードでは、追加のコマンドラインオプションにより、さらなる項目の表"
#~ "示を有効にします。"

#~ msgid ""
#~ "With the I<--uids> flag, these additional fields are displayed before the "
#~ "path:"
#~ msgstr ""
#~ "I<--uids> フラグを用いると、これらの追加項目がパスの前に表示されます:"

#~ msgid "uid"
#~ msgstr "uid"

#~ msgid "gid"
#~ msgstr "gid"

#~ msgid ""
#~ "The UID and GID of the owner of the file (displayed numerically).  Note "
#~ "these only make sense in the context of a Unix-like guest."
#~ msgstr ""
#~ "ファイルの所有者の UID および GID (数値表記)。  これらは Unix 系の仮想マシ"
#~ "ンにおいてのみ意味があることに注意してください。"

#~ msgid "With the I<--times> flag, these additional fields are displayed:"
#~ msgstr "I<--times> フラグがあると、これらの追加項目が表示されます:"

#~ msgid "atime"
#~ msgstr "atime"

#~ msgid "The time of last access."
#~ msgstr "アクセス日時。"

#~ msgid "mtime"
#~ msgstr "mtime"

#~ msgid "The time of last modification."
#~ msgstr "最終変更日時。"

#~ msgid "ctime"
#~ msgstr "ctime"

#~ msgid "The time of last status change."
#~ msgstr "最終属性変更日時。"

#~ msgid ""
#~ "The time fields are displayed as string dates and times, unless one of "
#~ "the I<--time-t>, I<--time-relative> or I<--time-days> flags is given."
#~ msgstr ""
#~ "I<--time-t>, I<--time-relative> または I<--time-days> フラグのどれかが指定"
#~ "されていなければ、日付と時間の文字列として time 項目が表示されます。"

#~ msgid ""
#~ "With the I<--extra-stats> flag, these additional fields are displayed:"
#~ msgstr "I<--extra-stats> フラグを用いると、これらの追加項目が表示されます:"

#~ msgid "device"
#~ msgstr "device"

#~ msgid "inode"
#~ msgstr "inode"

#~ msgid "The inode number."
#~ msgstr "inode 番号。"

#~ msgid "nlink"
#~ msgstr "nlink"

#~ msgid "The number of hard links."
#~ msgstr "ハードリンク数。"

#~ msgid "rdev"
#~ msgstr "rdev"

#~ msgid ""
#~ "For block and char special files, the device (displayed as major:minor)."
#~ msgstr ""
#~ "ブロックおよびキャラクタースペシャルファイルに対する、デバイス (メジャー:"
#~ "マイナーとして表示)。"

#~ msgid "blocks"
#~ msgstr "ブロック"

#~ msgid "The number of 512 byte blocks allocated to the file."
#~ msgstr "ファイルに割り当てられた 512 バイトブロック数。"

#~ msgid "B<--checksum>"
#~ msgstr "B<--checksum>"

#~ msgid "B<--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512>"
#~ msgstr "B<--checksum=crc|md5|sha1|sha224|sha256|sha384|sha512>"

#~ msgid ""
#~ "This option only has effect in I<-lR> output mode.  See L</RECURSIVE LONG "
#~ "LISTING> above."
#~ msgstr ""
#~ "このオプションは I<-lR> 出力モードにおいてのみ効果があります。  上の L</"
#~ "RECURSIVE LONG LISTING> 参照。"

#~ msgid ""
#~ "When prompting for keys and passphrases, virt-ls normally turns echoing "
#~ "off so you cannot see what you are typing.  If you are not worried about "
#~ "Tempest attacks and there is no one else in the room you can specify this "
#~ "flag to see what you are typing."
#~ msgstr ""
#~ "キーやパスフレーズを入力するとき、通常 virt-ls はエコーを無効化します。 そ"
#~ "のため、入力内容を確認できません。 テンペスト攻撃の心配がなく、 部屋に誰も"
#~ "居なければ、 入力内容を確認するためにこのフラグを指定できます。"

#~ msgid "B<--extra-stats>"
#~ msgstr "B<--extra-stats>"

#, no-wrap
#~ msgid ""
#~ " virt-ls --format=raw -a disk.img /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls --format=raw -a disk.img /dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls --format=raw -a disk.img --format -a another.img /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls --format=raw -a disk.img --format -a another.img /dir\n"
#~ "\n"

#~ msgid "Display file sizes in human-readable format."
#~ msgstr "読みやすい形式でファイル容量を表示します。"

#~ msgid "B<-R>"
#~ msgstr "B<-R>"

#~ msgid "B<--recursive>"
#~ msgstr "B<--recursive>"

#~ msgid "B<--times>"
#~ msgstr "B<--times>"

#~ msgid "Display time fields."
#~ msgstr "時間の項目を表示します。"

#~ msgid "B<--time-days>"
#~ msgstr "B<--time-days>"

#~ msgid "B<--time-relative>"
#~ msgstr "B<--time-relative>"

#~ msgid "B<--time-t>"
#~ msgstr "B<--time-t>"

#~ msgid "B<--uids>"
#~ msgstr "B<--uids>"

#~ msgid "Display UID and GID fields."
#~ msgstr "UID と GID の項目を表示します。"

#~ msgid "Previous versions of virt-ls allowed you to write either:"
#~ msgstr "前のバージョンの virt-ls により、次のどちらも書くことができます:"

#, no-wrap
#~ msgid ""
#~ " virt-ls disk.img [disk.img ...] /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls disk.img [disk.img ...] /dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls guestname /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls guestname /dir\n"
#~ "\n"

#~ msgid "EXAMPLE"
#~ msgstr "例"

#~ msgid ""
#~ "The format of the disk image is auto-detected.  To override this and "
#~ "force a particular format use the I<--format> option."
#~ msgstr ""
#~ "ディスクイメージの形式は自動的に検出されます。強制的に特定の形式を使用する"
#~ "には I<--format> オプションを使用します。"

#~ msgid "B<-a> URI"
#~ msgstr "B<-a> URI"

#~ msgid "B<--add> URI"
#~ msgstr "B<--add> URI"

#~ msgid "B<-n>"
#~ msgstr "B<-n>"

#~ msgid "B<--dry-run>"
#~ msgstr "B<--dry-run>"

#~ msgid "B<--format> raw|qcow2|.."
#~ msgstr "B<--format> raw|qcow2|.."

#~ msgid "B<--format> auto"
#~ msgstr "B<--format> auto"

#, fuzzy
#~ msgid "For further details, see L<virt-builder(1)/SELINUX>."
#~ msgstr ""
#~ "詳細は次を参照してください: L<virt-sysprep(1)/コピー方法およびクローン方法"
#~ ">。"

#~ msgid "This program returns 0 on success, or 1 if there was an error."
#~ msgstr ""
#~ "このプログラムは、成功すると 0 を返します。または、エラーが起きると 1 を返"
#~ "します。"

#~ msgid "guestfsd - guestfs daemon"
#~ msgstr "guestfsd - guestfs デーモン"

#, no-wrap
#~ msgid ""
#~ " guestfsd [-r] [-v|--verbose]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfsd [-r] [-v|--verbose]\n"
#~ "\n"

#~ msgid ""
#~ "C<guestfsd> is the libguestfs daemon.  Normal users never need to run "
#~ "this program explicitly.  This man page discusses what C<guestfsd> does "
#~ "in both the libguestfs appliance and when using libguestfs live."
#~ msgstr ""
#~ "C<guestfsd> は libguestfs デーモンです。一般ユーザーはこのプログラムを明示"
#~ "的に実行する必要がありません。このマニュアルページは、C<guestfsd> が "
#~ "libguestfs アプライアンスにおいて、および libguestfs ライブにおいて実行す"
#~ "ることを説明しています。"

#~ msgid "LIBGUESTFS APPLIANCE"
#~ msgstr "libguestfs アプライアンス"

#~ msgid ""
#~ "For the architecture of the libguestfs appliance, see L<guestfs(3)/"
#~ "ARCHITECTURE>."
#~ msgstr ""
#~ "libguestfs アプライアンスのアーキテクチャーは L<guestfs(3)/アーキテク"
#~ "チャー> を参照してください。"

#~ msgid "B<-?>"
#~ msgstr "B<-?>"

#~ msgid "B<--listen>"
#~ msgstr "B<--listen>"

#~ msgid "B<-r>"
#~ msgstr "B<-r>"

#~ msgid "The virtio serial port which C<guestfsd> connects to."
#~ msgstr "C<guestfsd> が接続する virtio シリアルポート。"

#~ msgid "L<guestfs(3)>, L<http://libguestfs.org/>."
#~ msgstr "L<guestfs(3)>, L<http://libguestfs.org/>."

#~ msgid "virt-df - Display free space on virtual filesystems"
#~ msgstr "virt-df - 仮想ファイルシステムの使用状況の表示"

#~ msgid "All guests:"
#~ msgstr "すべての仮想マシン:"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options]\n"
#~ "\n"

#~ msgid "Single guest:"
#~ msgstr "単一の仮想マシン:"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-df -d F14x64 -h\n"
#~ " Filesystem                       Size     Used  Available  Use%\n"
#~ " F14x64:/dev/sda1                 484M      66M       393M   14%\n"
#~ " F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-df -d F14x64 -h\n"
#~ " Filesystem                       Size     Used  Available  Use%\n"
#~ " F14x64:/dev/sda1                 484M      66M       393M   14%\n"
#~ " F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-df -a test1.img\n"
#~ " Filesystem                  1K-blocks     Used  Available  Use%\n"
#~ " test1.img:/dev/sda1             99099     1551      92432    2%\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-df -a test1.img\n"
#~ " Filesystem                  1K-blocks     Used  Available  Use%\n"
#~ " test1.img:/dev/sda1             99099     1551      92432    2%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-df -a Win7x32TwoDisks-a -a Win7x32TwoDisks-b \n"
#~ " Filesystem                   1K-blocks    Used  Available  Use%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda1    102396   24712      77684   25%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda2  12478460 7403416    5075044   60%\n"
#~ " Win7x32TwoDisks-a+:/dev/sdb1    521212   55728     465484   11%\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-df -a Win7x32TwoDisks-a -a Win7x32TwoDisks-b \n"
#~ " Filesystem                   1K-blocks    Used  Available  Use%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda1    102396   24712      77684   25%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda2  12478460 7403416    5075044   60%\n"
#~ " Win7x32TwoDisks-a+:/dev/sdb1    521212   55728     465484   11%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#~ msgid "Print sizes in human-readable format."
#~ msgstr "読みやすい形式で容量を表示します。"

#~ msgid "You are not allowed to use I<-h> and I<--csv> at the same time."
#~ msgstr "I<-h> と I<--csv> を同時に使用することはできません。"

#~ msgid "B<--inodes>"
#~ msgstr "B<--inodes>"

#~ msgid "Print inodes instead of blocks."
#~ msgstr "ブロックの代わりに inode を表示します。"

#~ msgid "B<--one-per-guest>"
#~ msgstr "B<--one-per-guest>"

#~ msgid "From the host"
#~ msgstr "ホストから"

#~ msgid "Run this command:"
#~ msgstr "このコマンドを実行してください:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d GuestName -i statvfs /\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d GuestName -i statvfs /\n"
#~ "\n"

#~ msgid "From inside the guest"
#~ msgstr "仮想マシンの中から"

#, no-wrap
#~ msgid ""
#~ " python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
#~ "\n"
#~ msgstr ""
#~ " python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
#~ "\n"

#~ msgid ""
#~ "L<df(1)>, L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, "
#~ "L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<df(1)>, L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, "
#~ "L<http://libguestfs.org/>."

#~ msgid "B<-u>"
#~ msgstr "B<-u>"

#~ msgid "Enable debugging messages."
#~ msgstr "デバッグメッセージを有効にします。"

#, fuzzy
#~| msgid "Fedora E<ge> 11"
#~ msgid "augeas E<ge> 1.2.0"
#~ msgstr "Fedora E<ge> 11"

#, fuzzy
#~| msgid "Fedora E<ge> 11"
#~ msgid "nbdkit E<ge> 1.12"
#~ msgstr "Fedora E<ge> 11"

#, no-wrap
#~ msgid ""
#~ " ./localconfigure && make\n"
#~ "\n"
#~ msgstr ""
#~ " ./localconfigure && make\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # Use an alternate python binary.\n"
#~ " export PYTHON=python3\n"
#~ " # Skip this test, it is broken.\n"
#~ " export SKIP_TEST_BTRFS_FSCK=1\n"
#~ "\n"
#~ msgstr ""
#~ " # 代替の python バイナリを使用します。\n"
#~ " export PYTHON=python3\n"
#~ " # このテストを飛ばします。これは壊れています。\n"
#~ " export SKIP_TEST_BTRFS_FSCK=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
#~ "\n"

#~ msgid "guestfs-faq - libguestfs Frequently Asked Questions (FAQ)"
#~ msgstr "guestfs-faq - libguestfs のよくある質問 (FAQ)"

#~ msgid "ABOUT LIBGUESTFS"
#~ msgstr "libguestfs について"

#~ msgid "What is libguestfs?"
#~ msgstr "libguestfs とは?"

#~ msgid ""
#~ "For more information about what libguestfs can do read the introduction "
#~ "on the home page (L<http://libguestfs.org>)."
#~ msgstr ""
#~ "libguestfs が実行できることの詳細はホームページ (L<http://libguestfs."
#~ "org>) にある紹介を参照できます。"

#~ msgid "What are the virt tools?"
#~ msgstr "virt ツールとは何か?"

#~ msgid "Does libguestfs need { libvirt / KVM / Red Hat / Fedora }?"
#~ msgstr "libguestfs は { libvirt / KVM / Red Hat / Fedora } が必要ですか?"

#~ msgid "No!"
#~ msgstr "いいえ！"

#~ msgid "libvirt is not a requirement for libguestfs."
#~ msgstr "libvirt は libguestfs に必須ではありません。"

#~ msgid "The simplest method is:"
#~ msgstr "最も簡単な方法は次のとおりです:"

#, no-wrap
#~ msgid ""
#~ " guestfish --version\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --version\n"
#~ "\n"

#~ msgid "How do I report bugs?"
#~ msgstr "どのようにバグを報告しますか?"

#~ msgid "Please use the following link to enter a bug in Bugzilla:"
#~ msgstr "Bugzilla にバグを入力するには、以下のリンクを使用してください:"

#~ msgid ""
#~ "L<https://bugzilla.redhat.com/enter_bug.cgi?"
#~ "component=libguestfs&product=Virtualization+Tools>"
#~ msgstr ""
#~ "L<https://bugzilla.redhat.com/enter_bug.cgi?"
#~ "component=libguestfs&product=Virtualization+Tools>"

#~ msgid "COMMON PROBLEMS"
#~ msgstr "一般的な問題"

#~ msgid ""
#~ "For more information see L<https://bugzilla.redhat.com/show_bug.cgi?"
#~ "id=806106>."
#~ msgstr ""
#~ "詳細は L<https://bugzilla.redhat.com/show_bug.cgi?id=806106> を参照してく"
#~ "ださい。"

#, no-wrap
#~ msgid ""
#~ " libguestfs-test-tool\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-test-tool\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " sudo update-guestfs-appliance\n"
#~ "\n"
#~ msgstr ""
#~ " sudo update-guestfs-appliance\n"
#~ "\n"

#~ msgid "<!-- old anchor for the next section --> <a name=\"binaries\"/>"
#~ msgstr "<!-- 次のセクション向け古いアンカー --> <a name=\"binaries\"/>"

#~ msgid "Where can I get the latest binaries for ...?"
#~ msgstr "どこから最新のバイナリーを入手できますか ...?"

#~ msgid "Fedora E<ge> 11"
#~ msgstr "Fedora E<ge> 11"

#~ msgid "Use:"
#~ msgstr "こうします:"

#, no-wrap
#~ msgid ""
#~ " yum install '*guestf*'\n"
#~ "\n"
#~ msgstr ""
#~ " yum install '*guestf*'\n"
#~ "\n"

#~ msgid ""
#~ "For the latest builds, see: L<http://koji.fedoraproject.org/koji/"
#~ "packageinfo?packageID=8391>"
#~ msgstr ""
#~ "最新版は次を参照してください: L<http://koji.fedoraproject.org/koji/"
#~ "packageinfo?packageID=8391>"

#~ msgid "Red Hat Enterprise Linux"
#~ msgstr "Red Hat Enterprise Linux"

#~ msgid "RHEL 5"
#~ msgstr "RHEL 5"

#~ msgid "RHEL 6"
#~ msgstr "RHEL 6"

#~ msgid "RHEL 7"
#~ msgstr "RHEL 7"

#, no-wrap
#~ msgid ""
#~ " sudo chmod 0644 /boot/vmlinuz*\n"
#~ "\n"
#~ msgstr ""
#~ " sudo chmod 0644 /boot/vmlinuz*\n"
#~ "\n"

#~ msgid "Debian Squeeze (6)"
#~ msgstr "Debian Squeeze (6)"

#~ msgid "Debian Wheezy and later (7+)"
#~ msgstr "Debian Wheezy およびそれ以降 (7+)"

#~ msgid "Ubuntu"
#~ msgstr "Ubuntu"

#~ msgid ""
#~ "Canonical decided to change the permissions on the kernel so that it's "
#~ "not readable except by root.  This is completely stupid, but they won't "
#~ "change it (L<https://bugs.launchpad.net/ubuntu/+source/linux/"
#~ "+bug/759725>).  So every user should do this:"
#~ msgstr ""
#~ "Canonical はカーネルにおけるパーミッションを変更することを決定したため、こ"
#~ "れは root により読み込めません。これは完全におかしいですが、変更しようとは"
#~ "しません (L<https://bugs.launchpad.net/ubuntu/+source/linux/"
#~ "+bug/759725>)。そのため、すべてのユーザーはこうする必要があります:"

#~ msgid "Ubuntu 12.04"
#~ msgstr "Ubuntu 12.04"

#~ msgid ""
#~ "libguestfs in this version of Ubuntu works, but you need to update "
#~ "febootstrap and seabios to the latest versions."
#~ msgstr ""
#~ "このバージョンの Ubuntu にある libguestfs が動作しますが、febootstrap およ"
#~ "び seabios を最新バージョンに更新する必要があります。"

#~ msgid ""
#~ "You need febootstrap E<ge> 3.14-2 from: L<http://packages.ubuntu.com/"
#~ "precise/febootstrap>"
#~ msgstr ""
#~ "次のところにある febootstrap E<ge> 3.14-2 が必要です: L<http://packages."
#~ "ubuntu.com/precise/febootstrap>"

#~ msgid "After installing or updating febootstrap, rebuild the appliance:"
#~ msgstr ""
#~ "febootstrap のインストールまたは更新後、アプライアンスを再構築します:"

#~ msgid ""
#~ "You need seabios E<ge> 0.6.2-0ubuntu2.1 or E<ge> 0.6.2-0ubuntu3 from: "
#~ "L<http://packages.ubuntu.com/precise-updates/seabios> or L<http://"
#~ "packages.ubuntu.com/quantal/seabios>"
#~ msgstr ""
#~ "次のところにある seabios E<ge> 0.6.2-0ubuntu2.1 または E<ge> "
#~ "0.6.2-0ubuntu3 が必要です: L<http://packages.ubuntu.com/precise-updates/"
#~ "seabios> または L<http://packages.ubuntu.com/quantal/seabios>"

#~ msgid "Also you need to do (see above):"
#~ msgstr "次のことも実行する必要があります (上述、参照):"

#~ msgid "Gentoo"
#~ msgstr "Gentoo"

#~ msgid ""
#~ "Libguestfs was added to Gentoo in 2012-07 by Andreis Vinogradovs "
#~ "(libguestfs) and Maxim Koltsov (mainly hivex).  Do:"
#~ msgstr ""
#~ "libguestfs が Andreis Vinogradovs (libguestfs) および Maxim Koltsov (おも"
#~ "に hivex) により 2012-07 に Gentoo に追加されました。次のとおり実行します:"

#, no-wrap
#~ msgid ""
#~ " emerge libguestfs\n"
#~ "\n"
#~ msgstr ""
#~ " emerge libguestfs\n"
#~ "\n"

#~ msgid "SuSE"
#~ msgstr "SuSE"

#~ msgid "Libguestfs was added to SuSE in 2012 by Olaf Hering."
#~ msgstr "libguestfs が Olaf Hering により 2012 年に SuSE に追加されました。"

#~ msgid "ArchLinux"
#~ msgstr "ArchLinux"

#~ msgid "Libguestfs was added to the AUR in 2010."
#~ msgstr "libguestfs が 2010 年に AUR に追加されました。"

#~ msgid "Compile from source (next section)."
#~ msgstr "ソースからコンパイルします (次のセクション)。"

#~ msgid "Other non-Linux distro"
#~ msgstr "他の非 Linux ディストリビューション"

#~ msgid "You'll have to compile from source, and port it."
#~ msgstr "ソースからコンパイルして、取り込む必要があります。"

#~ msgid "How can I add support for sVirt?"
#~ msgstr "どのように sVirt をサポートしますか?"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-default-backend=libvirt       # libguestfs >= 1.22\n"
#~ " ./configure --with-default-attach-method=libvirt # libguestfs <= 1.20\n"
#~ " make\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-default-backend=libvirt       # libguestfs >= 1.22\n"
#~ " ./configure --with-default-attach-method=libvirt # libguestfs <= 1.20\n"
#~ " make\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /var/tmp/.guestfs-<UID>\n"
#~ "\n"
#~ msgstr ""
#~ " /var/tmp/.guestfs-<UID>\n"
#~ "\n"

#~ msgid ""
#~ "It is safe to delete this directory when you are not using libguestfs."
#~ msgstr ""
#~ "libguestfs を使用していないとき、このディレクトリーを安全に削除できます。"

#~ msgid ""
#~ "virt-sparsify seems to make the image grow to the full size of the "
#~ "virtual disk"
#~ msgstr "virt-sparsify は仮想ディスクの全容量までイメージを拡大します。"

#, no-wrap
#~ msgid ""
#~ " $ ls -lh test1.img\n"
#~ " -rw-rw-r--. 1 rjones rjones 100M Aug  8 08:08 test1.img\n"
#~ " $ du -sh test1.img\n"
#~ " 3.6M\ttest1.img\n"
#~ "\n"
#~ msgstr ""
#~ " $ ls -lh test1.img\n"
#~ " -rw-rw-r--. 1 rjones rjones 100M Aug  8 08:08 test1.img\n"
#~ " $ du -sh test1.img\n"
#~ " 3.6M\ttest1.img\n"
#~ "\n"

#~ msgid "(Compare the apparent size B<100M> vs the actual size B<3.6M>)"
#~ msgstr "(見た目の容量 B<100M> と実際の容量 B<3.6M> を比較します)"

#~ msgid ""
#~ "So to use a VFAT filesystem you must add the C<utf8> flag when mounting.  "
#~ "From guestfish, use:"
#~ msgstr ""
#~ "そのため、VFAT ファイルシステムを使用するには、マウント時に C<utf8> フラグ"
#~ "を追加する必要があります。guestfish から、次のように使用します:"

#, no-wrap
#~ msgid ""
#~ " ><fs> mount-options utf8 /dev/sda1 /\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> mount-options utf8 /dev/sda1 /\n"
#~ "\n"

#~ msgid "or on the guestfish command line:"
#~ msgstr "または guestfish コマンドラインにおいて:"

#, no-wrap
#~ msgid ""
#~ " guestfish [...] -m /dev/sda1:/:utf8\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [...] -m /dev/sda1:/:utf8\n"
#~ "\n"

#~ msgid "or from the API:"
#~ msgstr "または API から:"

#, no-wrap
#~ msgid ""
#~ " guestfs_mount_options (g, \"utf8\", \"/dev/sda1\", \"/\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_mount_options (g, \"utf8\", \"/dev/sda1\", \"/\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                  C  guestfs_ln_sf (g, target, linkname);\n"
#~ "             Python  g.ln_sf (target, linkname);\n"
#~ "              OCaml  g#ln_sf target linkname;\n"
#~ "               Perl  $g->ln_sf (target, linkname);\n"
#~ "  Shell (guestfish)  ln-sf target linkname\n"
#~ "                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
#~ "\n"
#~ msgstr ""
#~ "                  C  guestfs_ln_sf (g, target, linkname);\n"
#~ "             Python  g.ln_sf (target, linkname);\n"
#~ "              OCaml  g#ln_sf target linkname;\n"
#~ "               Perl  $g->ln_sf (target, linkname);\n"
#~ "  Shell (guestfish)  ln-sf target linkname\n"
#~ "                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
#~ "\n"

#~ msgid "DEBUGGING LIBGUESTFS"
#~ msgstr "libguestfs のデバッグ"

#~ msgid "C<LIBGUESTFS_TRACE>"
#~ msgstr "C<LIBGUESTFS_TRACE>"

#~ msgid "C<LIBGUESTFS_DEBUG>"
#~ msgstr "C<LIBGUESTFS_DEBUG>"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_TRACE=1\n"
#~ " export LIBGUESTFS_DEBUG=1\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_TRACE=1\n"
#~ " export LIBGUESTFS_DEBUG=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " setenv LIBGUESTFS_TRACE 1\n"
#~ " setenv LIBGUESTFS_DEBUG 1\n"
#~ "\n"
#~ msgstr ""
#~ " setenv LIBGUESTFS_TRACE 1\n"
#~ " setenv LIBGUESTFS_DEBUG 1\n"
#~ "\n"

#~ msgid "For further information, see: L<guestfs(3)/ENVIRONMENT VARIABLES>."
#~ msgstr "詳細は L<guestfs(3)/ENVIRONMENT VARIABLES> 参照。"

#~ msgid "For further information, see: L<guestfish(1)>."
#~ msgstr "詳細は L<guestfish(1)> を参照してください。"

#~ msgid "How do I debug when using the API?"
#~ msgstr "API を使用するとき、どのようにデバッグしますか?"

#~ msgid "Does C<--ro> make all disks read-only?"
#~ msgstr "C<--ro> はすべてのディスクを読み込み専用にしますか?"

#~ msgid ""
#~ "I<No!> The C<--ro> option only affects disks added on the command line, "
#~ "ie. using C<-a> and C<-d> options."
#~ msgstr ""
#~ "I<いいえ!> C<--ro> オプションはコマンドラインにおいて、つまり C<-a> およ"
#~ "び C<-d> オプションを使用して追加されたディスクのみに影響します。"

#~ msgid ""
#~ "A lot of people are confused by the two superficially similar tools we "
#~ "provide:"
#~ msgstr ""
#~ "多くの人々が私たちの提供している 2 つの似たツールにより混乱しています:"

#, no-wrap
#~ msgid ""
#~ " $ guestfish --ro -a guest.img\n"
#~ " ><fs> run\n"
#~ " ><fs> fsck /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " $ guestfish --ro -a guest.img\n"
#~ " ><fs> run\n"
#~ " ><fs> fsck /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-rescue --ro guest.img\n"
#~ " ><rescue> /sbin/fsck /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-rescue --ro guest.img\n"
#~ " ><rescue> /sbin/fsck /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> debug sh \"cmd arg1 arg2 ...\"\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> debug sh \"cmd arg1 arg2 ...\"\n"
#~ "\n"

#~ msgid "(or drive letters on Windows)."
#~ msgstr "(または Windows におけるドライブレター)。"

#~ msgid "L<guestfish(1)>, L<guestfs(3)>, L<http://libguestfs.org/>."
#~ msgstr "L<guestfish(1)>, L<guestfs(3)>, L<http://libguestfs.org/>."

#~ msgid "SOURCE CODE SUBDIRECTORIES"
#~ msgstr "ソースコードのサブディレクトリー"

#~ msgid "L<virt-alignment-scan(1)> command and documentation."
#~ msgstr "L<virt-alignment-scan(1)> のコマンドおよびドキュメント。"

#~ msgid "The libguestfs appliance, build scripts and so on."
#~ msgstr "libguestfs アプライアンス、スクリプトなどを構築します。"

#~ msgid "Various build scripts used by autotools."
#~ msgstr "autotools により使用されるさまざまなビルドスクリプト。"

#~ msgid "L<virt-builder(1)> command and documentation."
#~ msgstr "L<virt-builder(1)> コマンドおよびドキュメント。"

#~ msgid "Outside contributions, experimental parts."
#~ msgstr "外部の貢献、実験的な部分です。"

#~ msgid ""
#~ "The daemon that runs inside the libguestfs appliance and carries out "
#~ "actions."
#~ msgstr ""
#~ "libguestfs アプライアンスの中で実行され、アクションを実行しているデーモ"
#~ "ン。"

#~ msgid "L<virt-df(1)> command and documentation."
#~ msgstr "L<virt-df(1)> のコマンドおよびドキュメント。"

#~ msgid "L<virt-edit(1)> command and documentation."
#~ msgstr "L<virt-edit(1)> のコマンドおよびドキュメント。"

#~ msgid "C API example code."
#~ msgstr "C API のコード例。"

#~ msgid ""
#~ "L<guestfish(1)>, the command-line shell, and various shell scripts built "
#~ "on top such as L<virt-copy-in(1)>, L<virt-copy-out(1)>, L<virt-tar-"
#~ "in(1)>, L<virt-tar-out(1)>."
#~ msgstr ""
#~ "L<guestfish(1)> コマンドラインシェル、および L<virt-copy-in(1)>, L<virt-"
#~ "copy-out(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)> のようなさまざまなシェ"
#~ "ルスクリプト。"

#~ msgid "L<virt-format(1)> command and documentation."
#~ msgstr "L<virt-format(1)> のコマンドおよびドキュメント。"

#~ msgid ""
#~ "L<guestmount(1)>, FUSE (userspace filesystem) built on top of libguestfs."
#~ msgstr ""
#~ "L<guestmount(1)>, libguestfs の上に組み立てられた FUSE (ユーザー空間ファイ"
#~ "ルシステム)。"

#~ msgid ""
#~ "Gnulib is used as a portability library.  A copy of gnulib is included "
#~ "under here."
#~ msgstr ""
#~ "gnulib はポートブルなライブラリとして使用されます。gnulib のコピーがこの下"
#~ "に含まれます。"

#~ msgid "L<virt-inspector(1)>, the virtual machine image inspector."
#~ msgstr "L<virt-inspector(1)>, 仮想マシンイメージ検査ツール。"

#~ msgid "Source code to the C library."
#~ msgstr "C ライブラリーのソースコード。"

#~ msgid "Translations of simple gettext strings."
#~ msgstr "シンプルな gettext 文字列の翻訳。"

#~ msgid "L<virt-rescue(1)> command and documentation."
#~ msgstr "L<virt-rescue(1)> のコマンドおよびドキュメント。"

#~ msgid "L<virt-resize(1)> command and documentation."
#~ msgstr "L<virt-resize(1)> のコマンドおよびドキュメント。"

#~ msgid "L<virt-sparsify(1)> command and documentation."
#~ msgstr "L<virt-sparsify(1)> のコマンドおよびドキュメント。"

#~ msgid "L<virt-sysprep(1)> command and documentation."
#~ msgstr "L<virt-sysprep(1)> コマンドおよびドキュメント。"

#~ msgid "Tests."
#~ msgstr "テストします。"

#~ msgid ""
#~ "Test tool for end users to test if their qemu/kernel combination will "
#~ "work with libguestfs."
#~ msgstr ""
#~ "エンドユーザーが QEMU/カーネルの組み合わせが libguestfs で動作するかどうか"
#~ "を確認するためのテストツールです。"

#~ msgid ""
#~ "Command line tools written in Perl (L<virt-win-reg(1)> and many others)."
#~ msgstr ""
#~ "Perl で書かれたコマンドラインツール (L<virt-win-reg(1)> および他の多くのも"
#~ "の)。"

#~ msgid "Language bindings."
#~ msgstr "言語バインディング。"

#~ msgid "After making these changes, use C<make> to compile."
#~ msgstr ""
#~ "これらの変更をした後、コンパイルするために C<make> を使用してください。"

#~ msgid "The test environment has 4 block devices:"
#~ msgstr "テスト環境は 4 個のブロックデバイスを持ちます:"

#~ msgid "General block device for testing."
#~ msgstr "テスト用の一般的なブロックデバイス。"

#~ msgid "Used in a few tests where two block devices are needed."
#~ msgstr ""
#~ "2 つのブロックデバイスが必要となるいくつかのテストにおいて使用されます。"

#, no-wrap
#~ msgid ""
#~ " SKIP_TEST_<CMD>_<NUM>=1\n"
#~ "\n"
#~ msgstr ""
#~ " SKIP_TEST_<CMD>_<NUM>=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " SKIP_TEST_<CMD>=1\n"
#~ "\n"
#~ msgstr ""
#~ " SKIP_TEST_<CMD>=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " TEST_ONLY=\"vfs_type zerofree\"\n"
#~ "\n"
#~ msgstr ""
#~ " TEST_ONLY=\"vfs_type zerofree\"\n"
#~ "\n"

#~ msgid "You can use guestfish to try out new commands."
#~ msgstr "新しいコマンドを試すために guestfish を使うことができます。"

#, no-wrap
#~ msgid ""
#~ " ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
#~ " ;;; Exceptions: Makefile and ChangeLog modes.\n"
#~ " (add-hook 'find-file-hook\n"
#~ "     '(lambda () (if (and buffer-file-name\n"
#~ "                          (string-match \"/libguestfs\\\\>\"\n"
#~ "                              (buffer-file-name))\n"
#~ "                          (not (string-equal mode-name \"Change Log\"))\n"
#~ "                          (not (string-equal mode-name \"Makefile\")))\n"
#~ "                     (setq indent-tabs-mode nil))))\n"
#~ " \n"
#~ msgstr ""
#~ " ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
#~ " ;;; Exceptions: Makefile and ChangeLog modes.\n"
#~ " (add-hook 'find-file-hook\n"
#~ "     '(lambda () (if (and buffer-file-name\n"
#~ "                          (string-match \"/libguestfs\\\\>\"\n"
#~ "                              (buffer-file-name))\n"
#~ "                          (not (string-equal mode-name \"Change Log\"))\n"
#~ "                          (not (string-equal mode-name \"Makefile\")))\n"
#~ "                     (setq indent-tabs-mode nil))))\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " ;;; When editing C sources in libguestfs, use this style.\n"
#~ " (defun libguestfs-c-mode ()\n"
#~ "   \"C mode with adjusted defaults for use with libguestfs.\"\n"
#~ "   (interactive)\n"
#~ "   (c-set-style \"K&R\")\n"
#~ "   (setq c-indent-level 2)\n"
#~ "   (setq c-basic-offset 2))\n"
#~ " (add-hook 'c-mode-hook\n"
#~ "           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
#~ "                               (buffer-file-name))\n"
#~ "                           (libguestfs-c-mode))))\n"
#~ "\n"
#~ msgstr ""
#~ " ;;; When editing C sources in libguestfs, use this style.\n"
#~ " (defun libguestfs-c-mode ()\n"
#~ "   \"C mode with adjusted defaults for use with libguestfs.\"\n"
#~ "   (interactive)\n"
#~ "   (c-set-style \"K&R\")\n"
#~ "   (setq c-indent-level 2)\n"
#~ "   (setq c-basic-offset 2))\n"
#~ " (add-hook 'c-mode-hook\n"
#~ "           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
#~ "                               (buffer-file-name))\n"
#~ "                           (libguestfs-c-mode))))\n"
#~ "\n"

#~ msgid "TESTING YOUR CHANGES"
#~ msgstr "変更のテスト方法"

#~ msgid "Useful targets are:"
#~ msgstr "有用なターゲットは次のとおりです:"

#~ msgid "C<make check>"
#~ msgstr "C<make check>"

#~ msgid "Runs the regular test suite."
#~ msgstr "一般的なテスト群を実行します。"

#~ msgid "C<make check-valgrind>"
#~ msgstr "C<make check-valgrind>"

#~ msgid "Runs a subset of the test suite under valgrind."
#~ msgstr "valgrind にあるテスト群のサブセットを実行します。"

#~ msgid "C<make check-valgrind-local-guests>"
#~ msgstr "C<make check-valgrind-local-guests>"

#~ msgid ""
#~ "Runs a subset of the test suite under valgrind using locally installed "
#~ "libvirt guests (read-only)."
#~ msgstr ""
#~ "ローカルにインストールされた libvirt 仮想マシン (読み込み専用) を使用し"
#~ "て、valgrind にあるテスト群のサブセットを実行します。"

#~ msgid "C<make check-with-upstream-qemu>"
#~ msgstr "C<make check-with-upstream-qemu>"

#, no-wrap
#~ msgid ""
#~ " make check-with-upstream-qemu QEMUDIR=/usr/src/qemu\n"
#~ "\n"
#~ msgstr ""
#~ " make check-with-upstream-qemu QEMUDIR=/usr/src/qemu\n"
#~ "\n"

#~ msgid "C<make check-with-upstream-libvirt>"
#~ msgstr "C<make check-with-upstream-libvirt>"

#, no-wrap
#~ msgid ""
#~ " make check-with-upstream-libvirt LIBVIRTDIR=/usr/src/libvirt\n"
#~ "\n"
#~ msgstr ""
#~ " make check-with-upstream-libvirt LIBVIRTDIR=/usr/src/libvirt\n"
#~ "\n"

#~ msgid "C<make check-slow>"
#~ msgstr "C<make check-slow>"

#~ msgid ""
#~ "Submit patches to the mailing list: L<http://www.redhat.com/mailman/"
#~ "listinfo/libguestfs> and CC to L<rjones@redhat.com>."
#~ msgstr ""
#~ "パッチをメーリングリストに提出します: L<http://www.redhat.com/mailman/"
#~ "listinfo/libguestfs> および L<rjones@redhat.com> (Cc)。"

#~ msgid "%Q"
#~ msgstr "%Q"

#~ msgid ""
#~ "Simple shell quoted string.  Any spaces or other shell characters are "
#~ "escaped for you."
#~ msgstr ""
#~ "シンプルなシェルクオート文字列。すべての空白と他のシェル文字がエスケープさ"
#~ "れます。"

#~ msgid "%R"
#~ msgstr "%R"

#, no-wrap
#~ msgid ""
#~ " asprintf (&cmd, \"cat %R\", path);\n"
#~ "\n"
#~ msgstr ""
#~ " asprintf (&cmd, \"cat %R\", path);\n"
#~ "\n"

#~ msgid "would produce C<cat /sysroot/some\\ path\\ with\\ spaces>"
#~ msgstr "C<cat /sysroot/some\\ path\\ with\\ spaces> を生成します"

#~ msgid "INTERNATIONALIZATION (I18N) SUPPORT"
#~ msgstr "国際化 (i18n) サポート"

#~ msgid "Run:"
#~ msgstr "次を実行します:"

#~ msgid ""
#~ "Create new stable and development directories under L<http://libguestfs."
#~ "org/download>."
#~ msgstr ""
#~ "L<http://libguestfs.org/download> の下に新しい安定版および開発版のディレク"
#~ "トリーを作成します。"

#~ msgid ""
#~ "Internally, libguestfs is implemented by running an appliance (a special "
#~ "type of small virtual machine) using L<qemu(1)>.  Qemu runs as a child "
#~ "process of the main program."
#~ msgstr ""
#~ "内部的に、libguestfs は L<qemu(1)> を使用してアプライアンス（特別な形式の"
#~ "小さな仮想マシン）を実行することにより実装されます。QEMU はメインプログラ"
#~ "ムの子プロセスとして実行します。"

#~ msgid "STATE MACHINE"
#~ msgstr "状態マシン"

#~ msgid "libguestfs uses a state machine to model the child process:"
#~ msgstr "libguestfs は子プロセスをモデル化するために状態マシンを使用します:"

#, no-wrap
#~ msgid ""
#~ "                         |\n"
#~ "          guestfs_create / guestfs_create_flags\n"
#~ "                         |\n"
#~ "                         |\n"
#~ "                     ____V_____\n"
#~ "                    /          \\\n"
#~ "                    |  CONFIG  |\n"
#~ "                    \\__________/\n"
#~ "                       ^   ^  \\\n"
#~ "                       |    \\  \\ guestfs_launch\n"
#~ "                       |    _\\__V______\n"
#~ "                       |   /           \\\n"
#~ "                       |   | LAUNCHING |\n"
#~ "                       |   \\___________/\n"
#~ "                       |       /\n"
#~ "                       |  guestfs_launch\n"
#~ "                       |     /\n"
#~ "                     __|____V\n"
#~ "                    /        \\\n"
#~ "                    | READY  |\n"
#~ "                    \\________/\n"
#~ "\n"
#~ msgstr ""
#~ "                         |\n"
#~ "          guestfs_create / guestfs_create_flags\n"
#~ "                         |\n"
#~ "                         |\n"
#~ "                     ____V_____\n"
#~ "                    /          \\\n"
#~ "                    |   設定   |\n"
#~ "                    \\__________/\n"
#~ "                       ^   ^  \\\n"
#~ "                       |    \\  \\ guestfs_launch\n"
#~ "                       |    _\\__V______\n"
#~ "                       |   /           \\\n"
#~ "                       |   |  起動中   |\n"
#~ "                       |   \\___________/\n"
#~ "                       |       /\n"
#~ "                       |  guestfs_launch\n"
#~ "                       |     /\n"
#~ "                  _____|____V\n"
#~ "                 /        \\\n"
#~ "                 | 準備完了  |\n"
#~ "                 \\___________/\n"

#~ msgid "INTERNALS"
#~ msgstr "内部構造"

#~ msgid "APPLIANCE BOOT PROCESS"
#~ msgstr "アプライアンスの起動プロセス"

#~ msgid ""
#~ "This process has evolved and continues to evolve.  The description here "
#~ "corresponds only to the current version of libguestfs and is provided for "
#~ "information only."
#~ msgstr ""
#~ "このプロセスは進化してきました。そして、進化し続けます。ここの記述は現在の"
#~ "バージョンの libguestfs にのみ対応していて、参考情報としてのみ提供されま"
#~ "す。"

#~ msgid ""
#~ "In order to follow the stages involved below, enable libguestfs debugging "
#~ "(set the environment variable C<LIBGUESTFS_DEBUG=1>)."
#~ msgstr ""
#~ "以下に関係する段階に従うには libguestfs デバッグを有効にします（環境変数 "
#~ "C<LIBGUESTFS_DEBUG=1> を設定します）。"

#~ msgid "Create the appliance"
#~ msgstr "アプライアンスを作成します"

#~ msgid "Start qemu and boot the kernel"
#~ msgstr "QEMU を開始してカーネルを起動します"

#~ msgid "qemu is invoked to boot the kernel."
#~ msgstr "カーネルを起動するために QEMU が呼び出されます。"

#~ msgid "Run the initrd"
#~ msgstr "initrd を実行します"

#~ msgid ""
#~ "When the initrd has started you will see messages showing that kernel "
#~ "modules are being loaded, similar to this:"
#~ msgstr ""
#~ "initrd が起動したとき、カーネルモジュールが読み込まれたことを示すこのよう"
#~ "なメッセージが表示されます:"

#~ msgid "Find and mount the appliance device"
#~ msgstr "アプライアンスデバイスを検索およびマウントします"

#~ msgid "Initialize the appliance"
#~ msgstr "アプライアンスを初期化します"

#~ msgid "The daemon"
#~ msgstr "デーモン"

#, no-wrap
#~ msgid ""
#~ " verbose daemon enabled\n"
#~ "\n"
#~ msgstr ""
#~ " verbose daemon enabled\n"
#~ "\n"

#~ msgid "COMMUNICATION PROTOCOL"
#~ msgstr "通信プロトコル"

#, no-wrap
#~ msgid ""
#~ " total length (header + ret,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_ret (encoded as XDR)\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + ret,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_ret (encoded as XDR)\n"
#~ "\n"

#~ msgid ""
#~ "The C<guestfs_message_error> structure contains the error message as a "
#~ "string."
#~ msgstr ""
#~ "C<guestfs_message_error> の構造は、文字列としてエラーメッセージを含みま"
#~ "す。"

#, no-wrap
#~ msgid ""
#~ " total length (header + arguments,\n"
#~ "      but not including the length word itself,\n"
#~ "      and not including the chunks)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_args (encoded as XDR)\n"
#~ " sequence of chunks for FileIn param #0\n"
#~ " sequence of chunks for FileIn param #1 etc.\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + arguments,\n"
#~ "      but not including the length word itself,\n"
#~ "      and not including the chunks)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_args (encoded as XDR)\n"
#~ " sequence of chunks for FileIn param #0\n"
#~ " sequence of chunks for FileIn param #1 etc.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " length of chunk (not including length word itself)\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ "   ...\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (with data.data_len == 0)\n"
#~ "\n"
#~ msgstr ""
#~ " length of chunk (not including length word itself)\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ "   ...\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (with data.data_len == 0)\n"
#~ "\n"

#~ msgid "INITIAL MESSAGE"
#~ msgstr "初期メッセージ"

#~ msgid "FIXED APPLIANCE"
#~ msgstr "固定アプライアンス"

#, no-wrap
#~ msgid ""
#~ " time guestfish -a /dev/null run\n"
#~ "\n"
#~ msgstr ""
#~ " time guestfish -a /dev/null run\n"
#~ "\n"

#~ msgid "Explanation"
#~ msgstr "説明"

#~ msgid "Expected results"
#~ msgstr "期待される結果"

#, no-wrap
#~ msgid ""
#~ " time guestfish --ro -a disk.img -i exit\n"
#~ "\n"
#~ msgstr ""
#~ " time guestfish --ro -a disk.img -i exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " time guestfish --ro -d GuestName -i exit\n"
#~ "\n"
#~ msgstr ""
#~ " time guestfish --ro -d GuestName -i exit\n"
#~ "\n"

#~ msgid "USING A FIXED APPLIANCE"
#~ msgstr "固定アプライアンスの使用法"

#~ msgid "To build the appliance, run the command:"
#~ msgstr "アプライアンスを構築するには、以下のコマンドを実行します:"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance <directory>\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance <directory>\n"
#~ "\n"

#~ msgid ""
#~ "(For detailed information on this subject, see: L<libguestfs-make-fixed-"
#~ "appliance(1)>)."
#~ msgstr ""
#~ "(この話題の詳細は L<libguestfs-make-fixed-appliance(1)> を参照してくださ"
#~ "い)。"

#~ msgid "TROUBLESHOOTING POOR PERFORMANCE"
#~ msgstr "性能劣化のトラブルシューティング"

#~ msgid ""
#~ "Hardware virt is not usually available inside VMs, and libguestfs will "
#~ "run slowly inside another virtual machine whatever you do.  Nested "
#~ "virtualization does not work well in our experience, and is certainly no "
#~ "substitute for running libguestfs on baremetal."
#~ msgstr ""
#~ "ハードウェア仮想化は一般的に仮想マシンの中において利用可能ではありません。"
#~ "libguestfs はどんな他の仮想マシンよりも遅いです。ネスト仮想化は経験上うま"
#~ "く動作しないです。そのため、ベアメタルにおいて libguestfs を実行するために"
#~ "ほとんど適切ではありません。"

#~ msgid ""
#~ "You can use SystemTap (L<stap(1)>) to get detailed timings from "
#~ "libguestfs programs."
#~ msgstr ""
#~ "libguestfs プログラムから詳細なタイミングを取得するために SystemTap "
#~ "(L<stap(1)>) を使用できます。"

#, no-wrap
#~ msgid ""
#~ " global last;\n"
#~ " \n"
#~ msgstr ""
#~ " global last;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " function display_time () {\n"
#~ "       now = gettimeofday_us ();\n"
#~ "       delta = 0;\n"
#~ "       if (last > 0)\n"
#~ "             delta = now - last;\n"
#~ "       last = now;\n"
#~ " \n"
#~ msgstr ""
#~ " function display_time () {\n"
#~ "       now = gettimeofday_us ();\n"
#~ "       delta = 0;\n"
#~ "       if (last > 0)\n"
#~ "             delta = now - last;\n"
#~ "       last = now;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "       printf (\"%d (+%d):\", now, delta);\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ "       printf (\"%d (+%d):\", now, delta);\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " probe begin {\n"
#~ "       last = 0;\n"
#~ "       printf (\"ready\\n\");\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ " probe begin {\n"
#~ "       last = 0;\n"
#~ "       printf (\"ready\\n\");\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Display all calls to guestfs_* functions. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_[a-z]*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " /* すべての guestfs_* 関数の呼び出しを一覧表示します。 */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_[a-z]*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # stap time.stap\n"
#~ " ready\n"
#~ "\n"
#~ msgstr ""
#~ " # stap time.stap\n"
#~ " ready\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ guestfish -a /dev/null run\n"
#~ "\n"
#~ msgstr ""
#~ " $ guestfish -a /dev/null run\n"
#~ "\n"

#~ msgid ""
#~ "You can attach to the appliance BIOS/kernel using gdb.  If you know what "
#~ "you're doing, this can be a useful way to diagnose boot regressions."
#~ msgstr ""
#~ "gdb を使用してアプライアンスの BIOS/カーネルに接続できます。実行することを"
#~ "理解している場合、ブートの逆行を診断するための有用な方法になりえます。"

#, no-wrap
#~ msgid ""
#~ " #!/bin/bash -\n"
#~ " \n"
#~ msgstr ""
#~ " #!/bin/bash -\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Set this to point to the real qemu binary.\n"
#~ " qemu=/usr/bin/qemu-kvm\n"
#~ " \n"
#~ msgstr ""
#~ " # 実際の QEMU バイナリーを指し示すようこれを設定してください。\n"
#~ " qemu=/usr/bin/qemu-kvm\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " if [ \"$1\" != \"-global\" ]; then\n"
#~ "     # Scanning help output etc.\n"
#~ "     exec $qemu \"$@\"\n"
#~ " else \n"
#~ "     # Really running qemu.\n"
#~ "     exec $qemu -S -s \"$@\"\n"
#~ " fi\n"
#~ "\n"
#~ msgstr ""
#~ " if [ \"$1\" != \"-global\" ]; then\n"
#~ "     # ヘルプの出力などを解析します。\n"
#~ "     exec $qemu \"$@\"\n"
#~ " else \n"
#~ "     # Really running qemu.\n"
#~ "     exec $qemu -S -s \"$@\"\n"
#~ " fi\n"
#~ "\n"

#~ msgid ""
#~ "This should pause just after qemu launches.  In another window, attach to "
#~ "qemu using gdb:"
#~ msgstr ""
#~ "これは QEMU の起動後に単に停止しています。他のウィンドウにおいて、gdb を使"
#~ "用して QEMU に接続します:"

#, no-wrap
#~ msgid ""
#~ " $ gdb\n"
#~ " (gdb) set architecture i8086\n"
#~ " The target architecture is assumed to be i8086\n"
#~ " (gdb) target remote :1234\n"
#~ " Remote debugging using :1234\n"
#~ " 0x0000fff0 in ?? ()\n"
#~ " (gdb) cont\n"
#~ "\n"
#~ msgstr ""
#~ " $ gdb\n"
#~ " (gdb) set architecture i8086\n"
#~ " The target architecture is assumed to be i8086\n"
#~ " (gdb) target remote :1234\n"
#~ " Remote debugging using :1234\n"
#~ " 0x0000fff0 in ?? ()\n"
#~ " (gdb) cont\n"
#~ "\n"

#~ msgid "guestfs-recipes - libguestfs, guestfish and virt tools recipes"
#~ msgstr "guestfs-recipes - libguestfs, guestfish および仮想化ツールのレシピ"

#~ msgid ""
#~ "This page contains recipes for and links to things you can do using "
#~ "libguestfs, L<guestfish(1)> and the virt tools."
#~ msgstr ""
#~ "このページには libguestfs, L<guestfish(1)> および仮想化ツールを使用してで"
#~ "きることのレシピとリンクがあります。"

#~ msgid "Audit a virtual machine for setuid files"
#~ msgstr "仮想マシンの setuid ファイルを監査します"

#~ msgid "See: L<virt-ls(1)/EXAMPLES>."
#~ msgstr "関連項目: L<virt-ls(1)/例>。"

#~ msgid "Change the background image in a Windows XP VM"
#~ msgstr "Windows XP 仮想マシンの背景画像を変更します"

#~ msgid ""
#~ "The links below explain how to use L<guestfish(1)> to change the "
#~ "background image for a user of a Windows XP VM.  Unfortunately the "
#~ "technique appears to be substantially different for each version of "
#~ "Windows."
#~ msgstr ""
#~ "以下のリンクは、Windows XP 仮想マシンのユーザーの背景画像を変更するために "
#~ "L<guestfish(1)> を使用する方法について説明しています。残念ながら、このテク"
#~ "ニックは Windows のバージョンによりわずかに異なります。"

#~ msgid ""
#~ "L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002655.html> "
#~ "L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002658.html>"
#~ msgstr ""
#~ "L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002655.html> "
#~ "L<https://lists.fedoraproject.org/pipermail/virt/2011-May/002658.html>"

#~ msgid "Checksum a file or device within a disk image"
#~ msgstr "ディスクイメージの中にあるファイルまたはデバイスのチェックサム"

#~ msgid ""
#~ "To checksum a whole device, or a partition, LV etc within a disk image:"
#~ msgstr ""
#~ "デバイス全体、またはディスクイメージの中にあるパーティションや論理ボリュー"
#~ "ムなどについてチェックサムを確認するには:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : checksum-device md5 /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : checksum-device md5 /dev/sda1\n"
#~ "\n"

#~ msgid "To checksum a single file:"
#~ msgstr "単一サポートをチェックサムするには:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i checksum sha256 /etc/passwd\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i checksum sha256 /etc/passwd\n"
#~ "\n"

#~ msgid "or for a Windows guest:"
#~ msgstr "または、Windows ゲストには:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i \\\n"
#~ "   checksum sha256 'win:\\windows\\system32\\config\\SOFTWARE'\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i \\\n"
#~ "   checksum sha256 'win:\\windows\\system32\\config\\SOFTWARE'\n"
#~ "\n"

#~ msgid "Cloning a virtual machine"
#~ msgstr "仮想マシンのクローン方法"

#~ msgid ""
#~ "Use a combination of tools like L<cp(1)>, L<dd(1)>, and virt tools like "
#~ "L<virt-sysprep(1)>, L<virt-sparsify(1)> and L<virt-resize(1)>."
#~ msgstr ""
#~ "L<cp(1)>, L<dd(1)>, and virt tools like L<virt-sysprep(1)>, L<virt-"
#~ "sparsify(1)> および L<virt-resize(1)> のようなツールの組み合わせを使用しま"
#~ "す。"

#~ msgid "For more details, see: L<virt-sysprep(1)/COPYING AND CLONING>."
#~ msgstr ""
#~ "詳細は次を参照してください: L<virt-sysprep(1)/コピー方法およびクローン方法"
#~ ">。"

#~ msgid "Convert a CD-ROM / DVD / ISO to a tarball"
#~ msgstr "CD-ROM / DVD / ISO を tar ファイルに変換します"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
#~ "\n"

#~ msgid "Create empty disk images"
#~ msgstr "空のディスクイメージを作成します"

#~ msgid "The L<virt-format(1)> tool can do this directly."
#~ msgstr "L<virt-format(1)> ツールは直接これを実行できます。"

#~ msgid ""
#~ "Use L<virt-make-fs(1)> to create a disk image with content.  This can "
#~ "also create some standard disk images such as virtual floppy devices "
#~ "(VFDs)."
#~ msgstr ""
#~ "中身のあるディスクイメージを作成するには L<virt-make-fs(1)> を使用します。"
#~ "仮想フロッピーディスク (VFD) のような、いくつかの標準的なディスクイメージ"
#~ "を作成することもできます。"

#~ msgid ""
#~ "You can also use the L<guestfish(1)> I<-N> option to create empty disk "
#~ "images.  The useful guide below explains the options available."
#~ msgstr ""
#~ "空のディスクイメージを作成するには L<guestfish(1)> の I<-N> オプションを使"
#~ "用することもできます。以下の有用なガイドが利用可能なオプションを説明してい"
#~ "ます。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2010/09/08/new-guestfish-n-options-in-1-5-9/"
#~ "#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2010/09/08/new-guestfish-n-options-in-1-5-9/"
#~ "#content>"

#~ msgid "Delete a file (or other simple file operations)"
#~ msgstr "ファイルを削除します (または、他の簡単なファイル操作)"

#~ msgid "Use guestfish.  To delete a file:"
#~ msgstr "guestfish を使用します。ファイルを削除するには:"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img -i rm /file/to/delete\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img -i rm /file/to/delete\n"
#~ "\n"

#~ msgid "To touch a file (bring it up to date or create it):"
#~ msgstr ""
#~ "ファイルをタッチする (ファイルの日付を更新する、または作成する) には:"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img -i touch /file/to/touch\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img -i touch /file/to/touch\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i stat /file/to/stat\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i stat /file/to/stat\n"
#~ "\n"

#~ msgid "Dump raw filesystem content from inside a disk image or VM"
#~ msgstr ""
#~ "ディスクイメージまたは仮想マシンの中にあるファイルシステムの内容をそのまま"
#~ "ダンプします"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
#~ "\n"

#~ msgid "To download to stdout, replace the filename with a C<-> character:"
#~ msgstr ""
#~ "標準出力にダウンロードするには、ファイル名を C<-> 文字に置き換えます:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 - | gzip > sda1.gz\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 - | gzip > sda1.gz\n"
#~ "\n"

#~ msgid "To list the filesystems in a disk image, use L<virt-filesystems(1)>."
#~ msgstr ""
#~ "ディスクイメージにあるファイルシステムを一覧表示するには L<virt-"
#~ "filesystems(1)> を使用します。"

#~ msgid "Edit grub configuration in a VM"
#~ msgstr "仮想マシンの GRUB 設定を編集します"

#~ msgid "You can use this to:"
#~ msgstr "次の目的のために実行できます:"

#~ msgid "Fix a virtual machine that does not boot."
#~ msgstr "起動しない仮想マシンを修正します。"

#~ msgid "Change which kernel is used to boot the VM."
#~ msgstr "仮想マシンの起動時に使用するカーネルを変更します。"

#~ msgid "Change kernel command line options."
#~ msgstr "カーネルのコマンドラインオプションを変更します。"

#~ msgid "Use L<virt-edit(1)> to edit the grub configuration:"
#~ msgstr "GRUB 設定を編集するには L<virt-edit(1)> を使用します:"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d BrokenGuest /boot/grub2/grub.cfg\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d BrokenGuest /boot/grub2/grub.cfg\n"
#~ "\n"

#~ msgid ""
#~ "or for general tinkering inside an unbootable VM use L<virt-rescue(1)> "
#~ "like this:"
#~ msgstr ""
#~ "もしくは、起動不可能な仮想マシンの中から一般的に修復するために、このよう"
#~ "に L<virt-rescue(1)> を使用します:"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -d BrokenGuest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -d BrokenGuest\n"
#~ "\n"

#~ msgid "Export any directory from a VM"
#~ msgstr "仮想マシンから任意のディレクトリをエクスポートします"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -d Guest /home .\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -d Guest /home .\n"
#~ "\n"

#~ msgid ""
#~ "The final dot of the command is not a printing error.  It means we want "
#~ "to copy out to the current directory."
#~ msgstr ""
#~ "コマンドの最後のドットは表示エラーではありません。現在のディレクトリーにコ"
#~ "ピーしたいことを意味します。"

#~ msgid "This creates a directory called C<home> under the current directory."
#~ msgstr ""
#~ "これは現在のディレクトリーに C<home> というディレクトリーを作成します。"

#~ msgid ""
#~ "If the guest is a Windows guest then you can use drive letters and "
#~ "backslashes, but you must prefix the path with C<win:> and quote it to "
#~ "protect it from the shell, like this:"
#~ msgstr ""
#~ "仮想マシンが Windows ならば、ドライブレターとバックスラッシュを使用できま"
#~ "す。しかし、パスを C<win:> で始める必要があり、シェルから保護するために引"
#~ "用符でくくる必要があります。このようにします:"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
#~ "\n"

#~ msgid "To get the output as a compressed tarball, do:"
#~ msgstr "圧縮された tar ファイルとして出力を取得するには:"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
#~ "\n"

#~ msgid "Find out which user is using the most space"
#~ msgstr "もっとも領域を使用しているユーザーを検索します"

#~ msgid ""
#~ "This simple script examines a Linux guest to find out which user is using "
#~ "the most space in their home directory:"
#~ msgstr ""
#~ "この簡単なスクリプトは、ホームディレクトリーにおいてもっとも領域を使用して"
#~ "いるユーザーを検索するために、Linux 仮想マシンを検査します。"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " \n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " set -e\n"
#~ " \n"
#~ msgstr ""
#~ " set -e\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " vm=\"$1\"\n"
#~ " dir=/home\n"
#~ " \n"
#~ msgstr ""
#~ " vm=\"$1\"\n"
#~ " dir=/home\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
#~ " \n"
#~ msgstr ""
#~ " eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " for d in $(guestfish --remote ls \"$dir\"); do\n"
#~ "     echo -n \"$dir/$d\"\n"
#~ "     echo -ne '\\t'\n"
#~ "     guestfish --remote du \"$dir/$d\";\n"
#~ " done | sort -nr -k 2\n"
#~ " \n"
#~ msgstr ""
#~ " for d in $(guestfish --remote ls \"$dir\"); do\n"
#~ "     echo -n \"$dir/$d\"\n"
#~ "     echo -ne '\\t'\n"
#~ "     guestfish --remote du \"$dir/$d\";\n"
#~ " done | sort -nr -k 2\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote exit\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote exit\n"
#~ "\n"

#~ msgid "Get DHCP address from a VM"
#~ msgstr "仮想マシンから DHCP アドレスを取得します"

#~ msgid ""
#~ "The link below explains the many different possible techniques for "
#~ "getting the last assigned DHCP address of a virtual machine."
#~ msgstr ""
#~ "以下のリンクは、仮想マシンに対して最後に割り当てられた DHCP アドレスを取得"
#~ "するために、多くの異なる利用可能なテクニックを説明しています。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2011/03/31/tip-code-for-getting-dhcp-address-"
#~ "from-a-virtual-machine-disk-image/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2011/03/31/tip-code-for-getting-dhcp-address-"
#~ "from-a-virtual-machine-disk-image/#content>"

#~ msgid "Get the operating system product name string"
#~ msgstr "オペレーティングシステムの製品名を取得します"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-get-product-name \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-get-product-name \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"

#~ msgid "Make the script executable and run it on a named guest:"
#~ msgstr "スクリプトを実行可能にして、名前付き仮想マシンにおいて実行します:"

#, no-wrap
#~ msgid ""
#~ " # product-name.sh RHEL60x64\n"
#~ " Red Hat Enterprise Linux Server release 6.0 (Santiago)\n"
#~ "\n"
#~ msgstr ""
#~ " # product-name.sh RHEL60x64\n"
#~ " Red Hat Enterprise Linux Server release 6.0 (Santiago)\n"
#~ "\n"

#~ msgid ""
#~ "You can also use an XPath query on the L<virt-inspector(1)> XML using the "
#~ "C<xpath> command line tool or from your favourite programming language:"
#~ msgstr ""
#~ "C<xpath> コマンドラインツールを使用して、またはお気に入りのプログラミング"
#~ "言語から、L<virt-inspector(1)> XML において XPath クエリーを使用することも"
#~ "できます:"

#, no-wrap
#~ msgid ""
#~ " # virt-inspector RHEL60x64 > xml\n"
#~ " # xpath '//product_name' < xml\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-inspector RHEL60x64 > xml\n"
#~ " # xpath '//product_name' < xml\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>\n"
#~ "\n"

#~ msgid "Get the default boot kernel for a Linux VM"
#~ msgstr "Linux 仮想マシンのデフォルトの起動カーネルを取得します"

#~ msgid ""
#~ "The link below contains a program to print the default boot kernel for a "
#~ "Linux VM."
#~ msgstr ""
#~ "以下のリンクに Linux 仮想マシンのデフォルトの起動カーネルを表示するための"
#~ "プログラムがあります。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2010/10/30/tip-use-augeas-to-get-the-default-"
#~ "boot-kernel-for-a-vm/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2010/10/30/tip-use-augeas-to-get-the-default-"
#~ "boot-kernel-for-a-vm/#content>"

#~ msgid ""
#~ "It uses Augeas, and the technique is generally applicable for many "
#~ "different tasks, such as:"
#~ msgstr ""
#~ "Augeas を使用します。また、以下のように、多くのさまざまな作業に対して適用"
#~ "可能な一般的なテクニックがあります:"

#~ msgid "listing the user accounts in the guest"
#~ msgstr "仮想マシンのユーザーアカウントの一覧"

#~ msgid "what repositories is it configured to use"
#~ msgstr "使用するよう設定されたリポジトリー"

#~ msgid "what NTP servers does it connect to"
#~ msgstr "接続する NTP サーバー"

#~ msgid "what were the boot messages last time it booted"
#~ msgstr "前回起動時の起動メッセージ"

#~ msgid "listing who was logged in recently"
#~ msgstr "最近ログインしたユーザーの一覧"

#~ msgid "L<http://augeas.net/>"
#~ msgstr "L<http://augeas.net/>"

#~ msgid "Read the log files using virt-cat:"
#~ msgstr "virt-cat を使用してログファイルを読むには:"

#, no-wrap
#~ msgid ""
#~ " virt-cat Guest /var/log/messages | less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat Guest /var/log/messages | less\n"
#~ "\n"

#~ msgid "Read the Windows Event Log (Windows Vista or later only):"
#~ msgstr "Windows イベントログ (Windows Vista またはそれ以降) を読むには:"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2011/04/17/decoding-the-windows-event-log-"
#~ "using-guestfish/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2011/04/17/decoding-the-windows-event-log-"
#~ "using-guestfish/#content>"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2012/02/27/using-libguestfs-to-find-out-why-"
#~ "a-windows-guest-was-hanging/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2012/02/27/using-libguestfs-to-find-out-why-"
#~ "a-windows-guest-was-hanging/#content>"

#~ msgid "Hex-dumping sectors from the guest"
#~ msgstr "仮想マシンからセクターを 16 進ダンプします"

#, fuzzy
#~ msgid "Hex-dump the boot partition (Master Boot Record / first sector):"
#~ msgstr "ブートパーティションを 16 進ダンプします:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : pread-device /dev/sda 0x200 0 |\n"
#~ "   hexdump -C\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : pread-device /dev/sda 0x200 0 |\n"
#~ "   hexdump -C\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img \\\n"
#~ "     run : pread-device /dev/sda 0x200 $((N*0x200)) |\n"
#~ "   hexdump -C\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : pread-device /dev/sda 0x200 0 |\n"
#~ "   hexdump -C\n"
#~ "\n"

#~ msgid "Hex-editing sectors in the guest"
#~ msgstr "仮想マシンにおいてセクターを 16 進ダンプします"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img run : hexedit /dev/sda 0x200\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img run : hexedit /dev/sda 0x200\n"
#~ "\n"

#~ msgid "List applications installed in a VM"
#~ msgstr "仮想マシンにインストールされているアプリケーションを一覧表示します"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-list-applications \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-list-applications \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"

#~ msgid ""
#~ "Make the file executable and then you can run it on any named virtual "
#~ "machine:"
#~ msgstr ""
#~ "ファイルを実行可能にして、あらゆる名前付き仮想マシンにおいて実行できます:"

#, no-wrap
#~ msgid ""
#~ " # list-apps.sh WinGuest\n"
#~ " [0] = {\n"
#~ "   app_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_display_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 3.6.12 (en-GB)\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: Mozilla\n"
#~ "   app_url: http://www.mozilla.com/en-GB/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description: Mozilla Firefox\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: VLC media player\n"
#~ "   app_display_name: VLC media player 1.1.5\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 1.1.5\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: VideoLAN\n"
#~ "   app_url: http://www.videolan.org/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " # list-apps.sh WinGuest\n"
#~ " [0] = {\n"
#~ "   app_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_display_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 3.6.12 (en-GB)\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: Mozilla\n"
#~ "   app_url: http://www.mozilla.com/en-GB/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description: Mozilla Firefox\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: VLC media player\n"
#~ "   app_display_name: VLC media player 1.1.5\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 1.1.5\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: VideoLAN\n"
#~ "   app_url: http://www.videolan.org/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"

#~ msgid ""
#~ "If you want to run the script on disk images (instead of libvirt virtual "
#~ "machines), change C<-d \"$1\"> to C<-a \"$1\">.  See also L<virt-"
#~ "inspector(1)>."
#~ msgstr ""
#~ "（libvirt 仮想マシンの代わりに）ディスクイメージにおいてスクリプトを実行し"
#~ "たいならば、C<-d \"$1\"> を C<-a \"$1\"> に変更します。L<virt-"
#~ "inspector(1)> 参照。"

#~ msgid "List files and directories in a VM"
#~ msgstr "仮想マシンのファイルおよびディレクトリを一覧表示します"

#~ msgid "Use L<virt-ls(1)>."
#~ msgstr "L<virt-ls(1)> を使用します。"

#~ msgid "List services in a Windows VM"
#~ msgstr "Windows 仮想マシンのサービスを一覧表示します"

#~ msgid ""
#~ "The link below contains a script that can be used to list out the "
#~ "services from a Windows VM, and whether those services run at boot time "
#~ "or are loaded on demand."
#~ msgstr ""
#~ "以下のリンクは、Windows 仮想マシンからサービスを、およびそれらのサービスが"
#~ "起動時に実行されるか必要に応じて読み込まれるかを一覧化するために使用できる"
#~ "スクリプトがあります。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2010/12/10/tip-list-services-in-a-windows-"
#~ "guest/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2010/12/10/tip-list-services-in-a-windows-"
#~ "guest/#content>"

#~ msgid "Make a disk image sparse"
#~ msgstr "ディスクイメージをスパースにします"

#~ msgid "Use L<virt-sparsify(1)>."
#~ msgstr "L<virt-sparsify(1)> を使用します。"

#~ msgid "Monitor disk usage over time"
#~ msgstr "ディスク使用量を時系列に監視します"

#~ msgid ""
#~ "You can use L<virt-df(1)> to monitor disk usage of your guests over "
#~ "time.  The link below contains a guide."
#~ msgstr ""
#~ "時系列で仮想マシンのディスク使用量を監視するために L<virt-df(1)> を使用で"
#~ "きます。以下のリンクは仮想マシンを含みます。"

#~ msgid "Reading the Windows Event Log from Windows Vista (or later)"
#~ msgstr ""
#~ "Windows Vista （またそれ以降）から Windows のイベントログを読み出します"

#~ msgid ""
#~ "L<guestfish(1)> plus the tools described in the link below can be used to "
#~ "read out the Windows Event Log from any virtual machine running Windows "
#~ "Vista or a later version."
#~ msgstr ""
#~ "L<guestfish(1)> に加えて以下のリンクに示されるツールは、実行中の Windows "
#~ "Vista およびそれ以降のあらゆる仮想マシンから Windows イベントログを読み出"
#~ "すために使用できます。"

#~ msgid "Remove root password (Linux)"
#~ msgstr "root のパスワードを削除します (Linux)"

#~ msgid ""
#~ "Using the L<virt-edit(1)> I<-e> option you can do simple replacements on "
#~ "files.  One use is to remove the root password from a Linux guest:"
#~ msgstr ""
#~ "L<virt-edit(1)> I<-e> を使用することにより、ファイルの内容を簡単に置き換え"
#~ "ることができます。一つの使用方法は Linux 仮想マシンから root パスワードを"
#~ "削除することです。"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
#~ "\n"

#~ msgid "Remove Administrator password (Windows)"
#~ msgstr "Administrator のパスワードを削除します (Windows)"

#~ msgid ""
#~ "The link below contains one technique for removing the Administrator "
#~ "password from a Windows VM, or to be more precise, it gives you a command "
#~ "prompt the next time you log in which you can use to bypass any security:"
#~ msgstr ""
#~ "以下のリンクは、Windows 仮想マシンから管理者パスワードを削除するためのテク"
#~ "ニックを含みます。または、より精細にするために、セキュリティを迂回するため"
#~ "に使用でき、次回ログイン時にコマンドプロンプトを出します:"

#~ msgid ""
#~ "L<https://mdbooth.wordpress.com/2010/10/18/resetting-a-windows-guests-"
#~ "administrator-password-with-guestfish/>"
#~ msgstr ""
#~ "L<https://mdbooth.wordpress.com/2010/10/18/resetting-a-windows-guests-"
#~ "administrator-password-with-guestfish/>"

#~ msgid "Sysprepping a virtual machine (Windows)"
#~ msgstr "仮想マシンの sysprep 方法 (Windows)"

#~ msgid ""
#~ "L<https://github.com/clalancette/oz> L<https://www.redhat.com/archives/"
#~ "virt-tools-list/2011-May/msg00019.html>"
#~ msgstr ""
#~ "L<https://github.com/clalancette/oz> L<https://www.redhat.com/archives/"
#~ "virt-tools-list/2011-May/msg00019.html>"

#~ msgid "Unpack a live CD"
#~ msgstr "Live CD を展開します"

#~ msgid ""
#~ "Linux live CDs often contain multiple layers of disk images wrapped like "
#~ "a Russian doll.  You can use L<guestfish(1)> to look inside these "
#~ "multiple layers, as outlined in the guide below."
#~ msgstr ""
#~ "Linux live CD は、ロシア人形のように覆われた複数の層のディスクイメージを含"
#~ "みます。以下のガイドに概要が示されたように、これらの複数の層の内側を見るた"
#~ "めに L<guestfish(1)> を使用できます。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2009/07/15/unpack-the-russian-doll-of-a-f11-"
#~ "live-cd/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2009/07/15/unpack-the-russian-doll-of-a-f11-"
#~ "live-cd/#content>"

#~ msgid "Uploading and downloading files"
#~ msgstr "ファイルのアップロード方法およびダウンロード方法"

#~ msgid ""
#~ "The link below contains general tips on uploading (copying in)  and "
#~ "downloading (copying out) files from VMs."
#~ msgstr ""
#~ "以下のリンクは、仮想マシンにファイルをアップロード、および仮想マシンから"
#~ "ファイルをダウンロードすることに関する、一般的なヒントがあります。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2010/12/02/tip-uploading-and-downloading/"
#~ "#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2010/12/02/tip-uploading-and-downloading/"
#~ "#content>"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img run : upload sda1.img /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img run : upload sda1.img /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -d Guest run : upload lv.img /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -d Guest run : upload lv.img /dev/vg_guest/lv_root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -d Guest run : \\\n"
#~ "   upload lv.img /dev/vg_guest/lv_root : \\\n"
#~ "   resize2fs /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -d Guest run : \\\n"
#~ "   upload lv.img /dev/vg_guest/lv_root : \\\n"
#~ "   resize2fs /dev/vg_guest/lv_root\n"
#~ "\n"

#~ msgid "Use libguestfs tools on VMware ESX guests"
#~ msgstr "VMware ESX 仮想マシンにおいて libguestfs ツールを使用します"

#~ msgid ""
#~ "The link below explains how to use libguestfs, L<guestfish(1)> and the "
#~ "virt tools on any VMware ESX guests, by first sharing the VMware VMFS "
#~ "over sshfs."
#~ msgstr ""
#~ "以下のリンクは、まず最初に sshfs 経由で VMware VMFS を共有することにより、"
#~ "VMware ESX 仮想マシンにおいて libguestfs, L<guestfish(1)> および virt ツー"
#~ "ルを使用する方法を説明しています。"

#~ msgid ""
#~ "L<https://rwmj.wordpress.com/2011/05/10/tip-use-libguestfs-on-vmware-esx-"
#~ "guests/#content>"
#~ msgstr ""
#~ "L<https://rwmj.wordpress.com/2011/05/10/tip-use-libguestfs-on-vmware-esx-"
#~ "guests/#content>"

#, fuzzy
#~| msgid "RELEASE NOTES FOR LIBGUESTFS 1.20"
#~ msgid "RELEASE NOTES FOR LIBGUESTFS 1.40"
#~ msgstr "libguestfs 1.20 のリリースノート"

#~ msgid "API"
#~ msgstr "API"

#, fuzzy
#~| msgid "inspect-get-icon"
#~ msgid "C<inspect_get_osinfo>"
#~ msgstr "inspect-get-icon"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/981663>"
#~ msgid "L<https://bugzilla.redhat.com/1664310>"
#~ msgstr "L<https://bugzilla.redhat.com/981663>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/642934>"
#~ msgid "L<https://bugzilla.redhat.com/1642044>"
#~ msgstr "L<https://bugzilla.redhat.com/642934>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/642934>"
#~ msgid "L<https://bugzilla.redhat.com/1634248>"
#~ msgstr "L<https://bugzilla.redhat.com/642934>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/912499>"
#~ msgid "L<https://bugzilla.redhat.com/1624902>"
#~ msgstr "L<https://bugzilla.redhat.com/912499>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/916780>"
#~ msgid "L<https://bugzilla.redhat.com/1624878>"
#~ msgstr "L<https://bugzilla.redhat.com/916780>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1615885>"
#~ msgstr "L<https://bugzilla.redhat.com/847880>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/627675>"
#~ msgid "L<https://bugzilla.redhat.com/1614276>"
#~ msgstr "L<https://bugzilla.redhat.com/627675>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/860235>"
#~ msgid "L<https://bugzilla.redhat.com/1602353>"
#~ msgstr "L<https://bugzilla.redhat.com/860235>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/981683>"
#~ msgid "L<https://bugzilla.redhat.com/1601943>"
#~ msgstr "L<https://bugzilla.redhat.com/981683>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/981715>"
#~ msgid "L<https://bugzilla.redhat.com/1598715>"
#~ msgstr "L<https://bugzilla.redhat.com/981715>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/989356>"
#~ msgid "L<https://bugzilla.redhat.com/1598350>"
#~ msgstr "L<https://bugzilla.redhat.com/989356>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/998513>"
#~ msgid "L<https://bugzilla.redhat.com/1596851>"
#~ msgstr "L<https://bugzilla.redhat.com/998513>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/961812>"
#~ msgid "L<https://bugzilla.redhat.com/1596810>"
#~ msgstr "L<https://bugzilla.redhat.com/961812>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1592468>"
#~ msgstr "L<https://bugzilla.redhat.com/914931>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1592061>"
#~ msgstr "L<https://bugzilla.redhat.com/1001876>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/920225>"
#~ msgid "L<https://bugzilla.redhat.com/1590220>"
#~ msgstr "L<https://bugzilla.redhat.com/920225>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/882417>"
#~ msgid "L<https://bugzilla.redhat.com/1588451>"
#~ msgstr "L<https://bugzilla.redhat.com/882417>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1588088>"
#~ msgstr "L<https://bugzilla.redhat.com/847880>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1580309>"
#~ msgstr "L<https://bugzilla.redhat.com/998513>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/921292>"
#~ msgid "L<https://bugzilla.redhat.com/1580292>"
#~ msgstr "L<https://bugzilla.redhat.com/921292>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1579047>"
#~ msgstr "L<https://bugzilla.redhat.com/913145>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1575640>"
#~ msgstr "L<https://bugzilla.redhat.com/801117>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1570407>"
#~ msgstr "L<https://bugzilla.redhat.com/913145>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/981663>"
#~ msgid "L<https://bugzilla.redhat.com/1567763>"
#~ msgstr "L<https://bugzilla.redhat.com/981663>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/981683>"
#~ msgid "L<https://bugzilla.redhat.com/1564983>"
#~ msgstr "L<https://bugzilla.redhat.com/981683>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/961812>"
#~ msgid "L<https://bugzilla.redhat.com/1561828>"
#~ msgstr "L<https://bugzilla.redhat.com/961812>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/890027>"
#~ msgid "L<https://bugzilla.redhat.com/1559027>"
#~ msgstr "L<https://bugzilla.redhat.com/890027>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1557273>"
#~ msgstr "L<https://bugzilla.redhat.com/957380>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/998482>"
#~ msgid "L<https://bugzilla.redhat.com/1544842>"
#~ msgstr "L<https://bugzilla.redhat.com/998482>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1544674>"
#~ msgstr "L<https://bugzilla.redhat.com/1001876>"

#, fuzzy
#~| msgid ""
#~| " virt-inspector [--options] -d domname\n"
#~| "\n"
#~ msgid "virt-inspector --help differs from manpage"
#~ msgstr ""
#~ " virt-inspector [--options] -d domname\n"
#~ "\n"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1544227>"
#~ msgstr "L<https://bugzilla.redhat.com/913145>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/912499>"
#~ msgid "L<https://bugzilla.redhat.com/1532224>"
#~ msgstr "L<https://bugzilla.redhat.com/912499>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1530967>"
#~ msgstr "L<https://bugzilla.redhat.com/1001876>"

#, fuzzy
#~| msgid "L<https://bugzilla.redhat.com/852394>"
#~ msgid "L<https://bugzilla.redhat.com/1527334>"
#~ msgstr "L<https://bugzilla.redhat.com/852394>"

#, fuzzy
#~ msgid "CVE-2014-8484"
#~ msgstr "CVE-2010-3851"

#, fuzzy
#~ msgid "CVE-2014-8485"
#~ msgstr "CVE-2010-3851"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1151033>"
#~ msgstr "L<https://bugzilla.redhat.com/998513>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1153515>"
#~ msgstr "L<https://bugzilla.redhat.com/913145>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1151766>"
#~ msgstr "L<https://bugzilla.redhat.com/801117>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1151738>"
#~ msgstr "L<https://bugzilla.redhat.com/957380>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1150880>"
#~ msgstr "L<https://bugzilla.redhat.com/847880>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1150867>"
#~ msgstr "L<https://bugzilla.redhat.com/1001876>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1150815>"
#~ msgstr "L<https://bugzilla.redhat.com/1001875>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1150701>"
#~ msgstr "L<https://bugzilla.redhat.com/1001876>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1150475>"
#~ msgstr "L<https://bugzilla.redhat.com/913145>"

#, fuzzy
#~ msgid "L<https://bugzilla.redhat.com/1145916>"
#~ msgstr "L<https://bugzilla.redhat.com/914931>"

#~ msgid "L<https://bugzilla.redhat.com/show_bug.cgi?id=968306>"
#~ msgstr "L<https://bugzilla.redhat.com/show_bug.cgi?id=968306>"

#~ msgid "L<https://bugzilla.redhat.com/1002032>"
#~ msgstr "L<https://bugzilla.redhat.com/1002032>"

#~ msgid "L<https://bugzilla.redhat.com/1001876>"
#~ msgstr "L<https://bugzilla.redhat.com/1001876>"

#~ msgid "L<https://bugzilla.redhat.com/1001875>"
#~ msgstr "L<https://bugzilla.redhat.com/1001875>"

#~ msgid "L<https://bugzilla.redhat.com/1000428>"
#~ msgstr "L<https://bugzilla.redhat.com/1000428>"

#~ msgid "L<https://bugzilla.redhat.com/1000121>"
#~ msgstr "L<https://bugzilla.redhat.com/1000121>"

#~ msgid "L<https://bugzilla.redhat.com/998513>"
#~ msgstr "L<https://bugzilla.redhat.com/998513>"

#~ msgid "L<https://bugzilla.redhat.com/998482>"
#~ msgstr "L<https://bugzilla.redhat.com/998482>"

#~ msgid "L<https://bugzilla.redhat.com/995711>"
#~ msgstr "L<https://bugzilla.redhat.com/995711>"

#~ msgid "L<https://bugzilla.redhat.com/994517>"
#~ msgstr "L<https://bugzilla.redhat.com/994517>"

#~ msgid "L<https://bugzilla.redhat.com/989356>"
#~ msgstr "L<https://bugzilla.redhat.com/989356>"

#~ msgid "L<https://bugzilla.redhat.com/986877>"
#~ msgstr "L<https://bugzilla.redhat.com/986877>"

#~ msgid "L<https://bugzilla.redhat.com/986875>"
#~ msgstr "L<https://bugzilla.redhat.com/986875>"

#~ msgid "L<https://bugzilla.redhat.com/985269>"
#~ msgstr "L<https://bugzilla.redhat.com/985269>"

#~ msgid "L<https://bugzilla.redhat.com/983218>"
#~ msgstr "L<https://bugzilla.redhat.com/983218>"

#~ msgid "L<https://bugzilla.redhat.com/981683>"
#~ msgstr "L<https://bugzilla.redhat.com/981683>"

#~ msgid "L<https://bugzilla.redhat.com/981663>"
#~ msgstr "L<https://bugzilla.redhat.com/981663>"

#~ msgid "L<https://bugzilla.redhat.com/975797>"
#~ msgstr "L<https://bugzilla.redhat.com/975797>"

#~ msgid "L<https://bugzilla.redhat.com/975753>"
#~ msgstr "L<https://bugzilla.redhat.com/975753>"

#~ msgid "L<https://bugzilla.redhat.com/975412>"
#~ msgstr "L<https://bugzilla.redhat.com/975412>"

#~ msgid "L<https://bugzilla.redhat.com/974904>"
#~ msgstr "L<https://bugzilla.redhat.com/974904>"

#~ msgid "L<https://bugzilla.redhat.com/974489>"
#~ msgstr "L<https://bugzilla.redhat.com/974489>"

#~ msgid "L<https://bugzilla.redhat.com/972775>"
#~ msgstr "L<https://bugzilla.redhat.com/972775>"

#~ msgid "L<https://bugzilla.redhat.com/969845>"
#~ msgstr "L<https://bugzilla.redhat.com/969845>"

#~ msgid "L<https://bugzilla.redhat.com/968875>"
#~ msgstr "L<https://bugzilla.redhat.com/968875>"

#~ msgid "Examples"
#~ msgstr "例"

#~ msgid ""
#~ "New example program showing how to enable debugging and capture log "
#~ "messages."
#~ msgstr ""
#~ "新しいプログラム例は、デバッグを有効化し、ログメッセージを採取する方法を示"
#~ "します。"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-extra-packages=\"list of package names\"\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-extra-packages=\"list of package names\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-supermin-extra-options=\"...\"\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-supermin-extra-options=\"...\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cp-r\n"
#~ " extlinux\n"
#~ " feature-available\n"
#~ " get-program\n"
#~ " is-whole-device\n"
#~ " part-get-gpt-type\n"
#~ " part-set-gpt-type\n"
#~ " rename\n"
#~ " set-program\n"
#~ " syslinux\n"
#~ "\n"
#~ msgstr ""
#~ " cp-r\n"
#~ " extlinux\n"
#~ " feature-available\n"
#~ " get-program\n"
#~ " is-whole-device\n"
#~ " part-get-gpt-type\n"
#~ " part-set-gpt-type\n"
#~ " rename\n"
#~ " set-program\n"
#~ " syslinux\n"
#~ "\n"

#~ msgid "C only:"
#~ msgstr "C のみ:"

#, no-wrap
#~ msgid ""
#~ " guestfs_event_to_string\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_event_to_string\n"
#~ "\n"

#~ msgid "libxml2 is required to build libguestfs."
#~ msgstr "libxml2 が libguestfs をビルドするために必要です。"

#~ msgid "The hivexregedit program (from hivex) is required to build from git."
#~ msgstr ""
#~ "(hivex の) hivexregedit プログラムが git からビルドするために必要です。"

#~ msgid "./bugs-in-changelog.sh 1.20.0.."
#~ msgstr "./bugs-in-changelog.sh 1.20.0.."

#~ msgid "L<https://bugzilla.redhat.com/961812>"
#~ msgstr "L<https://bugzilla.redhat.com/961812>"

#~ msgid "L<https://bugzilla.redhat.com/957772>"
#~ msgstr "L<https://bugzilla.redhat.com/957772>"

#~ msgid "L<https://bugzilla.redhat.com/957380>"
#~ msgstr "L<https://bugzilla.redhat.com/957380>"

#~ msgid "L<https://bugzilla.redhat.com/948324>"
#~ msgstr "L<https://bugzilla.redhat.com/948324>"

#~ msgid "L<https://bugzilla.redhat.com/928995>"
#~ msgstr "L<https://bugzilla.redhat.com/928995>"

#~ msgid "L<https://bugzilla.redhat.com/921292>"
#~ msgstr "L<https://bugzilla.redhat.com/921292>"

#~ msgid "L<https://bugzilla.redhat.com/921040>"
#~ msgstr "L<https://bugzilla.redhat.com/921040>"

#~ msgid "L<https://bugzilla.redhat.com/920225>"
#~ msgstr "L<https://bugzilla.redhat.com/920225>"

#~ msgid "L<https://bugzilla.redhat.com/916780>"
#~ msgstr "L<https://bugzilla.redhat.com/916780>"

#~ msgid "feature request: guestmount --with-cleanup-pipefd"
#~ msgstr "機能リクエスト: guestmount --with-cleanup-pipefd"

#~ msgid "L<https://bugzilla.redhat.com/914934>"
#~ msgstr "L<https://bugzilla.redhat.com/914934>"

#~ msgid "L<https://bugzilla.redhat.com/914931>"
#~ msgstr "L<https://bugzilla.redhat.com/914931>"

#~ msgid "L<https://bugzilla.redhat.com/913145>"
#~ msgstr "L<https://bugzilla.redhat.com/913145>"

#~ msgid "L<https://bugzilla.redhat.com/909836>"
#~ msgstr "L<https://bugzilla.redhat.com/909836>"

#~ msgid "L<https://bugzilla.redhat.com/909624>"
#~ msgstr "L<https://bugzilla.redhat.com/909624>"

#~ msgid "L<https://bugzilla.redhat.com/908322>"
#~ msgstr "L<https://bugzilla.redhat.com/908322>"

#~ msgid "L<https://bugzilla.redhat.com/908321>"
#~ msgstr "L<https://bugzilla.redhat.com/908321>"

#~ msgid "L<https://bugzilla.redhat.com/907554>"
#~ msgstr "L<https://bugzilla.redhat.com/907554>"

#~ msgid "L<https://bugzilla.redhat.com/905341>"
#~ msgstr "L<https://bugzilla.redhat.com/905341>"

#~ msgid "L<https://bugzilla.redhat.com/903620>"
#~ msgstr "L<https://bugzilla.redhat.com/903620>"

#~ msgid "L<https://bugzilla.redhat.com/895910>"
#~ msgstr "L<https://bugzilla.redhat.com/895910>"

#~ msgid "L<https://bugzilla.redhat.com/895905>"
#~ msgstr "L<https://bugzilla.redhat.com/895905>"

#~ msgid "L<https://bugzilla.redhat.com/895904>"
#~ msgstr "L<https://bugzilla.redhat.com/895904>"

#~ msgid "L<https://bugzilla.redhat.com/894545>"
#~ msgstr "L<https://bugzilla.redhat.com/894545>"

#~ msgid "L<https://bugzilla.redhat.com/890027>"
#~ msgstr "L<https://bugzilla.redhat.com/890027>"

#~ msgid "L<https://bugzilla.redhat.com/887971>"
#~ msgstr "L<https://bugzilla.redhat.com/887971>"

#~ msgid "L<https://bugzilla.redhat.com/887520>"
#~ msgstr "L<https://bugzilla.redhat.com/887520>"

#~ msgid "L<https://bugzilla.redhat.com/886915>"
#~ msgstr "L<https://bugzilla.redhat.com/886915>"

#~ msgid "L<https://bugzilla.redhat.com/847549>"
#~ msgstr "L<https://bugzilla.redhat.com/847549>"

#~ msgid "L<https://bugzilla.redhat.com/811649>"
#~ msgstr "L<https://bugzilla.redhat.com/811649>"

#~ msgid "L<https://bugzilla.redhat.com/664558>"
#~ msgstr "L<https://bugzilla.redhat.com/664558>"

#~ msgid "RELEASE NOTES FOR LIBGUESTFS 1.20"
#~ msgstr "libguestfs 1.20 のリリースノート"

#~ msgid "CVE-2012-2690"
#~ msgstr "CVE-2012-2690"

#~ msgid ""
#~ "This issue was assigned CVE-2012-2690, and is fixed in libguestfs E<ge> "
#~ "1.16."
#~ msgstr ""
#~ "この問題は CVE-2012-2690 に割り当てられおり、libguestfs E<ge> 1.16 におい"
#~ "て修正されています。"

#~ msgid ""
#~ "For further information, see L<https://bugzilla.redhat.com/show_bug.cgi?"
#~ "id=788642>"
#~ msgstr ""
#~ "詳細は L<https://bugzilla.redhat.com/show_bug.cgi?id=788642> を参照してく"
#~ "ださい。"

#~ msgid "L<https://bugzilla.redhat.com/882417>"
#~ msgstr "L<https://bugzilla.redhat.com/882417>"

#~ msgid "L<https://bugzilla.redhat.com/882299>"
#~ msgstr "L<https://bugzilla.redhat.com/882299>"

#~ msgid "L<https://bugzilla.redhat.com/881953>"
#~ msgstr "L<https://bugzilla.redhat.com/881953>"

#~ msgid "L<https://bugzilla.redhat.com/880801>"
#~ msgstr "L<https://bugzilla.redhat.com/880801>"

#~ msgid "L<https://bugzilla.redhat.com/879416>"
#~ msgstr "L<https://bugzilla.redhat.com/879416>"

#~ msgid "L<https://bugzilla.redhat.com/876579>"
#~ msgstr "L<https://bugzilla.redhat.com/876579>"

#~ msgid "L<https://bugzilla.redhat.com/860235>"
#~ msgstr "L<https://bugzilla.redhat.com/860235>"

#~ msgid "L<https://bugzilla.redhat.com/859949>"
#~ msgstr "L<https://bugzilla.redhat.com/859949>"

#~ msgid "L<https://bugzilla.redhat.com/859885>"
#~ msgstr "L<https://bugzilla.redhat.com/859885>"

#~ msgid "L<https://bugzilla.redhat.com/859876>"
#~ msgstr "L<https://bugzilla.redhat.com/859876>"

#~ msgid "L<https://bugzilla.redhat.com/859875>"
#~ msgstr "L<https://bugzilla.redhat.com/859875>"

#~ msgid "L<https://bugzilla.redhat.com/858696>"
#~ msgstr "L<https://bugzilla.redhat.com/858696>"

#~ msgid "L<https://bugzilla.redhat.com/858126>"
#~ msgstr "L<https://bugzilla.redhat.com/858126>"

#~ msgid "L<https://bugzilla.redhat.com/853762>"
#~ msgstr "L<https://bugzilla.redhat.com/853762>"

#~ msgid "L<https://bugzilla.redhat.com/853393>"
#~ msgstr "L<https://bugzilla.redhat.com/853393>"

#~ msgid "L<https://bugzilla.redhat.com/853159>"
#~ msgstr "L<https://bugzilla.redhat.com/853159>"

#~ msgid "L<https://bugzilla.redhat.com/852394>"
#~ msgstr "L<https://bugzilla.redhat.com/852394>"

#~ msgid "L<https://bugzilla.redhat.com/852194>"
#~ msgstr "L<https://bugzilla.redhat.com/852194>"

#~ msgid "L<https://bugzilla.redhat.com/847881>"
#~ msgstr "L<https://bugzilla.redhat.com/847881>"

#~ msgid "L<https://bugzilla.redhat.com/847880>"
#~ msgstr "L<https://bugzilla.redhat.com/847880>"

#~ msgid "L<https://bugzilla.redhat.com/845522>"
#~ msgstr "L<https://bugzilla.redhat.com/845522>"

#~ msgid "L<https://bugzilla.redhat.com/845488>"
#~ msgstr "L<https://bugzilla.redhat.com/845488>"

#~ msgid "L<https://bugzilla.redhat.com/842307>"
#~ msgstr "L<https://bugzilla.redhat.com/842307>"

#~ msgid "L<https://bugzilla.redhat.com/840572>"
#~ msgstr "L<https://bugzilla.redhat.com/840572>"

#~ msgid "L<https://bugzilla.redhat.com/840115>"
#~ msgstr "L<https://bugzilla.redhat.com/840115>"

#~ msgid "L<https://bugzilla.redhat.com/836710>"
#~ msgstr "L<https://bugzilla.redhat.com/836710>"

#~ msgid "L<https://bugzilla.redhat.com/834712>"
#~ msgstr "L<https://bugzilla.redhat.com/834712>"

#~ msgid "L<https://bugzilla.redhat.com/824716>"
#~ msgstr "L<https://bugzilla.redhat.com/824716>"

#~ msgid "L<https://bugzilla.redhat.com/824043>"
#~ msgstr "L<https://bugzilla.redhat.com/824043>"

#~ msgid "L<https://bugzilla.redhat.com/823887>"
#~ msgstr "L<https://bugzilla.redhat.com/823887>"

#~ msgid "L<https://bugzilla.redhat.com/823885>"
#~ msgstr "L<https://bugzilla.redhat.com/823885>"

#~ msgid "L<https://bugzilla.redhat.com/823883>"
#~ msgstr "L<https://bugzilla.redhat.com/823883>"

#~ msgid "L<https://bugzilla.redhat.com/823821>"
#~ msgstr "L<https://bugzilla.redhat.com/823821>"

#~ msgid "L<https://bugzilla.redhat.com/801117>"
#~ msgstr "L<https://bugzilla.redhat.com/801117>"

#~ msgid "L<https://bugzilla.redhat.com/798979>"
#~ msgstr "L<https://bugzilla.redhat.com/798979>"

#~ msgid "L<https://bugzilla.redhat.com/782167>"
#~ msgstr "L<https://bugzilla.redhat.com/782167>"

#~ msgid "L<https://bugzilla.redhat.com/627675>"
#~ msgstr "L<https://bugzilla.redhat.com/627675>"

#~ msgid "L<https://bugzilla.redhat.com/602997>"
#~ msgstr "L<https://bugzilla.redhat.com/602997>"

#, no-wrap
#~ msgid ""
#~ "   - added support for Fedora 17+\n"
#~ "\n"
#~ msgstr ""
#~ "   - Fedora 17+ のサポートの追加\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - added support for FreeDOS\n"
#~ "\n"
#~ msgstr ""
#~ "   - FreeDOS のサポートの追加\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - added support for Buildroot and Cirros\n"
#~ "\n"
#~ msgstr ""
#~ "   - Buildroot および Cirros のサポートの追加\n"
#~ "\n"

#~ msgid "examples"
#~ msgstr "例"

#~ msgid "Release notes for libguestfs 1.8"
#~ msgstr "libguestfs 1.8 のリリースノート"

#, no-wrap
#~ msgid ""
#~ "     . virt-cat\n"
#~ "     . virt-df\n"
#~ "     . virt-inspector\n"
#~ "     . virt-ls\n"
#~ "     . virt-rescue\n"
#~ "\n"
#~ msgstr ""
#~ "     . virt-cat\n"
#~ "     . virt-df\n"
#~ "     . virt-inspector\n"
#~ "     . virt-ls\n"
#~ "     . virt-rescue\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - PHP bindings.\n"
#~ "\n"
#~ msgstr ""
#~ " - PHP バインディング。\n"
#~ "\n"

#~ msgid "RELEASE NOTES FOR HISTORICAL VERSIONS OF LIBGUESTFS"
#~ msgstr "これまでのバージョンの libguestfs に関するリリースノート"

#~ msgid ""
#~ "Before 2010 libguestfs did not have official release notes or a "
#~ "formalized version numbering system.  However these are links to "
#~ "historically significant versions."
#~ msgstr ""
#~ "2010 年より前は、公式なリリースノートまたは形式化されたバージョン管理シス"
#~ "テムがありませんでした。ただ、これらはこれまでの重要なバージョンへのリンク"
#~ "です。"

#~ msgid "2009-11-10 (1.0.78)"
#~ msgstr "2009-11-10 (1.0.78)"

#~ msgid ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-November/msg00095.html>"
#~ msgstr ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-November/msg00095.html>"

#~ msgid "2009-09-13 (1.0.67)"
#~ msgstr "2009-09-13 (1.0.67)"

#~ msgid ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-August/msg00281.html>"
#~ msgstr ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-August/msg00281.html>"

#~ msgid "2009-07-23 (1.0.64)"
#~ msgstr "2009-07-23 (1.0.64)"

#~ msgid ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00059.html>"
#~ msgstr ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00059.html>"

#~ msgid "2009-07-14 (1.0.59)"
#~ msgstr "2009-07-14 (1.0.59)"

#~ msgid ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00023.html>"
#~ msgstr ""
#~ "L<https://www.redhat.com/archives/libguestfs/2009-July/msg00023.html>"

#~ msgid "2009-04-01 (the initial announcement)"
#~ msgstr "2009-04-01 (the initial announcement)"

#~ msgid ""
#~ "L<http://rwmj.wordpress.com/2009/04/01/libguestfs-access-and-modify-"
#~ "virtual-machine-disk-images/>"
#~ msgstr ""
#~ "L<http://rwmj.wordpress.com/2009/04/01/libguestfs-access-and-modify-"
#~ "virtual-machine-disk-images/>"

#~ msgid ""
#~ "L<guestfs-examples(1)>, L<guestfs-faq(1)>, L<guestfs-performance(1)>, "
#~ "L<guestfs-recipes(1)>, L<guestfs-testing(1)>, L<guestfs(3)>, "
#~ "L<guestfish(1)>, L<http://libguestfs.org/>"
#~ msgstr ""
#~ "L<guestfs-examples(1)>, L<guestfs-faq(1)>, L<guestfs-performance(1)>, "
#~ "L<guestfs-recipes(1)>, L<guestfs-testing(1)>, L<guestfs(3)>, "
#~ "L<guestfish(1)>, L<http://libguestfs.org/>"

#~ msgid "the data (file etc) not being present"
#~ msgstr "データ（ファイルなど）が存在しない場合"

#~ msgid "being present but empty"
#~ msgstr "存在するが空の場合"

#~ msgid "being much larger than normal"
#~ msgstr "通常よりもかなり大きい場合"

#~ msgid "containing arbitrary 8 bit data"
#~ msgstr "任意の 8 ビットのデータを含む場合"

#~ msgid "being in an unexpected character encoding"
#~ msgstr "予期しない文字エンコードを使用している場合"

#~ msgid "containing homoglyphs."
#~ msgstr "同型異義語を含む場合"

#~ msgid ""
#~ "The protocol is designed to be secure, being based on RFC 4506 (XDR)  "
#~ "with a defined upper message size.  However a program that uses "
#~ "libguestfs must also take care - for example you can write a program that "
#~ "downloads a binary from a disk image and executes it locally, and no "
#~ "amount of protocol security will save you from the consequences."
#~ msgstr ""
#~ "プロトコルは、定義されたメッセージ上限容量を持つ RFC 4506 (XDR) に基づき、"
#~ "セキュアであるように設計されています。しかしながら、libguestfs を使用する"
#~ "プログラムは気をつけなければいけません - たとえば、ディスクイメージからバ"
#~ "イナリーをダウンロードして、ローカルに実行するプログラムを書くことができま"
#~ "す。また、多くのプロトコルセキュリティは結果からあなたを保護しません。"

#~ msgid "CVE-2010-3851"
#~ msgstr "CVE-2010-3851"

#~ msgid "L<https://bugzilla.redhat.com/642934>"
#~ msgstr "L<https://bugzilla.redhat.com/642934>"

#~ msgid ""
#~ "This security bug concerns the automatic disk format detection that qemu "
#~ "does on disk images."
#~ msgstr ""
#~ "このセキュリティバグは、QEMU のディスクイメージでないことをディスクの自動"
#~ "フォーマット検出に関するものです。"

#~ msgid "You have enabled the network or have opened the disk in write mode."
#~ msgstr ""
#~ "ネットワークを有効化しているか、もしくは書き込みモードでディスクを開いてい"
#~ "ます。"

#~ msgid "L<https://bugzilla.redhat.com/831117>"
#~ msgstr "L<https://bugzilla.redhat.com/831117>"

#~ msgid "L<https://bugzilla.redhat.com/968306>"
#~ msgstr "L<https://bugzilla.redhat.com/968306>"

#, fuzzy
#~ msgid "CVE-2014-0191"
#~ msgstr "CVE-2012-2690"

#~ msgid "guestfs-testing - manual testing of libguestfs, you can help!"
#~ msgstr "guestfs-testing - libguestfs の手動テスト、手助けになります!"

#~ msgid "You can report bugs you find through this link:"
#~ msgstr "このリンクを使用して見つけたバグを報告できます:"

#~ msgid "L<https://www.redhat.com/mailman/listinfo/libguestfs>"
#~ msgstr "L<https://www.redhat.com/mailman/listinfo/libguestfs>"

#~ msgid "TESTS"
#~ msgstr "テスト"

#~ msgid "Run libguestfs-test-tool"
#~ msgstr "libguestfs-test-tool の実行"

#~ msgid ""
#~ "This command does a very simple, non-destructive test that basic "
#~ "libguestfs is functioning.  You don't need to run it as root."
#~ msgstr ""
#~ "このコマンドは、基本的な libguestfs が機能しているか、非常に簡単かつ非破壊"
#~ "的なテストを実行します。root として実行する必要がありません。"

#~ msgid "Check KVM acceleration is being used."
#~ msgstr "KVM アクセラレーションが使用されていることを確認します。"

#~ msgid ""
#~ "If the command above does not work at all, use L<libguestfs-test-tool(1)>."
#~ msgstr ""
#~ "上のコマンドがまったく機能しなければ、 L<libguestfs-test-tool(1)> を使用し"
#~ "ます。"

#~ msgid "Run virt-alignment-scan on all your guests."
#~ msgstr "すべての仮想マシンにおいて virt-alignment-scan を実行します。"

#~ msgid "Run L<virt-alignment-scan(1)> on guests or disk images:"
#~ msgstr ""
#~ "仮想マシンまたはディスクイメージにおいて L<virt-alignment-scan(1)> を実行"
#~ "します:"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan -a /path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan -a /path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan -d Guest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan -d Guest\n"
#~ "\n"

#~ msgid "Run virt-cat on some files in guests."
#~ msgstr "仮想マシンにあるいくつかのファイルにおいて virt-cat を実行します。"

#~ msgid ""
#~ "L<virt-cat(1)> can display files from guests.  For a Linux guest, try:"
#~ msgstr ""
#~ "L<virt-cat(1)> は仮想マシンからファイルを表示できます。 Linux 仮想マシンに"
#~ "対しては、次を試します:"

#, no-wrap
#~ msgid ""
#~ " virt-cat LinuxGuest /etc/passwd\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat LinuxGuest /etc/passwd\n"
#~ "\n"

#~ msgid "A recent feature is support for Windows paths, for example:"
#~ msgstr "最近の機能は Windows のパスをサポートします、たとえば:"

#, no-wrap
#~ msgid ""
#~ " virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
#~ "\n"

#~ msgid ""
#~ "L<virt-copy-in(1)> can recursively copy files and directories into a "
#~ "guest or disk image."
#~ msgstr ""
#~ "L<virt-copy-in(1)> は仮想マシンまたはディスクイメージの中にあるファイルお"
#~ "よびディレクトリーを再帰的にコピーできます。"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d Guest /etc /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d Guest /etc /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d Guest /home /etc/issue /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d Guest /home /etc/issue /tmp\n"
#~ "\n"

#~ msgid "Copy some files out of a guest."
#~ msgstr "仮想マシンからいくつかのファイルをコピーします"

#~ msgid "Run virt-df."
#~ msgstr "virt-df を実行します。"

#~ msgid "L<virt-df(1)> lists disk space.  Run:"
#~ msgstr "L<virt-df(1)> はディスク領域を一覧表示します。次を実行します:"

#, no-wrap
#~ msgid ""
#~ " virt-df\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df\n"
#~ "\n"

#~ msgid "The guest must be idle."
#~ msgstr "仮想マシンはアイドル状態にある必要があります。"

#~ msgid "The guest disks must be synched using L<sync(1)>."
#~ msgstr ""
#~ "仮想マシンのディスクは L<sync(1)> を使用して同期する必要があります。"

#, no-wrap
#~ msgid ""
#~ " virt-df --csv > /tmp/report.csv\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df --csv > /tmp/report.csv\n"
#~ "\n"

#~ msgid ""
#~ "L<http://www.postgresql.org/docs/8.1/static/sql-copy.html> L<http://dev."
#~ "mysql.com/doc/refman/5.1/en/load-data.html>"
#~ msgstr ""
#~ "L<http://www.postgresql.org/docs/8.1/static/sql-copy.html> L<http://dev."
#~ "mysql.com/doc/refman/5.1/en/load-data.html>"

#~ msgid "B<*> Edit a file in a B<shut off> guest."
#~ msgstr "B<*> B<シャットオフ>している仮想マシンにあるファイルを編集します。"

#~ msgid ""
#~ "L<virt-edit(1)> can edit files in guests.  Try this command on a RHEL or "
#~ "Fedora guest:"
#~ msgstr ""
#~ "L<virt-edit(1)> は仮想マシンにあるファイルを編集できます。RHEL または "
#~ "Fedora 仮想マシンにおいてこのコマンドを試します:"

#, no-wrap
#~ msgid ""
#~ " virt-edit LinuxGuest /etc/sysconfig/network\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit LinuxGuest /etc/sysconfig/network\n"
#~ "\n"

#~ msgid "On other Linux guests try editing other files such as:"
#~ msgstr ""
#~ "他の Linux 仮想マシンにおいて、次のように他のファイルの編集を試します:"

#, no-wrap
#~ msgid ""
#~ " virt-edit LinuxGuest /etc/motd\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit LinuxGuest /etc/motd\n"
#~ "\n"

#~ msgid "Display the filesystems / partitions / LVs in a guest."
#~ msgstr ""
#~ "仮想マシンにあるファイルシステム / パーティション / 論理ボリュームを表示し"
#~ "ます。"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems -a /path/to/disk.img --all --long -h\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems -a /path/to/disk.img --all --long -h\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems -d Guest --all --long -h\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems -d Guest --all --long -h\n"
#~ "\n"

#~ msgid "Run virt-inspector on all your guests."
#~ msgstr "すべての仮想マシンにおいて virt-inspector を実行します。"

#, no-wrap
#~ msgid ""
#~ " virt-inspector -a /path/to/disk.img | less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector -a /path/to/disk.img | less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector -d Guest | less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector -d Guest | less\n"
#~ "\n"

#~ msgid "Try the auditing features of virt-ls on all your guests."
#~ msgstr "すべての仮想マシンにおいて virt-ls の監査機能を試します。"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep '^- [42]'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep '^- [42]'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep '^d ...7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep '^d ...7'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep '^s'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep '^s'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"

#~ msgid "Display files larger than 10MB in home directories:"
#~ msgstr "ホームディレクトリーにある 10MB より大きなファイルを表示します:"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"

#~ msgid "Create a disk image from a tarball."
#~ msgstr "tar ファイルからディスクイメージを作成します。"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --partition=mbr --type=vfat /any/tarball.tar.gz output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --partition=mbr --type=vfat /any/tarball.tar.gz output.img\n"
#~ "\n"

#~ msgid "Try other partitioning schemes, eg. I<--partition=gpt>."
#~ msgstr "他のパーティションスキーマを試してください。例: I<--partition=gpt>"

#~ msgid "Try other filesystem formats, eg. I<--type=ntfs>, I<--type=ext2>."
#~ msgstr ""
#~ "他のファイルシステム形式を試してください。例: I<--type=ntfs>, I<--"
#~ "type=ext2>"

#~ msgid "B<*> Run virt-rescue on a B<shut off> disk image or guest."
#~ msgstr ""
#~ "B<*> B<停止状態>のディスクイメージまたは仮想マシンにおいて virt-rescue を"
#~ "実行します。"

#~ msgid ""
#~ "Use L<virt-rescue(1)> to examine, rescue or repair a B<shut off> guest or "
#~ "disk image:"
#~ msgstr ""
#~ "B<停止状態>の仮想マシンまたはディスクイメージを検査、復旧、または修復する"
#~ "には L<virt-rescue(1)> を使用します:"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -a /path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -a /path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -d Guest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -d Guest\n"
#~ "\n"

#~ msgid "Can you use ordinary shell commands to examine the guest?"
#~ msgstr "仮想マシンを検査するために通常のシェルコマンドを使用できますか？"

#~ msgid "B<*> Resize your guests."
#~ msgstr "B<*> 仮想マシンの容量を変更します。"

#~ msgid ""
#~ "Use L<virt-resize(1)> to give a guest some more disk space.  For example, "
#~ "if you have a disk image that is smaller than 30G, increase it to 30G by "
#~ "doing:"
#~ msgstr ""
#~ "仮想マシンのディスク容量を大きくするために L<virt-resize(1)> を使用しま"
#~ "す。たとえば、ディスクイメージが 30G より小さければ、次を実行して 30G に増"
#~ "やします:"

#, no-wrap
#~ msgid ""
#~ " truncate -s 30G newdisk.img\n"
#~ " virt-filesystems -a /path/to/olddisk.img --all --long -h\n"
#~ " virt-resize /path/to/olddisk.img newdisk.img --expand /dev/sda1\n"
#~ " qemu-kvm -m 1024 -hda newdisk.img\n"
#~ "\n"
#~ msgstr ""
#~ " truncate -s 30G newdisk.img\n"
#~ " virt-filesystems -a /path/to/olddisk.img --all --long -h\n"
#~ " virt-resize /path/to/olddisk.img newdisk.img --expand /dev/sda1\n"
#~ " qemu-kvm -m 1024 -hda newdisk.img\n"
#~ "\n"

#~ msgid "Does the guest still boot? Try expanding other partitions."
#~ msgstr "仮想マシンがまだ起動しますか？他のパーティションの拡張を試します。"

#~ msgid "B<*> Sparsify a guest disk."
#~ msgstr "B<*> 仮想マシンのディスクをスパースにします。"

#~ msgid "Using L<virt-sparsify(1)>, make a disk image more sparse:"
#~ msgstr ""
#~ "L<virt-sparsify(1)> を使用して、ディスクイメージをよりスパースにします:"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify /path/to/olddisk.img newdisk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify /path/to/olddisk.img newdisk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep --hostname newhost.example.com -a /path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep --hostname newhost.example.com -a /path/to/disk.img\n"
#~ "\n"

#~ msgid ""
#~ "Was the sysprep successful? After booting, what changes were made and "
#~ "were they successful?"
#~ msgstr ""
#~ "sysprep が成功しましたか？起動後、何を変更しましたか、その変更は成功しまし"
#~ "たか？"

#~ msgid "Dump the Windows Registry from your Windows guests."
#~ msgstr "Windows ゲストから Windows レジストリをダンプします。"

#~ msgid ""
#~ "Use L<virt-win-reg(1)> to dump out the Windows Registry from any Windows "
#~ "guests that you have."
#~ msgstr ""
#~ "Windows 仮想マシンから Windows レジストリをダンプ出力するには L<virt-win-"
#~ "reg(1)> を使用します。"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\Software' |\n"
#~ "   less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\Software' |\n"
#~ "   less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\System' |\n"
#~ "   less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\System' |\n"
#~ "   less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\\username' |\n"
#~ "   less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\\username' |\n"
#~ "   less\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, L<http://"
#~ "libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<guestfs-examples(3)>, L<http://"
#~ "libguestfs.org/>."

#~ msgid "Copyright (C) 2011-2012 Red Hat Inc."
#~ msgstr "Copyright (C) 2011-2012 Red Hat Inc."

#, fuzzy, no-wrap
#~| msgid ""
#~| " char **\n"
#~| " guestfs_strings (guestfs_h *g,\n"
#~| "                  const char *path);\n"
#~| "\n"
#~ msgid ""
#~ " char *\n"
#~ " guestfs_int_replace_string (const char *str, const char *s1, const char *s2)\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_strings (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "virt-edit - Edit a file in a virtual machine"
#~ msgstr "virt-edit - 仮想マシンのファイルの編集"

#, no-wrap
#~ msgid ""
#~ " virt-edit [--options] -d domname file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit [--options] -d domname file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit [-d domname|-a disk.img] file -e 'expr'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit [-d domname|-a disk.img] file -e 'expr'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit domname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit domname file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit disk.img [disk.img ...] file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit disk.img [disk.img ...] file\n"
#~ "\n"

#~ msgid ""
#~ "C<virt-edit> is a command line tool to edit C<file> where each C<file> "
#~ "exists in the named virtual machine (or disk image)."
#~ msgstr ""
#~ "C<virt-edit> は名前付きの仮想マシン（またはディスクイメージ）にある、それ"
#~ "ぞれの C<ファイル> を編集するためのコマンドラインツールです。"

#~ msgid ""
#~ "Multiple filenames can be given, in which case they are each edited in "
#~ "turn.  Each filename must be a full path, starting at the root directory "
#~ "(starting with '/')."
#~ msgstr ""
#~ "複数のファイル名を指定できます。その場合、それぞれ順番に編集されます。各"
#~ "ファイル名はルートディレクトリーから始まる（つまり '/' から始まる）完全パ"
#~ "スである必要があります。"

#~ msgid "If you want to just view a file, use L<virt-cat(1)>."
#~ msgstr ""
#~ "単にファイルを表示したいだけならば、 L<virt-cat(1)> を使用してください。"

#~ msgid ""
#~ "For more complex cases you should look at the L<guestfish(1)> tool (see "
#~ "L</USING GUESTFISH> below)."
#~ msgstr ""
#~ "より複雑な場合に対しては L<guestfish(1)> ツールを参照してください（以下の "
#~ "L</guestfish の使用法> 参照）。"

#~ msgid ""
#~ "C<virt-edit> cannot be used to create a new file.  L<guestfish(1)> can do "
#~ "that and much more."
#~ msgstr ""
#~ "C<virt-edit> は新しいファイルを作成するために使用できません。 "
#~ "L<guestfish(1)> はこのことやさらにいろいろなことができます。"

#~ msgid "Edit the named files interactively:"
#~ msgstr "名前付きのファイルを対話的に編集します:"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /boot/grub/grub.conf\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /boot/grub/grub.conf\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /etc/passwd\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /etc/passwd\n"
#~ "\n"

#~ msgid "For Windows guests, some Windows paths are understood:"
#~ msgstr "Windows 仮想マシンに対しては、Windows のパスが解釈されます:"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
#~ "\n"

#~ msgid ""
#~ "If Perl is installed, you can also edit files non-interactively (see L</"
#~ "NON-INTERACTIVE EDITING> below).  To change the init default level to 5:"
#~ msgstr ""
#~ "Perl がインストールされていると、非対話的にファイルを編集することもできま"
#~ "す（以下の L</非対話的な編集方法> 参照）。 init の初期ランベルを 5 に変更"
#~ "するには:"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
#~ "\n"

#~ msgid ""
#~ "Create a backup of the original file I<in the guest disk image>.  The "
#~ "backup has the original filename with C<extension> added."
#~ msgstr ""
#~ "I<仮想マシンのディスクイメージにある> 元のファイルのバックアップを作成しま"
#~ "す。バックアップは元のファイル名に C<extension> を加えたものになります。"

#~ msgid ""
#~ "Usually the first character of C<extension> would be a dot C<.> so you "
#~ "would write:"
#~ msgstr ""
#~ "一般的に C<extension> の最初の文字はドット C<.> です。そのため次のように書"
#~ "きます:"

#, no-wrap
#~ msgid ""
#~ " virt-edit -b .orig [etc]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -b .orig [etc]\n"
#~ "\n"

#~ msgid "By default, no backup file is made."
#~ msgstr "初期設定では、バックアップファイルは作成されません。"

#~ msgid ""
#~ "If you specify guest block devices directly, then libvirt is not used at "
#~ "all."
#~ msgstr ""
#~ "仮想マシンのブロックデバイスを直接指定すると、libvirt はまったく使用されま"
#~ "せん。"

#~ msgid ""
#~ "When prompting for keys and passphrases, virt-edit normally turns echoing "
#~ "off so you cannot see what you are typing.  If you are not worried about "
#~ "Tempest attacks and there is no one else in the room you can specify this "
#~ "flag to see what you are typing."
#~ msgstr ""
#~ "キーやパスフレーズを入力するとき、通常 virt-edit はエコーを無効化します。 "
#~ "そのため、入力内容を確認できません。 テンペスト攻撃の心配がなく、 部屋に誰"
#~ "も居なければ、 入力内容を確認するためにこのフラグを指定できます。"

#~ msgid "B<-e> EXPR"
#~ msgstr "B<-e> EXPR"

#~ msgid "B<--expr> EXPR"
#~ msgstr "B<--expr> EXPR"

#~ msgid ""
#~ "Instead of launching the external editor, non-interactively apply the "
#~ "Perl expression C<EXPR> to each line in the file.  See L</NON-INTERACTIVE "
#~ "EDITING> below."
#~ msgstr ""
#~ "外部エディターを起動する代わりに、ファイルにある各行に対して非対話的に "
#~ "Perl 表現 C<EXPR> を適用します。以下の L</非対話的な編集方法> を参照してく"
#~ "ださい。"

#, no-wrap
#~ msgid ""
#~ " virt-edit --format=raw -a disk.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit --format=raw -a disk.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"

#~ msgid "Previous versions of virt-edit allowed you to write either:"
#~ msgstr "前のバージョンの virt-edit はどちらを書くこともできます:"

#, no-wrap
#~ msgid ""
#~ " virt-edit guestname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit guestname file\n"
#~ "\n"

#~ msgid "NON-INTERACTIVE EDITING"
#~ msgstr "非対話的な編集方法"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d domname filename -e 's/foo/bar/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d domname filename -e 's/foo/bar/'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /some text(\\r?\\n)?$/\n"
#~ "\n"
#~ msgstr ""
#~ " /some text(\\r?\\n)?$/\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " my $m = $_; chomp $m; $m =~ /some text$/\n"
#~ "\n"
#~ msgstr ""
#~ " my $m = $_; chomp $m; $m =~ /some text$/\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname edit /file\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname edit /file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
#~ "\n"

#~ msgid ""
#~ "C<virt-edit> cannot create new files.  Use the guestfish commands "
#~ "C<touch>, C<write> or C<upload> instead:"
#~ msgstr ""
#~ "C<virt-edit> は新しいファイルを作成できません。代わりに guestfish コマン"
#~ "ド C<touch>, C<write> または C<upload> を使用してください:"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname touch /newfile\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname touch /newfile\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname write /newfile \"new content\"\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname write /newfile \"new content\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname upload localfile /newfile\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname upload localfile /newfile\n"
#~ "\n"

#~ msgid "C<EDITOR>"
#~ msgstr "C<EDITOR>"

#~ msgid ""
#~ "If set, this string is used as the editor.  It may contain arguments, eg. "
#~ "C<\"emacs -nw\">"
#~ msgstr ""
#~ "設定されていると、この文字列がエディターとして使用されます。  C<\"emacs -"
#~ "nw\"> のように、引数を含めることもできます。"

#~ msgid "If not set, C<vi> is used."
#~ msgstr "設定されていないと、C<vi> が使用されます。"

#~ msgid ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, "
#~ "L<virt-tar-in(1)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>."
#~ msgstr ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, "
#~ "L<virt-tar-in(1)>, L<http://libguestfs.org/>, L<perl(1)>, L<perlre(1)>."

#~ msgid "guestfs-erlang - How to use libguestfs from Erlang"
#~ msgstr "guestfs-erlang - Erlang から libguestfs を使用する方法"

#, no-wrap
#~ msgid ""
#~ " {ok, G} = guestfs:create(),\n"
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]),\n"
#~ " ok = guestfs:launch(G),\n"
#~ " [Device] = guestfs:list_devices(G),\n"
#~ " ok = guestfs:close(G).\n"
#~ "\n"
#~ msgstr ""
#~ " {ok, G} = guestfs:create(),\n"
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]),\n"
#~ " ok = guestfs:launch(G),\n"
#~ " [Device] = guestfs:list_devices(G),\n"
#~ " ok = guestfs:close(G).\n"
#~ "\n"

#~ msgid "OPENING AND CLOSING THE HANDLE"
#~ msgstr "ハンドルのオープン方法およびクローズ方法"

#, no-wrap
#~ msgid ""
#~ " {ok, G} = guestfs:create().\n"
#~ "\n"
#~ msgstr ""
#~ " {ok, G} = guestfs:create().\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " {ok, G} = guestfs:create(\"/path/to/erl-guestfs\").\n"
#~ "\n"
#~ msgstr ""
#~ " {ok, G} = guestfs:create(\"/path/to/erl-guestfs\").\n"
#~ "\n"

#~ msgid ""
#~ "C<G> is the libguestfs handle which you should pass to other functions."
#~ msgstr "C<G> は他の関数に渡す libguestfs ハンドルです。"

#~ msgid "To close the handle:"
#~ msgstr "ハンドルを閉じるには:"

#, no-wrap
#~ msgid ""
#~ " ok = guestfs:close(G).\n"
#~ "\n"
#~ msgstr ""
#~ " ok = guestfs:close(G).\n"
#~ "\n"

#~ msgid "FUNCTIONS WITH OPTIONAL ARGUMENTS"
#~ msgstr "オプション引数を用いた機能"

#, no-wrap
#~ msgid ""
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]).\n"
#~ "\n"
#~ msgstr ""
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]).\n"
#~ "\n"

#~ msgid "If the last argument would be an empty list, you can also omit it:"
#~ msgstr "最後の引数が空の一覧ならば、それを省略できます:"

#, no-wrap
#~ msgid ""
#~ " ok = guestfs:add_drive_opts(G, Disk).\n"
#~ "\n"
#~ msgstr ""
#~ " ok = guestfs:add_drive_opts(G, Disk).\n"
#~ "\n"

#~ msgid "RETURN VALUES AND ERRORS"
#~ msgstr "返り値およびエラー"

#~ msgid "On error, you would see one of the following tuples:"
#~ msgstr "エラーが発生すると、以下の組のどれかが表示されます:"

#~ msgid "C<{error, Msg, Errno}>"
#~ msgstr "C<{error, Msg, Errno}>"

#~ msgid "This indicates an ordinary error from the function."
#~ msgstr "これは関数からの通常のエラーを意味します。"

#~ msgid ""
#~ "C<Msg> is the error message (string) and C<Errno> is the Unix error "
#~ "(integer)."
#~ msgstr ""
#~ "C<Msg> はエラーメッセージ（文字列）です。C<Errno> は Unix エラー（整数）で"
#~ "す。"

#~ msgid "C<Errno> can be zero.  See L<guestfs(3)/guestfs_last_errno>."
#~ msgstr ""
#~ "C<Errno> は 0 の可能性があります。 L<guestfs(3)/guestfs_last_errno> 参照。"

#~ msgid "C<{unknown, Function}>"
#~ msgstr "C<{unknown, Function}>"

#~ msgid "C<Function> is the name of the unknown function."
#~ msgstr "C<Function> は未知の関数の名前です。"

#~ msgid "C<{unknownarg, Arg}>"
#~ msgstr "C<{unknownarg, Arg}>"

#~ msgid "C<Arg> is the name of the unknown argument."
#~ msgstr "C<Arg> は未知の引数の名前です。"

#~ msgid "EXAMPLE 1: CREATE A DISK IMAGE"
#~ msgstr "例 1: ディスクイメージの作成"

#~ msgid "@EXAMPLE1@"
#~ msgstr "@EXAMPLE1@"

#~ msgid "EXAMPLE 2: INSPECT A VIRTUAL MACHINE DISK IMAGE"
#~ msgstr "例 2: 仮想マシンのディスクイメージの検査"

#~ msgid "@EXAMPLE2@"
#~ msgstr "@EXAMPLE2@"

#~ msgid "guestfs-examples - Examples of using libguestfs from C"
#~ msgstr "guestfs-examples - C から libguestfs を使用する例"

#, no-wrap
#~ msgid ""
#~ " #include <guestfs.h>\n"
#~ " \n"
#~ msgstr "#include <guestfs.h>\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive_ro (g, \"disk.img\");\n"
#~ " guestfs_launch (g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive_ro (g, \"disk.img\");\n"
#~ " guestfs_launch (g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cc prog.c -o prog -lguestfs\n"
#~ "or:\n"
#~ " cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
#~ "\n"
#~ msgstr ""
#~ " cc prog.c -o prog -lguestfs\n"
#~ "or:\n"
#~ " cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
#~ "\n"

#~ msgid ""
#~ "This manual page contains examples of calling libguestfs from the C "
#~ "programming language.  If you are not familiar with using libguestfs, you "
#~ "also need to read L<guestfs(3)>."
#~ msgstr ""
#~ "このマニュアルページは C プログラミング言語から libguestfs を呼び出す例が"
#~ "あります。 libguestfs を使用することに慣れていなければ、L<guestfs(3)> を読"
#~ "む必要もあります。"

#~ msgid "EXAMPLE: CREATE A DISK IMAGE"
#~ msgstr "例: ディスクイメージの作成"

#~ msgid "@CREATE_DISK@"
#~ msgstr "@CREATE_DISK@"

#~ msgid "EXAMPLE: INSPECT A VIRTUAL MACHINE DISK IMAGE"
#~ msgstr "例: 仮想マシンのディスクイメージの検査"

#~ msgid "@INSPECT_VM@"
#~ msgstr "@INSPECT_VM@"

#~ msgid "EXAMPLE: ENABLE DEBUGGING AND LOGGING"
#~ msgstr "例: デバッグおよびロギングの有効化"

#~ msgid "@DEBUG_LOGGING@"
#~ msgstr "@DEBUG_LOGGING@"

#~ msgid "EXAMPLE: DISPLAY THE OPERATING SYSTEM ICON OF A GUEST"
#~ msgstr "例: 仮想マシンにあるオペレーティングシステムのアイコンの表示"

#~ msgid "@DISPLAY_ICON@"
#~ msgstr "@DISPLAY_ICON@"

#~ msgid "EXAMPLE: THE LIBVIRT AUTHENTICATION API"
#~ msgstr "例: libvirt 認証 API"

#~ msgid "@LIBVIRT_AUTH@"
#~ msgstr "@LIBVIRT_AUTH@"

#~ msgid "EXAMPLE: THE MOUNT LOCAL API"
#~ msgstr "例: ローカル API のマウント"

#~ msgid "@MOUNT_LOCAL@"
#~ msgstr "@MOUNT_LOCAL@"

#~ msgid "EXAMPLE: MULTIPLE HANDLES AND THREADS"
#~ msgstr "例: 複数のハンドルおよびスレッド"

#~ msgid "@COPY_OVER@"
#~ msgstr "@COPY_OVER@"

#~ msgid "EXAMPLE: FETCH DHCP ADDRESS FROM A GUEST"
#~ msgstr "例: 仮想マシンからの DHCP アドレスの取得"

#~ msgid "@VIRT_DHCP_ADDRESS@"
#~ msgstr "@VIRT_DHCP_ADDRESS@"

#~ msgid "acl-delete-def-file"
#~ msgstr "acl-delete-def-file"

#, no-wrap
#~ msgid ""
#~ " acl-delete-def-file dir\n"
#~ "\n"
#~ msgstr ""
#~ " acl-delete-def-file dir\n"
#~ "\n"

#~ msgid ""
#~ "This function deletes the default POSIX Access Control List (ACL)  "
#~ "attached to directory C<dir>."
#~ msgstr ""
#~ "この関数はディレクトリー C<dir> に設定されている標準の POSIX アクセス制御"
#~ "リスト (ACL: Access Control List) を削除します。"

#~ msgid "acl-get-file"
#~ msgstr "acl-get-file"

#, no-wrap
#~ msgid ""
#~ " acl-get-file path acltype\n"
#~ "\n"
#~ msgstr ""
#~ " acl-get-file path acltype\n"
#~ "\n"

#~ msgid "C<access>"
#~ msgstr "C<access>"

#~ msgid "C<default>"
#~ msgstr "C<default>"

#~ msgid "acl-set-file"
#~ msgstr "acl-set-file"

#, no-wrap
#~ msgid ""
#~ " acl-set-file path acltype acl\n"
#~ "\n"
#~ msgstr ""
#~ " acl-set-file path acltype acl\n"
#~ "\n"

#~ msgid "add-cdrom"
#~ msgstr "add-cdrom"

#, no-wrap
#~ msgid ""
#~ " add-cdrom filename\n"
#~ "\n"
#~ msgstr ""
#~ " add-cdrom filename\n"
#~ "\n"

#~ msgid "This function adds a virtual CD-ROM disk image to the guest."
#~ msgstr "この関数は仮想 CD-ROM ディスクイメージを仮想マシンに追加します。"

#~ msgid "add-domain"
#~ msgstr "add-domain"

#~ msgid "domain"
#~ msgstr "domain"

#~ msgid "readonlydisk = \"error\""
#~ msgstr "readonlydisk = \"error\""

#~ msgid "If C<readonly> is false:"
#~ msgstr "C<readonly> が偽ならば:"

#~ msgid "If C<readonly> is true:"
#~ msgstr "C<readonly> が真ならば:"

#~ msgid "Disks with the E<lt>readonly/E<gt> flag are added read-only."
#~ msgstr ""
#~ "E<lt>readonly/E<gt> フラグを持つディスクは読み込み専用で追加されます。"

#~ msgid "readonlydisk = \"read\""
#~ msgstr "readonlydisk = \"read\""

#~ msgid ""
#~ "Disks with the E<lt>readonly/E<gt> flag are added read-only.  Other disks "
#~ "are added read/write."
#~ msgstr ""
#~ "E<lt>readonly/E<gt> フラグを持つディスクは読み込み専用で追加されます。他の"
#~ "ディスクは読み書き用で追加されます。"

#~ msgid "readonlydisk = \"write\" (default)"
#~ msgstr "readonlydisk = \"write\" (デフォルト)"

#~ msgid "Disks with the E<lt>readonly/E<gt> flag are added read/write."
#~ msgstr ""
#~ "E<lt>readonly/E<gt> フラグを持つディスクは読み書き用で追加されます。"

#~ msgid "readonlydisk = \"ignore\""
#~ msgstr "readonlydisk = \"ignore\""

#~ msgid "If C<readonly> is true or false:"
#~ msgstr "C<readonly> が真または偽ならば:"

#~ msgid "Disks with the E<lt>readonly/E<gt> flag are skipped."
#~ msgstr "E<lt>readonly/E<gt> フラグのあるディスクはスキップされます"

#~ msgid ""
#~ "The other optional parameters are passed directly through to L</add-drive-"
#~ "opts>."
#~ msgstr "他のオプション引数は直接 L</add-drive-opts> に渡されます。"

#~ msgid ""
#~ "This command has one or more optional arguments.  See L</OPTIONAL "
#~ "ARGUMENTS>."
#~ msgstr ""
#~ "このコマンドは 1 つまたはそれ以上のオプション引数を持つ必要があります。 "
#~ "L</オプション引数> を参照してください。"

#~ msgid "add-drive"
#~ msgstr "add-drive"

#~ msgid "add"
#~ msgstr "add"

#~ msgid "add-drive-opts"
#~ msgstr "add-drive-opts"

#~ msgid "The optional arguments are:"
#~ msgstr "オプション引数は次のとおりです:"

#~ msgid "C<readonly>"
#~ msgstr "C<readonly>"

#~ msgid "C<format>"
#~ msgstr "C<format>"

#~ msgid "C<iface>"
#~ msgstr "C<iface>"

#~ msgid "C<name>"
#~ msgstr "C<name>"

#~ msgid "C<label>"
#~ msgstr "C<label>"

#~ msgid "See L<guestfs(3)/DISK LABELS>."
#~ msgstr "L<guestfs(3)/ディスクラベル>を参照してください。"

#~ msgid "C<username>"
#~ msgstr "C<username>"

#~ msgid "add-drive-ro"
#~ msgstr "add-drive-ro"

#~ msgid "add-ro"
#~ msgstr "add-ro"

#, no-wrap
#~ msgid ""
#~ " add-drive-ro filename\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-ro filename\n"
#~ "\n"

#~ msgid "add-drive-ro-with-if"
#~ msgstr "add-drive-ro-with-if"

#, no-wrap
#~ msgid ""
#~ " add-drive-ro-with-if filename iface\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-ro-with-if filename iface\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</add-drive> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</add-drive> を"
#~ "使用してください。"

#~ msgid "add-drive-with-if"
#~ msgstr "add-drive-with-if"

#, no-wrap
#~ msgid ""
#~ " add-drive-with-if filename iface\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-with-if filename iface\n"
#~ "\n"

#~ msgid "aug-clear"
#~ msgstr "aug-clear"

#, no-wrap
#~ msgid ""
#~ " aug-clear augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-clear augpath\n"
#~ "\n"

#~ msgid "aug-close"
#~ msgstr "aug-close"

#, no-wrap
#~ msgid ""
#~ " aug-close\n"
#~ "\n"
#~ msgstr ""
#~ " aug-close\n"
#~ "\n"

#~ msgid "aug-defnode"
#~ msgstr "aug-defnode"

#, no-wrap
#~ msgid ""
#~ " aug-defnode name expr val\n"
#~ "\n"
#~ msgstr ""
#~ " aug-defnode name expr val\n"
#~ "\n"

#~ msgid ""
#~ "Defines a variable C<name> whose value is the result of evaluating "
#~ "C<expr>."
#~ msgstr "その値が C<expr> を評価した結果である変数 C<name> を定義します。"

#, fuzzy
#~| msgid ""
#~| "If C<expr> evaluates to an empty nodeset, a node is created, equivalent "
#~| "to calling C<guestfs_aug_set> C<expr>, C<value>.  C<name> will be the "
#~| "nodeset containing that single node."
#~ msgid ""
#~ "If C<expr> evaluates to an empty nodeset, a node is created, equivalent "
#~ "to calling L</aug-set> C<expr>, C<val>.  C<name> will be the nodeset "
#~ "containing that single node."
#~ msgstr ""
#~ "C<expr> が空のノードセットであると評価された場合、ノードが作成されます。"
#~ "C<guestfs_aug_set> C<expr>, C<value> を呼び出すことと同等です。C<name>  は"
#~ "単一のノードを含むノードセットです。"

#~ msgid ""
#~ "On success this returns a pair containing the number of nodes in the "
#~ "nodeset, and a boolean flag if a node was created."
#~ msgstr ""
#~ "成功した場合、ノードセットに含まれるノード数を含むペアが返されます。また、"
#~ "ノードが作成されたかどうかの論理フラグが返されます。"

#~ msgid "aug-defvar"
#~ msgstr "aug-defvar"

#, no-wrap
#~ msgid ""
#~ " aug-defvar name expr\n"
#~ "\n"
#~ msgstr ""
#~ " aug-defvar name expr\n"
#~ "\n"

#~ msgid ""
#~ "Defines an Augeas variable C<name> whose value is the result of "
#~ "evaluating C<expr>.  If C<expr> is NULL, then C<name> is undefined."
#~ msgstr ""
#~ "C<expr> を評価した結果の値である Augeas 変数 C<name> を定義します。 "
#~ "C<expr> が NULL ならば、 C<name> が定義されません。"

#~ msgid ""
#~ "On success this returns the number of nodes in C<expr>, or C<0> if "
#~ "C<expr> evaluates to something which is not a nodeset."
#~ msgstr ""
#~ "成功した場合、C<expr> にあるノード数が返されます。または、C<expr> がノード"
#~ "セット以外のものであると評価された場合、C<0> が返されます。"

#~ msgid "aug-get"
#~ msgstr "aug-get"

#, no-wrap
#~ msgid ""
#~ " aug-get augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-get augpath\n"
#~ "\n"

#~ msgid ""
#~ "Look up the value associated with C<path>.  If C<path> matches exactly "
#~ "one node, the C<value> is returned."
#~ msgstr ""
#~ "C<path> と関連づけられた値を検索します。C<path> がちょうど一つのノードと一"
#~ "致した場合、C<value> が返されます。"

#~ msgid "aug-init"
#~ msgstr "aug-init"

#, no-wrap
#~ msgid ""
#~ " aug-init root flags\n"
#~ "\n"
#~ msgstr ""
#~ " aug-init root flags\n"
#~ "\n"

#~ msgid "C<AUG_SAVE_BACKUP> = 1"
#~ msgstr "C<AUG_SAVE_BACKUP> = 1"

#~ msgid "Keep the original file with a C<.augsave> extension."
#~ msgstr "C<.augsave> 拡張子を付けて元のファイルを保持します。"

#~ msgid "C<AUG_SAVE_NEWFILE> = 2"
#~ msgstr "C<AUG_SAVE_NEWFILE> = 2"

#~ msgid ""
#~ "Save changes into a file with extension C<.augnew>, and do not overwrite "
#~ "original.  Overrides C<AUG_SAVE_BACKUP>."
#~ msgstr ""
#~ "拡張子 C<.augnew> を付けたファイルに変更点を保存し、元を上書きしません。"
#~ "C<AUG_SAVE_BACKUP> を上書きします。"

#~ msgid "C<AUG_TYPE_CHECK> = 4"
#~ msgstr "C<AUG_TYPE_CHECK> = 4"

#~ msgid "C<AUG_NO_STDINC> = 8"
#~ msgstr "C<AUG_NO_STDINC> = 8"

#~ msgid "Do not use standard load path for modules."
#~ msgstr "モジュールの標準的な読み込みパスを使用しません。"

#~ msgid "C<AUG_SAVE_NOOP> = 16"
#~ msgstr "C<AUG_SAVE_NOOP> = 16"

#~ msgid "C<AUG_NO_LOAD> = 32"
#~ msgstr "C<AUG_NO_LOAD> = 32"

#~ msgid "Do not load the tree in L</aug-init>."
#~ msgstr "L</aug-init> にあるツリーを読み込みません。"

#~ msgid "To close the handle, you can call L</aug-close>."
#~ msgstr "ハンドルを閉じるには、L</aug-close> を呼び出す必要があります。"

#~ msgid "To find out more about Augeas, see L<http://augeas.net/>."
#~ msgstr "Augeas に関する詳細は L<http://augeas.net/> を参照してください。"

#~ msgid "aug-insert"
#~ msgstr "aug-insert"

#, no-wrap
#~ msgid ""
#~ " aug-insert augpath label true|false\n"
#~ "\n"
#~ msgstr ""
#~ " aug-insert augpath label true|false\n"
#~ "\n"

#~ msgid "aug-load"
#~ msgstr "aug-load"

#, no-wrap
#~ msgid ""
#~ " aug-load\n"
#~ "\n"
#~ msgstr ""
#~ " aug-load\n"
#~ "\n"

#~ msgid "Load files into the tree."
#~ msgstr "ファイルをツリーの中に読み込みます"

#~ msgid "aug-ls"
#~ msgstr "aug-ls"

#, no-wrap
#~ msgid ""
#~ " aug-ls augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-ls augpath\n"
#~ "\n"

#~ msgid "aug-match"
#~ msgstr "aug-match"

#, no-wrap
#~ msgid ""
#~ " aug-match augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-match augpath\n"
#~ "\n"

#~ msgid "aug-mv"
#~ msgstr "aug-mv"

#, no-wrap
#~ msgid ""
#~ " aug-mv src dest\n"
#~ "\n"
#~ msgstr ""
#~ " aug-mv src dest\n"
#~ "\n"

#~ msgid ""
#~ "Move the node C<src> to C<dest>.  C<src> must match exactly one node.  "
#~ "C<dest> is overwritten if it exists."
#~ msgstr ""
#~ "ノード C<src> を C<dest> に移動します。 C<src> はただ一つのノードである必"
#~ "要があります。 C<dest> は存在すると上書きされます。"

#~ msgid "aug-rm"
#~ msgstr "aug-rm"

#, no-wrap
#~ msgid ""
#~ " aug-rm augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-rm augpath\n"
#~ "\n"

#~ msgid "Remove C<path> and all of its children."
#~ msgstr "C<path> とすべての子を削除します。"

#~ msgid "On success this returns the number of entries which were removed."
#~ msgstr "成功すると、これは削除された項目の数が返します。"

#~ msgid "aug-save"
#~ msgstr "aug-save"

#, no-wrap
#~ msgid ""
#~ " aug-save\n"
#~ "\n"
#~ msgstr ""
#~ " aug-save\n"
#~ "\n"

#~ msgid "This writes all pending changes to disk."
#~ msgstr "これにより、すべての保留の変更がディスクに書き込まれます。"

#~ msgid "aug-set"
#~ msgstr "aug-set"

#, no-wrap
#~ msgid ""
#~ " aug-set augpath val\n"
#~ "\n"
#~ msgstr ""
#~ " aug-set augpath val\n"
#~ "\n"

#~ msgid "available"
#~ msgstr "available"

#, no-wrap
#~ msgid ""
#~ " available 'groups ...'\n"
#~ "\n"
#~ msgstr ""
#~ " available 'groups ...'\n"
#~ "\n"

#~ msgid "I<Notes:>"
#~ msgstr "I<注記:>"

#~ msgid "See also L</filesystem-available>."
#~ msgstr "L</filesystem-available> 参照。"

#~ msgid "available-all-groups"
#~ msgstr "available-all-groups"

#, no-wrap
#~ msgid ""
#~ " available-all-groups\n"
#~ "\n"
#~ msgstr ""
#~ " available-all-groups\n"
#~ "\n"

#~ msgid "base64-in"
#~ msgstr "base64-in"

#, no-wrap
#~ msgid ""
#~ " base64-in (base64file|-) filename\n"
#~ "\n"
#~ msgstr ""
#~ " base64-in (base64file|-) filename\n"
#~ "\n"

#~ msgid "Use C<-> instead of a filename to read/write from stdin/stdout."
#~ msgstr ""
#~ "標準入力/標準出力から読み込み/書き込みするには、ファイル名の代わりに C<-> "
#~ "を使用します。"

#~ msgid "base64-out"
#~ msgstr "base64-out"

#, no-wrap
#~ msgid ""
#~ " base64-out filename (base64file|-)\n"
#~ "\n"
#~ msgstr ""
#~ " base64-out filename (base64file|-)\n"
#~ "\n"

#~ msgid "blkid"
#~ msgstr "blkid"

#, no-wrap
#~ msgid ""
#~ " blkid device\n"
#~ "\n"
#~ msgstr ""
#~ " blkid device\n"
#~ "\n"

#~ msgid "C<UUID>"
#~ msgstr "C<UUID>"

#~ msgid "The uuid of this device."
#~ msgstr "このデバイスのUUID。"

#~ msgid "C<LABEL>"
#~ msgstr "C<LABEL>"

#~ msgid "The label of this device."
#~ msgstr "このデバイスのラベル。"

#~ msgid "C<VERSION>"
#~ msgstr "C<VERSION>"

#~ msgid "The version of blkid command."
#~ msgstr "blkid コマンドのバージョン。"

#~ msgid "C<TYPE>"
#~ msgstr "C<TYPE>"

#~ msgid "The filesystem type or RAID of this device."
#~ msgstr "このデバイスのファイルシステム形式または RAID。"

#~ msgid "C<USAGE>"
#~ msgstr "C<USAGE>"

#~ msgid "The usage of this device, for example C<filesystem> or C<raid>."
#~ msgstr "このデバイスの使用法です。たとえば、C<filesystem> や C<raid>。"

#~ msgid "blockdev-flushbufs"
#~ msgstr "blockdev-flushbufs"

#, no-wrap
#~ msgid ""
#~ " blockdev-flushbufs device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-flushbufs device\n"
#~ "\n"

#~ msgid ""
#~ "This tells the kernel to flush internal buffers associated with C<device>."
#~ msgstr ""
#~ "C<device> と関連づけられている内部バッファーをフラッシュするようカーネルに"
#~ "指示します。"

#~ msgid "This uses the L<blockdev(8)> command."
#~ msgstr "これは L<blockdev(8)> コマンドを使用します。"

#~ msgid "blockdev-getbsz"
#~ msgstr "blockdev-getbsz"

#, no-wrap
#~ msgid ""
#~ " blockdev-getbsz device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getbsz device\n"
#~ "\n"

#~ msgid "This returns the block size of a device."
#~ msgstr "これはデバイスのブロック容量を返します。"

#~ msgid "blockdev-getro"
#~ msgstr "blockdev-getro"

#, no-wrap
#~ msgid ""
#~ " blockdev-getro device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getro device\n"
#~ "\n"

#~ msgid ""
#~ "Returns a boolean indicating if the block device is read-only (true if "
#~ "read-only, false if not)."
#~ msgstr ""
#~ "ブロックデバイスが読み込み専用であるかどうかを示す論理値を返します（読み込"
#~ "み専用ならば真、そうでなければ偽）。"

#~ msgid "blockdev-getsize64"
#~ msgstr "blockdev-getsize64"

#, no-wrap
#~ msgid ""
#~ " blockdev-getsize64 device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getsize64 device\n"
#~ "\n"

#~ msgid "This returns the size of the device in bytes."
#~ msgstr "これはデバイスの容量をバイト単位で返します。"

#~ msgid "See also L</blockdev-getsz>."
#~ msgstr "L</blockdev-getsz> 参照。"

#~ msgid "blockdev-getss"
#~ msgstr "blockdev-getss"

#, no-wrap
#~ msgid ""
#~ " blockdev-getss device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getss device\n"
#~ "\n"

#~ msgid ""
#~ "This returns the size of sectors on a block device.  Usually 512, but can "
#~ "be larger for modern devices."
#~ msgstr ""
#~ "これはブロックデバイスのセクター容量を返します。通常は 512 ですが、最近の"
#~ "デバイスはより大きいかもしれません。"

#~ msgid ""
#~ "(Note, this is not the size in sectors, use L</blockdev-getsz> for that)."
#~ msgstr ""
#~ "（これはセクターのサイズではありません、そのためには L</blockdev-getsz> を"
#~ "使用する必要があることに注意してください）。"

#~ msgid "blockdev-getsz"
#~ msgstr "blockdev-getsz"

#, no-wrap
#~ msgid ""
#~ " blockdev-getsz device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getsz device\n"
#~ "\n"

#~ msgid "blockdev-rereadpt"
#~ msgstr "blockdev-rereadpt"

#, no-wrap
#~ msgid ""
#~ " blockdev-rereadpt device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-rereadpt device\n"
#~ "\n"

#~ msgid "Reread the partition table on C<device>."
#~ msgstr "C<device> のパーティションテーブルを再読み込みします。"

#~ msgid "blockdev-setbsz"
#~ msgstr "blockdev-setbsz"

#, no-wrap
#~ msgid ""
#~ " blockdev-setbsz device blocksize\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setbsz device blocksize\n"
#~ "\n"

#, fuzzy
#~ msgid "blockdev-setra"
#~ msgstr "blockdev-setro"

#, fuzzy, no-wrap
#~ msgid ""
#~ " blockdev-setra device sectors\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setro device\n"
#~ "\n"

#~ msgid "blockdev-setro"
#~ msgstr "blockdev-setro"

#, no-wrap
#~ msgid ""
#~ " blockdev-setro device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setro device\n"
#~ "\n"

#~ msgid "Sets the block device named C<device> to read-only."
#~ msgstr "C<device> という名前のブロックデバイスを読み込み専用に設定します。"

#~ msgid "blockdev-setrw"
#~ msgstr "blockdev-setrw"

#, no-wrap
#~ msgid ""
#~ " blockdev-setrw device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setrw device\n"
#~ "\n"

#~ msgid "Sets the block device named C<device> to read-write."
#~ msgstr "C<device> という名前のブロックデバイスを読み書きに設定します。"

#, fuzzy
#~ msgid "btrfs-balance-cancel"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-balance-cancel path\n"
#~ "\n"
#~ msgstr ""
#~ " truncate path\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-balance-pause"
#~ msgstr "btrfs-filesystem-balance"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-balance-pause path\n"
#~ "\n"
#~ msgstr ""
#~ " truncate path\n"
#~ "\n"

#, fuzzy
#~ msgid "Pause a running balance on a btrfs filesystem."
#~ msgstr "このコマンドは btrfs ファイルシステムの容量を変更します。"

#, fuzzy
#~ msgid "btrfs-balance-resume"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-balance-resume path\n"
#~ "\n"
#~ msgstr ""
#~ " read-lines path\n"
#~ "\n"

#, fuzzy
#~ msgid "Resume a paused balance on a btrfs filesystem."
#~ msgstr "このコマンドは btrfs ファイルシステムの容量を変更します。"

#, fuzzy
#~ msgid "btrfs-balance-status"
#~ msgstr "btrfs-filesystem-balance"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-balance-status path\n"
#~ "\n"
#~ msgstr ""
#~ " truncate path\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "Show the status of a running or paused balance on a btrfs filesystem."
#~ msgstr "このコマンドは btrfs ファイルシステムの容量を変更します。"

#~ msgid "btrfs-device-add"
#~ msgstr "btrfs-device-add"

#, no-wrap
#~ msgid ""
#~ " btrfs-device-add 'devices ...' fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-device-add 'devices ...' fs\n"
#~ "\n"

#~ msgid ""
#~ "Add the list of device(s) in C<devices> to the btrfs filesystem mounted "
#~ "at C<fs>.  If C<devices> is an empty list, this does nothing."
#~ msgstr ""
#~ "C<devices> にあるデバイスの一覧を C<fs> にマウントされた btrfs ファイルシ"
#~ "ステムに追加します。もし C<devices> が空の一覧ならば、何もしません。"

#~ msgid "btrfs-device-delete"
#~ msgstr "btrfs-device-delete"

#, no-wrap
#~ msgid ""
#~ " btrfs-device-delete 'devices ...' fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-device-delete 'devices ...' fs\n"
#~ "\n"

#~ msgid ""
#~ "Remove the C<devices> from the btrfs filesystem mounted at C<fs>.  If "
#~ "C<devices> is an empty list, this does nothing."
#~ msgstr ""
#~ "C<devices> にあるデバイスの一覧を C<fs> にマウントされた btrfs ファイルシ"
#~ "ステムから削除します。もし C<devices> が空の一覧ならば、何もしません。"

#~ msgid "btrfs-filesystem-balance"
#~ msgstr "btrfs-filesystem-balance"

#, fuzzy
#~ msgid "btrfs-balance"
#~ msgstr "btrfs-filesystem-balance"

#, no-wrap
#~ msgid ""
#~ " btrfs-filesystem-balance fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-filesystem-balance fs\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-filesystem-defragment"
#~ msgstr "btrfs-filesystem-resize"

#~ msgid "btrfs-filesystem-resize"
#~ msgstr "btrfs-filesystem-resize"

#, no-wrap
#~ msgid ""
#~ " btrfs-filesystem-resize mountpoint [size:N]\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-filesystem-resize mountpoint [size:N]\n"
#~ "\n"

#~ msgid "This command resizes a btrfs filesystem."
#~ msgstr "このコマンドは btrfs ファイルシステムの容量を変更します。"

#~ msgid "The optional parameters are:"
#~ msgstr "オプションのパラメーターは次のとおりです:"

#~ msgid "C<size>"
#~ msgstr "C<size>"

#~ msgid ""
#~ "The new size (in bytes) of the filesystem.  If omitted, the filesystem is "
#~ "resized to the maximum size."
#~ msgstr ""
#~ "ファイルシステムの新しい容量（バイト単位）。省略されると、ファイルシステム"
#~ "は最大の容量に変更されます。"

#~ msgid "See also L<btrfs(8)>."
#~ msgstr "L<btrfs(8)> 参照。"

#~ msgid "btrfs-filesystem-sync"
#~ msgstr "btrfs-filesystem-sync"

#, no-wrap
#~ msgid ""
#~ " btrfs-filesystem-sync fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-filesystem-sync fs\n"
#~ "\n"

#~ msgid "Force sync on the btrfs filesystem mounted at C<fs>."
#~ msgstr ""
#~ "C<fs> にマウントされた btrfs ファイルシステムにおいて強制同期します。"

#~ msgid "btrfs-fsck"
#~ msgstr "btrfs-fsck"

#, no-wrap
#~ msgid ""
#~ " btrfs-fsck device [superblock:N] [repair:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-fsck device [superblock:N] [repair:true|false]\n"
#~ "\n"

#~ msgid ""
#~ "Used to check a btrfs filesystem, C<device> is the device file where the "
#~ "filesystem is stored."
#~ msgstr ""
#~ "btrfs ファイルシステムをチェックするために使用されると、C<device> はファイ"
#~ "ルシステムが保存されているデバイスファイルです。"

#, fuzzy
#~ msgid "btrfs-qgroup-create"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-qgroup-create qgroupid subvolume\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-qgroup-destroy qgroupid subvolume\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-qgroup-limit"
#~ msgstr "btrfs-subvolume-list"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-qgroup-limit subvolume size\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"

#, fuzzy
#~ msgid "Remove qgroup C<src> from the parent qgroup C<dst>."
#~ msgstr "環境から C<VAR> を削除します。"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-qgroup-show path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-quota-enable"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-quota-enable fs true|false\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-set-seeding device true|false\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-quota-rescan"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-quota-rescan fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-list fs\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-rescue-chunk-recover device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-disk-geometry device\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-rescue-super-recover device\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-device-delete 'devices ...' fs\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-scrub-cancel"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-scrub-cancel path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#, fuzzy
#~ msgid "Cancel a running scrub on a btrfs filesystem."
#~ msgstr "このコマンドは btrfs ファイルシステムの容量を変更します。"

#, fuzzy
#~ msgid "btrfs-scrub-resume"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-scrub-resume path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-scrub-start"
#~ msgstr "btrfs-subvolume-list"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-scrub-start path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-scrub-status"
#~ msgstr "btrfs-subvolume-list"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-scrub-status path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#, fuzzy
#~ msgid "Show status of running or finished scrub on a btrfs filesystem."
#~ msgstr "このコマンドは btrfs ファイルシステムの容量を変更します。"

#~ msgid "btrfs-set-seeding"
#~ msgstr "btrfs-set-seeding"

#, no-wrap
#~ msgid ""
#~ " btrfs-set-seeding device true|false\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-set-seeding device true|false\n"
#~ "\n"

#~ msgid ""
#~ "Enable or disable the seeding feature of a device that contains a btrfs "
#~ "filesystem."
#~ msgstr ""
#~ "btrfs ファイルシステムを含むデバイスの seeding 機能を有効化または無効化し"
#~ "ます。"

#~ msgid "btrfs-subvolume-create"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy
#~ msgid "btrfs-subvolume-create-opts"
#~ msgstr "btrfs-subvolume-create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-create dest [qgroupid:..]\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-create dest\n"
#~ "\n"

#~ msgid "btrfs-subvolume-delete"
#~ msgstr "btrfs-subvolume-delete"

#, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"

#, fuzzy
#~ msgid "Delete the named btrfs subvolume or snapshot."
#~ msgstr "名前付き btrfs サブボリュームを削除します。"

#, fuzzy
#~ msgid "btrfs-subvolume-get-default"
#~ msgstr "btrfs-subvolume-set-default"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-get-default fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-set-default id fs\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "Get the default subvolume or snapshot of a filesystem mounted at "
#~ "C<mountpoint>."
#~ msgstr ""
#~ "C<fs> にマウントされている btrfs ファイルシステムの btrfs スナップショット"
#~ "とサブディレクトリーを一覧表示します。"

#~ msgid "btrfs-subvolume-list"
#~ msgstr "btrfs-subvolume-list"

#, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-list fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-list fs\n"
#~ "\n"

#~ msgid ""
#~ "List the btrfs snapshots and subvolumes of the btrfs filesystem which is "
#~ "mounted at C<fs>."
#~ msgstr ""
#~ "C<fs> にマウントされている btrfs ファイルシステムの btrfs スナップショット"
#~ "とサブディレクトリーを一覧表示します。"

#~ msgid "btrfs-subvolume-set-default"
#~ msgstr "btrfs-subvolume-set-default"

#, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-set-default id fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-set-default id fs\n"
#~ "\n"

#, fuzzy
#~ msgid "btrfs-subvolume-show"
#~ msgstr "btrfs-subvolume-snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-show subvolume\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"

#, fuzzy
#~ msgid "Return detailed information of the subvolume."
#~ msgstr "与えられた C<path> のファイル情報を返します。"

#~ msgid "btrfs-subvolume-snapshot"
#~ msgstr "btrfs-subvolume-snapshot"

#, fuzzy
#~ msgid "btrfs-subvolume-snapshot-opts"
#~ msgstr "btrfs-subvolume-snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-snapshot source dest [ro:true|false] [qgroupid:..]\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-snapshot source dest\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " c-pointer\n"
#~ "\n"
#~ msgstr ""
#~ " mountpoints\n"
#~ "\n"

#~ msgid "canonical-device-name"
#~ msgstr "canonical-device-name"

#, no-wrap
#~ msgid ""
#~ " canonical-device-name device\n"
#~ "\n"
#~ msgstr ""
#~ " canonical-device-name device\n"
#~ "\n"

#~ msgid "Other strings are returned unmodified."
#~ msgstr "他の文字列は修正されずに返されます。"

#~ msgid "cap-get-file"
#~ msgstr "cap-get-file"

#, no-wrap
#~ msgid ""
#~ " cap-get-file path\n"
#~ "\n"
#~ msgstr ""
#~ " cap-get-file path\n"
#~ "\n"

#~ msgid "cap-set-file"
#~ msgstr "cap-set-file"

#, no-wrap
#~ msgid ""
#~ " cap-set-file path cap\n"
#~ "\n"
#~ msgstr ""
#~ " cap-set-file path cap\n"
#~ "\n"

#~ msgid "case-sensitive-path"
#~ msgstr "case-sensitive-path"

#, no-wrap
#~ msgid ""
#~ " case-sensitive-path path\n"
#~ "\n"
#~ msgstr ""
#~ " case-sensitive-path path\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "Bug or feature? You decide: L<http://www.tuxera.com/community/ntfs-3g-"
#~| "faq/#posixfilenames1>"
#~ msgid ""
#~ "Bug or feature? You decide: L<https://www.tuxera.com/community/ntfs-3g-"
#~ "faq/#posixfilenames1>"
#~ msgstr ""
#~ "バグか機能か？次を見て決めてください: L<http://www.tuxera.com/community/"
#~ "ntfs-3g-faq/#posixfilenames1>"

#~ msgid "See also L</realpath>."
#~ msgstr "L</realpath> 参照。"

#~ msgid "cat"
#~ msgstr "cat"

#, no-wrap
#~ msgid ""
#~ " cat path\n"
#~ "\n"
#~ msgstr ""
#~ " cat path\n"
#~ "\n"

#~ msgid "Return the contents of the file named C<path>."
#~ msgstr "C<path> という名前のファイルの内容を返します。"

#~ msgid "checksum"
#~ msgstr "checksum"

#, no-wrap
#~ msgid ""
#~ " checksum csumtype path\n"
#~ "\n"
#~ msgstr ""
#~ " checksum csumtype path\n"
#~ "\n"

#~ msgid ""
#~ "This call computes the MD5, SHAx or CRC checksum of the file named "
#~ "C<path>."
#~ msgstr ""
#~ "この呼び出しは C<path> という名前のファイルの MD5, SHAx または CRC チェッ"
#~ "クサムを計算します。"

#~ msgid ""
#~ "The type of checksum to compute is given by the C<csumtype> parameter "
#~ "which must have one of the following values:"
#~ msgstr ""
#~ "計算するチェックサムの種類は、以下の値のどれかである C<csumtype> パラメー"
#~ "ターにより与えられます:"

#~ msgid "C<crc>"
#~ msgstr "C<crc>"

#~ msgid ""
#~ "Compute the cyclic redundancy check (CRC) specified by POSIX for the "
#~ "C<cksum> command."
#~ msgstr ""
#~ "C<cksum> コマンドに対して POSIX により指定された巡回冗長検査 (CRC: cyclic "
#~ "redundancy check) を計算します。"

#~ msgid "C<md5>"
#~ msgstr "C<md5>"

#, fuzzy
#~| msgid "Compute the MD5 hash (using the C<md5sum> program)."
#~ msgid "Compute the MD5 hash (using the L<md5sum(1)> program)."
#~ msgstr "（C<md5sum> プログラムを用いて）MD5 ハッシュを計算します。"

#~ msgid "C<sha1>"
#~ msgstr "C<sha1>"

#, fuzzy
#~| msgid "Compute the SHA1 hash (using the C<sha1sum> program)."
#~ msgid "Compute the SHA1 hash (using the L<sha1sum(1)> program)."
#~ msgstr "（C<sha1sum> プログラムを用いて）SHA1 ハッシュを計算します。"

#~ msgid "C<sha224>"
#~ msgstr "C<sha224>"

#, fuzzy
#~| msgid "Compute the SHA224 hash (using the C<sha224sum> program)."
#~ msgid "Compute the SHA224 hash (using the L<sha224sum(1)> program)."
#~ msgstr "（C<sha224sum> プログラムを用いて）SHA224 ハッシュを計算します。"

#~ msgid "C<sha256>"
#~ msgstr "C<sha256>"

#, fuzzy
#~| msgid "Compute the SHA256 hash (using the C<sha256sum> program)."
#~ msgid "Compute the SHA256 hash (using the L<sha256sum(1)> program)."
#~ msgstr "（C<sha256sum> プログラムを用いて）SHA256 ハッシュを計算します。"

#~ msgid "C<sha384>"
#~ msgstr "C<sha384>"

#, fuzzy
#~| msgid "Compute the SHA384 hash (using the C<sha384sum> program)."
#~ msgid "Compute the SHA384 hash (using the L<sha384sum(1)> program)."
#~ msgstr "（C<sha384sum> プログラムを用いて）SHA384 ハッシュを計算します。"

#~ msgid "C<sha512>"
#~ msgstr "C<sha512>"

#, fuzzy
#~| msgid "Compute the SHA512 hash (using the C<sha512sum> program)."
#~ msgid "Compute the SHA512 hash (using the L<sha512sum(1)> program)."
#~ msgstr "（C<sha512sum> プログラムを用いて）SHA512 ハッシュを計算します。"

#~ msgid "The checksum is returned as a printable string."
#~ msgstr "チェックサムは表示可能な文字列として返されます。"

#~ msgid "To get the checksum for a device, use L</checksum-device>."
#~ msgstr ""
#~ "デバイスのチェックサムを取得するには L</checksum-device> を使用します。"

#~ msgid "To get the checksums for many files, use L</checksums-out>."
#~ msgstr ""
#~ "多くのファイルのチェックサムを取得するには L</checksums-out> を使用しま"
#~ "す。"

#~ msgid "checksum-device"
#~ msgstr "checksum-device"

#, no-wrap
#~ msgid ""
#~ " checksum-device csumtype device\n"
#~ "\n"
#~ msgstr ""
#~ " checksum-device csumtype device\n"
#~ "\n"

#~ msgid "checksums-out"
#~ msgstr "checksums-out"

#, no-wrap
#~ msgid ""
#~ " checksums-out csumtype directory (sumsfile|-)\n"
#~ "\n"
#~ msgstr ""
#~ " checksums-out csumtype directory (sumsfile|-)\n"
#~ "\n"

#~ msgid "chmod"
#~ msgstr "chmod"

#, no-wrap
#~ msgid ""
#~ " chmod mode path\n"
#~ "\n"
#~ msgstr ""
#~ " chmod mode path\n"
#~ "\n"

#~ msgid "The mode actually set is affected by the umask."
#~ msgstr "実際に設定されるモードは umask により影響されます。"

#~ msgid "chown"
#~ msgstr "chown"

#, no-wrap
#~ msgid ""
#~ " chown owner group path\n"
#~ "\n"
#~ msgstr ""
#~ " chown owner group path\n"
#~ "\n"

#~ msgid "Change the file owner to C<owner> and group to C<group>."
#~ msgstr "ファイルの所有者を C<owner> に、グループを C<group> に変更します。"

#~ msgid "command"
#~ msgstr "command"

#, no-wrap
#~ msgid ""
#~ " command 'arguments ...'\n"
#~ "\n"
#~ msgstr ""
#~ " command 'arguments ...'\n"
#~ "\n"

#~ msgid "command-lines"
#~ msgstr "command-lines"

#, no-wrap
#~ msgid ""
#~ " command-lines 'arguments ...'\n"
#~ "\n"
#~ msgstr ""
#~ " command-lines 'arguments ...'\n"
#~ "\n"

#~ msgid "See also: L</sh-lines>"
#~ msgstr "関連項目: L</sh-lines>"

#~ msgid "compress-device-out"
#~ msgstr "compress-device-out"

#, no-wrap
#~ msgid ""
#~ " compress-device-out ctype device (zdevice|-) [level:N]\n"
#~ "\n"
#~ msgstr ""
#~ " compress-device-out ctype device (zdevice|-) [level:N]\n"
#~ "\n"

#~ msgid "compress-out"
#~ msgstr "compress-out"

#, no-wrap
#~ msgid ""
#~ " compress-out ctype file (zfile|-) [level:N]\n"
#~ "\n"
#~ msgstr ""
#~ " compress-out ctype file (zfile|-) [level:N]\n"
#~ "\n"

#~ msgid "config"
#~ msgstr "config"

#~ msgid "copy-device-to-device"
#~ msgstr "copy-device-to-device"

#~ msgid ""
#~ "The source and destination may be the same object.  However overlapping "
#~ "regions may not be copied correctly."
#~ msgstr ""
#~ "ソースと宛先は同じオブジェクトである可能性があります。しかしながら、重なり"
#~ "合う領域は正しくコピーされないかもしれません。"

#~ msgid ""
#~ "If the destination is a file, it is created if required.  If the "
#~ "destination file is not large enough, it is extended."
#~ msgstr ""
#~ "宛先がファイルならば、必要に応じて作成されます。宛先ファイルが十分に大きく"
#~ "なければ、拡張されます。"

#~ msgid "copy-device-to-file"
#~ msgstr "copy-device-to-file"

#~ msgid "See L</copy-device-to-device> for a general overview of this call."
#~ msgstr ""
#~ "この呼び出しの一般的な概要は L</copy-device-to-device> を参照してくださ"
#~ "い。"

#~ msgid "copy-file-to-device"
#~ msgstr "copy-file-to-device"

#~ msgid "copy-file-to-file"
#~ msgstr "copy-file-to-file"

#~ msgid "copy-size"
#~ msgstr "copy-size"

#, no-wrap
#~ msgid ""
#~ " copy-size src dest size\n"
#~ "\n"
#~ msgstr ""
#~ " copy-size src dest size\n"
#~ "\n"

#~ msgid "cp"
#~ msgstr "cp"

#, no-wrap
#~ msgid ""
#~ " cp src dest\n"
#~ "\n"
#~ msgstr ""
#~ " cp src dest\n"
#~ "\n"

#~ msgid ""
#~ "This copies a file from C<src> to C<dest> where C<dest> is either a "
#~ "destination filename or destination directory."
#~ msgstr ""
#~ "ファイルを C<src> から C<dest> にコピーします。ここで C<dest> は宛先ファイ"
#~ "ル名または宛先ディレクトリです。"

#~ msgid "cp-a"
#~ msgstr "cp-a"

#, no-wrap
#~ msgid ""
#~ " cp-a src dest\n"
#~ "\n"
#~ msgstr ""
#~ " cp-a src dest\n"
#~ "\n"

#~ msgid ""
#~ "This copies a file or directory from C<src> to C<dest> recursively using "
#~ "the C<cp -a> command."
#~ msgstr ""
#~ "ファイルまたはディレクトリを C<src> から C<dest> に C<cp -a> コマンドを使"
#~ "用して再帰的にコピーします。"

#~ msgid "dd"
#~ msgstr "dd"

#, no-wrap
#~ msgid ""
#~ " dd src dest\n"
#~ "\n"
#~ msgstr ""
#~ " dd src dest\n"
#~ "\n"

#~ msgid "device-index"
#~ msgstr "device-index"

#, no-wrap
#~ msgid ""
#~ " device-index device\n"
#~ "\n"
#~ msgstr ""
#~ " device-index device\n"
#~ "\n"

#~ msgid ""
#~ "This function takes a device name (eg. \"/dev/sdb\") and returns the "
#~ "index of the device in the list of devices."
#~ msgstr ""
#~ "この関数はデバイス名 (例: \"/dev/sdb\") を取得し、デバイスの一覧にあるデバ"
#~ "イスのインデックスを返します。"

#~ msgid "See also L</list-devices>, L</part-to-dev>."
#~ msgstr "L</list-devices>, L</part-to-dev> 参照。"

#~ msgid "df"
#~ msgstr "df"

#, no-wrap
#~ msgid ""
#~ " df\n"
#~ "\n"
#~ msgstr ""
#~ " df\n"
#~ "\n"

#, fuzzy
#~| msgid "This command runs the C<df> command to report disk space used."
#~ msgid "This command runs the L<df(1)> command to report disk space used."
#~ msgstr ""
#~ "このコマンドはディスク使用状況を報告するために C<df> コマンドを実行しま"
#~ "す。"

#~ msgid "df-h"
#~ msgstr "df-h"

#, no-wrap
#~ msgid ""
#~ " df-h\n"
#~ "\n"
#~ msgstr ""
#~ " df-h\n"
#~ "\n"

#~ msgid ""
#~ "This command runs the C<df -h> command to report disk space used in human-"
#~ "readable format."
#~ msgstr ""
#~ "このコマンドはディスク使用状況を読みやすい形式で報告するために C<df -h> コ"
#~ "マンドを実行します。"

#~ msgid "disk-format"
#~ msgstr "disk-format"

#, no-wrap
#~ msgid ""
#~ " disk-format filename\n"
#~ "\n"
#~ msgstr ""
#~ " disk-format filename\n"
#~ "\n"

#~ msgid "See also: L<guestfs(3)/DISK IMAGE FORMATS>"
#~ msgstr "関連項目: L<guestfs(3)/ディスクイメージ形式>"

#~ msgid "disk-has-backing-file"
#~ msgstr "disk-has-backing-file"

#, no-wrap
#~ msgid ""
#~ " disk-has-backing-file filename\n"
#~ "\n"
#~ msgstr ""
#~ " disk-has-backing-file filename\n"
#~ "\n"

#~ msgid "disk-virtual-size"
#~ msgstr "disk-virtual-size"

#, no-wrap
#~ msgid ""
#~ " disk-virtual-size filename\n"
#~ "\n"
#~ msgstr ""
#~ " disk-virtual-size filename\n"
#~ "\n"

#~ msgid "dmesg"
#~ msgstr "dmesg"

#, no-wrap
#~ msgid ""
#~ " dmesg\n"
#~ "\n"
#~ msgstr ""
#~ " dmesg\n"
#~ "\n"

#~ msgid "download"
#~ msgstr "download"

#, no-wrap
#~ msgid ""
#~ " download remotefilename (filename|-)\n"
#~ "\n"
#~ msgstr ""
#~ " download remotefilename (filename|-)\n"
#~ "\n"

#~ msgid "See also L</upload>, L</cat>."
#~ msgstr "L</upload>, L</cat> 参照。"

#~ msgid "download-offset"
#~ msgstr "download-offset"

#, no-wrap
#~ msgid ""
#~ " download-offset remotefilename (filename|-) offset size\n"
#~ "\n"
#~ msgstr ""
#~ " download-offset remotefilename (filename|-) offset size\n"
#~ "\n"

#~ msgid "See also L</download>, L</pread>."
#~ msgstr "L</download>, L</pread> 参照。"

#~ msgid "drop-caches"
#~ msgstr "drop-caches"

#, no-wrap
#~ msgid ""
#~ " drop-caches whattodrop\n"
#~ "\n"
#~ msgstr ""
#~ " drop-caches whattodrop\n"
#~ "\n"

#~ msgid "Setting C<whattodrop> to 3 should drop everything."
#~ msgstr "C<whattodrop> を 3 に設定することにより、すべてのものを破棄します。"

#~ msgid "du"
#~ msgstr "du"

#, no-wrap
#~ msgid ""
#~ " du path\n"
#~ "\n"
#~ msgstr ""
#~ " du path\n"
#~ "\n"

#~ msgid ""
#~ "This command runs the C<du -s> command to estimate file space usage for "
#~ "C<path>."
#~ msgstr ""
#~ "このコマンドは C<path> のファイル空間使用量を見積もるために C<du -s> コマ"
#~ "ンドを実行します。"

#~ msgid ""
#~ "The result is the estimated size in I<kilobytes> (ie. units of 1024 "
#~ "bytes)."
#~ msgstr ""
#~ "結果は I<キロバイト> (つまり 1024 バイトの単位) の見積もり容量です。"

#~ msgid "e2fsck"
#~ msgstr "e2fsck"

#, no-wrap
#~ msgid ""
#~ " e2fsck device [correct:true|false] [forceall:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " e2fsck device [correct:true|false] [forceall:true|false]\n"
#~ "\n"

#~ msgid "C<correct>"
#~ msgstr "C<correct>"

#~ msgid "C<forceall>"
#~ msgstr "C<forceall>"

#~ msgid ""
#~ "This option may not be specified at the same time as the C<correct> "
#~ "option."
#~ msgstr "このオプションは C<correct> オプションと同時に指定できません。"

#~ msgid "e2fsck-f"
#~ msgstr "e2fsck-f"

#, no-wrap
#~ msgid ""
#~ " e2fsck-f device\n"
#~ "\n"
#~ msgstr ""
#~ " e2fsck-f device\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</e2fsck> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</e2fsck> を使用"
#~ "してください。"

#~ msgid "echo-daemon"
#~ msgstr "echo-daemon"

#, no-wrap
#~ msgid ""
#~ " echo-daemon 'words ...'\n"
#~ "\n"
#~ msgstr ""
#~ " echo-daemon 'words ...'\n"
#~ "\n"

#~ msgid "See also L</ping-daemon>."
#~ msgstr "L</ping-daemon> 参照。"

#~ msgid "egrep"
#~ msgstr "egrep"

#, no-wrap
#~ msgid ""
#~ " egrep regex path\n"
#~ "\n"
#~ msgstr ""
#~ " egrep regex path\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "This calls the external C<egrep> program and returns the matching lines."
#~ msgid ""
#~ "This calls the external L<egrep(1)> program and returns the matching "
#~ "lines."
#~ msgstr "これは外部の C<egrep> プログラムを呼び出し、一致した行を返します。"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</grep> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</grep> を使用し"
#~ "てください。"

#~ msgid "egrepi"
#~ msgstr "egrepi"

#, no-wrap
#~ msgid ""
#~ " egrepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " egrepi regex path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<egrep -i> program and returns the matching "
#~ "lines."
#~ msgstr ""
#~ "これは外部の C<egrep -i> プログラムを呼び出し、一致した行を返します。"

#~ msgid "equal"
#~ msgstr "equal"

#, no-wrap
#~ msgid ""
#~ " equal file1 file2\n"
#~ "\n"
#~ msgstr ""
#~ " equal file1 file2\n"
#~ "\n"

#~ msgid "The external L<cmp(1)> program is used for the comparison."
#~ msgstr "外部の L<cmp(1)> プログラムが比較のために使用されます。"

#~ msgid "exists"
#~ msgstr "exists"

#, no-wrap
#~ msgid ""
#~ " exists path\n"
#~ "\n"
#~ msgstr ""
#~ " exists path\n"
#~ "\n"

#~ msgid "See also L</is-file>, L</is-dir>, L</stat>."
#~ msgstr "L</is-file>, L</is-dir>, L</stat> 参照。"

#~ msgid "extlinux"
#~ msgstr "extlinux"

#, no-wrap
#~ msgid ""
#~ " extlinux directory\n"
#~ "\n"
#~ msgstr ""
#~ " extlinux directory\n"
#~ "\n"

#~ msgid "fallocate"
#~ msgstr "fallocate"

#, no-wrap
#~ msgid ""
#~ " fallocate path len\n"
#~ "\n"
#~ msgstr ""
#~ " fallocate path len\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</fallocate64> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</fallocate64> "
#~ "を使用してください。"

#~ msgid "fallocate64"
#~ msgstr "fallocate64"

#, no-wrap
#~ msgid ""
#~ " fallocate64 path len\n"
#~ "\n"
#~ msgstr ""
#~ " fallocate64 path len\n"
#~ "\n"

#~ msgid "fgrep"
#~ msgstr "fgrep"

#, no-wrap
#~ msgid ""
#~ " fgrep pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " fgrep pattern path\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "This calls the external C<zfgrep> program and returns the matching lines."
#~ msgid ""
#~ "This calls the external L<fgrep(1)> program and returns the matching "
#~ "lines."
#~ msgstr "これは外部の C<zfgrep> プログラムを呼び出し、一致する行を返します。"

#~ msgid "fgrepi"
#~ msgstr "fgrepi"

#, no-wrap
#~ msgid ""
#~ " fgrepi pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " fgrepi pattern path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<fgrep -i> program and returns the matching "
#~ "lines."
#~ msgstr "外部の C<fgrep -i> プログラムを呼び出し、一致した行を返します。"

#~ msgid "file"
#~ msgstr "file"

#, no-wrap
#~ msgid ""
#~ " file path\n"
#~ "\n"
#~ msgstr ""
#~ " file path\n"
#~ "\n"

#~ msgid ""
#~ "This call uses the standard L<file(1)> command to determine the type or "
#~ "contents of the file."
#~ msgstr ""
#~ "この呼び出しは、ファイルの形式または内容を決定するために、標準的な "
#~ "L<file(1)> コマンドを使用します。"

#~ msgid ""
#~ "See also: L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-"
#~ "blockdev> (etc), L</is-zero>."
#~ msgstr ""
#~ "関連項目: L<file(1)>, L</vfs-type>, L</lstat>, L</is-file>, L</is-"
#~ "blockdev> (etc), L</is-zero>"

#~ msgid "file-architecture"
#~ msgstr "file-architecture"

#, no-wrap
#~ msgid ""
#~ " file-architecture filename\n"
#~ "\n"
#~ msgstr ""
#~ " file-architecture filename\n"
#~ "\n"

#~ msgid "Currently defined architectures are:"
#~ msgstr "現在定義されているアーキテクチャーは次のとおりです:"

#~ msgid "\"i386\""
#~ msgstr "\"i386\""

#~ msgid ""
#~ "This string is returned for all 32 bit i386, i486, i586, i686 binaries "
#~ "irrespective of the precise processor requirements of the binary."
#~ msgstr ""
#~ "この文字列は、バイナリーの正確なプロセッサー要求にかかわりなく、すべての "
#~ "32 ビット i386, i486, i586, i686 バイナリーに対して返されます。"

#~ msgid "\"ia64\""
#~ msgstr "\"ia64\""

#~ msgid "Intel Itanium."
#~ msgstr "Intel Itanium."

#~ msgid "\"ppc\""
#~ msgstr "\"ppc\""

#~ msgid "32 bit Power PC."
#~ msgstr "32 ビット Power PC."

#~ msgid "\"ppc64\""
#~ msgstr "\"ppc64\""

#~ msgid "\"sparc\""
#~ msgstr "\"sparc\""

#~ msgid "32 bit SPARC."
#~ msgstr "32 ビット SPARC."

#~ msgid "\"sparc64\""
#~ msgstr "\"sparc64\""

#~ msgid "64 bit SPARC V9 and above."
#~ msgstr "64 ビット SPARC V9 およびそれ以降."

#~ msgid "\"x86_64\""
#~ msgstr "\"x86_64\""

#~ msgid "64 bit x86-64."
#~ msgstr "64 ビット x86-64."

#~ msgid "Libguestfs may return other architecture strings in future."
#~ msgstr "libguestfs は将来他のアーキテクチャー文字列を返すかもしれません。"

#~ msgid "The function works on at least the following types of files:"
#~ msgstr "この関数は少なくとも以下の種類のファイルにおいて機能します:"

#~ msgid "many types of Un*x and Linux binary"
#~ msgstr "多くの種類の Un*x および Linux バイナリー"

#~ msgid "many types of Un*x and Linux shared library"
#~ msgstr "多くの種類の Un*x および Linux 共有ライブラリー"

#~ msgid "Windows Win32 and Win64 binaries"
#~ msgstr "Windows Win32 および Win64 バイナリー"

#~ msgid "Windows Win32 and Win64 DLLs"
#~ msgstr "Windows Win32 および Win64 DLL"

#~ msgid "Win32 binaries and DLLs return C<i386>."
#~ msgstr "Win32 バイナリーと DLL が C<i386> を返します。"

#~ msgid "Win64 binaries and DLLs return C<x86_64>."
#~ msgstr "Win64 バイナリーと DLL が C<x86_64> を返します。"

#~ msgid "Linux kernel modules"
#~ msgstr "Linux カーネルモジュール"

#~ msgid "Linux new-style initrd images"
#~ msgstr "新形式の Linux initrd イメージ"

#~ msgid "some non-x86 Linux vmlinuz kernels"
#~ msgstr "いくつかの非 x86 Linux vmlinuz カーネル"

#~ msgid "What it can't do currently:"
#~ msgstr "今のところ実行できないこと:"

#~ msgid "static libraries (libfoo.a)"
#~ msgstr "静的ライブラリー (libfoo.a)"

#~ msgid "Linux old-style initrd as compressed ext2 filesystem (RHEL 3)"
#~ msgstr ""
#~ "圧縮された ext2 ファイルシステムとして Linux 旧形式の initrd (RHEL 3)"

#~ msgid "x86 Linux vmlinuz kernels"
#~ msgstr "x86 Linux vmlinuz カーネル"

#~ msgid "filesize"
#~ msgstr "filesize"

#, no-wrap
#~ msgid ""
#~ " filesize file\n"
#~ "\n"
#~ msgstr ""
#~ " filesize file\n"
#~ "\n"

#~ msgid ""
#~ "To get other stats about a file, use L</stat>, L</lstat>, L</is-dir>, L</"
#~ "is-file> etc.  To get the size of block devices, use L</blockdev-"
#~ "getsize64>."
#~ msgstr ""
#~ "ファイルに関する他の統計を取得するには use L</stat>, L</lstat>, L</is-"
#~ "dir>, L</is-file> などを使用します。ブロックデバイスの容量を取得するには "
#~ "L</blockdev-getsize64> を使用します。"

#~ msgid "filesystem-available"
#~ msgstr "filesystem-available"

#, no-wrap
#~ msgid ""
#~ " filesystem-available filesystem\n"
#~ "\n"
#~ msgstr ""
#~ " filesystem-available filesystem\n"
#~ "\n"

#~ msgid "You must call L</launch> before using this command."
#~ msgstr "このコマンドを使用する前に L</launch> を呼び出す必要があります。"

#~ msgid "'b'"
#~ msgstr "'b'"

#~ msgid "Block special"
#~ msgstr "ブロック特殊"

#~ msgid "'c'"
#~ msgstr "'c'"

#~ msgid "Char special"
#~ msgstr "キャラクター特殊"

#~ msgid "'d'"
#~ msgstr "'d'"

#~ msgid "Directory"
#~ msgstr "ディレクトリ"

#~ msgid "'f'"
#~ msgstr "'f'"

#~ msgid "FIFO (named pipe)"
#~ msgstr "FIFO (名前付きパイプ)"

#~ msgid "'l'"
#~ msgstr "'l'"

#~ msgid "Symbolic link"
#~ msgstr "シンボリックリンク"

#~ msgid "'r'"
#~ msgstr "'r'"

#~ msgid "Regular file"
#~ msgstr "通常のファイル"

#~ msgid "'s'"
#~ msgstr "'s'"

#~ msgid "Socket"
#~ msgstr "ソケット"

#~ msgid "'h'"
#~ msgstr "'h'"

#~ msgid "'u'"
#~ msgstr "'u'"

#~ msgid "Unknown file type"
#~ msgstr "未知のファイル種別"

#~ msgid "fill"
#~ msgstr "fill"

#, no-wrap
#~ msgid ""
#~ " fill c len path\n"
#~ "\n"
#~ msgstr ""
#~ " fill c len path\n"
#~ "\n"

#~ msgid ""
#~ "This command creates a new file called C<path>.  The initial content of "
#~ "the file is C<len> octets of C<c>, where C<c> must be a number in the "
#~ "range C<[0..255]>."
#~ msgstr ""
#~ "このコマンドは C<path> という新しいファイルを作成します。初期の内容は "
#~ "C<len> オクテットの C<c> です。ここで C<c> は C<[0..255]> の範囲の数値であ"
#~ "る必要があります。"

#~ msgid "fill-dir"
#~ msgstr "fill-dir"

#, no-wrap
#~ msgid ""
#~ " fill-dir dir nr\n"
#~ "\n"
#~ msgstr ""
#~ " fill-dir dir nr\n"
#~ "\n"

#~ msgid "fill-pattern"
#~ msgstr "fill-pattern"

#, no-wrap
#~ msgid ""
#~ " fill-pattern pattern len path\n"
#~ "\n"
#~ msgstr ""
#~ " fill-pattern pattern len path\n"
#~ "\n"

#~ msgid "find"
#~ msgstr "find"

#, no-wrap
#~ msgid ""
#~ " find directory\n"
#~ "\n"
#~ msgstr ""
#~ " find directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /tmp/a\n"
#~ " /tmp/b\n"
#~ " /tmp/c/d\n"
#~ "\n"
#~ msgstr ""
#~ " /tmp/a\n"
#~ " /tmp/b\n"
#~ " /tmp/c/d\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " a\n"
#~ " b\n"
#~ " c\n"
#~ " c/d\n"
#~ "\n"
#~ msgstr ""
#~ " a\n"
#~ " b\n"
#~ " c\n"
#~ " c/d\n"
#~ "\n"

#~ msgid "The returned list is sorted."
#~ msgstr "返された一覧は並び替えられています。"

#~ msgid "find0"
#~ msgstr "find0"

#, no-wrap
#~ msgid ""
#~ " find0 directory (files|-)\n"
#~ "\n"
#~ msgstr ""
#~ " find0 directory (files|-)\n"
#~ "\n"

#~ msgid "The result list is not sorted."
#~ msgstr "結果の一覧はソートされていません。"

#~ msgid "findfs-label"
#~ msgstr "findfs-label"

#, no-wrap
#~ msgid ""
#~ " findfs-label label\n"
#~ "\n"
#~ msgstr ""
#~ " findfs-label label\n"
#~ "\n"

#~ msgid "To find the label of a filesystem, use L</vfs-label>."
#~ msgstr "ファイルシステムのラベルを検索するには L</vfs-label> を使用します。"

#~ msgid "findfs-uuid"
#~ msgstr "findfs-uuid"

#, no-wrap
#~ msgid ""
#~ " findfs-uuid uuid\n"
#~ "\n"
#~ msgstr ""
#~ " findfs-uuid uuid\n"
#~ "\n"

#~ msgid "To find the UUID of a filesystem, use L</vfs-uuid>."
#~ msgstr "ファイルシステムの UUID を検索するには L</vfs-uuid> を使用します。"

#~ msgid "fsck"
#~ msgstr "fsck"

#, no-wrap
#~ msgid ""
#~ " fsck fstype device\n"
#~ "\n"
#~ msgstr ""
#~ " fsck fstype device\n"
#~ "\n"

#~ msgid ""
#~ "The returned integer is the status.  See L<fsck(8)> for the list of "
#~ "status codes from C<fsck>."
#~ msgstr ""
#~ "返された整数は状態です。 C<fsck> からの状態コードの一覧は L<fsck(8)> を参"
#~ "照してください。"

#~ msgid "Multiple status codes can be summed together."
#~ msgstr "複数の状態コードが同時に合計されるかもしれません。"

#~ msgid "fstrim"
#~ msgstr "fstrim"

#, no-wrap
#~ msgid ""
#~ " fstrim mountpoint [offset:N] [length:N] [minimumfreeextent:N]\n"
#~ "\n"
#~ msgstr ""
#~ " fstrim mountpoint [offset:N] [length:N] [minimumfreeextent:N]\n"
#~ "\n"

#~ msgid "get-append"
#~ msgstr "get-append"

#, no-wrap
#~ msgid ""
#~ " get-append\n"
#~ "\n"
#~ msgstr ""
#~ " get-append\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "Return the additional kernel options which are added to the libguestfs "
#~ "appliance kernel command line."
#~ msgstr ""
#~ "この関数は、追加のオプションを仮想マシンのカーネルコマンドラインに追加する"
#~ "ために使用されます。"

#~ msgid "If C<NULL> then no options are added."
#~ msgstr "C<NULL> ならば、オプションが追加されません。"

#~ msgid "get-attach-method"
#~ msgstr "get-attach-method"

#, no-wrap
#~ msgid ""
#~ " get-attach-method\n"
#~ "\n"
#~ msgstr ""
#~ " get-attach-method\n"
#~ "\n"

#~ msgid "get-autosync"
#~ msgstr "get-autosync"

#, no-wrap
#~ msgid ""
#~ " get-autosync\n"
#~ "\n"
#~ msgstr ""
#~ " get-autosync\n"
#~ "\n"

#~ msgid "Get the autosync flag."
#~ msgstr "autosync フラグを取得します。"

#~ msgid "get-cachedir"
#~ msgstr "get-cachedir"

#, no-wrap
#~ msgid ""
#~ " get-cachedir\n"
#~ "\n"
#~ msgstr ""
#~ " get-cachedir\n"
#~ "\n"

#~ msgid "Get the directory used by the handle to store the appliance cache."
#~ msgstr ""
#~ "アプライアンスのキャッシュを保存するために、ハンドルにより使用されるディレ"
#~ "クトリーを取得します。"

#~ msgid "get-direct"
#~ msgstr "get-direct"

#, no-wrap
#~ msgid ""
#~ " get-direct\n"
#~ "\n"
#~ msgstr ""
#~ " get-direct\n"
#~ "\n"

#~ msgid "get-e2attrs"
#~ msgstr "get-e2attrs"

#, no-wrap
#~ msgid ""
#~ " get-e2attrs file\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2attrs file\n"
#~ "\n"

#~ msgid "'A'"
#~ msgstr "'A'"

#~ msgid "When the file is accessed, its atime is not modified."
#~ msgstr "ファイルがアクセスされたとき、アクセス日時 (atime) を変更しません。"

#~ msgid "'a'"
#~ msgstr "'a'"

#~ msgid "The file is append-only."
#~ msgstr "ファイルは追記専用です。"

#~ msgid "The file is compressed on-disk."
#~ msgstr "ファイルはディスクにおいて圧縮されます。"

#~ msgid "'D'"
#~ msgstr "'D'"

#~ msgid ""
#~ "(Directories only.)  Changes to this directory are written synchronously "
#~ "to disk."
#~ msgstr ""
#~ "(ディレクトリーのみ。) このディレクトリーへの変更がディスクに同期的に書き"
#~ "込まれます。"

#~ msgid "'E'"
#~ msgstr "'E'"

#~ msgid "The file has compression errors."
#~ msgstr "ファイルは圧縮エラーがあります。"

#~ msgid "'e'"
#~ msgstr "'e'"

#~ msgid "The file is using extents."
#~ msgstr "ファイルは拡張属性を使用しています。"

#~ msgid "'I'"
#~ msgstr "'I'"

#~ msgid "(Directories only.)  The directory is using hashed trees."
#~ msgstr ""
#~ "(ディレクトリーのみ。)  ディレクトリーはハッシュツリーを使用しています。"

#~ msgid "'i'"
#~ msgstr "'i'"

#~ msgid "'j'"
#~ msgstr "'j'"

#~ msgid "The file is data-journaled."
#~ msgstr "ファイルはジャーナル付きデータです。"

#~ msgid "When the file is deleted, all its blocks will be zeroed."
#~ msgstr ""
#~ "ファイルが削除されるとき、そのブロックはすべてゼロが書き込みされます。"

#~ msgid "'S'"
#~ msgstr "'S'"

#~ msgid "Changes to this file are written synchronously to disk."
#~ msgstr "このファイルへの変更は同期的にディスクに書き込まれます。"

#~ msgid "'T'"
#~ msgstr "'T'"

#~ msgid "'t'"
#~ msgstr "'t'"

#~ msgid "'X'"
#~ msgstr "'X'"

#~ msgid "The raw contents of the compressed file may be accessed."
#~ msgstr "圧縮ファイルの内容にアクセスできます。"

#~ msgid "'Z'"
#~ msgstr "'Z'"

#~ msgid "The compressed file is dirty."
#~ msgstr "圧縮されたファイルがダーティーです。"

#~ msgid "See also L</set-e2attrs>."
#~ msgstr "L</set-e2attrs> 参照。"

#~ msgid "get-e2generation"
#~ msgstr "get-e2generation"

#, no-wrap
#~ msgid ""
#~ " get-e2generation file\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2generation file\n"
#~ "\n"

#~ msgid "See L</set-e2generation>."
#~ msgstr "L</set-e2generation> 参照。"

#~ msgid "get-e2label"
#~ msgstr "get-e2label"

#, no-wrap
#~ msgid ""
#~ " get-e2label device\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2label device\n"
#~ "\n"

#~ msgid ""
#~ "This returns the ext2/3/4 filesystem label of the filesystem on C<device>."
#~ msgstr ""
#~ "これは C<device> にあるファイルシステムの ext2/3/4 ファイルシステムラベル"
#~ "を返します。"

#~ msgid "get-e2uuid"
#~ msgstr "get-e2uuid"

#, no-wrap
#~ msgid ""
#~ " get-e2uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2uuid device\n"
#~ "\n"

#~ msgid ""
#~ "This returns the ext2/3/4 filesystem UUID of the filesystem on C<device>."
#~ msgstr ""
#~ "これは C<device> にあるファイルシステムの ext2/3/4 ファイルシステム UUID "
#~ "を返します。"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</vfs-uuid> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</vfs-uuid> を使"
#~ "用してください。"

#~ msgid "get-libvirt-requested-credential-challenge"
#~ msgstr "get-libvirt-requested-credential-challenge"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credential-challenge index\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credential-challenge index\n"
#~ "\n"

#~ msgid "get-libvirt-requested-credential-defresult"
#~ msgstr "get-libvirt-requested-credential-defresult"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credential-defresult index\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credential-defresult index\n"
#~ "\n"

#~ msgid "get-libvirt-requested-credential-prompt"
#~ msgstr "get-libvirt-requested-credential-prompt"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credential-prompt index\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credential-prompt index\n"
#~ "\n"

#~ msgid "get-libvirt-requested-credentials"
#~ msgstr "get-libvirt-requested-credentials"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credentials\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credentials\n"
#~ "\n"

#~ msgid "get-memsize"
#~ msgstr "get-memsize"

#, no-wrap
#~ msgid ""
#~ " get-memsize\n"
#~ "\n"
#~ msgstr ""
#~ " get-memsize\n"
#~ "\n"

#~ msgid ""
#~ "For more information on the architecture of libguestfs, see L<guestfs(3)>."
#~ msgstr ""
#~ "libguestfs のアーキテクチャーの詳細は L<guestfs(3)> を参照してください。"

#~ msgid "get-network"
#~ msgstr "get-network"

#, no-wrap
#~ msgid ""
#~ " get-network\n"
#~ "\n"
#~ msgstr ""
#~ " get-network\n"
#~ "\n"

#~ msgid "This returns the enable network flag."
#~ msgstr "これは有効化されているネットワークフラグを返します。"

#~ msgid "get-path"
#~ msgstr "get-path"

#, no-wrap
#~ msgid ""
#~ " get-path\n"
#~ "\n"
#~ msgstr ""
#~ " get-path\n"
#~ "\n"

#~ msgid "Return the current search path."
#~ msgstr "現在の検索パスを返します。"

#~ msgid "get-pgroup"
#~ msgstr "get-pgroup"

#, no-wrap
#~ msgid ""
#~ " get-pgroup\n"
#~ "\n"
#~ msgstr ""
#~ " get-pgroup\n"
#~ "\n"

#~ msgid "This returns the process group flag."
#~ msgstr "これはプロセスグループフラグを返します。"

#~ msgid "get-pid"
#~ msgstr "get-pid"

#~ msgid "pid"
#~ msgstr "pid"

#, no-wrap
#~ msgid ""
#~ " get-pid\n"
#~ "\n"
#~ msgstr ""
#~ " get-pid\n"
#~ "\n"

#~ msgid "get-qemu"
#~ msgstr "get-qemu"

#, no-wrap
#~ msgid ""
#~ " get-qemu\n"
#~ "\n"
#~ msgstr ""
#~ " get-qemu\n"
#~ "\n"

#~ msgid "get-recovery-proc"
#~ msgstr "get-recovery-proc"

#, no-wrap
#~ msgid ""
#~ " get-recovery-proc\n"
#~ "\n"
#~ msgstr ""
#~ " get-recovery-proc\n"
#~ "\n"

#~ msgid "Return the recovery process enabled flag."
#~ msgstr "復元プロセス有効化フラグを返します。"

#~ msgid "get-selinux"
#~ msgstr "get-selinux"

#, no-wrap
#~ msgid ""
#~ " get-selinux\n"
#~ "\n"
#~ msgstr ""
#~ " get-selinux\n"
#~ "\n"

#~ msgid "get-smp"
#~ msgstr "get-smp"

#, no-wrap
#~ msgid ""
#~ " get-smp\n"
#~ "\n"
#~ msgstr ""
#~ " get-smp\n"
#~ "\n"

#~ msgid "get-tmpdir"
#~ msgstr "get-tmpdir"

#, no-wrap
#~ msgid ""
#~ " get-tmpdir\n"
#~ "\n"
#~ msgstr ""
#~ " get-tmpdir\n"
#~ "\n"

#~ msgid "get-trace"
#~ msgstr "get-trace"

#, no-wrap
#~ msgid ""
#~ " get-trace\n"
#~ "\n"
#~ msgstr ""
#~ " get-trace\n"
#~ "\n"

#~ msgid "Return the command trace flag."
#~ msgstr "コマンドトレースフラグを返します。"

#~ msgid "get-umask"
#~ msgstr "get-umask"

#, no-wrap
#~ msgid ""
#~ " get-umask\n"
#~ "\n"
#~ msgstr ""
#~ " get-umask\n"
#~ "\n"

#~ msgid "get-verbose"
#~ msgstr "get-verbose"

#, no-wrap
#~ msgid ""
#~ " get-verbose\n"
#~ "\n"
#~ msgstr ""
#~ " get-verbose\n"
#~ "\n"

#~ msgid "This returns the verbose messages flag."
#~ msgstr "これはメッセージ冗長化フラグを返します。"

#~ msgid "getcon"
#~ msgstr "getcon"

#, no-wrap
#~ msgid ""
#~ " getcon\n"
#~ "\n"
#~ msgstr ""
#~ " getcon\n"
#~ "\n"

#~ msgid "This gets the SELinux security context of the daemon."
#~ msgstr "これはデーモンの SELinux セキュリティコンテキストを取得します。"

#~ msgid "See the documentation about SELINUX in L<guestfs(3)>, and L</setcon>"
#~ msgstr ""
#~ "L<guestfs(3)> の SELINUX および L</setcon> に関するドキュメントを参照して"
#~ "ください"

#~ msgid "getxattr"
#~ msgstr "getxattr"

#, no-wrap
#~ msgid ""
#~ " getxattr path name\n"
#~ "\n"
#~ msgstr ""
#~ " getxattr path name\n"
#~ "\n"

#~ msgid "See also: L</getxattrs>, L</lgetxattr>, L<attr(5)>."
#~ msgstr "関連項目: L</getxattrs>, L</lgetxattr>, L<attr(5)>"

#~ msgid "getxattrs"
#~ msgstr "getxattrs"

#, no-wrap
#~ msgid ""
#~ " getxattrs path\n"
#~ "\n"
#~ msgstr ""
#~ " getxattrs path\n"
#~ "\n"

#~ msgid "See also: L</lgetxattrs>, L<attr(5)>."
#~ msgstr "関連項目: L</lgetxattrs>, L<attr(5)>"

#~ msgid "glob-expand"
#~ msgstr "glob-expand"

#~ msgid "grep"
#~ msgstr "grep"

#~ msgid "grep-opts"
#~ msgstr "grep-opts"

#, no-wrap
#~ msgid ""
#~ " grep regex path [extended:true|false] [fixed:true|false] [insensitive:true|false] [compressed:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " grep regex path [extended:true|false] [fixed:true|false] [insensitive:true|false] [compressed:true|false]\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "This calls the external C<egrep> program and returns the matching lines."
#~ msgid ""
#~ "This calls the external L<grep(1)> program and returns the matching lines."
#~ msgstr "これは外部の C<egrep> プログラムを呼び出し、一致した行を返します。"

#~ msgid "The optional flags are:"
#~ msgstr "オプションのフラグは次のとおりです:"

#~ msgid "C<extended>"
#~ msgstr "C<extended>"

#~ msgid "C<fixed>"
#~ msgstr "C<fixed>"

#~ msgid "C<insensitive>"
#~ msgstr "C<insensitive>"

#~ msgid "C<compressed>"
#~ msgstr "C<compressed>"

#~ msgid "grepi"
#~ msgstr "grepi"

#, no-wrap
#~ msgid ""
#~ " grepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " grepi regex path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<grep -i> program and returns the matching lines."
#~ msgstr ""
#~ "これは外部の C<grep -i> プログラムを呼び出し、一致する行を返します。"

#~ msgid "grub-install"
#~ msgstr "grub-install"

#, no-wrap
#~ msgid ""
#~ " grub-install root device\n"
#~ "\n"
#~ msgstr ""
#~ " grub-install root device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " (hd0) /dev/vda\n"
#~ "\n"
#~ msgstr ""
#~ " (hd0) /dev/vda\n"
#~ "\n"

#~ msgid "head"
#~ msgstr "head"

#, no-wrap
#~ msgid ""
#~ " head path\n"
#~ "\n"
#~ msgstr ""
#~ " head path\n"
#~ "\n"

#~ msgid ""
#~ "This command returns up to the first 10 lines of a file as a list of "
#~ "strings."
#~ msgstr ""
#~ "このコマンドは文字列の一覧として、ファイルの先頭 10 行までを返します。"

#~ msgid "head-n"
#~ msgstr "head-n"

#, no-wrap
#~ msgid ""
#~ " head-n nrlines path\n"
#~ "\n"
#~ msgstr ""
#~ " head-n nrlines path\n"
#~ "\n"

#~ msgid ""
#~ "If the parameter C<nrlines> is a positive number, this returns the first "
#~ "C<nrlines> lines of the file C<path>."
#~ msgstr ""
#~ "パラメーター C<nrlines> が正の数ならば、これはファイル C<path> の先頭 "
#~ "C<nrlines> 行を返します。"

#~ msgid ""
#~ "If the parameter C<nrlines> is a negative number, this returns lines from "
#~ "the file C<path>, excluding the last C<nrlines> lines."
#~ msgstr ""
#~ "パラメーター C<nrlines> が負の数ならば、これはファイル C<path> の末尾 "
#~ "C<nrlines> 行を取り除いた行を返します。"

#~ msgid "If the parameter C<nrlines> is zero, this returns an empty list."
#~ msgstr "パラメーター C<nrlines> が 0 ならば、空の一覧を返します。"

#~ msgid "hexdump"
#~ msgstr "hexdump"

#, no-wrap
#~ msgid ""
#~ " hexdump path\n"
#~ "\n"
#~ msgstr ""
#~ " hexdump path\n"
#~ "\n"

#~ msgid ""
#~ "This runs C<hexdump -C> on the given C<path>.  The result is the human-"
#~ "readable, canonical hex dump of the file."
#~ msgstr ""
#~ "指定された C<path> において C<hexdump -C> を実行します。結果は、読みやすい"
#~ "形式になり、ファイルの正規化された 16 進ダンプです。"

#~ msgid "hivex-close"
#~ msgstr "hivex-close"

#, no-wrap
#~ msgid ""
#~ " hivex-close\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-close\n"
#~ "\n"

#~ msgid "Close the current hivex handle."
#~ msgstr "現在の hivex ハンドルを閉じます。"

#~ msgid "This is a wrapper around the L<hivex(3)> call of the same name."
#~ msgstr "これは同じ名前の L<hivex(3)> のラッパーです。"

#~ msgid "hivex-commit"
#~ msgstr "hivex-commit"

#, no-wrap
#~ msgid ""
#~ " hivex-commit filename\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-commit filename\n"
#~ "\n"

#~ msgid "Commit (write) changes to the hive."
#~ msgstr "ハイブへの変更をコミット（書き込み）します。"

#~ msgid "hivex-node-add-child"
#~ msgstr "hivex-node-add-child"

#, no-wrap
#~ msgid ""
#~ " hivex-node-add-child parent name\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-add-child parent name\n"
#~ "\n"

#~ msgid "Add a child node to C<parent> named C<name>."
#~ msgstr "子ノードに C<name> という名前の C<parent> を追加します。"

#~ msgid "hivex-node-children"
#~ msgstr "hivex-node-children"

#, no-wrap
#~ msgid ""
#~ " hivex-node-children nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-children nodeh\n"
#~ "\n"

#~ msgid "Return the list of nodes which are subkeys of C<nodeh>."
#~ msgstr "C<nodeh> のサブキーであるノードの一覧を返します。"

#~ msgid "hivex-node-delete-child"
#~ msgstr "hivex-node-delete-child"

#, no-wrap
#~ msgid ""
#~ " hivex-node-delete-child nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-delete-child nodeh\n"
#~ "\n"

#~ msgid "Delete C<nodeh>, recursively if necessary."
#~ msgstr "C<nodeh> を削除します。必要に応じて、再帰的に削除します。"

#~ msgid "hivex-node-get-child"
#~ msgstr "hivex-node-get-child"

#, no-wrap
#~ msgid ""
#~ " hivex-node-get-child nodeh name\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-get-child nodeh name\n"
#~ "\n"

#~ msgid "hivex-node-get-value"
#~ msgstr "hivex-node-get-value"

#, no-wrap
#~ msgid ""
#~ " hivex-node-get-value nodeh key\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-get-value nodeh key\n"
#~ "\n"

#~ msgid "hivex-node-name"
#~ msgstr "hivex-node-name"

#, no-wrap
#~ msgid ""
#~ " hivex-node-name nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-name nodeh\n"
#~ "\n"

#~ msgid "Return the name of C<nodeh>."
#~ msgstr "C<nodeh> の名前を返します。"

#~ msgid "hivex-node-parent"
#~ msgstr "hivex-node-parent"

#, no-wrap
#~ msgid ""
#~ " hivex-node-parent nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-parent nodeh\n"
#~ "\n"

#~ msgid "Return the parent node of C<nodeh>."
#~ msgstr "C<nodeh> の親ノードを返します。"

#~ msgid "hivex-node-set-value"
#~ msgstr "hivex-node-set-value"

#, no-wrap
#~ msgid ""
#~ " hivex-node-set-value nodeh key t val\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-set-value nodeh key t val\n"
#~ "\n"

#~ msgid "hivex-node-values"
#~ msgstr "hivex-node-values"

#, no-wrap
#~ msgid ""
#~ " hivex-node-values nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-values nodeh\n"
#~ "\n"

#~ msgid "hivex-open"
#~ msgstr "hivex-open"

#~ msgid "hivex-root"
#~ msgstr "hivex-root"

#, no-wrap
#~ msgid ""
#~ " hivex-root\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-root\n"
#~ "\n"

#~ msgid "Return the root node of the hive."
#~ msgstr "ハイブのルートノードを返します。"

#~ msgid "hivex-value-key"
#~ msgstr "hivex-value-key"

#, no-wrap
#~ msgid ""
#~ " hivex-value-key valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-key valueh\n"
#~ "\n"

#~ msgid "Return the key (name) field of a (key, datatype, data) tuple."
#~ msgstr "(key, datatype, data) 組のキー (name) 項目を返します。"

#~ msgid "hivex-value-type"
#~ msgstr "hivex-value-type"

#, no-wrap
#~ msgid ""
#~ " hivex-value-type valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-type valueh\n"
#~ "\n"

#~ msgid "Return the data type field from a (key, datatype, data) tuple."
#~ msgstr "(key, datatype, data) 組の datatype 項目を返します。"

#~ msgid "hivex-value-utf8"
#~ msgstr "hivex-value-utf8"

#, no-wrap
#~ msgid ""
#~ " hivex-value-utf8 valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-utf8 valueh\n"
#~ "\n"

#~ msgid "hivex-value-value"
#~ msgstr "hivex-value-value"

#, no-wrap
#~ msgid ""
#~ " hivex-value-value valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-value valueh\n"
#~ "\n"

#~ msgid "Return the data field of a (key, datatype, data) tuple."
#~ msgstr "(key, datatype, data) 組のデータ項目を返します。"

#~ msgid "See also: L</hivex-value-utf8>."
#~ msgstr "関連項目: L</hivex-value-utf8>"

#~ msgid "initrd-cat"
#~ msgstr "initrd-cat"

#, no-wrap
#~ msgid ""
#~ " initrd-cat initrdpath filename\n"
#~ "\n"
#~ msgstr ""
#~ " initrd-cat initrdpath filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " initrd-cat /boot/initrd-<version>.img init\n"
#~ "\n"
#~ msgstr ""
#~ " initrd-cat /boot/initrd-<version>.img init\n"
#~ "\n"

#~ msgid "See also L</initrd-list>."
#~ msgstr "L</initrd-list> 参照。"

#~ msgid "initrd-list"
#~ msgstr "initrd-list"

#, no-wrap
#~ msgid ""
#~ " initrd-list path\n"
#~ "\n"
#~ msgstr ""
#~ " initrd-list path\n"
#~ "\n"

#~ msgid "This command lists out files contained in an initrd."
#~ msgstr "このコマンドは initrd に含まれるファイルを一覧表示します。"

#~ msgid ""
#~ "Old Linux kernels (2.4 and earlier) used a compressed ext2 filesystem as "
#~ "initrd.  We I<only> support the newer initramfs format (compressed cpio "
#~ "files)."
#~ msgstr ""
#~ "古い Linux カーネル (2.4 およびそれ以前) は initrd として圧縮 ext2 ファイ"
#~ "ルシステムを使用していました。新しい initramfs 形式 (圧縮 cpio ファイル) "
#~ "I<のみ> をサポートします。"

#~ msgid "inotify-add-watch"
#~ msgstr "inotify-add-watch"

#, no-wrap
#~ msgid ""
#~ " inotify-add-watch path mask\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-add-watch path mask\n"
#~ "\n"

#~ msgid "Watch C<path> for the events listed in C<mask>."
#~ msgstr "C<mask> に一覧化されたイベントに対して C<path> を監視します。"

#~ msgid "inotify-close"
#~ msgstr "inotify-close"

#, no-wrap
#~ msgid ""
#~ " inotify-close\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-close\n"
#~ "\n"

#~ msgid "inotify-files"
#~ msgstr "inotify-files"

#, no-wrap
#~ msgid ""
#~ " inotify-files\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-files\n"
#~ "\n"

#~ msgid "inotify-init"
#~ msgstr "inotify-init"

#, no-wrap
#~ msgid ""
#~ " inotify-init maxevents\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-init maxevents\n"
#~ "\n"

#~ msgid "inotify-read"
#~ msgstr "inotify-read"

#, no-wrap
#~ msgid ""
#~ " inotify-read\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-read\n"
#~ "\n"

#~ msgid "If no events have happened, this returns an empty list."
#~ msgstr "何もイベントが起きないと、これは空の一覧を返します。"

#~ msgid "inotify-rm-watch"
#~ msgstr "inotify-rm-watch"

#, no-wrap
#~ msgid ""
#~ " inotify-rm-watch wd\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-rm-watch wd\n"
#~ "\n"

#~ msgid ""
#~ "Remove a previously defined inotify watch.  See L</inotify-add-watch>."
#~ msgstr ""
#~ "前に定義された inotify ウォッチを削除します。 L</inotify-add-watch> 参照。"

#~ msgid "inspect-get-arch"
#~ msgstr "inspect-get-arch"

#, no-wrap
#~ msgid ""
#~ " inspect-get-arch root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-arch root\n"
#~ "\n"

#~ msgid ""
#~ "If the architecture could not be determined, then the string C<unknown> "
#~ "is returned."
#~ msgstr ""
#~ "アーキテクチャーが決められなければ、文字列 C<unknown> が返されます。"

#~ msgid "Please read L<guestfs(3)/INSPECTION> for more details."
#~ msgstr "詳細は L<guestfs(3)/INSPECTION> を参照してください。"

#~ msgid "inspect-get-distro"
#~ msgstr "inspect-get-distro"

#, no-wrap
#~ msgid ""
#~ " inspect-get-distro root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-distro root\n"
#~ "\n"

#~ msgid ""
#~ "This returns the distro (distribution) of the inspected operating system."
#~ msgstr ""
#~ "これは検査したオペレーティングシステムのディストリビューションを返します。"

#~ msgid "Currently defined distros are:"
#~ msgstr "定義されているディストリビューションは現在次のとおりです:"

#~ msgid "\"archlinux\""
#~ msgstr "\"archlinux\""

#~ msgid "Arch Linux."
#~ msgstr "Arch Linux."

#~ msgid "\"buildroot\""
#~ msgstr "\"buildroot\""

#~ msgid "Buildroot-derived distro, but not one we specifically recognize."
#~ msgstr ""
#~ "Buildroot 派生のディストリビューション. 具体的にどれかを認識しません."

#~ msgid "\"centos\""
#~ msgstr "\"centos\""

#~ msgid "CentOS."
#~ msgstr "CentOS."

#~ msgid "\"cirros\""
#~ msgstr "\"cirros\""

#~ msgid "Cirros."
#~ msgstr "Cirros."

#~ msgid "\"debian\""
#~ msgstr "\"debian\""

#~ msgid "Debian."
#~ msgstr "Debian."

#~ msgid "\"fedora\""
#~ msgstr "\"fedora\""

#~ msgid "Fedora."
#~ msgstr "Fedora."

#~ msgid "\"freebsd\""
#~ msgstr "\"freebsd\""

#~ msgid "FreeBSD."
#~ msgstr "FreeBSD."

#~ msgid "\"freedos\""
#~ msgstr "\"freedos\""

#~ msgid "FreeDOS."
#~ msgstr "FreeDOS."

#~ msgid "\"gentoo\""
#~ msgstr "\"gentoo\""

#~ msgid "Gentoo."
#~ msgstr "Gentoo."

#~ msgid "\"linuxmint\""
#~ msgstr "\"linuxmint\""

#~ msgid "Linux Mint."
#~ msgstr "Linux Mint."

#~ msgid "\"mageia\""
#~ msgstr "\"mageia\""

#~ msgid "Mageia."
#~ msgstr "Mageia."

#~ msgid "\"mandriva\""
#~ msgstr "\"mandriva\""

#~ msgid "Mandriva."
#~ msgstr "Mandriva."

#~ msgid "\"meego\""
#~ msgstr "\"meego\""

#~ msgid "MeeGo."
#~ msgstr "MeeGo."

#~ msgid "\"netbsd\""
#~ msgstr "\"netbsd\""

#~ msgid "NetBSD."
#~ msgstr "NetBSD."

#~ msgid "\"openbsd\""
#~ msgstr "\"openbsd\""

#~ msgid "OpenBSD."
#~ msgstr "OpenBSD."

#~ msgid "\"opensuse\""
#~ msgstr "\"opensuse\""

#~ msgid "OpenSUSE."
#~ msgstr "OpenSUSE."

#~ msgid "\"pardus\""
#~ msgstr "\"pardus\""

#~ msgid "Pardus."
#~ msgstr "Pardus."

#~ msgid "\"redhat-based\""
#~ msgstr "\"redhat-based\""

#~ msgid "Some Red Hat-derived distro."
#~ msgstr "いくつかの Red Hat 派生ディストリビューション."

#~ msgid "\"rhel\""
#~ msgstr "\"rhel\""

#~ msgid "Red Hat Enterprise Linux."
#~ msgstr "Red Hat Enterprise Linux."

#~ msgid "\"scientificlinux\""
#~ msgstr "\"scientificlinux\""

#~ msgid "Scientific Linux."
#~ msgstr "Scientific Linux."

#~ msgid "\"slackware\""
#~ msgstr "\"slackware\""

#~ msgid "Slackware."
#~ msgstr "Slackware."

#~ msgid "\"sles\""
#~ msgstr "\"sles\""

#~ msgid "SuSE Linux Enterprise Server or Desktop."
#~ msgstr "SuSE Linux Enterprise Server または Desktop."

#~ msgid "\"suse-based\""
#~ msgstr "\"suse-based\""

#~ msgid "Some openSuSE-derived distro."
#~ msgstr "いくつかの openSuSE 派生ディストリビューション."

#~ msgid "\"ttylinux\""
#~ msgstr "\"ttylinux\""

#~ msgid "ttylinux."
#~ msgstr "ttylinux."

#~ msgid "\"ubuntu\""
#~ msgstr "\"ubuntu\""

#~ msgid "Ubuntu."
#~ msgstr "Ubuntu."

#~ msgid "\"unknown\""
#~ msgstr "\"unknown\""

#~ msgid "The distro could not be determined."
#~ msgstr "ディストリビューションがわかりませんでした。"

#~ msgid "\"windows\""
#~ msgstr "\"windows\""

#~ msgid ""
#~ "Windows does not have distributions.  This string is returned if the OS "
#~ "type is Windows."
#~ msgstr ""
#~ "Windows はディストリビューションがありません。OS 種別が Windows ならば、こ"
#~ "の文字列は返されません。"

#~ msgid ""
#~ "Future versions of libguestfs may return other strings here.  The caller "
#~ "should be prepared to handle any string."
#~ msgstr ""
#~ "libguestfs の将来のバージョンは、ここに他の文字列を返す可能性があります。"
#~ "呼び出し元はあらゆる文字列の処理に備えなければいけません。"

#~ msgid "inspect-get-drive-mappings"
#~ msgstr "inspect-get-drive-mappings"

#, no-wrap
#~ msgid ""
#~ " inspect-get-drive-mappings root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-drive-mappings root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " C      =>     /dev/vda2\n"
#~ " E      =>     /dev/vdb1\n"
#~ " F      =>     /dev/vdc1\n"
#~ "\n"
#~ msgstr ""
#~ " C      =>     /dev/vda2\n"
#~ " E      =>     /dev/vdb1\n"
#~ " F      =>     /dev/vdc1\n"
#~ "\n"

#~ msgid "inspect-get-filesystems"
#~ msgstr "inspect-get-filesystems"

#, no-wrap
#~ msgid ""
#~ " inspect-get-filesystems root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-filesystems root\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also L</"
#~ "inspect-get-mountpoints>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を読んでください。  L</inspect-get-"
#~ "mountpoints> 参照。"

#~ msgid "inspect-get-format"
#~ msgstr "inspect-get-format"

#, no-wrap
#~ msgid ""
#~ " inspect-get-format root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-format root\n"
#~ "\n"

#, fuzzy
#~| msgid "\"installed\""
#~ msgid "C<installed>"
#~ msgstr "\"installed\""

#~ msgid "This is an installed operating system."
#~ msgstr "インストールされているオペレーティングシステムです。"

#, fuzzy
#~| msgid "\"installer\""
#~ msgid "C<installer>"
#~ msgstr "\"installer\""

#~ msgid ""
#~ "The disk image being inspected is not an installed operating system, but "
#~ "a I<bootable> install disk, live CD, or similar."
#~ msgstr ""
#~ "検査されるディスクイメージが、インストールされたオペレーティング・システム"
#~ "ではなく、I<ブート可能な> インストールディスク、ライブ CD、または似たよう"
#~ "なものです。"

#, fuzzy
#~| msgid "\"unknown\""
#~ msgid "C<unknown>"
#~ msgstr "\"unknown\""

#~ msgid "The format of this disk image is not known."
#~ msgstr "このディスクイメージの形式は不明です。"

#~ msgid "inspect-get-hostname"
#~ msgstr "inspect-get-hostname"

#, no-wrap
#~ msgid ""
#~ " inspect-get-hostname root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-hostname root\n"
#~ "\n"

#~ msgid "inspect-get-icon"
#~ msgstr "inspect-get-icon"

#, no-wrap
#~ msgid ""
#~ " inspect-get-icon root [favicon:true|false] [highquality:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-icon root [favicon:true|false] [highquality:true|false]\n"
#~ "\n"

#~ msgid "inspect-get-major-version"
#~ msgstr "inspect-get-major-version"

#, no-wrap
#~ msgid ""
#~ " inspect-get-major-version root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-major-version root\n"
#~ "\n"

#~ msgid "inspect-get-minor-version"
#~ msgstr "inspect-get-minor-version"

#, no-wrap
#~ msgid ""
#~ " inspect-get-minor-version root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-minor-version root\n"
#~ "\n"

#~ msgid ""
#~ "This returns the minor version number of the inspected operating system."
#~ msgstr ""
#~ "検査するオペレーティングシステムのマイナーバージョン番号を返します。"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also L</"
#~ "inspect-get-major-version>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を読んでください。  L</inspect-get-major-"
#~ "version> 参照。"

#~ msgid "inspect-get-mountpoints"
#~ msgstr "inspect-get-mountpoints"

#, no-wrap
#~ msgid ""
#~ " inspect-get-mountpoints root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-mountpoints root\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also L</"
#~ "inspect-get-filesystems>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を読んでください。  L</inspect-get-"
#~ "filesystems> 参照。"

#~ msgid "inspect-get-package-format"
#~ msgstr "inspect-get-package-format"

#, no-wrap
#~ msgid ""
#~ " inspect-get-package-format root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-package-format root\n"
#~ "\n"

#~ msgid "inspect-get-package-management"
#~ msgstr "inspect-get-package-management"

#, no-wrap
#~ msgid ""
#~ " inspect-get-package-management root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-package-management root\n"
#~ "\n"

#~ msgid "inspect-get-product-name"
#~ msgstr "inspect-get-product-name"

#, no-wrap
#~ msgid ""
#~ " inspect-get-product-name root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-product-name root\n"
#~ "\n"

#~ msgid "inspect-get-product-variant"
#~ msgstr "inspect-get-product-variant"

#, no-wrap
#~ msgid ""
#~ " inspect-get-product-variant root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-product-variant root\n"
#~ "\n"

#~ msgid "inspect-get-roots"
#~ msgstr "inspect-get-roots"

#, no-wrap
#~ msgid ""
#~ " inspect-get-roots\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-roots\n"
#~ "\n"

#~ msgid "inspect-get-type"
#~ msgstr "inspect-get-type"

#, no-wrap
#~ msgid ""
#~ " inspect-get-type root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-type root\n"
#~ "\n"

#~ msgid "\"linux\""
#~ msgstr "\"linux\""

#~ msgid "Any Linux-based operating system."
#~ msgstr "すべての Linux ベースのオペレーティングシステム."

#~ msgid "Any Microsoft Windows operating system."
#~ msgstr "すべての Microsoft Windows オペレーティングシステム."

#~ msgid "\"hurd\""
#~ msgstr "\"hurd\""

#~ msgid "GNU/Hurd."
#~ msgstr "GNU/Hurd."

#~ msgid "\"dos\""
#~ msgstr "\"dos\""

#~ msgid "MS-DOS, FreeDOS and others."
#~ msgstr "MS-DOS, FreeDOS およびその他."

#~ msgid "The operating system type could not be determined."
#~ msgstr "オペレーティング・システムの種類がわかりませんでした。"

#~ msgid "inspect-get-windows-current-control-set"
#~ msgstr "inspect-get-windows-current-control-set"

#, no-wrap
#~ msgid ""
#~ " inspect-get-windows-current-control-set root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-windows-current-control-set root\n"
#~ "\n"

#~ msgid ""
#~ "This returns the Windows CurrentControlSet of the inspected guest.  The "
#~ "CurrentControlSet is a registry key name such as C<ControlSet001>."
#~ msgstr ""
#~ "これは検査した仮想マシンの Windows CurrentControlSet を返します。 "
#~ "CurrentControlSet は C<ControlSet001> のようなレジストリキーの名前です。"

#~ msgid ""
#~ "This call assumes that the guest is Windows and that the Registry could "
#~ "be examined by inspection.  If this is not the case then an error is "
#~ "returned."
#~ msgstr ""
#~ "この呼び出しは、仮想マシンが Windows であり、レジストリが検査により確認で"
#~ "きることを仮定しています。該当しない場合、エラーが返されます。"

#~ msgid "inspect-get-windows-systemroot"
#~ msgstr "inspect-get-windows-systemroot"

#, no-wrap
#~ msgid ""
#~ " inspect-get-windows-systemroot root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-windows-systemroot root\n"
#~ "\n"

#~ msgid "inspect-is-live"
#~ msgstr "inspect-is-live"

#, no-wrap
#~ msgid ""
#~ " inspect-is-live root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-is-live root\n"
#~ "\n"

#~ msgid "inspect-is-multipart"
#~ msgstr "inspect-is-multipart"

#, no-wrap
#~ msgid ""
#~ " inspect-is-multipart root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-is-multipart root\n"
#~ "\n"

#~ msgid "inspect-is-netinst"
#~ msgstr "inspect-is-netinst"

#, no-wrap
#~ msgid ""
#~ " inspect-is-netinst root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-is-netinst root\n"
#~ "\n"

#~ msgid "inspect-list-applications"
#~ msgstr "inspect-list-applications"

#, no-wrap
#~ msgid ""
#~ " inspect-list-applications root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-list-applications root\n"
#~ "\n"

#~ msgid "C<app_name>"
#~ msgstr "C<app_name>"

#, fuzzy
#~| msgid ""
#~| "The name of the application.  For Red Hat-derived and Debian-derived "
#~| "Linux guests, this is the package name."
#~ msgid ""
#~ "The name of the application.  For Linux guests, this is the package name."
#~ msgstr ""
#~ "アプリケーションの名前。 Red Hat 派生および Debian 派生の Linux 仮想マシン"
#~ "の場合、パッケージ名になります。"

#~ msgid "C<app_display_name>"
#~ msgstr "C<app_display_name>"

#~ msgid "C<app_epoch>"
#~ msgstr "C<app_epoch>"

#~ msgid "C<app_version>"
#~ msgstr "C<app_version>"

#~ msgid "C<app_release>"
#~ msgstr "C<app_release>"

#~ msgid "C<app_install_path>"
#~ msgstr "C<app_install_path>"

#~ msgid "C<app_trans_path>"
#~ msgstr "C<app_trans_path>"

#~ msgid "C<app_publisher>"
#~ msgstr "C<app_publisher>"

#~ msgid "C<app_url>"
#~ msgstr "C<app_url>"

#~ msgid "C<app_source_package>"
#~ msgstr "C<app_source_package>"

#~ msgid "C<app_summary>"
#~ msgstr "C<app_summary>"

#~ msgid "C<app_description>"
#~ msgstr "C<app_description>"

#~ msgid "inspect-list-applications2"
#~ msgstr "inspect-list-applications2"

#, no-wrap
#~ msgid ""
#~ " inspect-list-applications2 root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-list-applications2 root\n"
#~ "\n"

#~ msgid "C<app2_name>"
#~ msgstr "C<app2_name>"

#~ msgid "C<app2_display_name>"
#~ msgstr "C<app2_display_name>"

#~ msgid "C<app2_epoch>"
#~ msgstr "C<app2_epoch>"

#~ msgid "C<app2_version>"
#~ msgstr "C<app2_version>"

#~ msgid "C<app2_release>"
#~ msgstr "C<app2_release>"

#~ msgid "C<app2_arch>"
#~ msgstr "C<app2_arch>"

#~ msgid "C<app2_install_path>"
#~ msgstr "C<app2_install_path>"

#~ msgid "C<app2_trans_path>"
#~ msgstr "C<app2_trans_path>"

#~ msgid "C<app2_publisher>"
#~ msgstr "C<app2_publisher>"

#~ msgid "C<app2_url>"
#~ msgstr "C<app2_url>"

#~ msgid "C<app2_source_package>"
#~ msgstr "C<app2_source_package>"

#~ msgid "C<app2_summary>"
#~ msgstr "C<app2_summary>"

#~ msgid "C<app2_description>"
#~ msgstr "C<app2_description>"

#~ msgid "inspect-os"
#~ msgstr "inspect-os"

#, no-wrap
#~ msgid ""
#~ " inspect-os\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-os\n"
#~ "\n"

#~ msgid "See also L</list-filesystems>."
#~ msgstr "L</list-filesystems> 参照。"

#~ msgid "is-blockdev"
#~ msgstr "is-blockdev"

#~ msgid ""
#~ "This returns C<true> if and only if there is a block device with the "
#~ "given C<path> name."
#~ msgstr ""
#~ "与えられたC<パス>名を持つブロックデバイスがあれば、C<真>を返します。"

#~ msgid "See also L</stat>."
#~ msgstr "L</stat> 参照。"

#~ msgid "is-chardev"
#~ msgstr "is-chardev"

#~ msgid "is-config"
#~ msgstr "is-config"

#, no-wrap
#~ msgid ""
#~ " is-config\n"
#~ "\n"
#~ msgstr ""
#~ " is-config\n"
#~ "\n"

#~ msgid "is-dir"
#~ msgstr "is-dir"

#~ msgid "is-fifo"
#~ msgstr "is-fifo"

#~ msgid "is-file"
#~ msgstr "is-file"

#~ msgid "is-lv"
#~ msgstr "is-lv"

#~ msgid "is-socket"
#~ msgstr "is-socket"

#~ msgid "is-symlink"
#~ msgstr "is-symlink"

#, no-wrap
#~ msgid ""
#~ " is-symlink path\n"
#~ "\n"
#~ msgstr ""
#~ " is-symlink path\n"
#~ "\n"

#~ msgid "is-zero"
#~ msgstr "is-zero"

#, no-wrap
#~ msgid ""
#~ " is-zero path\n"
#~ "\n"
#~ msgstr ""
#~ " is-zero path\n"
#~ "\n"

#~ msgid "is-zero-device"
#~ msgstr "is-zero-device"

#, no-wrap
#~ msgid ""
#~ " is-zero-device device\n"
#~ "\n"
#~ msgstr ""
#~ " is-zero-device device\n"
#~ "\n"

#~ msgid "isoinfo"
#~ msgstr "isoinfo"

#, no-wrap
#~ msgid ""
#~ " isoinfo isofile\n"
#~ "\n"
#~ msgstr ""
#~ " isoinfo isofile\n"
#~ "\n"

#~ msgid "isoinfo-device"
#~ msgstr "isoinfo-device"

#, no-wrap
#~ msgid ""
#~ " isoinfo-device device\n"
#~ "\n"
#~ msgstr ""
#~ " isoinfo-device device\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "For information on the primary volume descriptor fields, see L<http://"
#~| "wiki.osdev.org/ISO_9660#The_Primary_Volume_Descriptor>"
#~ msgid ""
#~ "For information on the primary volume descriptor fields, see L<https://"
#~ "wiki.osdev.org/ISO_9660#The_Primary_Volume_Descriptor>"
#~ msgstr ""
#~ "プライマリーボリューム記述子の項目に関する詳細は、 L<http://wiki.osdev."
#~ "org/ISO_9660#The_Primary_Volume_Descriptor> を参照してください。"

#~ msgid "kill-subprocess"
#~ msgstr "kill-subprocess"

#, no-wrap
#~ msgid ""
#~ " kill-subprocess\n"
#~ "\n"
#~ msgstr ""
#~ " kill-subprocess\n"
#~ "\n"

#~ msgid "Do not call this.  See: L</shutdown> instead."
#~ msgstr ""
#~ "これを呼び出さないでください。代わりに L</shutdown> を参照してください。"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</shutdown> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</shutdown> を使"
#~ "用してください。"

#~ msgid "launch"
#~ msgstr "launch"

#~ msgid "run"
#~ msgstr "run"

#, no-wrap
#~ msgid ""
#~ " launch\n"
#~ "\n"
#~ msgstr ""
#~ " launch\n"
#~ "\n"

#~ msgid "lchown"
#~ msgstr "lchown"

#, no-wrap
#~ msgid ""
#~ " lchown owner group path\n"
#~ "\n"
#~ msgstr ""
#~ " lchown owner group path\n"
#~ "\n"

#~ msgid "lgetxattr"
#~ msgstr "lgetxattr"

#, no-wrap
#~ msgid ""
#~ " lgetxattr path name\n"
#~ "\n"
#~ msgstr ""
#~ " lgetxattr path name\n"
#~ "\n"

#~ msgid "See also: L</lgetxattrs>, L</getxattr>, L<attr(5)>."
#~ msgstr "関連項目: L</lgetxattrs>, L</getxattr>, L<attr(5)>"

#~ msgid "lgetxattrs"
#~ msgstr "lgetxattrs"

#, no-wrap
#~ msgid ""
#~ " lgetxattrs path\n"
#~ "\n"
#~ msgstr ""
#~ " lgetxattrs path\n"
#~ "\n"

#~ msgid "list-9p"
#~ msgstr "list-9p"

#, no-wrap
#~ msgid ""
#~ " list-9p\n"
#~ "\n"
#~ msgstr ""
#~ " list-9p\n"
#~ "\n"

#~ msgid "list-devices"
#~ msgstr "list-devices"

#, no-wrap
#~ msgid ""
#~ " list-devices\n"
#~ "\n"
#~ msgstr ""
#~ " list-devices\n"
#~ "\n"

#~ msgid "List all the block devices."
#~ msgstr "すべてのブロックデバイスを一覧表示します。"

#~ msgid "list-disk-labels"
#~ msgstr "list-disk-labels"

#, no-wrap
#~ msgid ""
#~ " list-disk-labels\n"
#~ "\n"
#~ msgstr ""
#~ " list-disk-labels\n"
#~ "\n"

#~ msgid "list-dm-devices"
#~ msgstr "list-dm-devices"

#, no-wrap
#~ msgid ""
#~ " list-dm-devices\n"
#~ "\n"
#~ msgstr ""
#~ " list-dm-devices\n"
#~ "\n"

#~ msgid "List all device mapper devices."
#~ msgstr "すべてのデバイスマッパーデバイスを一覧表示します。"

#~ msgid "list-filesystems"
#~ msgstr "list-filesystems"

#, no-wrap
#~ msgid ""
#~ " list-filesystems\n"
#~ "\n"
#~ msgstr ""
#~ " list-filesystems\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " \"/dev/sda1\" => \"ntfs\"\n"
#~ " \"/dev/sda2\" => \"ext2\"\n"
#~ " \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
#~ " \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
#~ "\n"
#~ msgstr ""
#~ " \"/dev/sda1\" => \"ntfs\"\n"
#~ " \"/dev/sda2\" => \"ext2\"\n"
#~ " \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
#~ " \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
#~ "\n"

#~ msgid "list-md-devices"
#~ msgstr "list-md-devices"

#, no-wrap
#~ msgid ""
#~ " list-md-devices\n"
#~ "\n"
#~ msgstr ""
#~ " list-md-devices\n"
#~ "\n"

#~ msgid "List all Linux md devices."
#~ msgstr "すべての Linux md デバイスを一覧表示します。"

#~ msgid "list-partitions"
#~ msgstr "list-partitions"

#, no-wrap
#~ msgid ""
#~ " list-partitions\n"
#~ "\n"
#~ msgstr ""
#~ " list-partitions\n"
#~ "\n"

#~ msgid ""
#~ "This does not return logical volumes.  For that you will need to call L</"
#~ "lvs>."
#~ msgstr ""
#~ "これは論理ボリュームを返しません。  そのためには L</lvs> を呼び出す必要が"
#~ "あります。"

#~ msgid "ll"
#~ msgstr "ll"

#, no-wrap
#~ msgid ""
#~ " ll directory\n"
#~ "\n"
#~ msgstr ""
#~ " ll directory\n"
#~ "\n"

#~ msgid ""
#~ "This command is mostly useful for interactive sessions.  It is I<not> "
#~ "intended that you try to parse the output string."
#~ msgstr ""
#~ "このコマンドはほとんどの対話式セッションのために有用です。出力文字列を構文"
#~ "解析しようという意図はI<ありません>。"

#~ msgid "llz"
#~ msgstr "llz"

#, no-wrap
#~ msgid ""
#~ " llz directory\n"
#~ "\n"
#~ msgstr ""
#~ " llz directory\n"
#~ "\n"

#~ msgid "ln"
#~ msgstr "ln"

#, no-wrap
#~ msgid ""
#~ " ln target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln target linkname\n"
#~ "\n"

#, fuzzy
#~| msgid "This command creates a hard link using the C<ln> command."
#~ msgid "This command creates a hard link."
#~ msgstr "このコマンドは C<ln> コマンドを使用してハードリンクを作成します。"

#~ msgid "ln-f"
#~ msgstr "ln-f"

#, no-wrap
#~ msgid ""
#~ " ln-f target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln-f target linkname\n"
#~ "\n"

#, fuzzy
#~| msgid "This command creates a hard link using the C<ln> command."
#~ msgid ""
#~ "This command creates a hard link, removing the link C<linkname> if it "
#~ "exists already."
#~ msgstr "このコマンドは C<ln> コマンドを使用してハードリンクを作成します。"

#~ msgid "ln-s"
#~ msgstr "ln-s"

#, no-wrap
#~ msgid ""
#~ " ln-s target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln-s target linkname\n"
#~ "\n"

#~ msgid "This command creates a symbolic link using the C<ln -s> command."
#~ msgstr ""
#~ "このコマンドは C<ln -s> コマンドを使用してシンボリックリンクを作成します。"

#~ msgid "ln-sf"
#~ msgstr "ln-sf"

#, no-wrap
#~ msgid ""
#~ " ln-sf target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln-sf target linkname\n"
#~ "\n"

#~ msgid "lremovexattr"
#~ msgstr "lremovexattr"

#, no-wrap
#~ msgid ""
#~ " lremovexattr xattr path\n"
#~ "\n"
#~ msgstr ""
#~ " lremovexattr xattr path\n"
#~ "\n"

#~ msgid "ls"
#~ msgstr "ls"

#, no-wrap
#~ msgid ""
#~ " ls directory\n"
#~ "\n"
#~ msgstr ""
#~ " ls directory\n"
#~ "\n"

#~ msgid "ls0"
#~ msgstr "ls0"

#, no-wrap
#~ msgid ""
#~ " ls0 dir (filenames|-)\n"
#~ "\n"
#~ msgstr ""
#~ " ls0 dir (filenames|-)\n"
#~ "\n"

#~ msgid ""
#~ "In the output file, the filenames are separated by C<\\0> characters."
#~ msgstr "出力ファイルにおいて、ファイル名が C<\\0> 文字により区切られます。"

#~ msgid "C<.> and C<..> are not returned.  The filenames are not sorted."
#~ msgstr "C<.> および C<..> は返されません。ファイル名は並べ替えられません。"

#~ msgid "lsetxattr"
#~ msgstr "lsetxattr"

#, no-wrap
#~ msgid ""
#~ " lsetxattr xattr val vallen path\n"
#~ "\n"
#~ msgstr ""
#~ " lsetxattr xattr val vallen path\n"
#~ "\n"

#~ msgid "lstat"
#~ msgstr "lstat"

#, no-wrap
#~ msgid ""
#~ " lstat path\n"
#~ "\n"
#~ msgstr ""
#~ " lstat path\n"
#~ "\n"

#~ msgid "Returns file information for the given C<path>."
#~ msgstr "与えられた C<path> のファイル情報を返します。"

#~ msgid "lstatlist"
#~ msgstr "lstatlist"

#, no-wrap
#~ msgid ""
#~ " lstatlist path 'names ...'\n"
#~ "\n"
#~ msgstr ""
#~ " lstatlist path 'names ...'\n"
#~ "\n"

#~ msgid "luks-add-key"
#~ msgstr "luks-add-key"

#, no-wrap
#~ msgid ""
#~ " luks-add-key device keyslot\n"
#~ "\n"
#~ msgstr ""
#~ " luks-add-key device keyslot\n"
#~ "\n"

#~ msgid "luks-close"
#~ msgstr "luks-close"

#, no-wrap
#~ msgid ""
#~ " luks-close device\n"
#~ "\n"
#~ msgstr ""
#~ " luks-close device\n"
#~ "\n"

#~ msgid "luks-format"
#~ msgstr "luks-format"

#, no-wrap
#~ msgid ""
#~ " luks-format device keyslot\n"
#~ "\n"
#~ msgstr ""
#~ " luks-format device keyslot\n"
#~ "\n"

#~ msgid "luks-format-cipher"
#~ msgstr "luks-format-cipher"

#, no-wrap
#~ msgid ""
#~ " luks-format-cipher device keyslot cipher\n"
#~ "\n"
#~ msgstr ""
#~ " luks-format-cipher device keyslot cipher\n"
#~ "\n"

#~ msgid "luks-kill-slot"
#~ msgstr "luks-kill-slot"

#, no-wrap
#~ msgid ""
#~ " luks-kill-slot device keyslot\n"
#~ "\n"
#~ msgstr ""
#~ " luks-kill-slot device keyslot\n"
#~ "\n"

#~ msgid "luks-open"
#~ msgstr "luks-open"

#, no-wrap
#~ msgid ""
#~ " luks-open device mapname\n"
#~ "\n"
#~ msgstr ""
#~ " luks-open device mapname\n"
#~ "\n"

#~ msgid "luks-open-ro"
#~ msgstr "luks-open-ro"

#, no-wrap
#~ msgid ""
#~ " luks-open-ro device mapname\n"
#~ "\n"
#~ msgstr ""
#~ " luks-open-ro device mapname\n"
#~ "\n"

#~ msgid "lvcreate"
#~ msgstr "lvcreate"

#, no-wrap
#~ msgid ""
#~ " lvcreate logvol volgroup mbytes\n"
#~ "\n"
#~ msgstr ""
#~ " lvcreate logvol volgroup mbytes\n"
#~ "\n"

#~ msgid "lvcreate-free"
#~ msgstr "lvcreate-free"

#, no-wrap
#~ msgid ""
#~ " lvcreate-free logvol volgroup percent\n"
#~ "\n"
#~ msgstr ""
#~ " lvcreate-free logvol volgroup percent\n"
#~ "\n"

#~ msgid "lvm-canonical-lv-name"
#~ msgstr "lvm-canonical-lv-name"

#, no-wrap
#~ msgid ""
#~ " lvm-canonical-lv-name lvname\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-canonical-lv-name lvname\n"
#~ "\n"

#~ msgid "See also L</is-lv>, L</canonical-device-name>."
#~ msgstr "L</is-lv>, L</canonical-device-name> 参照。"

#~ msgid "lvm-clear-filter"
#~ msgstr "lvm-clear-filter"

#, no-wrap
#~ msgid ""
#~ " lvm-clear-filter\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-clear-filter\n"
#~ "\n"

#~ msgid "lvm-remove-all"
#~ msgstr "lvm-remove-all"

#, no-wrap
#~ msgid ""
#~ " lvm-remove-all\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-remove-all\n"
#~ "\n"

#~ msgid "lvm-set-filter"
#~ msgstr "lvm-set-filter"

#, no-wrap
#~ msgid ""
#~ " lvm-set-filter 'devices ...'\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-set-filter 'devices ...'\n"
#~ "\n"

#~ msgid "lvremove"
#~ msgstr "lvremove"

#, no-wrap
#~ msgid ""
#~ " lvremove device\n"
#~ "\n"
#~ msgstr ""
#~ " lvremove device\n"
#~ "\n"

#~ msgid "lvrename"
#~ msgstr "lvrename"

#, no-wrap
#~ msgid ""
#~ " lvrename logvol newlogvol\n"
#~ "\n"
#~ msgstr ""
#~ " lvrename logvol newlogvol\n"
#~ "\n"

#~ msgid "lvresize"
#~ msgstr "lvresize"

#, no-wrap
#~ msgid ""
#~ " lvresize device mbytes\n"
#~ "\n"
#~ msgstr ""
#~ " lvresize device mbytes\n"
#~ "\n"

#~ msgid ""
#~ "This resizes (expands or shrinks) an existing LVM logical volume to "
#~ "C<mbytes>.  When reducing, data in the reduced part is lost."
#~ msgstr ""
#~ "これは既存の LVM 論理ボリュームを C<mbytes> に容量変更（拡大または縮小）し"
#~ "ます。縮小するとき、縮小された部分にあるデータは失われます。"

#~ msgid "lvresize-free"
#~ msgstr "lvresize-free"

#, no-wrap
#~ msgid ""
#~ " lvresize-free lv percent\n"
#~ "\n"
#~ msgstr ""
#~ " lvresize-free lv percent\n"
#~ "\n"

#~ msgid "lvs"
#~ msgstr "lvs"

#, no-wrap
#~ msgid ""
#~ " lvs\n"
#~ "\n"
#~ msgstr ""
#~ " lvs\n"
#~ "\n"

#~ msgid "See also L</lvs-full>, L</list-filesystems>."
#~ msgstr "L</lvs-full>, L</list-filesystems> 参照。"

#~ msgid "lvs-full"
#~ msgstr "lvs-full"

#, no-wrap
#~ msgid ""
#~ " lvs-full\n"
#~ "\n"
#~ msgstr ""
#~ " lvs-full\n"
#~ "\n"

#~ msgid "lvuuid"
#~ msgstr "lvuuid"

#, no-wrap
#~ msgid ""
#~ " lvuuid device\n"
#~ "\n"
#~ msgstr ""
#~ " lvuuid device\n"
#~ "\n"

#~ msgid "This command returns the UUID of the LVM LV C<device>."
#~ msgstr "このコマンドは LVM 論理ボリューム C<device> の UUID を返します。"

#~ msgid "lxattrlist"
#~ msgstr "lxattrlist"

#, no-wrap
#~ msgid ""
#~ " lxattrlist path 'names ...'\n"
#~ "\n"
#~ msgstr ""
#~ " lxattrlist path 'names ...'\n"
#~ "\n"

#~ msgid "max-disks"
#~ msgstr "max-disks"

#, no-wrap
#~ msgid ""
#~ " max-disks\n"
#~ "\n"
#~ msgstr ""
#~ " max-disks\n"
#~ "\n"

#~ msgid ""
#~ "See L<guestfs(3)/MAXIMUM NUMBER OF DISKS> for additional information on "
#~ "this topic."
#~ msgstr ""
#~ "この話題に関する詳細は L<guestfs(3)/MAXIMUM NUMBER OF DISKS> を参照してく"
#~ "ださい。"

#~ msgid "md-create"
#~ msgstr "md-create"

#, no-wrap
#~ msgid ""
#~ " md-create name 'devices ...' [missingbitmap:N] [nrdevices:N] [spare:N] [chunk:N] [level:..]\n"
#~ "\n"
#~ msgstr ""
#~ " md-create name 'devices ...' [missingbitmap:N] [nrdevices:N] [spare:N] [chunk:N] [level:..]\n"
#~ "\n"

#~ msgid "C<missingbitmap>"
#~ msgstr "C<missingbitmap>"

#~ msgid "As examples:"
#~ msgstr "例として:"

#~ msgid ""
#~ "If C<devices = [\"/dev/sda\"]> and C<missingbitmap = 0x1> then the "
#~ "resulting array would be C<[E<lt>missingE<gt>, \"/dev/sda\"]>."
#~ msgstr ""
#~ "C<devices = [\"/dev/sda\"]> かつ C<missingbitmap = 0x1> ならば、結果の配列"
#~ "は C<[E<lt>missingE<gt>, \"/dev/sda\"]> になります。"

#~ msgid ""
#~ "If C<devices = [\"/dev/sda\"]> and C<missingbitmap = 0x2> then the "
#~ "resulting array would be C<[\"/dev/sda\", E<lt>missingE<gt>]>."
#~ msgstr ""
#~ "C<devices = [\"/dev/sda\"]> かつ C<missingbitmap = 0x2> ならば、結果の配列"
#~ "は C<[\"/dev/sda\", E<lt>missingE<gt>]> になります。"

#~ msgid "This defaults to C<0> (no missing devices)."
#~ msgstr "この初期値は C<0> です（デバイスがありません）。"

#~ msgid ""
#~ "The length of C<devices> + the number of bits set in C<missingbitmap> "
#~ "must equal C<nrdevices> + C<spare>."
#~ msgstr ""
#~ "C<devices> の長さ + C<missingbitmap> に設定されたビット数は C<nrdevices> "
#~ "+ C<spare> と同じである必要があります。"

#~ msgid "C<nrdevices>"
#~ msgstr "C<nrdevices>"

#~ msgid "The number of active RAID devices."
#~ msgstr "稼動中の RAID デバイス数。"

#~ msgid ""
#~ "If not set, this defaults to the length of C<devices> plus the number of "
#~ "bits set in C<missingbitmap>."
#~ msgstr ""
#~ "設定されていないと、この初期値は C<devices> の長さ + C<missingbitmap> に設"
#~ "定されたビット数になります。"

#~ msgid "C<spare>"
#~ msgstr "C<spare>"

#~ msgid "The number of spare devices."
#~ msgstr "予備デバイス数。"

#~ msgid "If not set, this defaults to C<0>."
#~ msgstr "設定されていなければ、デフォルトは C<0> です。"

#~ msgid "C<chunk>"
#~ msgstr "C<chunk>"

#~ msgid "The chunk size in bytes."
#~ msgstr "バイト単位のチャンク容量です。"

#~ msgid "C<level>"
#~ msgstr "C<level>"

#, fuzzy
#~| msgid ""
#~| "The RAID level, which can be one of: I<linear>, I<raid0>, I<0>, "
#~| "I<stripe>, I<raid1>, I<1>, I<mirror>, I<raid4>, I<4>, I<raid5>, I<5>, "
#~| "I<raid6>, I<6>, I<raid10>, I<10>.  Some of these are synonymous, and "
#~| "more levels may be added in future."
#~ msgid ""
#~ "The RAID level, which can be one of: C<linear>, C<raid0>, C<0>, "
#~ "C<stripe>, C<raid1>, C<1>, C<mirror>, C<raid4>, C<4>, C<raid5>, C<5>, "
#~ "C<raid6>, C<6>, C<raid10>, C<10>.  Some of these are synonymous, and more "
#~ "levels may be added in future."
#~ msgstr ""
#~ "RAID レベルです。次のどれかです: I<linear>, I<raid0>, I<0>, I<stripe>, "
#~ "I<raid1>, I<1>, I<mirror>, I<raid4>, I<4>, I<raid5>, I<5>, I<raid6>, "
#~ "I<6>, I<raid10>, I<10>。これらのいくつかは同じものを意味しています。将来さ"
#~ "らなるレベルが追加される可能性があります。"

#~ msgid "If not set, this defaults to C<raid1>."
#~ msgstr "設定されていないと、この初期値は C<raid1> です。"

#~ msgid "md-detail"
#~ msgstr "md-detail"

#, no-wrap
#~ msgid ""
#~ " md-detail md\n"
#~ "\n"
#~ msgstr ""
#~ " md-detail md\n"
#~ "\n"

#~ msgid "The raid level of the MD device."
#~ msgstr "MD デバイスの RAID レベル。"

#~ msgid "C<devices>"
#~ msgstr "C<devices>"

#~ msgid "The number of underlying devices in the MD device."
#~ msgstr "MD デバイスにあるデバイス数。"

#~ msgid "C<metadata>"
#~ msgstr "C<metadata>"

#~ msgid "The metadata version used."
#~ msgstr "使用されているメタ情報のバージョン。"

#~ msgid "C<uuid>"
#~ msgstr "C<uuid>"

#~ msgid "The UUID of the MD device."
#~ msgstr "MD デバイスの UUID。"

#~ msgid "The name of the MD device."
#~ msgstr "MD デバイスの名前。"

#~ msgid "md-stat"
#~ msgstr "md-stat"

#, no-wrap
#~ msgid ""
#~ " md-stat md\n"
#~ "\n"
#~ msgstr ""
#~ " md-stat md\n"
#~ "\n"

#~ msgid "To get a list of software RAID devices, call L</list-md-devices>."
#~ msgstr ""
#~ "ソフトウェア RAID デバイスの一覧を取得するには、L</list-md-devices> を呼び"
#~ "出します。"

#~ msgid "C<mdstat_device>"
#~ msgstr "C<mdstat_device>"

#~ msgid "The name of the underlying device."
#~ msgstr "下にあるデバイスの名前です。"

#~ msgid "C<mdstat_index>"
#~ msgstr "C<mdstat_index>"

#~ msgid "The index of this device within the array."
#~ msgstr "配列の中にあるこのデバイスのインデックスです。"

#~ msgid "C<mdstat_flags>"
#~ msgstr "C<mdstat_flags>"

#~ msgid "C<W>"
#~ msgstr "C<W>"

#~ msgid "write-mostly"
#~ msgstr "ほとんど書き込み"

#~ msgid "C<F>"
#~ msgstr "C<F>"

#~ msgid "device is faulty"
#~ msgstr "デバイス故障"

#~ msgid "C<S>"
#~ msgstr "C<S>"

#~ msgid "device is a RAID spare"
#~ msgstr "RAIDスペアデバイス"

#~ msgid "C<R>"
#~ msgstr "C<R>"

#~ msgid "replacement"
#~ msgstr "置換"

#~ msgid "md-stop"
#~ msgstr "md-stop"

#, no-wrap
#~ msgid ""
#~ " md-stop md\n"
#~ "\n"
#~ msgstr ""
#~ " md-stop md\n"
#~ "\n"

#~ msgid ""
#~ "This command deactivates the MD array named C<md>.  The device is "
#~ "stopped, but it is not destroyed or zeroed."
#~ msgstr ""
#~ "このコマンドは C<md> という名前の MD アレイを無効化します。デバイスが停止"
#~ "されますが、破壊またはゼロ書き込みされません。"

#~ msgid "mkdir"
#~ msgstr "mkdir"

#, no-wrap
#~ msgid ""
#~ " mkdir path\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir path\n"
#~ "\n"

#~ msgid "Create a directory named C<path>."
#~ msgstr "C<path> という名前のディレクトリーを作成します。"

#~ msgid "mkdir-mode"
#~ msgstr "mkdir-mode"

#, no-wrap
#~ msgid ""
#~ " mkdir-mode path mode\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir-mode path mode\n"
#~ "\n"

#~ msgid ""
#~ "This command creates a directory, setting the initial permissions of the "
#~ "directory to C<mode>."
#~ msgstr ""
#~ "このコマンドはディレクトリーを作成します、ディレクトリーの初期パーミッショ"
#~ "ンを C<mode> に設定します。"

#~ msgid ""
#~ "For common Linux filesystems, the actual mode which is set will be C<mode "
#~ "& ~umask & 01777>.  Non-native-Linux filesystems may interpret the mode "
#~ "in other ways."
#~ msgstr ""
#~ "一般的な Linux ファイルシステムに対して、設定されている実際のモードが "
#~ "C<mode & ~umask & 01777> とされます。Linux 固有のファイルシステム以外は他"
#~ "の方法でモードを解釈します。"

#~ msgid "See also L</mkdir>, L</umask>"
#~ msgstr "L</mkdir>, L</umask> 参照。"

#~ msgid "mkdir-p"
#~ msgstr "mkdir-p"

#, no-wrap
#~ msgid ""
#~ " mkdir-p path\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir-p path\n"
#~ "\n"

#~ msgid ""
#~ "Create a directory named C<path>, creating any parent directories as "
#~ "necessary.  This is like the C<mkdir -p> shell command."
#~ msgstr ""
#~ "C<path> という名前のディレクトリーを作成します、必要に応じて親ディレクト"
#~ "リーを作成します。これは C<mkdir -p> シェルコマンドと似ています。"

#~ msgid "mkdtemp"
#~ msgstr "mkdtemp"

#, no-wrap
#~ msgid ""
#~ " mkdtemp tmpl\n"
#~ "\n"
#~ msgstr ""
#~ " mkdtemp tmpl\n"
#~ "\n"

#~ msgid ""
#~ "For example: \"/tmp/myprogXXXXXX\" or \"/Temp/myprogXXXXXX\", the second "
#~ "one being suitable for Windows filesystems."
#~ msgstr ""
#~ "例: \"/tmp/myprogXXXXXX\" または \"/Temp/myprogXXXXXX\"、2 つめの例は "
#~ "Windows ファイルシステムに適しています。"

#~ msgid "The name of the temporary directory that was created is returned."
#~ msgstr "作成された一時ディレクトリーの名前を返します。"

#~ msgid ""
#~ "The temporary directory is created with mode 0700 and is owned by root."
#~ msgstr ""
#~ "一時ディレクトリーがモード 0700 で作成され、root により所有されます。"

#~ msgid "See also: L<mkdtemp(3)>"
#~ msgstr "関連項目: L<mkdtemp(3)>"

#~ msgid "mke2fs"
#~ msgstr "mke2fs"

#, no-wrap
#~ msgid ""
#~ " mke2fs device [blockscount:N] [blocksize:N] [fragsize:N] [blockspergroup:N] [numberofgroups:N] [bytesperinode:N] [inodesize:N] [journalsize:N] [numberofinodes:N] [stridesize:N] [stripewidth:N] [maxonlineresize:N] [reservedblockspercentage:N] [mmpupdateinterval:N] [journaldevice:..] [label:..] [lastmounteddir:..] [creatoros:..] [fstype:..] [usagetype:..] [uuid:..] [forcecreate:true|false] [writesbandgrouponly:true|false] [lazyitableinit:true|false] [lazyjournalinit:true|false] [testfs:true|false] [discard:true|false] [quotatype:true|false] [extent:true|false] [filetype:true|false] [flexbg:true|false] [hasjournal:true|false] [journaldev:true|false] [largefile:true|false] [quota:true|false] [resizeinode:true|false] [sparsesuper:true|false] [uninitbg:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs device [blockscount:N] [blocksize:N] [fragsize:N] [blockspergroup:N] [numberofgroups:N] [bytesperinode:N] [inodesize:N] [journalsize:N] [numberofinodes:N] [stridesize:N] [stripewidth:N] [maxonlineresize:N] [reservedblockspercentage:N] [mmpupdateinterval:N] [journaldevice:..] [label:..] [lastmounteddir:..] [creatoros:..] [fstype:..] [usagetype:..] [uuid:..] [forcecreate:true|false] [writesbandgrouponly:true|false] [lazyitableinit:true|false] [lazyjournalinit:true|false] [testfs:true|false] [discard:true|false] [quotatype:true|false] [extent:true|false] [filetype:true|false] [flexbg:true|false] [hasjournal:true|false] [journaldev:true|false] [largefile:true|false] [quota:true|false] [resizeinode:true|false] [sparsesuper:true|false] [uninitbg:true|false]\n"
#~ "\n"

#~ msgid "mke2fs-J"
#~ msgstr "mke2fs-J"

#, no-wrap
#~ msgid ""
#~ " mke2fs-J fstype blocksize device journal\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs-J fstype blocksize device journal\n"
#~ "\n"

#~ msgid ""
#~ "This creates an ext2/3/4 filesystem on C<device> with an external journal "
#~ "on C<journal>.  It is equivalent to the command:"
#~ msgstr ""
#~ "これは外部ジャーナルを C<journal> に持つ ext2/3/4 ファイルシステムを "
#~ "C<device> に作成します。次のコマンドと同じです:"

#, no-wrap
#~ msgid ""
#~ " mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
#~ "\n"

#~ msgid "See also L</mke2journal>."
#~ msgstr "L</mke2journal> 参照。"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</mke2fs> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</mke2fs> を使用"
#~ "してください。"

#~ msgid "mke2fs-JL"
#~ msgstr "mke2fs-JL"

#, no-wrap
#~ msgid ""
#~ " mke2fs-JL fstype blocksize device label\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs-JL fstype blocksize device label\n"
#~ "\n"

#~ msgid ""
#~ "This creates an ext2/3/4 filesystem on C<device> with an external journal "
#~ "on the journal labeled C<label>."
#~ msgstr ""
#~ "これは外部ジャーナルをジャーナルラベル C<label> に持つ ext2/3/4 ファイルシ"
#~ "ステムを C<device> に作成します。"

#~ msgid "See also L</mke2journal-L>."
#~ msgstr "L</mke2journal-L> 参照。"

#~ msgid "mke2fs-JU"
#~ msgstr "mke2fs-JU"

#, no-wrap
#~ msgid ""
#~ " mke2fs-JU fstype blocksize device uuid\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs-JU fstype blocksize device uuid\n"
#~ "\n"

#~ msgid ""
#~ "This creates an ext2/3/4 filesystem on C<device> with an external journal "
#~ "on the journal with UUID C<uuid>."
#~ msgstr ""
#~ "これは外部ジャーナルを UUID C<uuid> のジャーナルに持つ ext2/3/4 ファイルシ"
#~ "ステムを C<device> に作成します。"

#~ msgid "See also L</mke2journal-U>."
#~ msgstr "L</mke2journal-U> 参照。"

#~ msgid "mke2journal"
#~ msgstr "mke2journal"

#, no-wrap
#~ msgid ""
#~ " mke2journal blocksize device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2journal blocksize device\n"
#~ "\n"

#~ msgid ""
#~ "This creates an ext2 external journal on C<device>.  It is equivalent to "
#~ "the command:"
#~ msgstr ""
#~ "これは C<device> に ext2 外部ジャーナルを作成します。次のコマンドと同じで"
#~ "す:"

#, no-wrap
#~ msgid ""
#~ " mke2fs -O journal_dev -b blocksize device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs -O journal_dev -b blocksize device\n"
#~ "\n"

#~ msgid "mke2journal-L"
#~ msgstr "mke2journal-L"

#, no-wrap
#~ msgid ""
#~ " mke2journal-L blocksize label device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2journal-L blocksize label device\n"
#~ "\n"

#~ msgid ""
#~ "This creates an ext2 external journal on C<device> with label C<label>."
#~ msgstr ""
#~ "これはラベル C<label> を持つ C<device> に ext2 外部ジャーナルを作成しま"
#~ "す。"

#~ msgid "mke2journal-U"
#~ msgstr "mke2journal-U"

#, no-wrap
#~ msgid ""
#~ " mke2journal-U blocksize uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2journal-U blocksize uuid device\n"
#~ "\n"

#~ msgid "mkfifo"
#~ msgstr "mkfifo"

#, no-wrap
#~ msgid ""
#~ " mkfifo mode path\n"
#~ "\n"
#~ msgstr ""
#~ " mkfifo mode path\n"
#~ "\n"

#~ msgid "mkfs"
#~ msgstr "mkfs"

#~ msgid "mkfs-opts"
#~ msgstr "mkfs-opts"

#~ msgid ""
#~ "The filesystem block size.  Supported block sizes depend on the "
#~ "filesystem type, but typically they are C<1024>, C<2048> or C<4096> for "
#~ "Linux ext2/3 filesystems."
#~ msgstr ""
#~ "ファイルシステムのブロック容量です。サポートされるブロック容量は、ファイル"
#~ "システムの形式に依存します。一般的に Linux ext2/3 ファイルシステムには "
#~ "C<1024>, C<2048> または C<4096> です。"

#~ msgid "For UFS block sizes, please see L<mkfs.ufs(8)>."
#~ msgstr "UFS ブロック容量は L<mkfs.ufs(8)> を参照してください。"

#~ msgid "This passes the I<-O> parameter to the external mkfs program."
#~ msgstr "これは I<-O> パラメーターを外部の mkfs プログラムに渡します。"

#~ msgid ""
#~ "For certain filesystem types, this allows extra filesystem features to be "
#~ "selected.  See L<mke2fs(8)> and L<mkfs.ufs(8)> for more details."
#~ msgstr ""
#~ "特定のファイルシステム形式には、追加のファイルシステム機能が選択できます。"
#~ "詳細は L<mke2fs(8)> および L<mkfs.ufs(8)> を参照してください。"

#~ msgid ""
#~ "You cannot use this optional parameter with the C<gfs> or C<gfs2> "
#~ "filesystem type."
#~ msgstr ""
#~ "C<gfs> または C<gfs2> ファイルシステム形式ではこのオプションのパラメーター"
#~ "を使用できません。"

#~ msgid "C<inode>"
#~ msgstr "C<inode>"

#~ msgid "C<sectorsize>"
#~ msgstr "C<sectorsize>"

#~ msgid "mkfs-b"
#~ msgstr "mkfs-b"

#, no-wrap
#~ msgid ""
#~ " mkfs-b fstype blocksize device\n"
#~ "\n"
#~ msgstr ""
#~ " mkfs-b fstype blocksize device\n"
#~ "\n"

#~ msgid "mkfs-btrfs"
#~ msgstr "mkfs-btrfs"

#, no-wrap
#~ msgid ""
#~ " mkfs-btrfs 'devices ...' [allocstart:N] [bytecount:N] [datatype:..] [leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]\n"
#~ "\n"
#~ msgstr ""
#~ " mkfs-btrfs 'devices ...' [allocstart:N] [bytecount:N] [datatype:..] [leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]\n"
#~ "\n"

#~ msgid ""
#~ "Create a btrfs filesystem, allowing all configurables to be set.  For "
#~ "more information on the optional arguments, see L<mkfs.btrfs(8)>."
#~ msgstr ""
#~ "すべての設定可能なものについて設定を許可して、btrfs ファイルシステムを作成"
#~ "します。オプション引数の詳細は L<mkfs.btrfs(8)> を参照してください。"

#~ msgid ""
#~ "Since btrfs filesystems can span multiple devices, this takes a non-empty "
#~ "list of devices."
#~ msgstr ""
#~ "btrfs ファイルシステムは複数のデバイスを結合できるので、これは非空白のデバ"
#~ "イス一覧をとります。"

#~ msgid "mklost-and-found"
#~ msgstr "mklost-and-found"

#, no-wrap
#~ msgid ""
#~ " mklost-and-found mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mklost-and-found mountpoint\n"
#~ "\n"

#~ msgid "mkmountpoint"
#~ msgstr "mkmountpoint"

#, no-wrap
#~ msgid ""
#~ " mkmountpoint exemptpath\n"
#~ "\n"
#~ msgstr ""
#~ " mkmountpoint exemptpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-ro Fedora-11-i686-Live.iso\n"
#~ " run\n"
#~ " mkmountpoint /cd\n"
#~ " mkmountpoint /sqsh\n"
#~ " mkmountpoint /ext3fs\n"
#~ " mount /dev/sda /cd\n"
#~ " mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
#~ " mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
#~ "\n"
#~ msgstr ""
#~ " add-ro Fedora-11-i686-Live.iso\n"
#~ " run\n"
#~ " mkmountpoint /cd\n"
#~ " mkmountpoint /sqsh\n"
#~ " mkmountpoint /ext3fs\n"
#~ " mount /dev/sda /cd\n"
#~ " mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
#~ " mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
#~ "\n"

#~ msgid ""
#~ "For more details see L<https://bugzilla.redhat.com/show_bug.cgi?id=599503>"
#~ msgstr ""
#~ "詳細は L<https://bugzilla.redhat.com/show_bug.cgi?id=599503> を参照してく"
#~ "ださい"

#~ msgid "mknod"
#~ msgstr "mknod"

#, no-wrap
#~ msgid ""
#~ " mknod mode devmajor devminor path\n"
#~ "\n"
#~ msgstr ""
#~ " mknod mode devmajor devminor path\n"
#~ "\n"

#~ msgid "mknod-b"
#~ msgstr "mknod-b"

#, no-wrap
#~ msgid ""
#~ " mknod-b mode devmajor devminor path\n"
#~ "\n"
#~ msgstr ""
#~ " mknod-b mode devmajor devminor path\n"
#~ "\n"

#~ msgid "mknod-c"
#~ msgstr "mknod-c"

#, no-wrap
#~ msgid ""
#~ " mknod-c mode devmajor devminor path\n"
#~ "\n"
#~ msgstr ""
#~ " mknod-c mode devmajor devminor path\n"
#~ "\n"

#~ msgid "mkswap"
#~ msgstr "mkswap"

#~ msgid "mkswap-opts"
#~ msgstr "mkswap-opts"

#, no-wrap
#~ msgid ""
#~ " mkswap device [label:..] [uuid:..]\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap device [label:..] [uuid:..]\n"
#~ "\n"

#~ msgid "Create a Linux swap partition on C<device>."
#~ msgstr "Linux swap パーティションを C<device> に作成します。"

#~ msgid "mkswap-L"
#~ msgstr "mkswap-L"

#, no-wrap
#~ msgid ""
#~ " mkswap-L label device\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap-L label device\n"
#~ "\n"

#~ msgid "Create a swap partition on C<device> with label C<label>."
#~ msgstr ""
#~ "ラベル C<label> を持つ C<device> に swap パーティションを作成します。"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</mkswap> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</mkswap> を使用"
#~ "してください。"

#~ msgid "mkswap-U"
#~ msgstr "mkswap-U"

#, no-wrap
#~ msgid ""
#~ " mkswap-U uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap-U uuid device\n"
#~ "\n"

#~ msgid "Create a swap partition on C<device> with UUID C<uuid>."
#~ msgstr "UUID C<uuid> の C<device> に swap パーティションを作成します。"

#~ msgid "mkswap-file"
#~ msgstr "mkswap-file"

#, no-wrap
#~ msgid ""
#~ " mkswap-file path\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap-file path\n"
#~ "\n"

#~ msgid "Create a swap file."
#~ msgstr "swap ファイルを作成します。"

#~ msgid "mktemp"
#~ msgstr "mktemp"

#, no-wrap
#~ msgid ""
#~ " mktemp tmpl [suffix:..]\n"
#~ "\n"
#~ msgstr ""
#~ " mktemp tmpl [suffix:..]\n"
#~ "\n"

#~ msgid "See also: L</mkdtemp>."
#~ msgstr "関連項目: L</mkdtemp>"

#~ msgid "modprobe"
#~ msgstr "modprobe"

#, no-wrap
#~ msgid ""
#~ " modprobe modulename\n"
#~ "\n"
#~ msgstr ""
#~ " modprobe modulename\n"
#~ "\n"

#~ msgid "This loads a kernel module in the appliance."
#~ msgstr "アプライアンスにカーネルモジュールを読み込みます。"

#~ msgid "mount"
#~ msgstr "mount"

#~ msgid "mount-9p"
#~ msgstr "mount-9p"

#, no-wrap
#~ msgid ""
#~ " mount-9p mounttag mountpoint [options:..]\n"
#~ "\n"
#~ msgstr ""
#~ " mount-9p mounttag mountpoint [options:..]\n"
#~ "\n"

#~ msgid ""
#~ "Mount the virtio-9p filesystem with the tag C<mounttag> on the directory "
#~ "C<mountpoint>."
#~ msgstr ""
#~ "タグ C<mounttag> を持つ virtio-9p ファイルシステムをディレクトリ "
#~ "C<mountpoint> にマウントします。"

#~ msgid "mount-local"
#~ msgstr "ローカルマウント"

#, no-wrap
#~ msgid ""
#~ " mount-local localmountpoint [readonly:true|false] [options:..] [cachetimeout:N] [debugcalls:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " mount-local localmountpoint [readonly:true|false] [options:..] [cachetimeout:N] [debugcalls:true|false]\n"
#~ "\n"

#~ msgid "See L<guestfs(3)/MOUNT LOCAL> for full documentation."
#~ msgstr "完全なドキュメントは L<guestfs(3)/MOUNT LOCAL> を参照してください。"

#~ msgid "mount-local-run"
#~ msgstr "mount-local-run"

#, no-wrap
#~ msgid ""
#~ " mount-local-run\n"
#~ "\n"
#~ msgstr ""
#~ " mount-local-run\n"
#~ "\n"

#~ msgid "mount-loop"
#~ msgstr "mount-loop"

#, no-wrap
#~ msgid ""
#~ " mount-loop file mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mount-loop file mountpoint\n"
#~ "\n"

#~ msgid "mount-options"
#~ msgstr "mount-options"

#~ msgid "mount-ro"
#~ msgstr "mount-ro"

#~ msgid "mount-vfs"
#~ msgstr "mount-vfs"

#~ msgid "mountpoints"
#~ msgstr "mountpoints"

#, no-wrap
#~ msgid ""
#~ " mountpoints\n"
#~ "\n"
#~ msgstr ""
#~ " mountpoints\n"
#~ "\n"

#~ msgid "mounts"
#~ msgstr "mounts"

#, no-wrap
#~ msgid ""
#~ " mounts\n"
#~ "\n"
#~ msgstr ""
#~ " mounts\n"
#~ "\n"

#~ msgid "See also: L</mountpoints>"
#~ msgstr "関連項目: L</mountpoints>"

#~ msgid "mv"
#~ msgstr "mv"

#, no-wrap
#~ msgid ""
#~ " mv src dest\n"
#~ "\n"
#~ msgstr ""
#~ " mv src dest\n"
#~ "\n"

#~ msgid "nr-devices"
#~ msgstr "nr-devices"

#, no-wrap
#~ msgid ""
#~ " nr-devices\n"
#~ "\n"
#~ msgstr ""
#~ " nr-devices\n"
#~ "\n"

#~ msgid ""
#~ "This returns the number of whole block devices that were added.  This is "
#~ "the same as the number of devices that would be returned if you called L</"
#~ "list-devices>."
#~ msgstr ""
#~ "これは追加されたブロックデバイス全体の数を返します。これは L</list-"
#~ "devices> により返されるデバイス数と同じです。"

#~ msgid ""
#~ "To find out the maximum number of devices that could be added, call L</"
#~ "max-disks>."
#~ msgstr ""
#~ "追加できるデバイスの最大数を確認するには L</max-disks> を呼び出しくださ"
#~ "い。"

#~ msgid "ntfs-3g-probe"
#~ msgstr "ntfs-3g-probe"

#, no-wrap
#~ msgid ""
#~ " ntfs-3g-probe true|false device\n"
#~ "\n"
#~ msgstr ""
#~ " ntfs-3g-probe true|false device\n"
#~ "\n"

#~ msgid "ntfsclone-in"
#~ msgstr "ntfsclone-in"

#, no-wrap
#~ msgid ""
#~ " ntfsclone-in (backupfile|-) device\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsclone-in (backupfile|-) device\n"
#~ "\n"

#~ msgid ""
#~ "Restore the C<backupfile> (from a previous call to L</ntfsclone-out>) to "
#~ "C<device>, overwriting any existing contents of this device."
#~ msgstr ""
#~ "C<backupfile> を(前に C</ntfsclone-out> を呼び出したところから)  "
#~ "C<device> に復元します。このデバイスの既存の内容はすべて上書きされます。"

#~ msgid "ntfsclone-out"
#~ msgstr "ntfsclone-out"

#, no-wrap
#~ msgid ""
#~ " ntfsclone-out device (backupfile|-) [metadataonly:true|false] [rescue:true|false] [ignorefscheck:true|false] [preservetimestamps:true|false] [force:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsclone-out device (backupfile|-) [metadataonly:true|false] [rescue:true|false] [ignorefscheck:true|false] [preservetimestamps:true|false] [force:true|false]\n"
#~ "\n"

#~ msgid ""
#~ "The optional C<rescue>, C<ignorefscheck>, C<preservetimestamps> and "
#~ "C<force> flags have precise meanings detailed in the L<ntfsclone(8)> man "
#~ "page."
#~ msgstr ""
#~ "オプションの C<rescue>, C<ignorefscheck>, C<preservetimestamps> および "
#~ "C<force> フラグは L<ntfsclone(8)> マニュアルページに詳細な意味が説明されて"
#~ "います。"

#~ msgid ""
#~ "Use L</ntfsclone-in> to restore the file back to a libguestfs device."
#~ msgstr ""
#~ "ファイルを libguestfs デバイスに復元するには L</ntfsclone-in> を使用しま"
#~ "す。"

#~ msgid "ntfsfix"
#~ msgstr "ntfsfix"

#, no-wrap
#~ msgid ""
#~ " ntfsfix device [clearbadsectors:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsfix device [clearbadsectors:true|false]\n"
#~ "\n"

#~ msgid ""
#~ "This command repairs some fundamental NTFS inconsistencies, resets the "
#~ "NTFS journal file, and schedules an NTFS consistency check for the first "
#~ "boot into Windows."
#~ msgstr ""
#~ "このコマンドは、いくつかの基本的な NTFS の不整合を修復し、 NTFS ジャーナル"
#~ "ファイルをリセットし、次回 Windows 起動時に NTFS 完全性チェックをスケ"
#~ "ジュール化します。"

#~ msgid ""
#~ "This is I<not> an equivalent of Windows C<chkdsk>.  It does I<not> scan "
#~ "the filesystem for inconsistencies."
#~ msgstr ""
#~ "これは Windows の C<chkdsk> と同等では I<ありません> 。不整合に対してファ"
#~ "イルシステムをスキャン I<しません> 。"

#~ msgid ""
#~ "The optional C<clearbadsectors> flag clears the list of bad sectors.  "
#~ "This is useful after cloning a disk with bad sectors to a new disk."
#~ msgstr ""
#~ "オプションの C<clearbadsectors> フラグは不良セクターの一覧をクリアします。"
#~ "不良セクターを持つディスクを新しいディスクにクローンした後に有用です。"

#~ msgid "ntfsresize"
#~ msgstr "ntfsresize"

#~ msgid "ntfsresize-opts"
#~ msgstr "ntfsresize-opts"

#, no-wrap
#~ msgid ""
#~ " ntfsresize device [size:N] [force:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsresize device [size:N] [force:true|false]\n"
#~ "\n"

#~ msgid ""
#~ "This command resizes an NTFS filesystem, expanding or shrinking it to the "
#~ "size of the underlying device."
#~ msgstr ""
#~ "このコマンドは NTFS ファイルシステムの容量を変更します。基礎となるデバイス"
#~ "の容量まで拡張または縮小します。"

#~ msgid ""
#~ "The new size (in bytes) of the filesystem.  If omitted, the filesystem is "
#~ "resized to fit the container (eg. partition)."
#~ msgstr ""
#~ "ファイルシステムの新しい容量 (バイト単位)。省略されると、ファイルシステム"
#~ "はコンテナー (例: パーティション) に合うよう容量を変更されます。"

#~ msgid "C<force>"
#~ msgstr "C<force>"

#~ msgid "See also L<ntfsresize(8)>."
#~ msgstr "L<ntfsresize(8)> 参照。"

#~ msgid "ntfsresize-size"
#~ msgstr "ntfsresize-size"

#, no-wrap
#~ msgid ""
#~ " ntfsresize-size device size\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsresize-size device size\n"
#~ "\n"

#~ msgid "parse-environment"
#~ msgstr "parse-environment"

#, no-wrap
#~ msgid ""
#~ " parse-environment\n"
#~ "\n"
#~ msgstr ""
#~ " parse-environment\n"
#~ "\n"

#~ msgid "parse-environment-list"
#~ msgstr "parse-environment-list"

#, no-wrap
#~ msgid ""
#~ " parse-environment-list 'environment ...'\n"
#~ "\n"
#~ msgstr ""
#~ " parse-environment-list 'environment ...'\n"
#~ "\n"

#~ msgid "part-add"
#~ msgstr "part-add"

#, no-wrap
#~ msgid ""
#~ " part-add device prlogex startsect endsect\n"
#~ "\n"
#~ msgstr ""
#~ " part-add device prlogex startsect endsect\n"
#~ "\n"

#~ msgid "part-del"
#~ msgstr "part-del"

#, no-wrap
#~ msgid ""
#~ " part-del device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-del device partnum\n"
#~ "\n"

#~ msgid "This command deletes the partition numbered C<partnum> on C<device>."
#~ msgstr ""
#~ "このコマンドは C<device> にある C<partnum> 番のパーティションを削除しま"
#~ "す。"

#~ msgid "part-disk"
#~ msgstr "part-disk"

#, no-wrap
#~ msgid ""
#~ " part-disk device parttype\n"
#~ "\n"
#~ msgstr ""
#~ " part-disk device parttype\n"
#~ "\n"

#~ msgid "part-get-bootable"
#~ msgstr "part-get-bootable"

#, no-wrap
#~ msgid ""
#~ " part-get-bootable device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-bootable device partnum\n"
#~ "\n"

#~ msgid ""
#~ "This command returns true if the partition C<partnum> on C<device> has "
#~ "the bootable flag set."
#~ msgstr ""
#~ "C<device> にあるパーティション C<partnum> にブート可能フラグが設定されてい"
#~ "ると、このコマンドは真を返します。"

#~ msgid "See also L</part-set-bootable>."
#~ msgstr "L</part-set-bootable> 参照。"

#, fuzzy
#~ msgid "part-get-gpt-guid"
#~ msgstr "part-get-mbr-id"

#, fuzzy, no-wrap
#~ msgid ""
#~ " part-get-gpt-guid device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-mbr-id device partnum\n"
#~ "\n"

#~ msgid "part-get-mbr-id"
#~ msgstr "part-get-mbr-id"

#, no-wrap
#~ msgid ""
#~ " part-get-mbr-id device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-mbr-id device partnum\n"
#~ "\n"

#~ msgid "part-get-parttype"
#~ msgstr "part-get-parttype"

#, no-wrap
#~ msgid ""
#~ " part-get-parttype device\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-parttype device\n"
#~ "\n"

#~ msgid "part-init"
#~ msgstr "part-init"

#, no-wrap
#~ msgid ""
#~ " part-init device parttype\n"
#~ "\n"
#~ msgstr ""
#~ " part-init device parttype\n"
#~ "\n"

#, fuzzy
#~| msgid "B<efi>"
#~ msgid "C<efi>"
#~ msgstr "B<efi>"

#, fuzzy
#~| msgid "B<gpt>"
#~ msgid "C<gpt>"
#~ msgstr "B<gpt>"

#~ msgid "Intel EFI / GPT partition table."
#~ msgstr "Intel EFI / GPT パーティションテーブル。"

#, fuzzy
#~| msgid "B<mbr>"
#~ msgid "C<mbr>"
#~ msgstr "B<mbr>"

#, fuzzy
#~| msgid "B<msdos>"
#~ msgid "C<msdos>"
#~ msgstr "B<msdos>"

#, fuzzy
#~| msgid "B<aix>"
#~ msgid "C<aix>"
#~ msgstr "B<aix>"

#~ msgid "AIX disk labels."
#~ msgstr "AIX ディスクラベル。"

#, fuzzy
#~| msgid "B<amiga>"
#~ msgid "C<amiga>"
#~ msgstr "B<amiga>"

#, fuzzy
#~| msgid "B<rdb>"
#~ msgid "C<rdb>"
#~ msgstr "B<rdb>"

#~ msgid "Amiga \"Rigid Disk Block\" format."
#~ msgstr "Amiga \"Rigid Disk Block\" 形式。"

#, fuzzy
#~| msgid "B<bsd>"
#~ msgid "C<bsd>"
#~ msgstr "B<bsd>"

#~ msgid "BSD disk labels."
#~ msgstr "BSD ディスクラベル."

#, fuzzy
#~| msgid "B<dasd>"
#~ msgid "C<dasd>"
#~ msgstr "B<dasd>"

#~ msgid "DASD, used on IBM mainframes."
#~ msgstr "DASD, IBM メインフレームにおいて使用."

#, fuzzy
#~| msgid "B<dvh>"
#~ msgid "C<dvh>"
#~ msgstr "B<dvh>"

#~ msgid "MIPS/SGI volumes."
#~ msgstr "MIPS/SGI ボリューム."

#, fuzzy
#~| msgid "B<mac>"
#~ msgid "C<mac>"
#~ msgstr "B<mac>"

#~ msgid "Old Mac partition format.  Modern Macs use C<gpt>."
#~ msgstr "古い Mac パーティション形式。最近の Mac は C<gpt> を使用します。"

#, fuzzy
#~| msgid "B<pc98>"
#~ msgid "C<pc98>"
#~ msgstr "B<pc98>"

#~ msgid "NEC PC-98 format, common in Japan apparently."
#~ msgstr "NEC PC-98 形式。日本において一般的に見られます。"

#, fuzzy
#~| msgid "B<sun>"
#~ msgid "C<sun>"
#~ msgstr "B<sun>"

#~ msgid "Sun disk labels."
#~ msgstr "Sun ディスクラベル"

#~ msgid "part-list"
#~ msgstr "part-list"

#, no-wrap
#~ msgid ""
#~ " part-list device\n"
#~ "\n"
#~ msgstr ""
#~ " part-list device\n"
#~ "\n"

#, fuzzy
#~| msgid "B<part_num>"
#~ msgid "C<part_num>"
#~ msgstr "B<part_num>"

#~ msgid "Partition number, counting from 1."
#~ msgstr "パーティション番号。1 から数えます。"

#, fuzzy
#~| msgid "B<part_start>"
#~ msgid "C<part_start>"
#~ msgstr "B<part_start>"

#, fuzzy
#~| msgid "B<part_end>"
#~ msgid "C<part_end>"
#~ msgstr "B<part_end>"

#~ msgid "End of the partition in bytes."
#~ msgstr "バイト単位のパーティションの終了位置。"

#, fuzzy
#~| msgid "B<part_size>"
#~ msgid "C<part_size>"
#~ msgstr "B<part_size>"

#~ msgid "Size of the partition in bytes."
#~ msgstr "バイト単位のパーティション容量。"

#~ msgid "part-set-bootable"
#~ msgstr "part-set-bootable"

#, no-wrap
#~ msgid ""
#~ " part-set-bootable device partnum true|false\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-bootable device partnum true|false\n"
#~ "\n"

#~ msgid ""
#~ "This sets the bootable flag on partition numbered C<partnum> on device "
#~ "C<device>.  Note that partitions are numbered from 1."
#~ msgstr ""
#~ "デバイス C<device> のパーティション番号 C<partnum> にブート可能フラグを設"
#~ "定します。パーティションは 1 から番号が始まることに注意してください。"

#, fuzzy
#~ msgid "part-set-gpt-guid"
#~ msgstr "part-set-mbr-id"

#, fuzzy, no-wrap
#~ msgid ""
#~ " part-set-gpt-guid device partnum guid\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-mbr-id device partnum idbyte\n"
#~ "\n"

#~ msgid "part-set-mbr-id"
#~ msgstr "part-set-mbr-id"

#, no-wrap
#~ msgid ""
#~ " part-set-mbr-id device partnum idbyte\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-mbr-id device partnum idbyte\n"
#~ "\n"

#~ msgid "part-set-name"
#~ msgstr "part-set-name"

#, no-wrap
#~ msgid ""
#~ " part-set-name device partnum name\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-name device partnum name\n"
#~ "\n"

#~ msgid "part-to-dev"
#~ msgstr "part-to-dev"

#, no-wrap
#~ msgid ""
#~ " part-to-dev partition\n"
#~ "\n"
#~ msgstr ""
#~ " part-to-dev partition\n"
#~ "\n"

#~ msgid "See also L</part-to-partnum>, L</device-index>."
#~ msgstr "L</part-to-partnum>, L</device-index> も参照してください。"

#~ msgid "part-to-partnum"
#~ msgstr "part-to-partnum"

#, no-wrap
#~ msgid ""
#~ " part-to-partnum partition\n"
#~ "\n"
#~ msgstr ""
#~ " part-to-partnum partition\n"
#~ "\n"

#~ msgid "See also L</part-to-dev>."
#~ msgstr "L</part-to-dev> 参照。"

#~ msgid "ping-daemon"
#~ msgstr "ping-daemon"

#, no-wrap
#~ msgid ""
#~ " ping-daemon\n"
#~ "\n"
#~ msgstr ""
#~ " ping-daemon\n"
#~ "\n"

#~ msgid "pread"
#~ msgstr "pread"

#, no-wrap
#~ msgid ""
#~ " pread path count offset\n"
#~ "\n"
#~ msgstr ""
#~ " pread path count offset\n"
#~ "\n"

#~ msgid "See also L</pwrite>, L</pread-device>."
#~ msgstr "L</pwrite>, L</pread-device> 参照。"

#~ msgid "pread-device"
#~ msgstr "pread-device"

#, no-wrap
#~ msgid ""
#~ " pread-device device count offset\n"
#~ "\n"
#~ msgstr ""
#~ " pread-device device count offset\n"
#~ "\n"

#~ msgid "See also L</pread>."
#~ msgstr "L</pread> 参照。"

#~ msgid "pvchange-uuid"
#~ msgstr "pvchange-uuid"

#, no-wrap
#~ msgid ""
#~ " pvchange-uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " pvchange-uuid device\n"
#~ "\n"

#~ msgid "Generate a new random UUID for the physical volume C<device>."
#~ msgstr ""
#~ "物理ボリューム C<device> に対する新しいランダムな UUID を生成します。"

#~ msgid "pvchange-uuid-all"
#~ msgstr "pvchange-uuid-all"

#, no-wrap
#~ msgid ""
#~ " pvchange-uuid-all\n"
#~ "\n"
#~ msgstr ""
#~ " pvchange-uuid-all\n"
#~ "\n"

#~ msgid "Generate new random UUIDs for all physical volumes."
#~ msgstr "すべての物理ボリュームに対する新しいランダムな UUID を生成します。"

#~ msgid "pvcreate"
#~ msgstr "pvcreate"

#, no-wrap
#~ msgid ""
#~ " pvcreate device\n"
#~ "\n"
#~ msgstr ""
#~ " pvcreate device\n"
#~ "\n"

#~ msgid "pvremove"
#~ msgstr "pvremove"

#, no-wrap
#~ msgid ""
#~ " pvremove device\n"
#~ "\n"
#~ msgstr ""
#~ " pvremove device\n"
#~ "\n"

#~ msgid "pvresize"
#~ msgstr "pvresize"

#, no-wrap
#~ msgid ""
#~ " pvresize device\n"
#~ "\n"
#~ msgstr ""
#~ " pvresize device\n"
#~ "\n"

#~ msgid "pvresize-size"
#~ msgstr "pvresize-size"

#, no-wrap
#~ msgid ""
#~ " pvresize-size device size\n"
#~ "\n"
#~ msgstr ""
#~ " pvresize-size device size\n"
#~ "\n"

#~ msgid "pvs"
#~ msgstr "pvs"

#, no-wrap
#~ msgid ""
#~ " pvs\n"
#~ "\n"
#~ msgstr ""
#~ " pvs\n"
#~ "\n"

#~ msgid "See also L</pvs-full>."
#~ msgstr "L</pvs-full> 参照。"

#~ msgid "pvs-full"
#~ msgstr "pvs-full"

#, no-wrap
#~ msgid ""
#~ " pvs-full\n"
#~ "\n"
#~ msgstr ""
#~ " pvs-full\n"
#~ "\n"

#~ msgid "pvuuid"
#~ msgstr "pvuuid"

#, no-wrap
#~ msgid ""
#~ " pvuuid device\n"
#~ "\n"
#~ msgstr ""
#~ " pvuuid device\n"
#~ "\n"

#~ msgid "This command returns the UUID of the LVM PV C<device>."
#~ msgstr "このコマンドは LVM PV C<device> の UUID を返します。"

#~ msgid "pwrite"
#~ msgstr "pwrite"

#, no-wrap
#~ msgid ""
#~ " pwrite path content offset\n"
#~ "\n"
#~ msgstr ""
#~ " pwrite path content offset\n"
#~ "\n"

#~ msgid "See also L</pread>, L</pwrite-device>."
#~ msgstr "L</pread>, L</pwrite-device> 参照。"

#~ msgid "pwrite-device"
#~ msgstr "pwrite-device"

#, no-wrap
#~ msgid ""
#~ " pwrite-device device content offset\n"
#~ "\n"
#~ msgstr ""
#~ " pwrite-device device content offset\n"
#~ "\n"

#~ msgid "See also L</pwrite>."
#~ msgstr "L</pwrite> 参照。"

#~ msgid "read-file"
#~ msgstr "read-file"

#, no-wrap
#~ msgid ""
#~ " read-file path\n"
#~ "\n"
#~ msgstr ""
#~ " read-file path\n"
#~ "\n"

#~ msgid "read-lines"
#~ msgstr "read-lines"

#, no-wrap
#~ msgid ""
#~ " read-lines path\n"
#~ "\n"
#~ msgstr ""
#~ " read-lines path\n"
#~ "\n"

#~ msgid "readdir"
#~ msgstr "readdir"

#, no-wrap
#~ msgid ""
#~ " readdir dir\n"
#~ "\n"
#~ msgstr ""
#~ " readdir dir\n"
#~ "\n"

#~ msgid "'?'"
#~ msgstr "'?'"

#~ msgid "readlink"
#~ msgstr "readlink"

#, no-wrap
#~ msgid ""
#~ " readlink path\n"
#~ "\n"
#~ msgstr ""
#~ " readlink path\n"
#~ "\n"

#~ msgid "This command reads the target of a symbolic link."
#~ msgstr "このコマンドはシンボリックリンクの参照先を読み込みます。"

#~ msgid "readlinklist"
#~ msgstr "readlinklist"

#, no-wrap
#~ msgid ""
#~ " readlinklist path 'names ...'\n"
#~ "\n"
#~ msgstr ""
#~ " readlinklist path 'names ...'\n"
#~ "\n"

#~ msgid "realpath"
#~ msgstr "realpath"

#, no-wrap
#~ msgid ""
#~ " realpath path\n"
#~ "\n"
#~ msgstr ""
#~ " realpath path\n"
#~ "\n"

#~ msgid "remove-drive"
#~ msgstr "remove-drive"

#, no-wrap
#~ msgid ""
#~ " remove-drive label\n"
#~ "\n"
#~ msgstr ""
#~ " remove-drive label\n"
#~ "\n"

#~ msgid "removexattr"
#~ msgstr "removexattr"

#, no-wrap
#~ msgid ""
#~ " removexattr xattr path\n"
#~ "\n"
#~ msgstr ""
#~ " removexattr xattr path\n"
#~ "\n"

#~ msgid "See also: L</lremovexattr>, L<attr(5)>."
#~ msgstr "関連項目: L</lremovexattr>, L<attr(5)>"

#~ msgid "resize2fs"
#~ msgstr "resize2fs"

#, no-wrap
#~ msgid ""
#~ " resize2fs device\n"
#~ "\n"
#~ msgstr ""
#~ " resize2fs device\n"
#~ "\n"

#~ msgid "resize2fs-M"
#~ msgstr "resize2fs-M"

#, no-wrap
#~ msgid ""
#~ " resize2fs-M device\n"
#~ "\n"
#~ msgstr ""
#~ " resize2fs-M device\n"
#~ "\n"

#~ msgid "resize2fs-size"
#~ msgstr "resize2fs-size"

#, no-wrap
#~ msgid ""
#~ " resize2fs-size device size\n"
#~ "\n"
#~ msgstr ""
#~ " resize2fs-size device size\n"
#~ "\n"

#~ msgid "rm"
#~ msgstr "rm"

#, no-wrap
#~ msgid ""
#~ " rm path\n"
#~ "\n"
#~ msgstr ""
#~ " rm path\n"
#~ "\n"

#~ msgid "Remove the single file C<path>."
#~ msgstr "単一ファイル C<path> を削除します。"

#~ msgid "rm-f"
#~ msgstr "rm-f"

#, no-wrap
#~ msgid ""
#~ " rm-f path\n"
#~ "\n"
#~ msgstr ""
#~ " rm-f path\n"
#~ "\n"

#~ msgid "Remove the file C<path>."
#~ msgstr "ファイル C<path> を削除します。"

#~ msgid ""
#~ "If the file doesn't exist, that error is ignored.  (Other errors, eg. I/O "
#~ "errors or bad paths, are not ignored)"
#~ msgstr ""
#~ "ファイルが存在しない場合、そのエラーは無視されます。（I/O エラーや不正なパ"
#~ "スなど、他のエラーは無視されません）"

#~ msgid ""
#~ "This call cannot remove directories.  Use L</rmdir> to remove an empty "
#~ "directory, or L</rm-rf> to remove directories recursively."
#~ msgstr ""
#~ "この呼び出しはディレクトリーを削除できません。空のディレクトリーを削除する"
#~ "には L</rmdir> を、ディレクトリーを再帰的に削除するには L</rm-rf> を使用し"
#~ "ます。"

#~ msgid "rm-rf"
#~ msgstr "rm-rf"

#, no-wrap
#~ msgid ""
#~ " rm-rf path\n"
#~ "\n"
#~ msgstr ""
#~ " rm-rf path\n"
#~ "\n"

#~ msgid "rmdir"
#~ msgstr "rmdir"

#, no-wrap
#~ msgid ""
#~ " rmdir path\n"
#~ "\n"
#~ msgstr ""
#~ " rmdir path\n"
#~ "\n"

#~ msgid "Remove the single directory C<path>."
#~ msgstr "単一ディレクトリ C<path> を削除します。"

#~ msgid "rmmountpoint"
#~ msgstr "rmmountpoint"

#, no-wrap
#~ msgid ""
#~ " rmmountpoint exemptpath\n"
#~ "\n"
#~ msgstr ""
#~ " rmmountpoint exemptpath\n"
#~ "\n"

#~ msgid "C<archive>"
#~ msgstr "C<archive>"

#~ msgid "scrub-device"
#~ msgstr "scrub-device"

#, no-wrap
#~ msgid ""
#~ " scrub-device device\n"
#~ "\n"
#~ msgstr ""
#~ " scrub-device device\n"
#~ "\n"

#~ msgid "scrub-file"
#~ msgstr "scrub-file"

#, no-wrap
#~ msgid ""
#~ " scrub-file file\n"
#~ "\n"
#~ msgstr ""
#~ " scrub-file file\n"
#~ "\n"

#~ msgid "scrub-freespace"
#~ msgstr "scrub-freespace"

#, no-wrap
#~ msgid ""
#~ " scrub-freespace dir\n"
#~ "\n"
#~ msgstr ""
#~ " scrub-freespace dir\n"
#~ "\n"

#~ msgid "set-append"
#~ msgstr "set-append"

#~ msgid "append"
#~ msgstr "append"

#, no-wrap
#~ msgid ""
#~ " set-append append\n"
#~ "\n"
#~ msgstr ""
#~ " set-append append\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This function is used to add additional options to the libguestfs "
#~ "appliance kernel command line."
#~ msgstr ""
#~ "この関数は、追加のオプションを仮想マシンのカーネルコマンドラインに追加する"
#~ "ために使用されます。"

#~ msgid ""
#~ "The default is C<NULL> unless overridden by setting C<LIBGUESTFS_APPEND> "
#~ "environment variable."
#~ msgstr ""
#~ "C<LIBGUESTFS_APPEND> 環境変数を設定して上書きされなければ、デフォルトは "
#~ "C<NULL> です。"

#~ msgid ""
#~ "Setting C<append> to C<NULL> means I<no> additional options are passed "
#~ "(libguestfs always adds a few of its own)."
#~ msgstr ""
#~ "C<append> を C<NULL> に設定することは、追加のオプションが渡され I<ない> こ"
#~ "とを意味します（libguestfs は常に自身のいくつかを追加します）。"

#~ msgid "set-attach-method"
#~ msgstr "set-attach-method"

#~ msgid "attach-method"
#~ msgstr "attach-method"

#~ msgid "set-autosync"
#~ msgstr "set-autosync"

#~ msgid "autosync"
#~ msgstr "autosync"

#, no-wrap
#~ msgid ""
#~ " set-autosync true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-autosync true|false\n"
#~ "\n"

#~ msgid ""
#~ "This is enabled by default (since libguestfs 1.5.24, previously it was "
#~ "disabled by default)."
#~ msgstr ""
#~ "デフォルトで有効です（libguestfs 1.5.24 以降、以前は デフォルトで無効でし"
#~ "た）。"

#~ msgid "set-direct"
#~ msgstr "set-direct"

#~ msgid "direct"
#~ msgstr "direct"

#, no-wrap
#~ msgid ""
#~ " set-direct true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-direct true|false\n"
#~ "\n"

#~ msgid "The default is disabled."
#~ msgstr "デフォルトは無効です。"

#~ msgid "set-e2attrs"
#~ msgstr "set-e2attrs"

#, no-wrap
#~ msgid ""
#~ " set-e2attrs file attrs [clear:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2attrs file attrs [clear:true|false]\n"
#~ "\n"

#~ msgid "set-e2generation"
#~ msgstr "set-e2generation"

#, no-wrap
#~ msgid ""
#~ " set-e2generation file generation\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2generation file generation\n"
#~ "\n"

#~ msgid "This sets the ext2 file generation of a file."
#~ msgstr "これはファイルの ext2 ファイル世代を設定します。"

#~ msgid "See L</get-e2generation>."
#~ msgstr "L</get-e2generation> を参照してください。"

#~ msgid "set-e2label"
#~ msgstr "set-e2label"

#, no-wrap
#~ msgid ""
#~ " set-e2label device label\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2label device label\n"
#~ "\n"

#~ msgid "set-e2uuid"
#~ msgstr "set-e2uuid"

#, no-wrap
#~ msgid ""
#~ " set-e2uuid device uuid\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2uuid device uuid\n"
#~ "\n"

#~ msgid "set-label"
#~ msgstr "set-label"

#~ msgid ""
#~ "Only some filesystem types support labels, and libguestfs supports "
#~ "setting labels on only a subset of these."
#~ msgstr ""
#~ "いくつかのファイルシステム形式のみがラベルをサポートします。そして "
#~ "libguestfs はこれらのサブセットのみにおいてラベルの設定をサポートします。"

#~ msgid "To read the label on a filesystem, call L</vfs-label>."
#~ msgstr ""
#~ "ファイルシステムのラベルを読み込むには L</vfs-label> を呼び出します。"

#~ msgid ""
#~ "The C<creds> list must be a non-empty list of strings.  Possible strings "
#~ "are:"
#~ msgstr ""
#~ "C<creds> 一覧は文字列の空ではない一覧にする必要があります。利用可能な文字"
#~ "列は次のとおりです:"

#~ msgid "C<authname>"
#~ msgstr "C<authname>"

#~ msgid "C<language>"
#~ msgstr "C<language>"

#~ msgid "C<cnonce>"
#~ msgstr "C<cnonce>"

#~ msgid "C<passphrase>"
#~ msgstr "C<passphrase>"

#~ msgid "C<echoprompt>"
#~ msgstr "C<echoprompt>"

#~ msgid "C<noechoprompt>"
#~ msgstr "C<noechoprompt>"

#~ msgid "C<realm>"
#~ msgstr "C<realm>"

#~ msgid "C<external>"
#~ msgstr "C<external>"

#~ msgid "See libvirt documentation for the meaning of these credential types."
#~ msgstr ""
#~ "これらのクレデンシャル種別の意味は libvirt ドキュメントを参照してくださ"
#~ "い。"

#~ msgid "set-memsize"
#~ msgstr "set-memsize"

#~ msgid "memsize"
#~ msgstr "memsize"

#, no-wrap
#~ msgid ""
#~ " set-memsize memsize\n"
#~ "\n"
#~ msgstr ""
#~ " set-memsize memsize\n"
#~ "\n"

#~ msgid ""
#~ "You can also change this by setting the environment variable "
#~ "C<LIBGUESTFS_MEMSIZE> before the handle is created."
#~ msgstr ""
#~ "ハンドルが設定される前に環境変数 C<LIBGUESTFS_MEMSIZE> を設定することによ"
#~ "り、これを変更できます。"

#~ msgid "set-network"
#~ msgstr "set-network"

#~ msgid "network"
#~ msgstr "network"

#, no-wrap
#~ msgid ""
#~ " set-network true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-network true|false\n"
#~ "\n"

#~ msgid ""
#~ "If C<network> is true, then the network is enabled in the libguestfs "
#~ "appliance.  The default is false."
#~ msgstr ""
#~ "C<network> が真ならば、libguestfs アプライアンスにおいてネットワークが有効"
#~ "になります。デフォルトは偽です。"

#~ msgid ""
#~ "You must call this before calling L</launch>, otherwise it has no effect."
#~ msgstr ""
#~ "L</launch> を呼び出す前に、これを呼び出さなければいけません。そうしなけれ"
#~ "ば効果がありません。"

#~ msgid "set-path"
#~ msgstr "set-path"

#, no-wrap
#~ msgid ""
#~ " set-path searchpath\n"
#~ "\n"
#~ msgstr ""
#~ " set-path searchpath\n"
#~ "\n"

#~ msgid "Set the path that libguestfs searches for kernel and initrd.img."
#~ msgstr "libguestfs がカーネルおよび initrd.img を検索するパスを設定します。"

#~ msgid "Setting C<path> to C<NULL> restores the default path."
#~ msgstr "C<path> に C<NULL> を設定することによりパスの初期値を復元します。"

#~ msgid "set-pgroup"
#~ msgstr "set-pgroup"

#~ msgid "pgroup"
#~ msgstr "pgroup"

#, no-wrap
#~ msgid ""
#~ " set-pgroup true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-pgroup true|false\n"
#~ "\n"

#~ msgid ""
#~ "If C<pgroup> is true, child processes are placed into their own process "
#~ "group."
#~ msgstr ""
#~ "C<pgroup> が真ならば、子プロセスは自身のプロセスグループの中に置かれます。"

#~ msgid "set-qemu"
#~ msgstr "set-qemu"

#~ msgid "qemu"
#~ msgstr "qemu"

#~ msgid "set-recovery-proc"
#~ msgstr "set-recovery-proc"

#~ msgid "recovery-proc"
#~ msgstr "recovery-proc"

#, no-wrap
#~ msgid ""
#~ " set-recovery-proc true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-recovery-proc true|false\n"
#~ "\n"

#~ msgid "set-selinux"
#~ msgstr "set-selinux"

#~ msgid "selinux"
#~ msgstr "selinux"

#, no-wrap
#~ msgid ""
#~ " set-selinux true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-selinux true|false\n"
#~ "\n"

#~ msgid "set-smp"
#~ msgstr "set-smp"

#~ msgid "smp"
#~ msgstr "smp"

#, no-wrap
#~ msgid ""
#~ " set-smp smp\n"
#~ "\n"
#~ msgstr ""
#~ " set-smp smp\n"
#~ "\n"

#~ msgid ""
#~ "Change the number of virtual CPUs assigned to the appliance.  The default "
#~ "is C<1>.  Increasing this may improve performance, though often it has no "
#~ "effect."
#~ msgstr ""
#~ "アプライアンスに割り当てられる仮想 CPU 数を変更します。初期値は C<1> で"
#~ "す。これを増やすことにより性能を向上させられますが、ときどき効果がありませ"
#~ "ん。"

#~ msgid "This function must be called before L</launch>."
#~ msgstr "この関数は L</launch> の前に呼び出す必要があります。"

#~ msgid "set-tmpdir"
#~ msgstr "set-tmpdir"

#~ msgid "tmpdir"
#~ msgstr "tmpdir"

#, no-wrap
#~ msgid ""
#~ " set-tmpdir tmpdir\n"
#~ "\n"
#~ msgstr ""
#~ " set-tmpdir tmpdir\n"
#~ "\n"

#~ msgid "set-trace"
#~ msgstr "set-trace"

#~ msgid "trace"
#~ msgstr "trace"

#, no-wrap
#~ msgid ""
#~ " set-trace true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-trace true|false\n"
#~ "\n"

#~ msgid "set-verbose"
#~ msgstr "set-verbose"

#~ msgid "verbose"
#~ msgstr "verbose"

#, no-wrap
#~ msgid ""
#~ " set-verbose true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-verbose true|false\n"
#~ "\n"

#~ msgid "If C<verbose> is true, this turns on verbose messages."
#~ msgstr "C<verbose> が真ならば、メッセージの冗長化を有効にします。"

#~ msgid "setcon"
#~ msgstr "setcon"

#, no-wrap
#~ msgid ""
#~ " setcon context\n"
#~ "\n"
#~ msgstr ""
#~ " setcon context\n"
#~ "\n"

#~ msgid "See the documentation about SELINUX in L<guestfs(3)>."
#~ msgstr ""
#~ "L<guestfs(3)> における SELinux に関するドキュメントを参照してください。"

#~ msgid "setxattr"
#~ msgstr "setxattr"

#, no-wrap
#~ msgid ""
#~ " setxattr xattr val vallen path\n"
#~ "\n"
#~ msgstr ""
#~ " setxattr xattr val vallen path\n"
#~ "\n"

#~ msgid "See also: L</lsetxattr>, L<attr(5)>."
#~ msgstr "関連項目: L</lsetxattr>, L<attr(5)>"

#~ msgid "sfdisk"
#~ msgstr "sfdisk"

#, no-wrap
#~ msgid ""
#~ " sfdisk device cyls heads sectors 'lines ...'\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk device cyls heads sectors 'lines ...'\n"
#~ "\n"

#~ msgid "See also: L</sfdisk-l>, L</sfdisk-N>, L</part-init>"
#~ msgstr "関連項目: L</sfdisk-l>, L</sfdisk-N>, L</part-init>"

#~ msgid "sfdiskM"
#~ msgstr "sfdiskM"

#, no-wrap
#~ msgid ""
#~ " sfdiskM device 'lines ...'\n"
#~ "\n"
#~ msgstr ""
#~ " sfdiskM device 'lines ...'\n"
#~ "\n"

#~ msgid "See also: L</sfdisk>, the L<sfdisk(8)> manpage and L</part-disk>"
#~ msgstr ""
#~ "関連項目: L</sfdisk>, L<sfdisk(8)> マニュアルページおよび L</part-disk>"

#~ msgid "sfdisk-N"
#~ msgstr "sfdisk-N"

#, no-wrap
#~ msgid ""
#~ " sfdisk-N device partnum cyls heads sectors line\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-N device partnum cyls heads sectors line\n"
#~ "\n"

#~ msgid "See also: L</part-add>"
#~ msgstr "関連項目: L</part-add>"

#~ msgid "sfdisk-disk-geometry"
#~ msgstr "sfdisk-disk-geometry"

#, no-wrap
#~ msgid ""
#~ " sfdisk-disk-geometry device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-disk-geometry device\n"
#~ "\n"

#~ msgid "sfdisk-kernel-geometry"
#~ msgstr "sfdisk-kernel-geometry"

#, no-wrap
#~ msgid ""
#~ " sfdisk-kernel-geometry device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-kernel-geometry device\n"
#~ "\n"

#~ msgid "sfdisk-l"
#~ msgstr "sfdisk-l"

#, no-wrap
#~ msgid ""
#~ " sfdisk-l device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-l device\n"
#~ "\n"

#~ msgid "See also: L</part-list>"
#~ msgstr "関連項目: L</part-list>"

#~ msgid "sh"
#~ msgstr "sh"

#, no-wrap
#~ msgid ""
#~ " sh command\n"
#~ "\n"
#~ msgstr ""
#~ " sh command\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /bin/sh -c \"command\"\n"
#~ "\n"
#~ msgstr ""
#~ " /bin/sh -c \"command\"\n"
#~ "\n"

#~ msgid "sh-lines"
#~ msgstr "sh-lines"

#, no-wrap
#~ msgid ""
#~ " sh-lines command\n"
#~ "\n"
#~ msgstr ""
#~ " sh-lines command\n"
#~ "\n"

#~ msgid "See also: L</command-lines>"
#~ msgstr "関連項目: L</command-lines>"

#~ msgid "shutdown"
#~ msgstr "shutdown"

#, no-wrap
#~ msgid ""
#~ " shutdown\n"
#~ "\n"
#~ msgstr ""
#~ " shutdown\n"
#~ "\n"

#~ msgid ""
#~ "This is the opposite of L</launch>.  It performs an orderly shutdown of "
#~ "the backend process(es).  If the autosync flag is set (which is the "
#~ "default) then the disk image is synchronized."
#~ msgstr ""
#~ "これは L</launch> の反対です。バックエンドプロセスの通常シャットダウンを実"
#~ "行します。自動同期フラグが設定されていると（これが標準です）、ディスクイ"
#~ "メージが同期されます。"

#~ msgid ""
#~ "If the subprocess exits with an error then this function will return an "
#~ "error, which should I<not> be ignored (it may indicate that the disk "
#~ "image could not be written out properly)."
#~ msgstr ""
#~ "サブプロセスがエラーで終了すると、この関数はエラーを返します。これは（ディ"
#~ "スクイメージが正しく書き出されていないことを意味する可能性があるので）無視"
#~ "すべき I<ではありません> 。"

#~ msgid "sleep"
#~ msgstr "sleep"

#, no-wrap
#~ msgid ""
#~ " sleep secs\n"
#~ "\n"
#~ msgstr ""
#~ " sleep secs\n"
#~ "\n"

#~ msgid "Sleep for C<secs> seconds."
#~ msgstr "C<secs> 秒間スリープします。"

#~ msgid "stat"
#~ msgstr "stat"

#, no-wrap
#~ msgid ""
#~ " stat path\n"
#~ "\n"
#~ msgstr ""
#~ " stat path\n"
#~ "\n"

#~ msgid "statvfs"
#~ msgstr "statvfs"

#, no-wrap
#~ msgid ""
#~ " statvfs path\n"
#~ "\n"
#~ msgstr ""
#~ " statvfs path\n"
#~ "\n"

#~ msgid "strings"
#~ msgstr "strings"

#, no-wrap
#~ msgid ""
#~ " strings path\n"
#~ "\n"
#~ msgstr ""
#~ " strings path\n"
#~ "\n"

#~ msgid "strings-e"
#~ msgstr "strings-e"

#, no-wrap
#~ msgid ""
#~ " strings-e encoding path\n"
#~ "\n"
#~ msgstr ""
#~ " strings-e encoding path\n"
#~ "\n"

#~ msgid "Allowed encodings are:"
#~ msgstr "許可されるエンコードは次のとおりです:"

#~ msgid "s"
#~ msgstr "s"

#~ msgid "S"
#~ msgstr "S"

#~ msgid "Single 8-bit-byte characters."
#~ msgstr "単一の 8 ビットのバイト文字。"

#~ msgid "b"
#~ msgstr "b"

#~ msgid ""
#~ "16-bit big endian strings such as those encoded in UTF-16BE or UCS-2BE."
#~ msgstr ""
#~ "UTF-16BE や UCS-2BE でエンコードされたもののように 16 ビットのビッグエン"
#~ "ディアン文字列。"

#~ msgid "l (lower case letter L)"
#~ msgstr "l (小文字の L)"

#~ msgid ""
#~ "16-bit little endian such as UTF-16LE and UCS-2LE.  This is useful for "
#~ "examining binaries in Windows guests."
#~ msgstr ""
#~ "UTF-16LE や UCS-2LE のような 16 ビットのリトルエンディアン。これは "
#~ "Windows 仮想マシンにあるバイナリーを検査するために有用です。"

#~ msgid "B"
#~ msgstr "B"

#~ msgid "32-bit big endian such as UCS-4BE."
#~ msgstr "UCS-4BE のような 32 ビットのビッグエンディアン。"

#~ msgid "L"
#~ msgstr "L"

#~ msgid "32-bit little endian such as UCS-4LE."
#~ msgstr "UCS-4LE のような 32 ビットのリトルエンディアン。"

#~ msgid "The returned strings are transcoded to UTF-8."
#~ msgstr "返される文字列は UTF-8 に変換されます。"

#~ msgid "swapoff-device"
#~ msgstr "swapoff-device"

#, no-wrap
#~ msgid ""
#~ " swapoff-device device\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-device device\n"
#~ "\n"

#~ msgid "swapoff-file"
#~ msgstr "swapoff-file"

#, no-wrap
#~ msgid ""
#~ " swapoff-file file\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-file file\n"
#~ "\n"

#~ msgid "This command disables the libguestfs appliance swap on file."
#~ msgstr ""
#~ "このコマンドは libguestfs アプライアンスの swap on ファイルを無効にしま"
#~ "す。"

#~ msgid "swapoff-label"
#~ msgstr "swapoff-label"

#, no-wrap
#~ msgid ""
#~ " swapoff-label label\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-label label\n"
#~ "\n"

#~ msgid ""
#~ "This command disables the libguestfs appliance swap on labeled swap "
#~ "partition."
#~ msgstr ""
#~ "このコマンドは libguestfs アプライアンスの swap on ラベル付き swap パー"
#~ "ティションを無効にします。"

#~ msgid "swapoff-uuid"
#~ msgstr "swapoff-uuid"

#, no-wrap
#~ msgid ""
#~ " swapoff-uuid uuid\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-uuid uuid\n"
#~ "\n"

#~ msgid ""
#~ "This command disables the libguestfs appliance swap partition with the "
#~ "given UUID."
#~ msgstr ""
#~ "このコマンドは libguestfs アプライアンスの指定された UUID を持つ swap パー"
#~ "ティションを無効にします。"

#~ msgid "swapon-device"
#~ msgstr "swapon-device"

#, no-wrap
#~ msgid ""
#~ " swapon-device device\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-device device\n"
#~ "\n"

#~ msgid "swapon-file"
#~ msgstr "swapon-file"

#, no-wrap
#~ msgid ""
#~ " swapon-file file\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-file file\n"
#~ "\n"

#~ msgid "swapon-label"
#~ msgstr "swapon-label"

#, no-wrap
#~ msgid ""
#~ " swapon-label label\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-label label\n"
#~ "\n"

#~ msgid "swapon-uuid"
#~ msgstr "swapon-uuid"

#, no-wrap
#~ msgid ""
#~ " swapon-uuid uuid\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-uuid uuid\n"
#~ "\n"

#~ msgid "sync"
#~ msgstr "sync"

#, no-wrap
#~ msgid ""
#~ " sync\n"
#~ "\n"
#~ msgstr ""
#~ " sync\n"
#~ "\n"

#~ msgid "tail"
#~ msgstr "tail"

#, no-wrap
#~ msgid ""
#~ " tail path\n"
#~ "\n"
#~ msgstr ""
#~ " tail path\n"
#~ "\n"

#~ msgid "tail-n"
#~ msgstr "tail-n"

#, no-wrap
#~ msgid ""
#~ " tail-n nrlines path\n"
#~ "\n"
#~ msgstr ""
#~ " tail-n nrlines path\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "If the parameter C<nrlines> is a negative number, this returns lines "
#~| "from the file C<path>, excluding the last C<nrlines> lines."
#~ msgid ""
#~ "If the parameter C<nrlines> is a negative number, this returns lines from "
#~ "the file C<path>, starting with the C<-nrlines>'th line."
#~ msgstr ""
#~ "パラメーター C<nrlines> が負の数ならば、これはファイル C<path> の末尾 "
#~ "C<nrlines> 行を取り除いた行を返します。"

#~ msgid "tar-in"
#~ msgstr "tar-in"

#~ msgid "tar-out"
#~ msgstr "tar-out"

#~ msgid "tar-out-opts"
#~ msgstr "tar-out-opts"

#~ msgid "tgz-in"
#~ msgstr "tgz-in"

#, no-wrap
#~ msgid ""
#~ " tgz-in (tarball|-) directory\n"
#~ "\n"
#~ msgstr ""
#~ " tgz-in (tarball|-) directory\n"
#~ "\n"

#~ msgid "tgz-out"
#~ msgstr "tgz-out"

#, no-wrap
#~ msgid ""
#~ " tgz-out directory (tarball|-)\n"
#~ "\n"
#~ msgstr ""
#~ " tgz-out directory (tarball|-)\n"
#~ "\n"

#~ msgid "touch"
#~ msgstr "touch"

#, no-wrap
#~ msgid ""
#~ " touch path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#~ msgid "truncate"
#~ msgstr "truncate"

#, no-wrap
#~ msgid ""
#~ " truncate path\n"
#~ "\n"
#~ msgstr ""
#~ " truncate path\n"
#~ "\n"

#~ msgid "truncate-size"
#~ msgstr "truncate-size"

#, no-wrap
#~ msgid ""
#~ " truncate-size path size\n"
#~ "\n"
#~ msgstr ""
#~ " truncate-size path size\n"
#~ "\n"

#~ msgid "tune2fs"
#~ msgstr "tune2fs"

#, no-wrap
#~ msgid ""
#~ " tune2fs device [force:true|false] [maxmountcount:N] [mountcount:N] [errorbehavior:..] [group:N] [intervalbetweenchecks:N] [reservedblockspercentage:N] [lastmounteddirectory:..] [reservedblockscount:N] [user:N]\n"
#~ "\n"
#~ msgstr ""
#~ " tune2fs device [force:true|false] [maxmountcount:N] [mountcount:N] [errorbehavior:..] [group:N] [intervalbetweenchecks:N] [reservedblockspercentage:N] [lastmounteddirectory:..] [reservedblockscount:N] [user:N]\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "Set the last mounted directory.  This is the same as the tune2fs C<-M> "
#~| "option."
#~ msgid ""
#~ "Force tune2fs to complete the operation even in the face of errors.  This "
#~ "is the same as the L<tune2fs(8)> C<-f> option."
#~ msgstr ""
#~ "最後にマウントされたディレクトリーを設定します。これは tune2fs C<-M> オプ"
#~ "ションと同じです。"

#~ msgid "C<maxmountcount>"
#~ msgstr "C<maxmountcount>"

#~ msgid "C<mountcount>"
#~ msgstr "C<mountcount>"

#, fuzzy
#~| msgid ""
#~| "Set the last mounted directory.  This is the same as the tune2fs C<-M> "
#~| "option."
#~ msgid ""
#~ "Set the number of times the filesystem has been mounted.  This is the "
#~ "same as the L<tune2fs(8)> C<-C> option."
#~ msgstr ""
#~ "最後にマウントされたディレクトリーを設定します。これは tune2fs C<-M> オプ"
#~ "ションと同じです。"

#~ msgid "C<errorbehavior>"
#~ msgstr "C<errorbehavior>"

#, fuzzy
#~| msgid "This is the same as the tune2fs C<-e> option."
#~ msgid "This is the same as the L<tune2fs(8)> C<-e> option."
#~ msgstr "これは tune2fs C<-e> オプションと同じです。"

#~ msgid "C<group>"
#~ msgstr "C<group>"

#~ msgid "C<intervalbetweenchecks>"
#~ msgstr "C<intervalbetweenchecks>"

#, fuzzy
#~| msgid "This is the same as the tune2fs C<-i> option."
#~ msgid "This is the same as the L<tune2fs(8)> C<-i> option."
#~ msgstr "これは tune2fs C<-i> オプションと同じです。"

#~ msgid "C<reservedblockspercentage>"
#~ msgstr "C<reservedblockspercentage>"

#, fuzzy
#~| msgid ""
#~| "Set the last mounted directory.  This is the same as the tune2fs C<-M> "
#~| "option."
#~ msgid ""
#~ "Set the percentage of the filesystem which may only be allocated by "
#~ "privileged processes.  This is the same as the L<tune2fs(8)> C<-m> option."
#~ msgstr ""
#~ "最後にマウントされたディレクトリーを設定します。これは tune2fs C<-M> オプ"
#~ "ションと同じです。"

#~ msgid "C<lastmounteddirectory>"
#~ msgstr "C<lastmounteddirectory>"

#, fuzzy
#~| msgid ""
#~| "Set the last mounted directory.  This is the same as the tune2fs C<-M> "
#~| "option."
#~ msgid ""
#~ "Set the last mounted directory.  This is the same as the L<tune2fs(8)> C<-"
#~ "M> option."
#~ msgstr ""
#~ "最後にマウントされたディレクトリーを設定します。これは tune2fs C<-M> オプ"
#~ "ションと同じです。"

#, fuzzy
#~| msgid ""
#~| "Set the last mounted directory.  This is the same as the tune2fs C<-M> "
#~| "option."
#~ msgid ""
#~ "C<reservedblockscount> Set the number of reserved filesystem blocks.  "
#~ "This is the same as the L<tune2fs(8)> C<-r> option."
#~ msgstr ""
#~ "最後にマウントされたディレクトリーを設定します。これは tune2fs C<-M> オプ"
#~ "ションと同じです。"

#~ msgid "C<user>"
#~ msgstr "C<user>"

#~ msgid "tune2fs-l"
#~ msgstr "tune2fs-l"

#, no-wrap
#~ msgid ""
#~ " tune2fs-l device\n"
#~ "\n"
#~ msgstr ""
#~ " tune2fs-l device\n"
#~ "\n"

#~ msgid "txz-in"
#~ msgstr "txz-in"

#, no-wrap
#~ msgid ""
#~ " txz-in (tarball|-) directory\n"
#~ "\n"
#~ msgstr ""
#~ " txz-in (tarball|-) directory\n"
#~ "\n"

#~ msgid "txz-out"
#~ msgstr "txz-out"

#, no-wrap
#~ msgid ""
#~ " txz-out directory (tarball|-)\n"
#~ "\n"
#~ msgstr ""
#~ " txz-out directory (tarball|-)\n"
#~ "\n"

#~ msgid "umask"
#~ msgstr "umask"

#, no-wrap
#~ msgid ""
#~ " umask mask\n"
#~ "\n"
#~ msgstr ""
#~ " umask mask\n"
#~ "\n"

#~ msgid "See also L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir>."
#~ msgstr "L</get-umask>, L<umask(2)>, L</mknod>, L</mkdir> 参照。"

#~ msgid "This call returns the previous umask."
#~ msgstr "この呼び出しは元の umask を返します。"

#~ msgid "umount"
#~ msgstr "umount"

#~ msgid "unmount"
#~ msgstr "unmount"

#~ msgid "umount-opts"
#~ msgstr "umount-opts"

#, no-wrap
#~ msgid ""
#~ " umount pathordevice [force:true|false] [lazyunmount:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " umount pathordevice [force:true|false] [lazyunmount:true|false]\n"
#~ "\n"

#~ msgid ""
#~ "This unmounts the given filesystem.  The filesystem may be specified "
#~ "either by its mountpoint (path) or the device which contains the "
#~ "filesystem."
#~ msgstr ""
#~ "これは与えられたファイルシステムをアンマウントします。ファイルシステムは、"
#~ "そのマウントポイント (path)、またはファイルシステムを含むデバイスにより指"
#~ "定されます。"

#~ msgid "umount-all"
#~ msgstr "umount-all"

#~ msgid "unmount-all"
#~ msgstr "unmount-all"

#, no-wrap
#~ msgid ""
#~ " umount-all\n"
#~ "\n"
#~ msgstr ""
#~ " umount-all\n"
#~ "\n"

#~ msgid "This unmounts all mounted filesystems."
#~ msgstr "これはマウントされたファイルシステムをすべてアンマウントします。"

#~ msgid "Some internal mounts are not unmounted by this call."
#~ msgstr "いくつかの内部マウントはこの呼び出しによりアンマウントされません。"

#~ msgid "umount-local"
#~ msgstr "umount-local"

#, no-wrap
#~ msgid ""
#~ " umount-local [retry:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " umount-local [retry:true|false]\n"
#~ "\n"

#~ msgid ""
#~ "If libguestfs is exporting the filesystem on a local mountpoint, then "
#~ "this unmounts it."
#~ msgstr ""
#~ "libguestfs がローカルマウントポイントにあるファイルシステムをエクスポート"
#~ "しているならば、これによりアンマウントされます。"

#~ msgid "upload"
#~ msgstr "upload"

#, no-wrap
#~ msgid ""
#~ " upload (filename|-) remotefilename\n"
#~ "\n"
#~ msgstr ""
#~ " upload (filename|-) remotefilename\n"
#~ "\n"

#~ msgid "See also L</download>."
#~ msgstr "L</download> 参照。"

#~ msgid "upload-offset"
#~ msgstr "upload-offset"

#, no-wrap
#~ msgid ""
#~ " upload-offset (filename|-) remotefilename offset\n"
#~ "\n"
#~ msgstr ""
#~ " upload-offset (filename|-) remotefilename offset\n"
#~ "\n"

#~ msgid "See also L</upload>, L</pwrite>."
#~ msgstr "L</upload>, L</pwrite> 参照。"

#~ msgid "utimens"
#~ msgstr "utimens"

#, no-wrap
#~ msgid ""
#~ " utimens path atsecs atnsecs mtsecs mtnsecs\n"
#~ "\n"
#~ msgstr ""
#~ " utimens path atsecs atnsecs mtsecs mtnsecs\n"
#~ "\n"

#~ msgid ""
#~ "This command sets the timestamps of a file with nanosecond precision."
#~ msgstr "このコマンドはファイルのタイムスタンプをナノ秒単位で設定します。"

#~ msgid "utsname"
#~ msgstr "utsname"

#, no-wrap
#~ msgid ""
#~ " utsname\n"
#~ "\n"
#~ msgstr ""
#~ " utsname\n"
#~ "\n"

#~ msgid "version"
#~ msgstr "version"

#, no-wrap
#~ msgid ""
#~ " version\n"
#~ "\n"
#~ msgstr ""
#~ " version\n"
#~ "\n"

#~ msgid ""
#~ "Return the libguestfs version number that the program is linked against."
#~ msgstr "プログラムがリンクしている libguestfs バージョン番号を返します。"

#~ msgid "See also: L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>."
#~ msgstr "関連項目: L<guestfs(3)/LIBGUESTFS VERSION NUMBERS>"

#~ msgid "vfs-label"
#~ msgstr "vfs-label"

#~ msgid "If the filesystem is unlabeled, this returns the empty string."
#~ msgstr "ファイルシステムにラベルが付いていないと、空の文字列が返されます。"

#~ msgid "To find a filesystem from the label, use L</findfs-label>."
#~ msgstr ""
#~ "ラベルからファイルシステムを検索するには L</findfs-label> を使用します。"

#~ msgid "vfs-type"
#~ msgstr "vfs-type"

#~ msgid "vfs-uuid"
#~ msgstr "vfs-uuid"

#, fuzzy
#~ msgid "get-uuid"
#~ msgstr "get-e2uuid"

#~ msgid ""
#~ "If the filesystem does not have a UUID, this returns the empty string."
#~ msgstr "ファイルシステムが UUID を持っていないと、空の文字列を返します。"

#~ msgid "To find a filesystem from the UUID, use L</findfs-uuid>."
#~ msgstr ""
#~ "UUID からファイルシステムを検索するには L</findfs-uuid> を使用します。"

#~ msgid "vg-activate"
#~ msgstr "vg-activate"

#, no-wrap
#~ msgid ""
#~ " vg-activate true|false 'volgroups ...'\n"
#~ "\n"
#~ msgstr ""
#~ " vg-activate true|false 'volgroups ...'\n"
#~ "\n"

#~ msgid "This command is the same as running C<vgchange -a y|n volgroups...>"
#~ msgstr ""
#~ "このコマンドは C<vgchange -a y|n volgroups...> を実行するときと同じです。"

#~ msgid "vg-activate-all"
#~ msgstr "vg-activate-all"

#, no-wrap
#~ msgid ""
#~ " vg-activate-all true|false\n"
#~ "\n"
#~ msgstr ""
#~ " vg-activate-all true|false\n"
#~ "\n"

#~ msgid "vgchange-uuid"
#~ msgstr "vgchange-uuid"

#, no-wrap
#~ msgid ""
#~ " vgchange-uuid vg\n"
#~ "\n"
#~ msgstr ""
#~ " vgchange-uuid vg\n"
#~ "\n"

#~ msgid "Generate a new random UUID for the volume group C<vg>."
#~ msgstr ""
#~ "ランダムな新しい UUID をボリュームグループ C<vg> に対して生成します。"

#~ msgid "vgchange-uuid-all"
#~ msgstr "vgchange-uuid-all"

#, no-wrap
#~ msgid ""
#~ " vgchange-uuid-all\n"
#~ "\n"
#~ msgstr ""
#~ " vgchange-uuid-all\n"
#~ "\n"

#~ msgid "Generate new random UUIDs for all volume groups."
#~ msgstr "すべての物理ボリュームに対する新しいランダムな UUID を生成します。"

#~ msgid "vgcreate"
#~ msgstr "vgcreate"

#, no-wrap
#~ msgid ""
#~ " vgcreate volgroup 'physvols ...'\n"
#~ "\n"
#~ msgstr ""
#~ " vgcreate volgroup 'physvols ...'\n"
#~ "\n"

#~ msgid ""
#~ "This creates an LVM volume group called C<volgroup> from the non-empty "
#~ "list of physical volumes C<physvols>."
#~ msgstr ""
#~ "これは、物理ボリューム C<physvols> の空ではない一覧から、C<volgroup> とい"
#~ "う名前の LVM ボリュームグループを作成します。"

#~ msgid "vglvuuids"
#~ msgstr "vglvuuids"

#, no-wrap
#~ msgid ""
#~ " vglvuuids vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vglvuuids vgname\n"
#~ "\n"

#~ msgid ""
#~ "Given a VG called C<vgname>, this returns the UUIDs of all the logical "
#~ "volumes created in this volume group."
#~ msgstr ""
#~ "C<vgname> という VG が指定されると、これはこのボリュームグループに作成され"
#~ "たすべての論理ボリュームの UUID を返します。"

#~ msgid "See also L</vgpvuuids>."
#~ msgstr "L</vgpvuuids> 参照。"

#~ msgid "vgmeta"
#~ msgstr "vgmeta"

#, no-wrap
#~ msgid ""
#~ " vgmeta vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vgmeta vgname\n"
#~ "\n"

#~ msgid ""
#~ "C<vgname> is an LVM volume group.  This command examines the volume group "
#~ "and returns its metadata."
#~ msgstr ""
#~ "C<vgname> は LVM ボリュームグループです。このコマンドは、ボリュームグルー"
#~ "プを検査して、そのメタ情報を返します。"

#~ msgid ""
#~ "Note that the metadata is an internal structure used by LVM, subject to "
#~ "change at any time, and is provided for information only."
#~ msgstr ""
#~ "メタ情報は、LVM により使用される内部構造で、いつでも変更を強制され、情報に"
#~ "対してのみ提供されることに注意してください。"

#~ msgid "vgpvuuids"
#~ msgstr "vgpvuuids"

#, no-wrap
#~ msgid ""
#~ " vgpvuuids vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vgpvuuids vgname\n"
#~ "\n"

#~ msgid "See also L</vglvuuids>."
#~ msgstr "L</vglvuuids> 参照。"

#~ msgid "vgremove"
#~ msgstr "vgremove"

#, no-wrap
#~ msgid ""
#~ " vgremove vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vgremove vgname\n"
#~ "\n"

#~ msgid "Remove an LVM volume group C<vgname>, (for example C<VG>)."
#~ msgstr "LVM ボリュームグループ C<vgname> を削除します（例: C<VG>）。"

#~ msgid "vgrename"
#~ msgstr "vgrename"

#, no-wrap
#~ msgid ""
#~ " vgrename volgroup newvolgroup\n"
#~ "\n"
#~ msgstr ""
#~ " vgrename volgroup newvolgroup\n"
#~ "\n"

#~ msgid "Rename a volume group C<volgroup> with the new name C<newvolgroup>."
#~ msgstr ""
#~ "ボリュームグループ C<volgroup> の名前を新しい名前 C<newvolgroup> に変更し"
#~ "ます。"

#~ msgid "vgs"
#~ msgstr "vgs"

#, no-wrap
#~ msgid ""
#~ " vgs\n"
#~ "\n"
#~ msgstr ""
#~ " vgs\n"
#~ "\n"

#~ msgid "See also L</vgs-full>."
#~ msgstr "L</vgs-full> 参照。"

#~ msgid "vgs-full"
#~ msgstr "vgs-full"

#, no-wrap
#~ msgid ""
#~ " vgs-full\n"
#~ "\n"
#~ msgstr ""
#~ " vgs-full\n"
#~ "\n"

#~ msgid "vgscan"
#~ msgstr "vgscan"

#, no-wrap
#~ msgid ""
#~ " vgscan\n"
#~ "\n"
#~ msgstr ""
#~ " vgscan\n"
#~ "\n"

#~ msgid "vguuid"
#~ msgstr "vguuid"

#, no-wrap
#~ msgid ""
#~ " vguuid vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vguuid vgname\n"
#~ "\n"

#~ msgid "This command returns the UUID of the LVM VG named C<vgname>."
#~ msgstr ""
#~ "このコマンドは C<vgname> という名前の LVM ボリュームグループの UUID を返し"
#~ "ます。"

#~ msgid "wc-c"
#~ msgstr "wc-c"

#, no-wrap
#~ msgid ""
#~ " wc-c path\n"
#~ "\n"
#~ msgstr ""
#~ " wc-c path\n"
#~ "\n"

#~ msgid ""
#~ "This command counts the characters in a file, using the C<wc -c> external "
#~ "command."
#~ msgstr ""
#~ "このコマンドは C<wc -c> 外部コマンドを使用して、ファイルにある文字数を集計"
#~ "します。"

#~ msgid "wc-l"
#~ msgstr "wc-l"

#, no-wrap
#~ msgid ""
#~ " wc-l path\n"
#~ "\n"
#~ msgstr ""
#~ " wc-l path\n"
#~ "\n"

#~ msgid ""
#~ "This command counts the lines in a file, using the C<wc -l> external "
#~ "command."
#~ msgstr ""
#~ "このコマンドは C<wc -l> 外部コマンドを使用して、ファイルにある行数を集計し"
#~ "ます。"

#~ msgid "wc-w"
#~ msgstr "wc-w"

#, no-wrap
#~ msgid ""
#~ " wc-w path\n"
#~ "\n"
#~ msgstr ""
#~ " wc-w path\n"
#~ "\n"

#~ msgid ""
#~ "This command counts the words in a file, using the C<wc -w> external "
#~ "command."
#~ msgstr ""
#~ "このコマンドは C<wc -w> 外部コマンドを使用して、ファイルにある単語を数えま"
#~ "す。"

#~ msgid "wipefs"
#~ msgstr "wipefs"

#, no-wrap
#~ msgid ""
#~ " wipefs device\n"
#~ "\n"
#~ msgstr ""
#~ " wipefs device\n"
#~ "\n"

#~ msgid ""
#~ "This does not erase the filesystem itself nor any other data from the "
#~ "C<device>."
#~ msgstr ""
#~ "これは、ファイルシステム自身を削除しません、また C<device> から他のどんな"
#~ "データも削除しません。"

#~ msgid "Compare with L</zero> which zeroes the first few blocks of a device."
#~ msgstr "デバイスの最初の数ブロックをゼロにする L</zero> と比較します。"

#~ msgid "write"
#~ msgstr "write"

#, no-wrap
#~ msgid ""
#~ " write path content\n"
#~ "\n"
#~ msgstr ""
#~ " write path content\n"
#~ "\n"

#~ msgid "See also L</write-append>."
#~ msgstr "L</write-append> 参照。"

#~ msgid "write-append"
#~ msgstr "write-append"

#, no-wrap
#~ msgid ""
#~ " write-append path content\n"
#~ "\n"
#~ msgstr ""
#~ " write-append path content\n"
#~ "\n"

#~ msgid ""
#~ "This call appends C<content> to the end of file C<path>.  If C<path> does "
#~ "not exist, then a new file is created."
#~ msgstr ""
#~ "この関数は C<content> を C<path> ファイルの最後に追加します。もし C<path> "
#~ "が存在しなければ、新しいファイルが作成されます。"

#~ msgid "See also L</write>."
#~ msgstr "L</write> 参照。"

#~ msgid "write-file"
#~ msgstr "write-file"

#, no-wrap
#~ msgid ""
#~ " write-file path content size\n"
#~ "\n"
#~ msgstr ""
#~ " write-file path content size\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</write> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</write> を使用"
#~ "してください。"

#~ msgid "xfs-admin"
#~ msgstr "xfs-admin"

#, no-wrap
#~ msgid ""
#~ " xfs-admin device [extunwritten:true|false] [imgfile:true|false] [v2log:true|false] [projid32bit:true|false] [lazycounter:true|false] [label:..] [uuid:..]\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-admin device [extunwritten:true|false] [imgfile:true|false] [v2log:true|false] [projid32bit:true|false] [lazycounter:true|false] [label:..] [uuid:..]\n"
#~ "\n"

#~ msgid "Change the parameters of the XFS filesystem on C<device>."
#~ msgstr "C<device> において XFS ファイルシステムのパラメーターを変更します。"

#~ msgid "xfs-growfs"
#~ msgstr "xfs-growfs"

#, no-wrap
#~ msgid ""
#~ " xfs-growfs path [datasec:true|false] [logsec:true|false] [rtsec:true|false] [datasize:N] [logsize:N] [rtsize:N] [rtextsize:N] [maxpct:N]\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-growfs path [datasec:true|false] [logsec:true|false] [rtsec:true|false] [datasize:N] [logsize:N] [rtsize:N] [rtextsize:N] [maxpct:N]\n"
#~ "\n"

#~ msgid "Grow the XFS filesystem mounted at C<path>."
#~ msgstr "C<path> にマウントされた XFS ファイルシステムを拡大します。"

#~ msgid "xfs-info"
#~ msgstr "xfs-info"

#, no-wrap
#~ msgid ""
#~ " xfs-info pathordevice\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-info pathordevice\n"
#~ "\n"

#~ msgid ""
#~ "C<pathordevice> is a mounted XFS filesystem or a device containing an XFS "
#~ "filesystem.  This command returns the geometry of the filesystem."
#~ msgstr ""
#~ "C<pathordevice> は、マウントされた XFS ファイルシステム、または XFS ファイ"
#~ "ルシステムを含むデバイスです。このコマンドはファイルシステムのジオメトリー"
#~ "を返します。"

#~ msgid "xfs-repair"
#~ msgstr "xfs-repair"

#, no-wrap
#~ msgid ""
#~ " xfs-repair device [forcelogzero:true|false] [nomodify:true|false] [noprefetch:true|false] [forcegeometry:true|false] [maxmem:N] [ihashsize:N] [bhashsize:N] [agstride:N] [logdev:..] [rtdev:..]\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-repair device [forcelogzero:true|false] [nomodify:true|false] [noprefetch:true|false] [forcegeometry:true|false] [maxmem:N] [ihashsize:N] [bhashsize:N] [agstride:N] [logdev:..] [rtdev:..]\n"
#~ "\n"

#~ msgid "Repair corrupt or damaged XFS filesystem on C<device>."
#~ msgstr ""
#~ "破損または破壊された C<device> の XFS ファイルシステムを修復します。"

#~ msgid "zegrep"
#~ msgstr "zegrep"

#, no-wrap
#~ msgid ""
#~ " zegrep regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zegrep regex path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<zegrep> program and returns the matching lines."
#~ msgstr "これは外部の C<zegrep> プログラムを呼び出し、一致する行を返します。"

#~ msgid "zegrepi"
#~ msgstr "zegrepi"

#, no-wrap
#~ msgid ""
#~ " zegrepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zegrepi regex path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<zegrep -i> program and returns the matching "
#~ "lines."
#~ msgstr ""
#~ "これは外部の C<zegrep -i> プログラムを呼び出し、一致する行を返します。"

#~ msgid "zero"
#~ msgstr "zero"

#, no-wrap
#~ msgid ""
#~ " zero device\n"
#~ "\n"
#~ msgstr ""
#~ " zero device\n"
#~ "\n"

#~ msgid ""
#~ "If blocks are already zero, then this command avoids writing zeroes.  "
#~ "This prevents the underlying device from becoming non-sparse or growing "
#~ "unnecessarily."
#~ msgstr ""
#~ "ブロックデバイスがすでに 0 ならば、このコマンドは 0 を書き込みません。これ"
#~ "は、下にあるブロックデバイスが不必要に非スパース化されたり大きくなったりす"
#~ "ることを避けるためです。"

#~ msgid "See also: L</zero-device>, L</scrub-device>, L</is-zero-device>"
#~ msgstr "関連項目: L</zero-device>, L</scrub-device>, L</is-zero-device>"

#~ msgid "zero-device"
#~ msgstr "zero-device"

#, no-wrap
#~ msgid ""
#~ " zero-device device\n"
#~ "\n"
#~ msgstr ""
#~ " zero-device device\n"
#~ "\n"

#~ msgid "zero-free-space"
#~ msgstr "zero-free-space"

#, no-wrap
#~ msgid ""
#~ " zero-free-space directory\n"
#~ "\n"
#~ msgstr ""
#~ " zero-free-space directory\n"
#~ "\n"

#~ msgid ""
#~ "The filesystem contents are not affected, but any free space in the "
#~ "filesystem is freed."
#~ msgstr ""
#~ "ファイルシステムの内容は影響を受けません。しかし、ファイルシステムにある空"
#~ "き領域はすべて開放されます。"

#~ msgid "zerofree"
#~ msgstr "zerofree"

#, no-wrap
#~ msgid ""
#~ " zerofree device\n"
#~ "\n"
#~ msgstr ""
#~ " zerofree device\n"
#~ "\n"

#~ msgid "zfgrep"
#~ msgstr "zfgrep"

#, no-wrap
#~ msgid ""
#~ " zfgrep pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " zfgrep pattern path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<zfgrep> program and returns the matching lines."
#~ msgstr "これは外部の C<zfgrep> プログラムを呼び出し、一致する行を返します。"

#~ msgid "zfgrepi"
#~ msgstr "zfgrepi"

#, no-wrap
#~ msgid ""
#~ " zfgrepi pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " zfgrepi pattern path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<zfgrep -i> program and returns the matching "
#~ "lines."
#~ msgstr ""
#~ "これは外部の C<zfgrep -i> プログラムを呼び出し、一致する行を返します。"

#~ msgid "zfile"
#~ msgstr "zfile"

#, no-wrap
#~ msgid ""
#~ " zfile meth path\n"
#~ "\n"
#~ msgstr ""
#~ " zfile meth path\n"
#~ "\n"

#, fuzzy
#~| msgid "C<method> must be one of C<gzip>, C<compress> or C<bzip2>."
#~ msgid "C<meth> must be one of C<gzip>, C<compress> or C<bzip2>."
#~ msgstr ""
#~ "C<method> は C<gzip>, C<compress> または C<bzip2> のいずれかである必要があ"
#~ "ります。"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</file> call "
#~ "instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</file> を使用し"
#~ "てください。"

#~ msgid "zgrep"
#~ msgstr "zgrep"

#, no-wrap
#~ msgid ""
#~ " zgrep regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zgrep regex path\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "This calls the external C<zgrep> program and returns the matching lines."
#~ msgid ""
#~ "This calls the external L<zgrep(1)> program and returns the matching "
#~ "lines."
#~ msgstr "外部 C<zgrep> プログラムを呼び出し、一致する行を返します。"

#~ msgid "zgrepi"
#~ msgstr "zgrepi"

#, no-wrap
#~ msgid ""
#~ " zgrepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zgrepi regex path\n"
#~ "\n"

#~ msgid ""
#~ "This calls the external C<zgrep -i> program and returns the matching "
#~ "lines."
#~ msgstr "外部 C<zgrep -i> プログラムを呼び出し、一致する行を返します。"

#~ msgid "alloc"
#~ msgstr "alloc"

#~ msgid "allocate"
#~ msgstr "allocate"

#, no-wrap
#~ msgid ""
#~ " alloc filename size\n"
#~ "\n"
#~ msgstr ""
#~ " alloc filename size\n"
#~ "\n"

#~ msgid ""
#~ "To create a sparse file, use L</sparse> instead.  To create a prepared "
#~ "disk image, see L</PREPARED DISK IMAGES>."
#~ msgstr ""
#~ "スパースなファイルを作成するには、代わりに L</sparse> を使用します。非ス"
#~ "パースなディスクイメージを作成するには、 L</準備済みディスクイメージ> を参"
#~ "照してください。"

#~ msgid "copy-in"
#~ msgstr "copy-in"

#, no-wrap
#~ msgid ""
#~ " copy-in local [local ...] /remotedir\n"
#~ "\n"
#~ msgstr ""
#~ " copy-in local [local ...] /remotedir\n"
#~ "\n"

#~ msgid "copy-out"
#~ msgstr "copy-out"

#, no-wrap
#~ msgid ""
#~ " copy-out remote [remote ...] localdir\n"
#~ "\n"
#~ msgstr ""
#~ " copy-out remote [remote ...] localdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " copy-out /home .\n"
#~ "\n"
#~ msgstr ""
#~ " copy-out /home .\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " glob copy-out /home/* .\n"
#~ "\n"
#~ msgstr ""
#~ " glob copy-out /home/* .\n"
#~ "\n"

#~ msgid "delete-event"
#~ msgstr "delete-event"

#, no-wrap
#~ msgid ""
#~ " delete-event name\n"
#~ "\n"
#~ msgstr ""
#~ " delete-event name\n"
#~ "\n"

#~ msgid "See also the guestfish commands C<event> and C<list-events>."
#~ msgstr "guestfish コマンドの C<event> および C<list-events> 参照。"

#~ msgid "display"
#~ msgstr "display"

#, no-wrap
#~ msgid ""
#~ " display filename\n"
#~ "\n"
#~ msgstr ""
#~ " display filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export GUESTFISH_DISPLAY_IMAGE=eog\n"
#~ "\n"
#~ msgstr ""
#~ " export GUESTFISH_DISPLAY_IMAGE=eog\n"
#~ "\n"

#~ msgid "See also L<display(1)>."
#~ msgstr "L<display(1)> 参照。"

#~ msgid "echo"
#~ msgstr "echo"

#, no-wrap
#~ msgid ""
#~ " echo [params ...]\n"
#~ "\n"
#~ msgstr ""
#~ " echo [params ...]\n"
#~ "\n"

#~ msgid "This echos the parameters to the terminal."
#~ msgstr "パラメーターを端末に返します。"

#~ msgid "edit"
#~ msgstr "edit"

#~ msgid "vi"
#~ msgstr "vi"

#~ msgid "emacs"
#~ msgstr "emacs"

#, no-wrap
#~ msgid ""
#~ " edit filename\n"
#~ "\n"
#~ msgstr ""
#~ " edit filename\n"
#~ "\n"

#~ msgid "event"
#~ msgstr "event"

#, no-wrap
#~ msgid ""
#~ " event name eventset \"shell script ...\"\n"
#~ "\n"
#~ msgstr ""
#~ " event name eventset \"shell script ...\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " event \"\" close \"echo closed\"\n"
#~ " event messages appliance,library,trace \"echo $@\"\n"
#~ " event \"\" progress \"echo progress: $3/$4\"\n"
#~ " event \"\" * \"echo $EVENT $@\"\n"
#~ "\n"
#~ msgstr ""
#~ " event \"\" close \"echo closed\"\n"
#~ " event messages appliance,library,trace \"echo $@\"\n"
#~ " event \"\" progress \"echo progress: $3/$4\"\n"
#~ " event \"\" * \"echo $EVENT $@\"\n"
#~ "\n"

#~ msgid "See also the guestfish commands C<delete-event> and C<list-events>."
#~ msgstr "guestfish コマンドの C<delete-event> および C<list-events> 参照。"

#~ msgid "glob"
#~ msgstr "glob"

#, no-wrap
#~ msgid ""
#~ " glob command args...\n"
#~ "\n"
#~ msgstr ""
#~ " glob command args...\n"
#~ "\n"

#~ msgid "See L</WILDCARDS AND GLOBBING>."
#~ msgstr "L</WILDCARDS AND GLOBBING> 参照。"

#~ msgid "hexedit"
#~ msgstr "hexedit"

#, no-wrap
#~ msgid ""
#~ " hexedit <filename|device>\n"
#~ " hexedit <filename|device> <max>\n"
#~ " hexedit <filename|device> <start> <max>\n"
#~ "\n"
#~ msgstr ""
#~ " hexedit <filename|device>\n"
#~ " hexedit <filename|device> <max>\n"
#~ " hexedit <filename|device> <start> <max>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexedit /dev/sda 1M\n"
#~ "\n"
#~ msgstr ""
#~ " hexedit /dev/sda 1M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexedit /dev/sda1 0x400 0x400\n"
#~ "\n"
#~ msgstr ""
#~ " hexedit /dev/sda1 0x400 0x400\n"
#~ "\n"

#~ msgid "See also L</hexdump>."
#~ msgstr "L</hexdump> 参照。"

#~ msgid "lcd"
#~ msgstr "lcd"

#, no-wrap
#~ msgid ""
#~ " lcd directory\n"
#~ "\n"
#~ msgstr ""
#~ " lcd directory\n"
#~ "\n"

#~ msgid "list-events"
#~ msgstr "list-events"

#, no-wrap
#~ msgid ""
#~ " list-events\n"
#~ "\n"
#~ msgstr ""
#~ " list-events\n"
#~ "\n"

#~ msgid "man"
#~ msgstr "man"

#~ msgid "manual"
#~ msgstr "manual"

#, no-wrap
#~ msgid ""
#~ "  man\n"
#~ "\n"
#~ msgstr ""
#~ "  man\n"
#~ "\n"

#~ msgid "Opens the manual page for guestfish."
#~ msgstr "guestfish のマニュアルページを開きます。"

#~ msgid "more"
#~ msgstr "more"

#~ msgid "less"
#~ msgstr "less"

#, no-wrap
#~ msgid ""
#~ " more filename\n"
#~ "\n"
#~ msgstr ""
#~ " more filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " less filename\n"
#~ "\n"
#~ msgstr ""
#~ " less filename\n"
#~ "\n"

#~ msgid "This is used to view a file."
#~ msgstr "ファイルを表示するために使用します。"

#~ msgid ""
#~ "The default viewer is C<$PAGER>.  However if you use the alternate "
#~ "command C<less> you will get the C<less> command specifically."
#~ msgstr ""
#~ "デフォルトのビューアーは C<$PAGER> です。  しかし代替のコマンド C<less> を"
#~ "使用すると、明示的に C<less> コマンドが使えます。"

#~ msgid "reopen"
#~ msgstr "reopen"

#, no-wrap
#~ msgid ""
#~ "  reopen\n"
#~ "\n"
#~ msgstr ""
#~ "  reopen\n"
#~ "\n"

#~ msgid "setenv"
#~ msgstr "setenv"

#, no-wrap
#~ msgid ""
#~ "  setenv VAR value\n"
#~ "\n"
#~ msgstr ""
#~ "  setenv VAR value\n"
#~ "\n"

#~ msgid "Set the environment variable C<VAR> to the string C<value>."
#~ msgstr "環境変数 C<VAR> を文字列 C<value> に設定します。"

#~ msgid ""
#~ "To print the value of an environment variable use a shell command such as:"
#~ msgstr "環境変数の値を表示するには、次のようにシェルコマンドを使用します:"

#, no-wrap
#~ msgid ""
#~ " !echo $VAR\n"
#~ "\n"
#~ msgstr ""
#~ " !echo $VAR\n"
#~ "\n"

#~ msgid "sparse"
#~ msgstr "sparse"

#, no-wrap
#~ msgid ""
#~ " sparse filename size\n"
#~ "\n"
#~ msgstr ""
#~ " sparse filename size\n"
#~ "\n"

#~ msgid "supported"
#~ msgstr "supported"

#, no-wrap
#~ msgid ""
#~ " supported\n"
#~ "\n"
#~ msgstr ""
#~ " supported\n"
#~ "\n"

#~ msgid "See also L<guestfs(3)/AVAILABILITY>."
#~ msgstr "L<guestfs(3)/AVAILABILITY> 参照。"

#~ msgid "time"
#~ msgstr "time"

#, no-wrap
#~ msgid ""
#~ " time command args...\n"
#~ "\n"
#~ msgstr ""
#~ " time command args...\n"
#~ "\n"

#~ msgid "unsetenv"
#~ msgstr "unsetenv"

#, no-wrap
#~ msgid ""
#~ "  unsetenv VAR\n"
#~ "\n"
#~ msgstr ""
#~ "  unsetenv VAR\n"
#~ "\n"

#~ msgid "Remove C<VAR> from the environment."
#~ msgstr "環境から C<VAR> を削除します。"

#~ msgid "guestfish - the guest filesystem shell"
#~ msgstr "guestfish - ゲスト・ファイルシステム・シェル"

#, no-wrap
#~ msgid ""
#~ " guestfish [--options] [commands]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--options] [commands]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro|--rw] -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro|--rw] -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -d libvirt-domain\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -d libvirt-domain\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro|--rw] -a disk.img -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro|--rw] -a disk.img -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -d libvirt-domain -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -d libvirt-domain -i\n"
#~ "\n"

#~ msgid ""
#~ "Guestfish is a shell and command-line tool for examining and modifying "
#~ "virtual machine filesystems.  It uses libguestfs and exposes all of the "
#~ "functionality of the guestfs API, see L<guestfs(3)>."
#~ msgstr ""
#~ "guestfish は仮想マシンのファイルシステムを検査および変更するために 使用す"
#~ "るシェルおよびコマンドラインツールです。 これは libguestfs を使用し、 "
#~ "guestfs API のすべての機能を提供します。 詳細は L<guestfs(3)> を参照してく"
#~ "ださい。"

#~ msgid ""
#~ "Guestfish gives you structured access to the libguestfs API, from shell "
#~ "scripts or the command line or interactively.  If you want to rescue a "
#~ "broken virtual machine image, you should look at the L<virt-rescue(1)> "
#~ "command."
#~ msgstr ""
#~ "guestfish は、シェルスクリプト、コマンドライン、対話式シェルから "
#~ "libguestfs API への構造的なアクセスを提供します。 壊れた仮想マシンイメージ"
#~ "を救出したい場合、 L<virt-rescue(1)> コマンドを考えてください。"

#~ msgid "As an interactive shell"
#~ msgstr "対話式シェルとして"

#, no-wrap
#~ msgid ""
#~ " $ guestfish\n"
#~ " \n"
#~ msgstr ""
#~ " $ guestfish\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " Welcome to guestfish, the guest filesystem shell for\n"
#~ " editing virtual machine filesystems.\n"
#~ " \n"
#~ msgstr ""
#~ "guestfish へようこそ。仮想マシンのファイルシステムを\n"
#~ "編集するためのゲスト・ファイルシステム・シェルです。\n"

#, no-wrap
#~ msgid ""
#~ " Type: 'help' for a list of commands\n"
#~ "       'man' to read the manual\n"
#~ "       'quit' to quit the shell\n"
#~ " \n"
#~ msgstr ""
#~ " 入力: コマンド一覧の表示は 'help'\n"
#~ "       マニュアルの参照は 'man'\n"
#~ "       シェルの終了は 'quit'\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " ><fs> add-ro disk.img\n"
#~ " ><fs> run\n"
#~ " ><fs> list-filesystems\n"
#~ " /dev/sda1: ext4\n"
#~ " /dev/vg_guest/lv_root: ext4\n"
#~ " /dev/vg_guest/lv_swap: swap\n"
#~ " ><fs> mount /dev/vg_guest/lv_root /\n"
#~ " ><fs> cat /etc/fstab\n"
#~ " # /etc/fstab\n"
#~ " # Created by anaconda\n"
#~ " [...]\n"
#~ " ><fs> exit\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> add-ro disk.img\n"
#~ " ><fs> run\n"
#~ " ><fs> list-filesystems\n"
#~ " /dev/sda1: ext4\n"
#~ " /dev/vg_guest/lv_root: ext4\n"
#~ " /dev/vg_guest/lv_swap: swap\n"
#~ " ><fs> mount /dev/vg_guest/lv_root /\n"
#~ " ><fs> cat /etc/fstab\n"
#~ " # /etc/fstab\n"
#~ " # Created by anaconda\n"
#~ " [...]\n"
#~ " ><fs> exit\n"
#~ "\n"

#~ msgid "From shell scripts"
#~ msgstr "シェルスクリプトから"

#, no-wrap
#~ msgid ""
#~ " guestfish <<_EOF_\n"
#~ " add disk.img\n"
#~ " run\n"
#~ " mount /dev/vg_guest/lv_root /\n"
#~ " write /etc/motd \"Welcome, new users\"\n"
#~ " _EOF_\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish <<_EOF_\n"
#~ " add disk.img\n"
#~ " run\n"
#~ " mount /dev/vg_guest/lv_root /\n"
#~ " write /etc/motd \"Welcome, new users\"\n"
#~ " _EOF_\n"
#~ "\n"

#~ msgid "List the LVM logical volumes in a disk image:"
#~ msgstr "ディスクイメージにある LVM 論理ボリュームを一覧表示します:"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " lvs\n"
#~ " _EOF_\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " lvs\n"
#~ " _EOF_\n"
#~ "\n"

#~ msgid "List all the filesystems in a disk image:"
#~ msgstr "ディスクイメージにあるファイルシステムをすべて一覧表示します:"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " list-filesystems\n"
#~ " _EOF_\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " list-filesystems\n"
#~ " _EOF_\n"
#~ "\n"

#~ msgid "On one command line"
#~ msgstr "コマンドライン 1 行において"

#, no-wrap
#~ msgid ""
#~ " guestfish \\\n"
#~ "   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
#~ "   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish \\\n"
#~ "   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
#~ "   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw --add disk.img \\\n"
#~ "   --mount /dev/vg_guest/lv_root \\\n"
#~ "   --mount /dev/sda1:/boot \\\n"
#~ "   edit /boot/grub/grub.conf\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw --add disk.img \\\n"
#~ "   --mount /dev/vg_guest/lv_root \\\n"
#~ "   --mount /dev/sda1:/boot \\\n"
#~ "   edit /boot/grub/grub.conf\n"
#~ "\n"

#~ msgid "Mount disks automatically"
#~ msgstr "ディスクを自動的にマウントします"

#~ msgid ""
#~ "Use the I<-i> option to automatically mount the disks from a virtual "
#~ "machine:"
#~ msgstr ""
#~ "仮想マシンからディスクを自動的にマウントするには I<-i> オプションを使用し"
#~ "ます:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i cat /etc/group\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i cat /etc/group\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d libvirt-domain -i cat /etc/group\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d libvirt-domain -i cat /etc/group\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
#~ "\n"

#~ msgid "As a script interpreter"
#~ msgstr "スクリプトのインタープリターとして"

#~ msgid "Create a 100MB disk containing an ext2-formatted partition:"
#~ msgstr ""
#~ "ext2 フォーマット済みパーティションを含む 100MB ディスクを作成します:"

#, no-wrap
#~ msgid ""
#~ " #!/usr/bin/guestfish -f\n"
#~ " sparse test1.img 100M\n"
#~ " run\n"
#~ " part-disk /dev/sda mbr\n"
#~ " mkfs ext2 /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " #!/usr/bin/guestfish -f\n"
#~ " sparse test1.img 100M\n"
#~ " run\n"
#~ " part-disk /dev/sda mbr\n"
#~ " mkfs ext2 /dev/sda1\n"
#~ "\n"

#~ msgid "Start with a prepared disk"
#~ msgstr "準備済みディスクを用いた起動"

#, no-wrap
#~ msgid ""
#~ " guestfish -N fs\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N fs\n"
#~ "\n"

#~ msgid "To list what is available do:"
#~ msgstr "利用可能なものを一覧表示する方法:"

#, no-wrap
#~ msgid ""
#~ " guestfish -N help | less\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N help | less\n"
#~ "\n"

#~ msgid "Remote drives"
#~ msgstr "リモートドライブ"

#~ msgid "Access a remote disk using ssh:"
#~ msgstr "SSH を使用してリモートディスクにアクセスします:"

#~ msgid "Remote control"
#~ msgstr "リモート制御"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " guestfish --remote add-ro disk.img\n"
#~ " guestfish --remote run\n"
#~ " guestfish --remote lvs\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " guestfish --remote add-ro disk.img\n"
#~ " guestfish --remote run\n"
#~ " guestfish --remote lvs\n"
#~ "\n"

#~ msgid "Displays general help on options."
#~ msgstr "オプションの一般的なヘルプを表示します。"

#~ msgid "B<--cmd-help>"
#~ msgstr "B<--cmd-help>"

#~ msgid "Lists all available guestfish commands."
#~ msgstr "すべての利用可能な guestfish コマンドを一覧表示します。"

#~ msgid "Displays detailed help on a single command C<cmd>."
#~ msgstr "単一のコマンド C<cmd> の詳細なヘルプを表示します。"

#~ msgid "Add a block device or virtual machine image to the shell."
#~ msgstr "ブロックデバイスまたは仮想マシンイメージをシェルに追加します。"

#~ msgid ""
#~ "Using this flag is mostly equivalent to using the C<add> command, with "
#~ "C<readonly:true> if the I<--ro> flag was given, and with C<format:...> if "
#~ "the I<--format=...> flag was given."
#~ msgstr ""
#~ "このフラグを使用することは C<add> コマンドを使用することとほぼ同じです。 "
#~ "I<--ro> フラグが指定された場合、C<readonly:true> と同じです。 I<--"
#~ "format=...> フラグが指定された場合、C<format:...> と同じです。"

#~ msgid "Add a remote disk.  See L</ADDING REMOTE STORAGE>."
#~ msgstr "リモートディスクを追加します。 L</リモートストレージの追加> 参照。"

#~ msgid ""
#~ "When used in conjunction with the I<-d> option, this specifies the "
#~ "libvirt URI to use.  The default is to use the default libvirt connection."
#~ msgstr ""
#~ " I<-d> オプションと同時に使用するとき、 これは使用する libvirt URI を指定"
#~ "します。 標準状態で標準の libvirt 接続を使用します。"

#~ msgid "B<--csh>"
#~ msgstr "B<--csh>"

#~ msgid ""
#~ "If using the I<--listen> option and a csh-like shell, use this option.  "
#~ "See section L</REMOTE CONTROL AND CSH> below."
#~ msgstr ""
#~ "I<--listen> オプションと csh 系シェルを使用している場合、 このオプションを"
#~ "使用します。 以下の L</リモート制御と csh> のセクションを参照してくださ"
#~ "い。"

#~ msgid ""
#~ "Add disks from the named libvirt domain.  If the I<--ro> option is also "
#~ "used, then any libvirt domain can be used.  However in write mode, only "
#~ "libvirt domains which are shut down can be named here."
#~ msgstr ""
#~ "名前付き libvirt 仮想マシンからディスクを追加します。 I<--ro> オプションも"
#~ "使用されている場合、すべての libvirt 仮想マシンを使用できます。 しかしなが"
#~ "ら、書き込みモードでは、 停止状態の libvirt 仮想マシンのみ指定できます。"

#~ msgid "Domain UUIDs can be used instead of names."
#~ msgstr "名前の代わりに仮想マシンの UUID を使用できます。"

#~ msgid ""
#~ "Using this flag is mostly equivalent to using the C<add-domain> command, "
#~ "with C<readonly:true> if the I<--ro> flag was given, and with C<format:..."
#~ "> if the I<--format=...> flag was given."
#~ msgstr ""
#~ "このフラグを使用することは、C<add-domain> コマンドを使用することとほぼ同等"
#~ "です。 I<--ro> フラグを指定した場合、C<readonly:true> が付きます。 I<--"
#~ "format=...> フラグを指定した場合、C<format:...> が付きます。"

#~ msgid ""
#~ "When prompting for keys and passphrases, guestfish normally turns echoing "
#~ "off so you cannot see what you are typing.  If you are not worried about "
#~ "Tempest attacks and there is no one else in the room you can specify this "
#~ "flag to see what you are typing."
#~ msgstr ""
#~ "キーやパスフレーズを入力するとき、通常 guestfish はエコーを無効化します。 "
#~ "そのため、入力内容を確認できません。 テンペスト攻撃の心配がなく、 部屋に誰"
#~ "も居なければ、 入力内容を確認するためにこのフラグを指定できます。"

#, no-wrap
#~ msgid ""
#~ " #!/usr/bin/guestfish -f\n"
#~ "\n"
#~ msgstr ""
#~ " #!/usr/bin/guestfish -f\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#~ msgid ""
#~ "If you have untrusted raw-format guest disk images, you should use this "
#~ "option to specify the disk format.  This avoids a possible security "
#~ "problem with malicious guests (CVE-2010-3851).  See also L</add>."
#~ msgstr ""
#~ "仮想マシンのディスクイメージが信頼できない raw 形式である場合、 ディスク形"
#~ "式を指定するためにこのオプションを使用すべきです。 これにより、悪意のある"
#~ "仮想マシンにより起こり得る セキュリティ問題を回避できます "
#~ "(CVE-2010-3851)。 L</add> 参照。"

#~ msgid "B<--inspector>"
#~ msgstr "B<--inspector>"

#~ msgid ""
#~ "Using L<virt-inspector(1)> code, inspect the disks looking for an "
#~ "operating system and mount filesystems as they would be mounted on the "
#~ "real virtual machine."
#~ msgstr ""
#~ "L<virt-inspector(1)> コードを使用すると、 オペレーティングシステムを判定す"
#~ "るためにディスクを検査します。 また、実際の仮想マシンにマウントすることと"
#~ "同じように ファイルシステムをマウントします。"

#~ msgid "Typical usage is either:"
#~ msgstr "一般的な使用法は次のどちらかです:"

#, no-wrap
#~ msgid ""
#~ " guestfish -d myguest -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -d myguest -i\n"
#~ "\n"

#~ msgid "(for an inactive libvirt domain called I<myguest>), or:"
#~ msgstr "(I<myguest> という停止状態の libvirt 仮想マシンの場合)、または:"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d myguest -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d myguest -i\n"
#~ "\n"

#~ msgid ""
#~ "(for active domains, readonly), or specify the block device directly:"
#~ msgstr ""
#~ "(動作中の仮想マシンの場合、読み込み専用)、 またはブロックデバイスを直接指"
#~ "定します:"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a /dev/Guests/MyGuest -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a /dev/Guests/MyGuest -i\n"
#~ "\n"

#~ msgid ""
#~ "Note that the command line syntax changed slightly over older versions of "
#~ "guestfish.  You can still use the old syntax:"
#~ msgstr ""
#~ "コマンドライン構文が古いバージョンの guestfish から少し変更されたことに注"
#~ "意してください。 まだ古い構文を使用することができます:"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro] -i disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro] -i disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro] -i libvirt-domain\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro] -i libvirt-domain\n"
#~ "\n"

#~ msgid ""
#~ "Using this flag is mostly equivalent to using the C<inspect-os> command "
#~ "and then using other commands to mount the filesystems that were found."
#~ msgstr ""
#~ "このフラグを使用することは、 C<inspect-os> コマンドを使用することとほぼ同"
#~ "じです。 検出されたファイルシステムをマウントするために 他のコマンドを使用"
#~ "します。"

#~ msgid ""
#~ "Fork into the background and listen for remote commands.  See section L</"
#~ "REMOTE CONTROL GUESTFISH OVER A SOCKET> below."
#~ msgstr ""
#~ "バックグラウンドにフォークし、リモートコマンドをリッスンします。 以下の "
#~ "L</REMOTE CONTROL GUESTFISH OVER A SOCKET> 参照。"

#~ msgid "B<--live>"
#~ msgstr "B<--live>"

#~ msgid ""
#~ "Connect to a live virtual machine.  (Experimental, see L<guestfs(3)/"
#~ "ATTACHING TO RUNNING DAEMONS>)."
#~ msgstr ""
#~ "動作中の仮想マシンに接続します。 (実験的、L<guestfs(3)/ATTACHING TO "
#~ "RUNNING DAEMONS> 参照)。"

#~ msgid ""
#~ "If any I<-m> or I<--mount> options are given, the guest is automatically "
#~ "launched."
#~ msgstr ""
#~ "何らかの I<-m> または I<--mount> オプションが指定されると、 仮想マシンが自"
#~ "動的に起動されます。"

#~ msgid "Enable QEMU user networking in the guest."
#~ msgstr ""
#~ "仮想マシンにおいて QEMU のユーザーモードのネットワークを有効にします。"

#~ msgid ""
#~ "Disable autosync.  This is enabled by default.  See the discussion of "
#~ "autosync in the L<guestfs(3)> manpage."
#~ msgstr ""
#~ "自動同期を無効化します。 これは標準で有効化されています。 L<guestfs(3)> マ"
#~ "ニュアルページの自動同期に関する記載を 参照してください。"

#~ msgid "B<--no-dest-paths>"
#~ msgstr "B<--no-dest-paths>"

#~ msgid "B<--pipe-error>"
#~ msgstr "B<--pipe-error>"

#~ msgid ""
#~ "If writes fail to pipe commands (see L</PIPES> below), then the command "
#~ "returns an error."
#~ msgstr ""
#~ "コマンドのパイプ (以下の L</パイプ> 参照) への書き込みに失敗した場合、 こ"
#~ "のコマンドがエラーを返します。"

#~ msgid ""
#~ "The default (also for historical reasons) is to ignore such errors so "
#~ "that:"
#~ msgstr ""
#~ "標準状態では、(歴史的な理由から) そのようなエラーは次のために無視されま"
#~ "す。"

#, no-wrap
#~ msgid ""
#~ " ><fs> command_with_lots_of_output | head\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> command_with_lots_of_output | head\n"
#~ "\n"

#~ msgid "doesn't give an error."
#~ msgstr "エラーは渡されません。"

#~ msgid "B<--progress-bars>"
#~ msgstr "B<--progress-bars>"

#~ msgid "Enable progress bars, even when guestfish is used non-interactively."
#~ msgstr ""
#~ "guestfish が非対話式モードを使用している場合でも、 進行状況バーを有効にし"
#~ "ます。"

#~ msgid ""
#~ "Progress bars are enabled by default when guestfish is used as an "
#~ "interactive shell."
#~ msgstr ""
#~ "guestfish を対話式シェルで使用するとき、 進行状況バーが標準で有効になって"
#~ "います。"

#~ msgid "B<--no-progress-bars>"
#~ msgstr "B<--no-progress-bars>"

#~ msgid "Disable progress bars."
#~ msgstr "進行状況バーを無効にします。"

#~ msgid ""
#~ "Send remote commands to C<$GUESTFISH_PID> or C<pid>.  See section L</"
#~ "REMOTE CONTROL GUESTFISH OVER A SOCKET> below."
#~ msgstr ""
#~ "リモートコマンドを C<$GUESTFISH_PID> または C<pid> に送信します。 以下の "
#~ "L</REMOTE CONTROL GUESTFISH OVER A SOCKET> 参照。"

#~ msgid "B<--ro>"
#~ msgstr "B<--ro>"

#~ msgid ""
#~ "This changes the I<-a>, I<-d> and I<-m> options so that disks are added "
#~ "and mounts are done read-only."
#~ msgstr ""
#~ "ディスクが追加され、読み込み専用でマウントされるよう、 I<-a>, I<-d>, I<-"
#~ "m> オプションを変更します。"

#~ msgid ""
#~ "The option must always be used if the disk image or virtual machine might "
#~ "be running, and is generally recommended in cases where you don't need "
#~ "write access to the disk."
#~ msgstr ""
#~ "ディスクイメージまたは仮想マシンが使用中の場合、 必ずこのオプションを使用"
#~ "する必要があります。 また、ディスクへの書き込みアクセスが不要な場合、 この"
#~ "オプションが一般的に推奨されます。"

#~ msgid ""
#~ "Note that prepared disk images created with I<-N> are not affected by "
#~ "this option.  Also commands like C<add> are not affected - you have to "
#~ "specify the C<readonly:true> option explicitly if you need it."
#~ msgstr ""
#~ "I<-N> オプションで作成された準備済みディスクイメージは、 このオプションの"
#~ "効果がないことに注意してください。 C<add> のようなコマンドも影響を受けませ"
#~ "ん。 必要があれば、C<readonly:true> オプションを明示的に指定する必要があり"
#~ "ます。"

#~ msgid "See also L</OPENING DISKS FOR READ AND WRITE> below."
#~ msgstr "以下の L</OPENING DISKS FOR READ AND WRITE> 参照。"

#~ msgid "B<--selinux>"
#~ msgstr "B<--selinux>"

#~ msgid ""
#~ "Enable very verbose messages.  This is particularly useful if you find a "
#~ "bug."
#~ msgstr ""
#~ "非常に冗長なメッセージを出力します。  バグを探す場合、とくに有用です。"

#~ msgid "Display the guestfish / libguestfs version number and exit."
#~ msgstr "guestfish / libguestfs のバージョン番号を表示して、終了します。"

#~ msgid "B<-w>"
#~ msgstr "B<-w>"

#~ msgid "B<--rw>"
#~ msgstr "B<--rw>"

#~ msgid ""
#~ "This changes the I<-a>, I<-d> and I<-m> options so that disks are added "
#~ "and mounts are done read-write."
#~ msgstr ""
#~ "ディスクが追加され、読み書き可能でマウントされるよう、 I<-a>, I<-d>, I<-"
#~ "m> オプションを変更します。"

#~ msgid "See L</OPENING DISKS FOR READ AND WRITE> below."
#~ msgstr "以下の L</OPENING DISKS FOR READ AND WRITE> 参照。"

#~ msgid "Echo each command before executing it."
#~ msgstr "各コマンドを実行する前にエコーします。"

#~ msgid "COMMANDS ON COMMAND LINE"
#~ msgstr "コマンドラインにおけるコマンド"

#, no-wrap
#~ msgid ""
#~ " guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
#~ "\n"

#~ msgid "USING launch (OR run)"
#~ msgstr "launch (または run) の使用法"

#~ msgid "add or -a/--add"
#~ msgstr "add or -a/--add"

#~ msgid "launch (aka run)"
#~ msgstr "launch (別名 run)"

#~ msgid "mount or -m/--mount"
#~ msgstr "mount または -m/--mount"

#, no-wrap
#~ msgid ""
#~ " add \"file with a space.img\"\n"
#~ "\n"
#~ msgstr ""
#~ " add \"file with a space.img\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm '/file name'\n"
#~ "\n"
#~ msgstr ""
#~ " rm '/file name'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm '/\"'\n"
#~ "\n"
#~ msgstr ""
#~ " rm '/\"'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
#~ " command \"/bin/echo 'foo      bar'\"\n"
#~ " command \"/bin/echo \\'foo\\'\"\n"
#~ "\n"
#~ msgstr ""
#~ " vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
#~ " command \"/bin/echo 'foo      bar'\"\n"
#~ " command \"/bin/echo \\'foo\\'\"\n"
#~ "\n"

#~ msgid "C<\\a>"
#~ msgstr "C<\\a>"

#~ msgid "Alert (bell) character."
#~ msgstr "アラート（ベル）文字。"

#~ msgid "C<\\b>"
#~ msgstr "C<\\b>"

#~ msgid "Backspace character."
#~ msgstr "バックスペース文字。"

#~ msgid "C<\\f>"
#~ msgstr "C<\\f>"

#~ msgid "Form feed character."
#~ msgstr "フォームフィード文字。"

#~ msgid "C<\\n>"
#~ msgstr "C<\\n>"

#~ msgid "Newline character."
#~ msgstr "改行文字。"

#~ msgid "C<\\r>"
#~ msgstr "C<\\r>"

#~ msgid "Carriage return character."
#~ msgstr "復帰文字。"

#~ msgid "C<\\t>"
#~ msgstr "C<\\t>"

#~ msgid "Horizontal tab character."
#~ msgstr "水平タブ文字。"

#~ msgid "C<\\v>"
#~ msgstr "C<\\v>"

#~ msgid "Vertical tab character."
#~ msgstr "垂直タブ文字。"

#~ msgid "C<\\\">"
#~ msgstr "C<\\\">"

#~ msgid "A literal double quote character."
#~ msgstr "二重引用符文字。"

#~ msgid "C<\\ooo>"
#~ msgstr "C<\\ooo>"

#~ msgid ""
#~ "A character with octal value I<ooo>.  There must be precisely 3 octal "
#~ "digits (unlike C)."
#~ msgstr ""
#~ "8 進値 I<ooo> を持つ文字。（C とは異なり）ちょうど 3 桁である必要がありま"
#~ "す。"

#~ msgid "C<\\xhh>"
#~ msgstr "C<\\xhh>"

#~ msgid ""
#~ "A character with hex value I<hh>.  There must be precisely 2 hex digits."
#~ msgstr "16 進数値 I<hh> を持つ文字。ちょうど 2 桁である必要があります。"

#~ msgid "C<\\\\>"
#~ msgstr "C<\\\\>"

#~ msgid "A literal backslash character."
#~ msgstr "文字としてのバックスラッシュ文字。"

#~ msgid "OPTIONAL ARGUMENTS"
#~ msgstr "オプション引数"

#~ msgid "NUMBERS"
#~ msgstr "数値"

#~ msgid ""
#~ "This section applies to all commands which can take integers as "
#~ "parameters."
#~ msgstr ""
#~ "このセクションはパラメーターとして整数を取り得るすべてのコマンドに適用され"
#~ "ます。"

#~ msgid "SIZE SUFFIX"
#~ msgstr "容量の接尾辞"

#~ msgid ""
#~ "When the command takes a parameter measured in bytes, you can use one of "
#~ "the following suffixes to specify kilobytes, megabytes and larger sizes:"
#~ msgstr ""
#~ "コマンドがバイト単位で計算されるパラメーターをとるとき、キロバイト、メガバ"
#~ "イト、それより大きい容量を指定するために、以下の接尾辞のどれかをとることが"
#~ "できます:"

#~ msgid "B<k> or B<K> or B<KiB>"
#~ msgstr "B<k> または B<K> または B<KiB>"

#~ msgid "The size in kilobytes (multiplied by 1024)."
#~ msgstr "キロ（1024 の掛け算）バイト単位の容量です。"

#~ msgid "B<KB>"
#~ msgstr "B<KB>"

#~ msgid "The size in SI 1000 byte units."
#~ msgstr "国際単位系（SI）の 1000 バイト単位の容量です。"

#~ msgid "B<M> or B<MiB>"
#~ msgstr "B<M> または B<MiB>"

#~ msgid "The size in megabytes (multiplied by 1048576)."
#~ msgstr "メガ（1048576 の掛け算）バイト単位の容量です。"

#~ msgid "B<MB>"
#~ msgstr "B<MB>"

#~ msgid "The size in SI 1000000 byte units."
#~ msgstr "国際単位系（SI）の 1000000 バイト単位の容量です。"

#~ msgid "B<G> or B<GiB>"
#~ msgstr "B<G> または B<GiB>"

#~ msgid "The size in gigabytes (multiplied by 2**30)."
#~ msgstr "ギガ（2 の 30 乗の掛け算）バイト単位の容量です。"

#~ msgid "B<GB>"
#~ msgstr "B<GB>"

#~ msgid "The size in SI 10**9 byte units."
#~ msgstr "国際単位系（SI）の 10 の 9 乗バイト単位の容量です。"

#~ msgid "B<T> or B<TiB>"
#~ msgstr "B<T> または B<TiB>"

#~ msgid "The size in terabytes (multiplied by 2**40)."
#~ msgstr "テラ（2 の 40 乗の掛け算）バイト単位の容量です。"

#~ msgid "B<TB>"
#~ msgstr "B<TB>"

#~ msgid "The size in SI 10**12 byte units."
#~ msgstr "国際単位系（SI）の 10 の 12 乗バイト単位の容量です。"

#~ msgid "B<P> or B<PiB>"
#~ msgstr "B<P> または B<PiB>"

#~ msgid "The size in petabytes (multiplied by 2**50)."
#~ msgstr "ペタ（2 の 50 乗の掛け算）バイト単位の容量です。"

#~ msgid "B<PB>"
#~ msgstr "B<PB>"

#~ msgid "The size in SI 10**15 byte units."
#~ msgstr "国際単位系（SI）の 10 の 15 乗バイト単位の容量です。"

#~ msgid "B<E> or B<EiB>"
#~ msgstr "B<E> または B<EiB>"

#~ msgid "The size in exabytes (multiplied by 2**60)."
#~ msgstr "エクサ（2 の 60 乗の掛け算）バイト単位の容量です。"

#~ msgid "B<EB>"
#~ msgstr "B<EB>"

#~ msgid "The size in SI 10**18 byte units."
#~ msgstr "国際単位系（SI）の 10 の 18 乗バイト単位の容量です。"

#~ msgid "B<Z> or B<ZiB>"
#~ msgstr "B<Z> または B<ZiB>"

#~ msgid "The size in zettabytes (multiplied by 2**70)."
#~ msgstr "ゼタ（2 の 70 乗の掛け算）バイト単位の容量です。"

#~ msgid "B<ZB>"
#~ msgstr "B<ZB>"

#~ msgid "The size in SI 10**21 byte units."
#~ msgstr "国際単位系（SI）の 10 の 21 乗バイト単位の容量です。"

#~ msgid "B<Y> or B<YiB>"
#~ msgstr "B<Y> または B<YiB>"

#~ msgid "The size in yottabytes (multiplied by 2**80)."
#~ msgstr "ヨタ（2 の 80 乗の掛け算）バイト単位の容量です。"

#~ msgid "B<YB>"
#~ msgstr "B<YB>"

#~ msgid "The size in SI 10**24 byte units."
#~ msgstr "国際単位系（SI）の 10 の 24 乗バイト単位の容量です。"

#, no-wrap
#~ msgid ""
#~ " truncate-size /file 1G\n"
#~ "\n"
#~ msgstr ""
#~ " truncate-size /file 1G\n"
#~ "\n"

#~ msgid "would truncate the file to 1 gigabyte."
#~ msgstr "ファイルを 1 ギガバイトに切り詰めます。"

#~ msgid ""
#~ "Be careful because a few commands take sizes in kilobytes or megabytes "
#~ "(eg. the parameter to L</memsize> is specified in megabytes already).  "
#~ "Adding a suffix will probably not do what you expect."
#~ msgstr ""
#~ "いくつかのコマンドはキロバイトまたはメガバイト単位の容量をとるので注意して"
#~ "ください (たとえば、L</memsize> のパラメーターはすでにメガバイト単位で指定"
#~ "されています)。接尾辞をつけることにより、期待しない結果になることがありま"
#~ "す。"

#~ msgid "OCTAL AND HEXADECIMAL NUMBERS"
#~ msgstr "10 進数値および 16 進数値"

#, no-wrap
#~ msgid ""
#~ " 1234      decimal number 1234\n"
#~ " 02322     octal number, equivalent to decimal 1234\n"
#~ " 0x4d2     hexadecimal number, equivalent to decimal 1234\n"
#~ "\n"
#~ msgstr ""
#~ " 1234      10 進数 1234\n"
#~ " 02322     8 進数、10 進数の 1234\n"
#~ " 0x4d2     16 進数、10 進数の 1234\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " chmod 0777 /public  # OK\n"
#~ " chmod 777 /public   # WRONG! This is mode 777 decimal = 01411 octal.\n"
#~ "\n"
#~ msgstr ""
#~ " chmod 0777 /public  # 正解\n"
#~ " chmod 777 /public   # 誤り! このモードは 10 進 777 = 8 進 01411 です。\n"
#~ "\n"

#~ msgid "WILDCARDS AND GLOBBING"
#~ msgstr "ワイルドカードおよびグロブ"

#, no-wrap
#~ msgid ""
#~ " rm-rf /home/*\n"
#~ "\n"
#~ msgstr ""
#~ " rm-rf /home/*\n"
#~ "\n"

#~ msgid "To perform wildcard expansion, use the C<glob> command."
#~ msgstr "ワイルドカードの展開を実行するには C<glob> コマンドを使用します。"

#, no-wrap
#~ msgid ""
#~ " glob rm-rf /home/*\n"
#~ "\n"
#~ msgstr ""
#~ " glob rm-rf /home/*\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm-rf /home/jim\n"
#~ " rm-rf /home/joe\n"
#~ " rm-rf /home/mary\n"
#~ "\n"
#~ msgstr ""
#~ " rm-rf /home/jim\n"
#~ " rm-rf /home/joe\n"
#~ " rm-rf /home/mary\n"
#~ "\n"

#~ msgid "COMMENTS"
#~ msgstr "コメント"

#, no-wrap
#~ msgid ""
#~ " # this is a comment\n"
#~ "         # this is a comment\n"
#~ " foo # NOT a comment\n"
#~ "\n"
#~ msgstr ""
#~ " # これはコメントです\n"
#~ "         # これはコメントです\n"
#~ " foo # コメントではありません\n"
#~ "\n"

#~ msgid "Blank lines are also ignored."
#~ msgstr "空行も無視されます。"

#~ msgid "RUNNING COMMANDS LOCALLY"
#~ msgstr "ローカルのコマンドの実行法"

#, no-wrap
#~ msgid ""
#~ " !mkdir local\n"
#~ " tgz-out /remote local/remote-data.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " !mkdir local\n"
#~ " tgz-out /remote local/remote-data.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
#~ "\n"
#~ msgstr ""
#~ " <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
#~ "\n"
#~ msgstr ""
#~ " <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
#~ "\n"

#~ msgid "PIPES"
#~ msgstr "パイプ"

#, no-wrap
#~ msgid ""
#~ " cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
#~ "\n"
#~ msgstr ""
#~ " cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexdump /bin/ls | head\n"
#~ " list-devices | tail -1\n"
#~ " tgz-out / - | tar ztf -\n"
#~ "\n"
#~ msgstr ""
#~ " hexdump /bin/ls | head\n"
#~ " list-devices | tail -1\n"
#~ " tgz-out / - | tar ztf -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " echo \"|\"\n"
#~ "\n"
#~ msgstr ""
#~ " echo \"|\"\n"
#~ "\n"

#~ msgid "HOME DIRECTORIES"
#~ msgstr "ホームディレクトリ"

#, no-wrap
#~ msgid ""
#~ " echo \"~\"\n"
#~ "\n"
#~ msgstr ""
#~ " echo \"~\"\n"
#~ "\n"

#~ msgid "ENCRYPTED DISKS"
#~ msgstr "暗号化ディスク"

#, no-wrap
#~ msgid ""
#~ " ><fs> vfs-type /dev/sda2\n"
#~ " crypto_LUKS\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> vfs-type /dev/sda2\n"
#~ " crypto_LUKS\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> luks-open /dev/sda2 luksdev\n"
#~ " Enter key or passphrase (\"key\"): <enter the passphrase>\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> luks-open /dev/sda2 luksdev\n"
#~ " Enter key or passphrase (\"key\"): <パスフレーズを入力してください>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgscan\n"
#~ " vg-activate-all true\n"
#~ "\n"
#~ msgstr ""
#~ " vgscan\n"
#~ " vg-activate-all true\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vg-activate false /dev/VG\n"
#~ " luks-close /dev/mapper/luksdev\n"
#~ "\n"
#~ msgstr ""
#~ " vg-activate false /dev/VG\n"
#~ " luks-close /dev/mapper/luksdev\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file /WINDOWS/system32/config/system.LOG\n"
#~ "\n"
#~ msgstr ""
#~ " file /WINDOWS/system32/config/system.LOG\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file win:\\windows\\system32\\config\\system.log\n"
#~ "\n"
#~ msgstr ""
#~ " file win:\\windows\\system32\\config\\system.log\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
#~ "\n"
#~ msgstr ""
#~ " file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " win:e:\\foo\\bar => /e/FOO/bar\n"
#~ "\n"
#~ msgstr ""
#~ " win:e:\\foo\\bar => /e/FOO/bar\n"
#~ "\n"

#~ msgid "UPLOADING AND DOWNLOADING FILES"
#~ msgstr "ファイルのアップロード方法およびダウンロード方法"

#, no-wrap
#~ msgid ""
#~ " upload - /foo\n"
#~ "\n"
#~ msgstr ""
#~ " upload - /foo\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " tar-out /etc - | tar tf -\n"
#~ "\n"
#~ msgstr ""
#~ " tar-out /etc - | tar tf -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " upload -<<END /foo\n"
#~ " input line 1\n"
#~ " input line 2\n"
#~ " input line 3\n"
#~ " END\n"
#~ "\n"
#~ msgstr ""
#~ " upload -<<END /foo\n"
#~ " input line 1\n"
#~ " input line 2\n"
#~ " input line 3\n"
#~ " END\n"
#~ "\n"

#~ msgid "REMOTE CONTROL GUESTFISH OVER A SOCKET"
#~ msgstr "guestfish のソケット経由のリモート制御"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen`\"\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen`\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote cmd [...]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote cmd [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid1=$GUESTFISH_PID\n"
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid2=$GUESTFISH_PID\n"
#~ " ...\n"
#~ " guestfish --remote=$pid1 cmd\n"
#~ " guestfish --remote=$pid2 cmd\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid1=$GUESTFISH_PID\n"
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid2=$GUESTFISH_PID\n"
#~ " ...\n"
#~ " guestfish --remote=$pid1 cmd\n"
#~ " guestfish --remote=$pid2 cmd\n"
#~ "\n"

#~ msgid ""
#~ "When using csh-like shells (csh, tcsh etc) you have to add the I<--csh> "
#~ "option:"
#~ msgstr ""
#~ "csh 系のシェル (csh, tcsh など) を使用するとき、I<--csh> オプションを追加"
#~ "する必要があります:"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen --csh`\"\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen --csh`\"\n"
#~ "\n"

#~ msgid "REMOTE CONTROL DETAILS"
#~ msgstr "リモート制御の詳細"

#, no-wrap
#~ msgid ""
#~ " guestfish[0]=\"guestfish\"\n"
#~ " guestfish[1]=\"--listen\"\n"
#~ " guestfish[2]=\"--ro\"\n"
#~ " guestfish[3]=\"-a\"\n"
#~ " guestfish[4]=\"disk.img\"\n"
#~ " \n"
#~ msgstr ""
#~ " guestfish[0]=\"guestfish\"\n"
#~ " guestfish[1]=\"--listen\"\n"
#~ " guestfish[2]=\"--ro\"\n"
#~ " guestfish[3]=\"-a\"\n"
#~ " guestfish[4]=\"disk.img\"\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " GUESTFISH_PID=\n"
#~ " eval $(\"${guestfish[@]}\")\n"
#~ " if [ -z \"$GUESTFISH_PID\" ]; then\n"
#~ "     echo \"error: guestfish didn't start up, see error messages above\"\n"
#~ "     exit 1\n"
#~ " fi\n"
#~ " \n"
#~ msgstr ""
#~ " GUESTFISH_PID=\n"
#~ " eval $(\"${guestfish[@]}\")\n"
#~ " if [ -z \"$GUESTFISH_PID\" ]; then\n"
#~ "     echo \"error: guestfish didn't start up, see error messages above\"\n"
#~ "     exit 1\n"
#~ " fi\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " cleanup_guestfish ()\n"
#~ " {\n"
#~ "     guestfish --remote -- exit >/dev/null 2>&1 ||:\n"
#~ " }\n"
#~ " trap cleanup_guestfish EXIT ERR\n"
#~ " \n"
#~ msgstr ""
#~ " cleanup_guestfish ()\n"
#~ " {\n"
#~ "     guestfish --remote -- exit >/dev/null 2>&1 ||:\n"
#~ " }\n"
#~ " trap cleanup_guestfish EXIT ERR\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote -- run\n"
#~ " \n"
#~ msgstr ""
#~ " guestfish --remote -- run\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # ...\n"
#~ "\n"
#~ msgstr ""
#~ " # ...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " a=`guestfish --remote run`\n"
#~ "\n"
#~ msgstr ""
#~ " a=`guestfish --remote run`\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N fs:ext4\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N fs:ext4\n"
#~ "\n"

#~ msgid "Create a 32MB disk with a VFAT-formatted partition, and mount it:"
#~ msgstr ""
#~ "VFAT フォーマットのパーティションを持つ 32MB ディスクを作成して、マウント"
#~ "します:"

#, no-wrap
#~ msgid ""
#~ " guestfish -N fs:vfat:32M -m /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N fs:vfat:32M -m /dev/sda1\n"
#~ "\n"

#~ msgid "Create a blank 200MB disk:"
#~ msgstr "200MB の空ディスクを作成します:"

#, no-wrap
#~ msgid ""
#~ " guestfish -N disk:200M\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N disk:200M\n"
#~ "\n"

#~ msgid "PROGRESS BARS"
#~ msgstr "進行状況バー"

#, no-wrap
#~ msgid ""
#~ " ><fs> copy-size /large-file /another-file 2048M\n"
#~ " / 10% [#####-----------------------------------------] 00:30\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> copy-size /large-file /another-file 2048M\n"
#~ " / 10% [#####-----------------------------------------] 00:30\n"
#~ "\n"

#~ msgid "\\["
#~ msgstr "\\["

#~ msgid "\\]"
#~ msgstr "\\]"

#~ msgid "\\a"
#~ msgstr "\\a"

#~ msgid "A bell character."
#~ msgstr "ベル文字。"

#~ msgid "\\e"
#~ msgstr "\\e"

#~ msgid "An ASCII ESC (escape) character."
#~ msgstr "ASCII ESC (エスケープ) 文字。"

#~ msgid "A newline."
#~ msgstr "改行。"

#~ msgid "\\r"
#~ msgstr "\\r"

#~ msgid "A carriage return."
#~ msgstr "復帰。"

#~ msgid "\\NNN"
#~ msgstr "\\NNN"

#~ msgid "The ASCII character whose code is the octal value NNN."
#~ msgstr "コードの8 進値が NNN の ASCII 文字。"

#~ msgid "\\xNN"
#~ msgstr "\\xNN"

#~ msgid "The ASCII character whose code is the hex value NN."
#~ msgstr "コードの 16 進値が NN の ASCII 文字。"

#~ msgid "GUESTFISH COMMANDS"
#~ msgstr "guestfish コマンド"

#~ msgid "help"
#~ msgstr "help"

#~ msgid "exit"
#~ msgstr "exit"

#~ msgid "quit"
#~ msgstr "quit"

#~ msgid "This exits guestfish.  You can also use C<^D> key."
#~ msgstr "これは guestfish を終了します。C<^D> キーを使用することもできます。"

#~ msgid "COMMANDS"
#~ msgstr "コマンド"

#~ msgid ""
#~ "guestfish returns 0 if the commands completed without error, or 1 if "
#~ "there was an error."
#~ msgstr ""
#~ "コマンドがエラーなく完了すると、guestfish は 0 を返します。エラーがあると "
#~ "1 を返します。"

#~ msgid "EDITOR"
#~ msgstr "EDITOR"

#~ msgid ""
#~ "The C<edit> command uses C<$EDITOR> as the editor.  If not set, it uses "
#~ "C<vi>."
#~ msgstr ""
#~ "C<edit> コマンドはエディターとして C<$EDITOR> を使用します。設定されていな"
#~ "いと、C<vi> を使用します。"

#~ msgid "GUESTFISH_DISPLAY_IMAGE"
#~ msgstr "GUESTFISH_DISPLAY_IMAGE"

#~ msgid "GUESTFISH_PID"
#~ msgstr "GUESTFISH_PID"

#~ msgid "GUESTFISH_PS1"
#~ msgstr "GUESTFISH_PS1"

#~ msgid "HEXEDITOR"
#~ msgstr "HEXEDITOR"

#~ msgid "HOME"
#~ msgstr "HOME"

#~ msgid ""
#~ "If compiled with GNU readline support, various files in the home "
#~ "directory can be used.  See L</FILES>."
#~ msgstr ""
#~ "GNU readline のサポート付きでコンパイルしていると、ホームディレクトリーに"
#~ "あるさまざまなファイルを使用できます。 L</ファイル> 参照。"

#~ msgid "LIBGUESTFS_APPEND"
#~ msgstr "LIBGUESTFS_APPEND"

#~ msgid "Pass additional options to the guest kernel."
#~ msgstr "仮想マシンのカーネルに追加のオプションを渡します。"

#~ msgid "LIBGUESTFS_DEBUG"
#~ msgstr "LIBGUESTFS_DEBUG"

#~ msgid "LIBGUESTFS_MEMSIZE"
#~ msgstr "LIBGUESTFS_MEMSIZE"

#, no-wrap
#~ msgid ""
#~ " LIBGUESTFS_MEMSIZE=700\n"
#~ "\n"
#~ msgstr ""
#~ " LIBGUESTFS_MEMSIZE=700\n"
#~ "\n"

#~ msgid "LIBGUESTFS_PATH"
#~ msgstr "LIBGUESTFS_PATH"

#~ msgid "LIBGUESTFS_QEMU"
#~ msgstr "LIBGUESTFS_QEMU"

#~ msgid "LIBGUESTFS_TRACE"
#~ msgstr "LIBGUESTFS_TRACE"

#~ msgid "Set C<LIBGUESTFS_TRACE=1> to enable command traces."
#~ msgstr ""
#~ "コマンドトレースを有効にするには C<LIBGUESTFS_TRACE=1> を設定してくださ"
#~ "い。"

#~ msgid "PAGER"
#~ msgstr "PAGER"

#~ msgid "PATH"
#~ msgstr "パス"

#~ msgid "TMPDIR"
#~ msgstr "TMPDIR"

#~ msgid "$HOME/.libguestfs-tools.rc"
#~ msgstr "$HOME/.libguestfs-tools.rc"

#~ msgid "/etc/libguestfs-tools.conf"
#~ msgstr "/etc/libguestfs-tools.conf"

#~ msgid "$HOME/.guestfish"
#~ msgstr "$HOME/.guestfish"

#~ msgid ""
#~ "If compiled with GNU readline support, then the command history is saved "
#~ "in this file."
#~ msgstr ""
#~ "GNU readline のサポート付きでコンパイルされていると、コマンドの履歴がこの"
#~ "ファイルに保存されます。"

#~ msgid "$HOME/.inputrc"
#~ msgstr "$HOME/.inputrc"

#~ msgid "/etc/inputrc"
#~ msgstr "/etc/inputrc"

#~ msgid ""
#~ "If compiled with GNU readline support, then these files can be used to "
#~ "configure readline.  For further information, please see L<readline(3)/"
#~ "INITIALIZATION FILE>."
#~ msgstr ""
#~ "GNU readline のサポート付きでコンパイルされていると、これらのファイルが "
#~ "readline を設定するために使用されます。  詳細は L<readline(3)/"
#~ "INITIALIZATION FILE> を参照してください。"

#, no-wrap
#~ msgid ""
#~ " $if guestfish\n"
#~ " ...\n"
#~ " $endif\n"
#~ "\n"
#~ msgstr ""
#~ " $if guestfish\n"
#~ " ...\n"
#~ " $endif\n"
#~ "\n"

#~ msgid "completion-ignore-case (default: on)"
#~ msgstr "completion-ignore-case (初期値: on)"

#, no-wrap
#~ msgid ""
#~ " set completion-ignore-case off\n"
#~ "\n"
#~ msgstr ""
#~ " set completion-ignore-case off\n"
#~ "\n"

#~ msgid "to make guestfish case sensitive."
#~ msgstr "guestfish が大文字小文字を区別するようになります。"

#~ msgid "test1.img"
#~ msgstr "test1.img"

#~ msgid "test2.img (etc)"
#~ msgstr "test2.img (etc)"

#~ msgid ""
#~ "virt-copy-in - Copy files and directories into a virtual machine disk "
#~ "image."
#~ msgstr ""
#~ "virt-copy-in - ファイルおよびディレクトリを仮想マシンのディスクイメージに"
#~ "コピーします。"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -a disk.img file|dir [file|dir ...] /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -a disk.img file|dir [file|dir ...] /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d domain file|dir [file|dir ...] /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d domain file|dir [file|dir ...] /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d MyGuest resolv.conf /etc\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d MyGuest resolv.conf /etc\n"
#~ "\n"

#~ msgid "Upload a home directory to a guest:"
#~ msgstr "ホームディレクトリを仮想マシンにアップロードします:"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d MyGuest skel /home\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d MyGuest skel /home\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-edit(1)>, "
#~ "L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-out(1)>, L<virt-edit(1)>, "
#~ "L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."

#~ msgid ""
#~ "virt-copy-out - Copy files and directories out of a virtual machine disk "
#~ "image."
#~ msgstr ""
#~ "virt-copy-out - ファイルとディレクトリの仮想マシンのディスクイメージ外への"
#~ "コピー"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -a disk.img /file|dir [/file|dir ...] localdir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -a disk.img /file|dir [/file|dir ...] localdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -d domain /file|dir [/file|dir ...] localdir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -d domain /file|dir [/file|dir ...] localdir\n"
#~ "\n"

#~ msgid "Download the home directories from a virtual machine:"
#~ msgstr "仮想マシンからホームディレクトリをダウンロードします:"

#, no-wrap
#~ msgid ""
#~ " mkdir homes\n"
#~ " virt-copy-out -d MyGuest /home homes\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir homes\n"
#~ " virt-copy-out -d MyGuest /home homes\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-edit(1)>, "
#~ "L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-edit(1)>, "
#~ "L<virt-tar-in(1)>, L<virt-tar-out(1)>, L<http://libguestfs.org/>."

#~ msgid "virt-tar-in - Unpack a tarball into a virtual machine disk image."
#~ msgstr ""
#~ "virt-tar-in - tar ファイルを仮想マシンのディスクイメージに展開します。"

#, no-wrap
#~ msgid ""
#~ " virt-tar-in -a disk.img data.tar /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-in -a disk.img data.tar /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-in -d domain data.tar /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-in -d domain data.tar /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " zcat data.tar.gz | virt-tar-in -d domain - /destination\n"
#~ "\n"
#~ msgstr ""
#~ " zcat data.tar.gz | virt-tar-in -d domain - /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-in -d MyGuest homes.tar /home\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-in -d MyGuest homes.tar /home\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
#~ "L<virt-edit(1)>, L<virt-make-fs(1)>, L<virt-tar-out(1)>, L<http://"
#~ "libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
#~ "L<virt-edit(1)>, L<virt-make-fs(1)>, L<virt-tar-out(1)>, L<http://"
#~ "libguestfs.org/>."

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -a disk.img /dir files.tar\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -a disk.img /dir files.tar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d domain /dir files.tar\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d domain /dir files.tar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d domain /dir - | gzip --best > files.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d domain /dir - | gzip --best > files.tar.gz\n"
#~ "\n"

#~ msgid "Download the home directories from a guest:"
#~ msgstr "仮想マシンからホームディレクトリーをダウンロードします:"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d MyGuest /home - | gzip --best > homes.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d MyGuest /home - | gzip --best > homes.tar.gz\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
#~ "L<virt-edit(1)>, L<virt-tar-in(1)>, L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfish(1)>, L<virt-cat(1)>, L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
#~ "L<virt-edit(1)>, L<virt-tar-in(1)>, L<http://libguestfs.org/>."

#~ msgid "virt-format - Erase and make a blank disk"
#~ msgstr "virt-format - ディスクの消去および空のディスクの作成"

#, no-wrap
#~ msgid ""
#~ " virt-format [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#~ msgid "Normal usage would be something like this:"
#~ msgstr "通常の使用方法はこのようになります:"

#, no-wrap
#~ msgid ""
#~ " virt-format -a disk.qcow\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format -a disk.qcow\n"
#~ "\n"

#~ msgid "or this:"
#~ msgstr "または、このようになります:"

#, no-wrap
#~ msgid ""
#~ " virt-format -a /dev/VG/LV\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format -a /dev/VG/LV\n"
#~ "\n"

#~ msgid ""
#~ "Add I<file>, a disk image, host partition, LV, external USB disk, etc."
#~ msgstr ""
#~ "I<ファイル>、ディスクイメージ、ホストのパーティション、論理ボリューム、外"
#~ "部 USB ディスクなどを追加します。"

#~ msgid "B<Any existing data on the disk is erased.>"
#~ msgstr "B<ディスクにある既存のデータはすべて削除されます。>"

#~ msgid "B<--filesystem=ext3|ntfs|vfat|...>"
#~ msgstr "B<--filesystem=ext3|ntfs|vfat|...>"

#~ msgid "B<--filesystem=none>"
#~ msgstr "B<--filesystem=none>"

#~ msgid "Create no filesystem.  This is the default."
#~ msgstr "ファイルシステムを作成しません。  これがデフォルトです。"

#, no-wrap
#~ msgid ""
#~ " virt-format --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-format --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#~ msgid "B<--lvm=/dev/I<VG>/I<LV>>"
#~ msgstr "B<--lvm=/dev/I<VG>/I<LV>>"

#~ msgid "B<--lvm>"
#~ msgstr "B<--lvm>"

#~ msgid "B<--lvm=none>"
#~ msgstr "B<--lvm=none>"

#~ msgid "Create no logical volume.  This is the default."
#~ msgstr "論理ボリュームを作成しません。  これがデフォルトです。"

#~ msgid "B<--partition>"
#~ msgstr "B<--partition>"

#~ msgid ""
#~ "Create either an MBR or GPT partition covering the whole disk.  MBR is "
#~ "chosen if the disk size is E<lt> 2 TB, GPT if E<ge> 2 TB."
#~ msgstr ""
#~ "ディスク全体をカバーする MBR または GPT パーティションを作成します。ディス"
#~ "ク容量が E<lt> 2 TB ならば MBR が選択されます。容量が E<ge> 2 TB ならば "
#~ "GPT が選択されます。"

#~ msgid "B<--partition=gpt>"
#~ msgstr "B<--partition=gpt>"

#~ msgid "Create a GPT partition."
#~ msgstr "GPT パーティションを作成します。"

#~ msgid "B<--partition=mbr>"
#~ msgstr "B<--partition=mbr>"

#~ msgid "Create an MBR partition."
#~ msgstr "MBR パーティションを作成します。"

#~ msgid "B<--partition=none>"
#~ msgstr "B<--partition=none>"

#~ msgid ""
#~ "Create no partition table.  Note that Windows may not be able to see "
#~ "these disks."
#~ msgstr ""
#~ "パーティションテーブルを作成しません。Windows はこれらのディスクを認識でき"
#~ "ないかもしれないことに注意してください。"

#~ msgid "B<--wipe>"
#~ msgstr "B<--wipe>"

#~ msgid "This program returns C<0> on success, or C<1> on failure."
#~ msgstr "このプログラムは、成功すると C<0>、失敗すると C<1> を返します。"

#~ msgid ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-make-"
#~ "fs(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<virt-filesystems(1)>, L<virt-make-"
#~ "fs(1)>, L<virt-rescue(1)>, L<virt-resize(1)>, L<http://libguestfs.org/>."

#~ msgid "Copyright (C) 2012 Red Hat Inc."
#~ msgstr "Copyright (C) 2012 Red Hat Inc."

#, no-wrap
#~ msgid ""
#~ " guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [--options] -d Guest -i [--ro] mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [--options] -d Guest -i [--ro] mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a guest.img -i --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a guest.img -i --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -d Guest -i --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -d Guest -i --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems -d MyGuest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems -d MyGuest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [...] --trace /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [...] --trace /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [...] --trace --verbose /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [...] --trace --verbose /mnt\n"
#~ "\n"

#~ msgid "Other users cannot see the filesystem by default"
#~ msgstr "他のユーザーは標準でファイルシステムを参照できません。"

#, no-wrap
#~ msgid ""
#~ " sudo guestmount [...] -o allow_other /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " sudo guestmount [...] -o allow_other /mnt\n"
#~ "\n"

#~ msgid "fusermount error: \"Device or resource busy\""
#~ msgstr "fusermount エラー: \"デバイスまたはリソースがビジーです\""

#, no-wrap
#~ msgid ""
#~ " guestmount -a disk.img -i --pid-file guestmount.pid /mnt\n"
#~ " \n"
#~ msgstr ""
#~ " guestmount -a disk.img -i --pid-file guestmount.pid /mnt\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " timeout=10\n"
#~ " \n"
#~ msgstr ""
#~ " timeout=10\n"
#~ " \n"

#~ msgid "Add a block device or virtual machine image."
#~ msgstr "ブロックデバイスまたは仮想マシンイメージを追加します。"

#~ msgid ""
#~ "If you have untrusted raw-format guest disk images, you should use this "
#~ "option to specify the disk format.  This avoids a possible security "
#~ "problem with malicious guests (CVE-2010-3851).  See also L<guestfs(3)/"
#~ "guestfs_add_drive_opts>."
#~ msgstr ""
#~ "仮想マシンのディスクイメージが信頼できない raw 形式である場合、 ディスク形"
#~ "式を指定するためにこのオプションを使用すべきです。 これにより、悪意のある"
#~ "仮想マシンにより起こり得る セキュリティ問題を回避できます "
#~ "(CVE-2010-3851)。 L</guestfs(3)/guestfs_add_drive_opts> 参照。"

#~ msgid "B<--fuse-help>"
#~ msgstr "B<--fuse-help>"

#~ msgid "Display brief help and exit."
#~ msgstr "簡単なヘルプを表示して、終了します。"

#~ msgid "Pass extra options to FUSE."
#~ msgstr "追加オプションを FUSE に渡します。"

#, no-wrap
#~ msgid ""
#~ " guestmount --fuse-help\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount --fuse-help\n"
#~ "\n"

#~ msgid "Write the PID of the guestmount worker process to C<filename>."
#~ msgstr "C<filename> に guestmount ワーカープロセスの PID を書き込みます。"

#~ msgid "See also L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
#~ msgstr "L<guestfish(1)/OPENING DISKS FOR READ AND WRITE> 参照。"

#~ msgid "Enable verbose messages from underlying libguestfs."
#~ msgstr "libguestfs からの冗長なメッセージを有効にします。"

#~ msgid "Display the program version and exit."
#~ msgstr "プログラムのバージョンを表示して、終了します。"

#~ msgid "See L<guestfish(1)/OPENING DISKS FOR READ AND WRITE>."
#~ msgstr "L<guestfish(1)/OPENING DISKS FOR READ AND WRITE> 参照。"

#~ msgid "B<--trace>"
#~ msgstr "B<--trace>"

#~ msgid "ERRORS"
#~ msgstr "エラー"

#, no-wrap
#~ msgid ""
#~ " virt-inspector [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector disk.img [disk.img ...]\n"
#~ "\n"

#~ msgid "Virt-inspector produces XML output for feeding into other programs."
#~ msgstr ""
#~ "Virt-inspector は他のプログラムに提供するための情報をXML形式出力で生成しま"
#~ "す。"

#~ msgid ""
#~ "When prompting for keys and passphrases, virt-inspector normally turns "
#~ "echoing off so you cannot see what you are typing.  If you are not "
#~ "worried about Tempest attacks and there is no one else in the room you "
#~ "can specify this flag to see what you are typing."
#~ msgstr ""
#~ "キーやパスフレーズを入力するとき、通常 virt-inspector はエコーを無効化しま"
#~ "す。 そのため、入力内容を確認できません。 テンペスト攻撃の心配がなく、 部"
#~ "屋に誰も居なければ、 入力内容を確認するためにこのフラグを指定できます。"

#~ msgid "B<--xpath> query"
#~ msgstr "B<--xpath> query"

#, no-wrap
#~ msgid ""
#~ " virt-inspector guestname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector guestname\n"
#~ "\n"

#~ msgid "XML FORMAT"
#~ msgstr "XML フォーマット"

#~ msgid "E<lt>operatingsystemE<gt>"
#~ msgstr "E<lt>operatingsystemE<gt>"

#~ msgid "E<lt>mountpointsE<gt>"
#~ msgstr "E<lt>mountpointsE<gt>"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <mountpoints>\n"
#~ "       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
#~ "       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
#~ "     </mountpoints>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <mountpoints>\n"
#~ "       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
#~ "       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
#~ "     </mountpoints>\n"
#~ "\n"

#~ msgid "E<lt>filesystemsE<gt>"
#~ msgstr "E<lt>filesystemsE<gt>"

#~ msgid "You might see something like this:"
#~ msgstr "次のように表示されることがあります:"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <filesystems>\n"
#~ "       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "         <type>ext4</type>\n"
#~ "         <label>Fedora-13-x86_64</label>\n"
#~ "         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
#~ "       </filesystem>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <filesystems>\n"
#~ "       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "         <type>ext4</type>\n"
#~ "         <label>Fedora-13-x86_64</label>\n"
#~ "         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
#~ "       </filesystem>\n"
#~ "\n"

#~ msgid "E<lt>applicationsE<gt>"
#~ msgstr "E<lt>applicationsE<gt>"

#~ msgid ""
#~ "The related elements E<lt>package_formatE<gt>, "
#~ "E<lt>package_managementE<gt> and E<lt>applicationsE<gt> describe "
#~ "applications installed in the virtual machine."
#~ msgstr ""
#~ "関連する要素 E<lt>package_formatE<gt>, E<lt>package_managementE<gt> およ"
#~ "び E<lt>applicationsE<gt> は仮想マシンにインストールされたアプリケーション"
#~ "を記述しています。"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <applications>\n"
#~ "       <application>\n"
#~ "         <name>coreutils</name>\n"
#~ "         <version>8.5</version>\n"
#~ "         <release>1</release>\n"
#~ "       </application>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <applications>\n"
#~ "       <application>\n"
#~ "         <name>coreutils</name>\n"
#~ "         <version>8.5</version>\n"
#~ "         <release>1</release>\n"
#~ "       </application>\n"
#~ "\n"

#~ msgid "E<lt>drive_mappingsE<gt>"
#~ msgstr "E<lt>drive_mappingsE<gt>"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <drive_mappings>\n"
#~ "       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
#~ "       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
#~ "     </drive_mappings>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <drive_mappings>\n"
#~ "       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
#~ "       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
#~ "     </drive_mappings>\n"
#~ "\n"

#~ msgid "E<lt>iconE<gt>"
#~ msgstr "E<lt>iconE<gt>"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <icon>\n"
#~ "       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
#~ "       [... many lines of base64 data ...]\n"
#~ "     </icon>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <icon>\n"
#~ "       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
#~ "       [... many lines of base64 data ...]\n"
#~ "     </icon>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " base64 -i -d < icon.data > icon.png\n"
#~ "\n"
#~ msgstr ""
#~ " base64 -i -d < icon.data > icon.png\n"
#~ "\n"

#~ msgid "XPATH QUERIES"
#~ msgstr "XPath クエリー"

#, no-wrap
#~ msgid ""
#~ " $ virt-inspector -d Guest | virt-inspector --xpath '//filesystems'\n"
#~ " <filesystems>\n"
#~ "      <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "        <type>ext4</type>\n"
#~ " [...]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-inspector -d Guest | virt-inspector --xpath '//filesystems'\n"
#~ " <filesystems>\n"
#~ "      <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "        <type>ext4</type>\n"
#~ " [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath \"string(//filesystem[@dev='/dev/sda1']/type)\"\n"
#~ " ext4\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath \"string(//filesystem[@dev='/dev/sda1']/type)\"\n"
#~ " ext4\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath 'string(//icon)' | base64 -i -d | display -\n"
#~ " [displays the guest icon, if there is one]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath 'string(//icon)' | base64 -i -d | display -\n"
#~ " [displays the guest icon, if there is one]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ guestfish --ro -a F15x32.img\n"
#~ " ><fs> run\n"
#~ " ><fs> inspect-os\n"
#~ " /dev/vg_f15x32/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " $ guestfish --ro -a F15x32.img\n"
#~ " ><fs> run\n"
#~ " ><fs> inspect-os\n"
#~ " /dev/vg_f15x32/lv_root\n"
#~ "\n"

#~ msgid ""
#~ "Using the root device, you can fetch further information about the guest:"
#~ msgstr "ルートデバイスを使用して、ゲストに関するさらなる情報を取得できます:"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
#~ " linux\n"
#~ " ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
#~ " fedora\n"
#~ " ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
#~ " 15\n"
#~ " ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
#~ " Fedora release 15 (Lovelock)\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
#~ " linux\n"
#~ " ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
#~ " fedora\n"
#~ " ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
#~ " 15\n"
#~ " ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
#~ " Fedora release 15 (Lovelock)\n"
#~ "\n"

#~ msgid "To list applications, you have to first mount up the disks:"
#~ msgstr ""
#~ "アプリケーションを一覧表示するには、まずディスクをマウントする必要がありま"
#~ "す:"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
#~ " /: /dev/vg_f15x32/lv_root\n"
#~ " /boot: /dev/vda1\n"
#~ " ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
#~ " ><fs> mount-ro /dev/vda1 /boot\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
#~ " /: /dev/vg_f15x32/lv_root\n"
#~ " /boot: /dev/vda1\n"
#~ " ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
#~ " ><fs> mount-ro /dev/vda1 /boot\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
#~ " [0] = {\n"
#~ "   app_name: ConsoleKit\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: ConsoleKit-libs\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
#~ " [0] = {\n"
#~ "   app_name: ConsoleKit\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: ConsoleKit-libs\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
#~ "\n"

#~ msgid "OLD VERSIONS OF VIRT-INSPECTOR"
#~ msgstr "古いバージョンの virt-inspector"

#~ msgid ""
#~ "The old virt-inspector is no longer supported or shipped with libguestfs."
#~ msgstr ""
#~ "古い virt-inspector はもはや libguestfs でサポートされず、同梱されていませ"
#~ "ん。"

#~ msgid ""
#~ "To confuse matters further, in Red Hat Enterprise Linux 6 we ship two "
#~ "versions of virt-inspector with different names:"
#~ msgstr ""
#~ "さらに混乱することに、Red Hat Enterprise Linux 6 では異なる名前で 2 つの"
#~ "バージョンの virt-inspector が同梱されています:"

#, no-wrap
#~ msgid ""
#~ " virt-inspector     Old Perl version.\n"
#~ " virt-inspector2    New C version.\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector     古い Perl バージョンです。\n"
#~ " virt-inspector2    新しい C バージョンです。\n"
#~ "\n"

#~ msgid ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<http://www.w3.org/TR/xpath/>, "
#~ "L<base64(1)>, L<xmlstarlet(1)>, L<http://libguestfs.org/>."
#~ msgstr ""
#~ "L<guestfs(3)>, L<guestfish(1)>, L<http://www.w3.org/TR/xpath/>, "
#~ "L<base64(1)>, L<xmlstarlet(1)>, L<http://libguestfs.org/>."

#~ msgid "Matthew Booth L<mbooth@redhat.com>"
#~ msgstr "Matthew Booth L<mbooth@redhat.com>"

#~ msgid "guestfs-java - How to use libguestfs from Java"
#~ msgstr "guestfs-java - Java から libguestfs を使用する方法"

#, no-wrap
#~ msgid ""
#~ " import com.redhat.et.libguestfs.*;\n"
#~ " \n"
#~ msgstr ""
#~ " import com.redhat.et.libguestfs.*;\n"
#~ " \n"

#~ msgid "CLOSING THE HANDLE"
#~ msgstr "ハンドルの閉じ方"

#~ msgid "EXCEPTIONS"
#~ msgstr "例外"

#~ msgid "EVENTS"
#~ msgstr "イベント"

#~ msgid "guestfs_acl_delete_def_file"
#~ msgstr "guestfs_acl_delete_def_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_acl_delete_def_file (guestfs_h *g,\n"
#~ "                              const char *dir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_acl_delete_def_file (guestfs_h *g,\n"
#~ "                              const char *dir);\n"
#~ "\n"

#~ msgid "This function returns 0 on success or -1 on error."
#~ msgstr "この関数は、成功のとき 0 を、エラーのとき -1 を返します。"

#~ msgid "guestfs_acl_get_file"
#~ msgstr "guestfs_acl_get_file"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_acl_get_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_acl_get_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a string, or NULL on error.  I<The caller must free "
#~ "the returned string after use>."
#~ msgstr ""
#~ "この関数は文字列を返します。エラー時は NULL です。 I<呼び出し元は使用後に"
#~ "返された文字列を開放する必要があります>。"

#~ msgid "guestfs_acl_set_file"
#~ msgstr "guestfs_acl_set_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_acl_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype,\n"
#~ "                       const char *acl);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_acl_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype,\n"
#~ "                       const char *acl);\n"
#~ "\n"

#~ msgid "guestfs_add_cdrom"
#~ msgstr "guestfs_add_cdrom"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_cdrom (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_cdrom (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"

#~ msgid "(Added in 0.3)"
#~ msgstr "(0.3 において追加)"

#~ msgid "guestfs_add_domain"
#~ msgstr "guestfs_add_domain"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_domain (guestfs_h *g,\n"
#~ "                     const char *dom,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain (guestfs_h *g,\n"
#~ "                     const char *dom,\n"
#~ "                     ...);\n"
#~ "\n"

#~ msgid ""
#~ "The other optional parameters are passed directly through to "
#~ "C<guestfs_add_drive_opts>."
#~ msgstr ""
#~ "他のオプションパラメーターは C<guestfs_add_drive_opts> にそのまま渡されま"
#~ "す。"

#~ msgid "On error this function returns -1."
#~ msgstr "この関数はエラーのとき -1 を返します。"

#~ msgid "(Added in 1.7.4)"
#~ msgstr "(1.7.4 において追加)"

#~ msgid "guestfs_add_domain_va"
#~ msgstr "guestfs_add_domain_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_domain_va (guestfs_h *g,\n"
#~ "                        const char *dom,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain_va (guestfs_h *g,\n"
#~ "                        const char *dom,\n"
#~ "                        va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_add_domain>."
#~ msgstr "これは L</guestfs_add_domain> の \"va_list variant\" です。"

#~ msgid "See L</CALLS WITH OPTIONAL ARGUMENTS>."
#~ msgstr "L</CALLS WITH OPTIONAL ARGUMENTS> 参照。"

#~ msgid "guestfs_add_domain_argv"
#~ msgstr "guestfs_add_domain_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_domain_argv (guestfs_h *g,\n"
#~ "                          const char *dom,\n"
#~ "                          const struct guestfs_add_domain_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain_argv (guestfs_h *g,\n"
#~ "                          const char *dom,\n"
#~ "                          const struct guestfs_add_domain_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_add_domain>."
#~ msgstr "これは L</guestfs_add_domain> の \"argv variant\" です。"

#~ msgid "guestfs_add_drive"
#~ msgstr "guestfs_add_drive"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"

#~ msgid "guestfs_add_drive_opts"
#~ msgstr "guestfs_add_drive_opts"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_opts (guestfs_h *g,\n"
#~ "                         const char *filename,\n"
#~ "                         ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts (guestfs_h *g,\n"
#~ "                         const char *filename,\n"
#~ "                         ...);\n"
#~ "\n"

#~ msgid "guestfs_add_drive_opts_va"
#~ msgstr "guestfs_add_drive_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_opts_va (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts_va (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_add_drive_opts>."
#~ msgstr "これは L</guestfs_add_drive_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_add_drive_opts_argv"
#~ msgstr "guestfs_add_drive_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_opts_argv (guestfs_h *g,\n"
#~ "                              const char *filename,\n"
#~ "                              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts_argv (guestfs_h *g,\n"
#~ "                              const char *filename,\n"
#~ "                              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_add_drive_opts>."
#~ msgstr "これは L</guestfs_add_drive_opts> の \"argv variant\" です。"

#~ msgid "guestfs_add_drive_ro"
#~ msgstr "guestfs_add_drive_ro"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_ro (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_ro (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"

#~ msgid ""
#~ "This function is the equivalent of calling C<guestfs_add_drive_opts> with "
#~ "the optional parameter C<GUESTFS_ADD_DRIVE_OPTS_READONLY> set to 1, so "
#~ "the disk is added read-only, with the format being detected automatically."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_copy_device_to_device> を使用してください。"

#~ msgid "(Added in 1.0.38)"
#~ msgstr "(1.0.38 において追加)"

#~ msgid "guestfs_add_drive_ro_with_if"
#~ msgstr "guestfs_add_drive_ro_with_if"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
#~ "                               const char *filename,\n"
#~ "                               const char *iface);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
#~ "                               const char *filename,\n"
#~ "                               const char *iface);\n"
#~ "\n"

#~ msgid "(Added in 1.0.84)"
#~ msgstr "(1.0.84 において追加)"

#~ msgid "guestfs_add_drive_with_if"
#~ msgstr "guestfs_add_drive_with_if"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_with_if (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            const char *iface);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_with_if (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            const char *iface);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_add_libvirt_dom"
#~ msgstr "guestfs_add_cdrom"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_libvirt_dom (guestfs_h *g,\n"
#~ "                          void * /* really virDomainPtr */ dom,\n"
#~ "                          ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts (guestfs_h *g,\n"
#~ "                         const char *filename,\n"
#~ "                         ...);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_add_libvirt_dom_va"
#~ msgstr "guestfs_add_domain_va"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_libvirt_dom_va (guestfs_h *g,\n"
#~ "                             void * /* really virDomainPtr */ dom,\n"
#~ "                             va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts_va (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            va_list args);\n"
#~ "\n"

#, fuzzy
#~ msgid "This is the \"va_list variant\" of L</guestfs_add_libvirt_dom>."
#~ msgstr "これは L</guestfs_add_domain> の \"va_list variant\" です。"

#, fuzzy
#~ msgid "guestfs_add_libvirt_dom_argv"
#~ msgstr "guestfs_add_domain_argv"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_libvirt_dom_argv (guestfs_h *g,\n"
#~ "                               void * /* really virDomainPtr */ dom,\n"
#~ "                               const struct guestfs_add_libvirt_dom_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain_argv (guestfs_h *g,\n"
#~ "                          const char *dom,\n"
#~ "                          const struct guestfs_add_domain_argv *optargs);\n"
#~ "\n"

#, fuzzy
#~ msgid "This is the \"argv variant\" of L</guestfs_add_libvirt_dom>."
#~ msgstr "これは L</guestfs_add_domain> の \"argv variant\" です。"

#~ msgid "guestfs_aug_clear"
#~ msgstr "guestfs_aug_clear"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_clear (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_clear (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"

#~ msgid "(Added in 1.3.4)"
#~ msgstr "(1.3.4 において追加)"

#~ msgid "guestfs_aug_close"
#~ msgstr "guestfs_aug_close"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_close (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 0.7)"
#~ msgstr "(0.7 において追加)"

#~ msgid "guestfs_aug_defnode"
#~ msgstr "guestfs_aug_defnode"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_int_bool *\n"
#~ " guestfs_aug_defnode (guestfs_h *g,\n"
#~ "                      const char *name,\n"
#~ "                      const char *expr,\n"
#~ "                      const char *val);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_int_bool *\n"
#~ " guestfs_aug_defnode (guestfs_h *g,\n"
#~ "                      const char *name,\n"
#~ "                      const char *expr,\n"
#~ "                      const char *val);\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| "If C<expr> evaluates to an empty nodeset, a node is created, equivalent "
#~| "to calling C<guestfs_aug_set> C<expr>, C<value>.  C<name> will be the "
#~| "nodeset containing that single node."
#~ msgid ""
#~ "If C<expr> evaluates to an empty nodeset, a node is created, equivalent "
#~ "to calling C<guestfs_aug_set> C<expr>, C<val>.  C<name> will be the "
#~ "nodeset containing that single node."
#~ msgstr ""
#~ "C<expr> が空のノードセットであると評価された場合、ノードが作成されます。"
#~ "C<guestfs_aug_set> C<expr>, C<value> を呼び出すことと同等です。C<name>  は"
#~ "単一のノードを含むノードセットです。"

#~ msgid ""
#~ "This function returns a C<struct guestfs_int_bool *>, or NULL if there "
#~ "was an error.  I<The caller must call C<guestfs_free_int_bool> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_int_bool *> を返します。もしくは、エラーが発生"
#~ "すると NULL を返します。 I<呼び出し元は使用後に C<guestfs_free_int_bool> "
#~ "を呼び出す必要があります>。"

#~ msgid "guestfs_aug_defvar"
#~ msgstr "guestfs_aug_defvar"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_defvar (guestfs_h *g,\n"
#~ "                     const char *name,\n"
#~ "                     const char *expr);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_defvar (guestfs_h *g,\n"
#~ "                     const char *name,\n"
#~ "                     const char *expr);\n"
#~ "\n"

#~ msgid "guestfs_aug_get"
#~ msgstr "guestfs_aug_get"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_aug_get (guestfs_h *g,\n"
#~ "                  const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_aug_get (guestfs_h *g,\n"
#~ "                  const char *augpath);\n"
#~ "\n"

#~ msgid "guestfs_aug_init"
#~ msgstr "guestfs_aug_init"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_init (guestfs_h *g,\n"
#~ "                   const char *root,\n"
#~ "                   int flags);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_init (guestfs_h *g,\n"
#~ "                   const char *root,\n"
#~ "                   int flags);\n"
#~ "\n"

#~ msgid "You must call this before using any other C<guestfs_aug_*> commands."
#~ msgstr ""
#~ "あらゆる他の C<guestfs_aug_*> コマンドを使用する前に、これを呼び出す必要が"
#~ "あります。"

#~ msgid "Do not load the tree in C<guestfs_aug_init>."
#~ msgstr "C<guestfs_aug_init> にツリーを読み込みません。"

#~ msgid "To close the handle, you can call C<guestfs_aug_close>."
#~ msgstr "ハンドルを閉じるために C<guestfs_aug_close> を呼び出せます。"

#~ msgid "guestfs_aug_insert"
#~ msgstr "guestfs_aug_insert"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_insert (guestfs_h *g,\n"
#~ "                     const char *augpath,\n"
#~ "                     const char *label,\n"
#~ "                     int before);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_insert (guestfs_h *g,\n"
#~ "                     const char *augpath,\n"
#~ "                     const char *label,\n"
#~ "                     int before);\n"
#~ "\n"

#~ msgid "guestfs_aug_load"
#~ msgstr "guestfs_aug_load"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_load (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_load (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_aug_ls"
#~ msgstr "guestfs_aug_ls"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_aug_ls (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_aug_ls (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"

#~ msgid "(Added in 0.8)"
#~ msgstr "(0.8 において追加)"

#~ msgid "guestfs_aug_match"
#~ msgstr "guestfs_aug_match"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_aug_match (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_aug_match (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"

#~ msgid "guestfs_aug_mv"
#~ msgstr "guestfs_aug_mv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_mv (guestfs_h *g,\n"
#~ "                 const char *src,\n"
#~ "                 const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_mv (guestfs_h *g,\n"
#~ "                 const char *src,\n"
#~ "                 const char *dest);\n"
#~ "\n"

#~ msgid "guestfs_aug_rm"
#~ msgstr "guestfs_aug_rm"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_rm (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_rm (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"

#~ msgid "guestfs_aug_save"
#~ msgstr "guestfs_aug_save"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_save (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_save (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_aug_set"
#~ msgstr "guestfs_aug_set"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_set (guestfs_h *g,\n"
#~ "                  const char *augpath,\n"
#~ "                  const char *val);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_set (guestfs_h *g,\n"
#~ "                  const char *augpath,\n"
#~ "                  const char *val);\n"
#~ "\n"

#~ msgid "guestfs_available"
#~ msgstr "guestfs_available"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_available (guestfs_h *g,\n"
#~ "                    char *const *groups);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_available (guestfs_h *g,\n"
#~ "                    char *const *groups);\n"
#~ "\n"

#~ msgid "You must call C<guestfs_launch> before calling this function."
#~ msgstr "この関数を呼び出す前に C<guestfs_launch> を呼び出す必要があります。"

#~ msgid "See also C<guestfs_filesystem_available>."
#~ msgstr "C<guestfs_filesystem_available> 参照。"

#~ msgid "(Added in 1.0.80)"
#~ msgstr "(1.0.80 において追加)"

#~ msgid "guestfs_available_all_groups"
#~ msgstr "guestfs_available_all_groups"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_available_all_groups (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_available_all_groups (guestfs_h *g);\n"
#~ "\n"

#~ msgid ""
#~ "See also C<guestfs_available>, C<guestfs_feature_available> and "
#~ "L<guestfs(3)/AVAILABILITY>."
#~ msgstr ""
#~ "C<guestfs_available>, C<guestfs_feature_available> および L<guestfs(3)/"
#~ "AVAILABILITY> 参照。"

#~ msgid "(Added in 1.3.15)"
#~ msgstr "(1.3.15 において追加)"

#~ msgid "guestfs_base64_in"
#~ msgstr "guestfs_base64_in"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_base64_in (guestfs_h *g,\n"
#~ "                    const char *base64file,\n"
#~ "                    const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_base64_in (guestfs_h *g,\n"
#~ "                    const char *base64file,\n"
#~ "                    const char *filename);\n"
#~ "\n"

#~ msgid "(Added in 1.3.5)"
#~ msgstr "(1.3.5 において追加)"

#~ msgid "guestfs_base64_out"
#~ msgstr "guestfs_base64_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_base64_out (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     const char *base64file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_base64_out (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     const char *base64file);\n"
#~ "\n"

#~ msgid "guestfs_blkid"
#~ msgstr "guestfs_blkid"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_blkid (guestfs_h *g,\n"
#~ "                const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_blkid (guestfs_h *g,\n"
#~ "                const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.15.9)"
#~ msgstr "(1.15.9 において追加)"

#~ msgid "guestfs_blockdev_flushbufs"
#~ msgstr "guestfs_blockdev_flushbufs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_flushbufs (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_flushbufs (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_getbsz"
#~ msgstr "guestfs_blockdev_getbsz"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_getbsz (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_getbsz (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_getro"
#~ msgstr "guestfs_blockdev_getro"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_getro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_getro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_getsize64"
#~ msgstr "guestfs_blockdev_getsize64"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsize64 (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsize64 (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"

#~ msgid "See also C<guestfs_blockdev_getsz>."
#~ msgstr "C<guestfs_blockdev_getsz> 参照。"

#~ msgid "guestfs_blockdev_getss"
#~ msgstr "guestfs_blockdev_getss"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_getss (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_getss (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "(Note, this is not the size in sectors, use C<guestfs_blockdev_getsz> for "
#~ "that)."
#~ msgstr ""
#~ "（これはセクターのサイズではありません、そのためには "
#~ "C<guestfs_blockdev_getsz> を使用する必要があることに注意してください）。"

#~ msgid "guestfs_blockdev_getsz"
#~ msgstr "guestfs_blockdev_getsz"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsz (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsz (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_rereadpt"
#~ msgstr "guestfs_blockdev_rereadpt"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_rereadpt (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_rereadpt (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_setbsz"
#~ msgstr "guestfs_blockdev_setbsz"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setbsz (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int blocksize);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setbsz (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int blocksize);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_blockdev_setra"
#~ msgstr "guestfs_blockdev_setro"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setra (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         int sectors);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setbsz (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int blocksize);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_setro"
#~ msgstr "guestfs_blockdev_setro"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid "guestfs_blockdev_setrw"
#~ msgstr "guestfs_blockdev_setrw"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setrw (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setrw (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_balance_cancel"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_balance_cancel (guestfs_h *g,\n"
#~ "                               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_balance_pause"
#~ msgstr "guestfs_btrfs_filesystem_balance"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_balance_pause (guestfs_h *g,\n"
#~ "                              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_balance_resume"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_balance_resume (guestfs_h *g,\n"
#~ "                               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_balance_status"
#~ msgstr "guestfs_btrfs_filesystem_balance"

#, fuzzy, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfsbalance *\n"
#~ " guestfs_btrfs_balance_status (guestfs_h *g,\n"
#~ "                               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This function returns a C<struct guestfs_btrfsbalance *>, or NULL if "
#~ "there was an error.  I<The caller must call C<guestfs_free_btrfsbalance> "
#~ "after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_utsname *> を返します。エラーが起きた場合 "
#~ "NULL を返します。 I<呼び出し元は使用した後に C<guestfs_free_utsname> を呼"
#~ "び出す必要があります>。"

#~ msgid "guestfs_btrfs_device_add"
#~ msgstr "guestfs_btrfs_device_add"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_device_add (guestfs_h *g,\n"
#~ "                           char *const *devices,\n"
#~ "                           const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_device_add (guestfs_h *g,\n"
#~ "                           char *const *devices,\n"
#~ "                           const char *fs);\n"
#~ "\n"

#~ msgid "(Added in 1.17.35)"
#~ msgstr "(1.17.35 において追加)"

#~ msgid "guestfs_btrfs_device_delete"
#~ msgstr "guestfs_btrfs_device_delete"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_device_delete (guestfs_h *g,\n"
#~ "                              char *const *devices,\n"
#~ "                              const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_device_delete (guestfs_h *g,\n"
#~ "                              char *const *devices,\n"
#~ "                              const char *fs);\n"
#~ "\n"

#~ msgid "guestfs_btrfs_filesystem_balance"
#~ msgstr "guestfs_btrfs_filesystem_balance"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
#~ "                                   const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
#~ "                                   const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_filesystem_defragment"
#~ msgstr "guestfs_btrfs_filesystem_resize"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_defragment (guestfs_h *g,\n"
#~ "                                      const char *path,\n"
#~ "                                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
#~ "                                  const char *mountpoint,\n"
#~ "                                  ...);\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_FILESYSTEM_DEFRAGMENT_FLUSH, int flush,\n"
#~ " GUESTFS_BTRFS_FILESYSTEM_DEFRAGMENT_COMPRESS, const char *compress,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
#~ " GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_filesystem_defragment_va"
#~ msgstr "guestfs_btrfs_filesystem_resize_va"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_defragment_va (guestfs_h *g,\n"
#~ "                                         const char *path,\n"
#~ "                                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
#~ "                                     const char *mountpoint,\n"
#~ "                                     va_list args);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This is the \"va_list variant\" of L</"
#~ "guestfs_btrfs_filesystem_defragment>."
#~ msgstr ""
#~ "これは L</guestfs_btrfs_filesystem_resize> の \"va_list variant\" です。"

#, fuzzy
#~ msgid "guestfs_btrfs_filesystem_defragment_argv"
#~ msgstr "guestfs_btrfs_filesystem_resize_argv"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_defragment_argv (guestfs_h *g,\n"
#~ "                                           const char *path,\n"
#~ "                                           const struct guestfs_btrfs_filesystem_defragment_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
#~ "                                       const char *mountpoint,\n"
#~ "                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This is the \"argv variant\" of L</guestfs_btrfs_filesystem_defragment>."
#~ msgstr ""
#~ "これは L</guestfs_btrfs_filesystem_resize> の \"argv variant\" です。"

#~ msgid "guestfs_btrfs_filesystem_resize"
#~ msgstr "guestfs_btrfs_filesystem_resize"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
#~ "                                  const char *mountpoint,\n"
#~ "                                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
#~ "                                  const char *mountpoint,\n"
#~ "                                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
#~ "\n"

#~ msgid "(Added in 1.11.17)"
#~ msgstr "(1.11.17 において追加)"

#~ msgid "guestfs_btrfs_filesystem_resize_va"
#~ msgstr "guestfs_btrfs_filesystem_resize_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
#~ "                                     const char *mountpoint,\n"
#~ "                                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
#~ "                                     const char *mountpoint,\n"
#~ "                                     va_list args);\n"
#~ "\n"

#~ msgid ""
#~ "This is the \"va_list variant\" of L</guestfs_btrfs_filesystem_resize>."
#~ msgstr ""
#~ "これは L</guestfs_btrfs_filesystem_resize> の \"va_list variant\" です。"

#~ msgid "guestfs_btrfs_filesystem_resize_argv"
#~ msgstr "guestfs_btrfs_filesystem_resize_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
#~ "                                       const char *mountpoint,\n"
#~ "                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
#~ "                                       const char *mountpoint,\n"
#~ "                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_btrfs_filesystem_resize>."
#~ msgstr ""
#~ "これは L</guestfs_btrfs_filesystem_resize> の \"argv variant\" です。"

#~ msgid "guestfs_btrfs_filesystem_sync"
#~ msgstr "guestfs_btrfs_filesystem_sync"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"

#~ msgid "guestfs_btrfs_fsck"
#~ msgstr "guestfs_btrfs_fsck"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_fsck (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_fsck (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
#~ " GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
#~ " GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
#~ "\n"

#~ msgid "(Added in 1.17.43)"
#~ msgstr "(1.17.43 において追加)"

#~ msgid "guestfs_btrfs_fsck_va"
#~ msgstr "guestfs_btrfs_fsck_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_btrfs_fsck>."
#~ msgstr "これは L</guestfs_btrfs_fsck> の \"va_list variant\" です。"

#~ msgid "guestfs_btrfs_fsck_argv"
#~ msgstr "guestfs_btrfs_fsck_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_btrfs_fsck>."
#~ msgstr "これは L</guestfs_btrfs_fsck> の \"argv variant\" です。"

#, fuzzy
#~ msgid "guestfs_btrfs_qgroup_assign"
#~ msgstr "guestfs_btrfs_set_seeding"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_qgroup_assign (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dst,\n"
#~ "                              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_qgroup_create"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_qgroup_create (guestfs_h *g,\n"
#~ "                              const char *qgroupid,\n"
#~ "                              const char *subvolume);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_qgroup_destroy"
#~ msgstr "guestfs_btrfs_subvolume_delete"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_qgroup_destroy (guestfs_h *g,\n"
#~ "                               const char *qgroupid,\n"
#~ "                               const char *subvolume);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_qgroup_limit"
#~ msgstr "guestfs_btrfs_subvolume_list"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_qgroup_limit (guestfs_h *g,\n"
#~ "                             const char *subvolume,\n"
#~ "                             int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_size (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int64_t size);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_qgroup_remove"
#~ msgstr "guestfs_ntfs_3g_probe"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_qgroup_remove (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dst,\n"
#~ "                              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_qgroup_show"
#~ msgstr "guestfs_btrfs_subvolume_snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfsqgroup_list *\n"
#~ " guestfs_btrfs_qgroup_show (guestfs_h *g,\n"
#~ "                            const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This function returns a C<struct guestfs_btrfsqgroup_list *>, or NULL if "
#~ "there was an error.  I<The caller must call "
#~ "C<guestfs_free_btrfsqgroup_list> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_btrfssubvolume_list *> を返します。エラーが発"
#~ "生した場合、NULL が返されます。 I<呼び出し元は使用後に "
#~ "C<guestfs_free_btrfssubvolume_list> を呼び出す必要があります>。"

#, fuzzy
#~ msgid "guestfs_btrfs_quota_enable"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_quota_enable (guestfs_h *g,\n"
#~ "                             const char *fs,\n"
#~ "                             int enable);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_set_seeding (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int seeding);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_quota_rescan"
#~ msgstr "guestfs_btrfs_fsck"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_quota_rescan (guestfs_h *g,\n"
#~ "                             const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_rescue_chunk_recover"
#~ msgstr "guestfs_ntfs_3g_probe"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_rescue_chunk_recover (guestfs_h *g,\n"
#~ "                                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_rescue_super_recover"
#~ msgstr "guestfs_ntfs_3g_probe"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_rescue_super_recover (guestfs_h *g,\n"
#~ "                                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_scrub_cancel"
#~ msgstr "guestfs_btrfs_fsck_va"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_scrub_cancel (guestfs_h *g,\n"
#~ "                             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_scrub_resume"
#~ msgstr "guestfs_ntfs_3g_probe"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_scrub_resume (guestfs_h *g,\n"
#~ "                             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_scrub_start"
#~ msgstr "guestfs_btrfs_fsck_argv"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_scrub_start (guestfs_h *g,\n"
#~ "                            const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_scrub_status"
#~ msgstr "guestfs_btrfs_fsck_argv"

#, fuzzy, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfsscrub *\n"
#~ " guestfs_btrfs_scrub_status (guestfs_h *g,\n"
#~ "                             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This function returns a C<struct guestfs_btrfsscrub *>, or NULL if there "
#~ "was an error.  I<The caller must call C<guestfs_free_btrfsscrub> after "
#~ "use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_btrfssubvolume_list *> を返します。エラーが発"
#~ "生した場合、NULL が返されます。 I<呼び出し元は使用後に "
#~ "C<guestfs_free_btrfssubvolume_list> を呼び出す必要があります>。"

#~ msgid "guestfs_btrfs_set_seeding"
#~ msgstr "guestfs_btrfs_set_seeding"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_set_seeding (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int seeding);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_set_seeding (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int seeding);\n"
#~ "\n"

#~ msgid "guestfs_btrfs_subvolume_create"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This function is provided for backwards compatibility with earlier "
#~ "versions of libguestfs.  It simply calls L</"
#~ "guestfs_btrfs_subvolume_create_opts> with no optional arguments."
#~ msgstr ""
#~ "この関数は以前のバージョンの libguestfs との後方互換性のために提供されてい"
#~ "ます。単にオプション引数なしで L</guestfs_umount_opts> を呼び出します。"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_create_opts"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create_opts (guestfs_h *g,\n"
#~ "                                      const char *dest,\n"
#~ "                                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_SUBVOLUME_CREATE_OPTS_QGROUPID, const char *qgroupid,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_create_opts_va"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create_opts_va (guestfs_h *g,\n"
#~ "                                         const char *dest,\n"
#~ "                                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
#~ "                                     const char *mountpoint,\n"
#~ "                                     va_list args);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This is the \"va_list variant\" of L</"
#~ "guestfs_btrfs_subvolume_create_opts>."
#~ msgstr "これは L</guestfs_tar_out_opts> の \"va_list variant\" です。"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_create_opts_argv"
#~ msgstr "guestfs_btrfs_subvolume_create"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create_opts_argv (guestfs_h *g,\n"
#~ "                                           const char *dest,\n"
#~ "                                           const struct guestfs_btrfs_subvolume_create_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
#~ "                                       const char *mountpoint,\n"
#~ "                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This is the \"argv variant\" of L</guestfs_btrfs_subvolume_create_opts>."
#~ msgstr "これは L</guestfs_tar_out_opts> の \"argv variant\" です。"

#~ msgid "guestfs_btrfs_subvolume_delete"
#~ msgstr "guestfs_btrfs_subvolume_delete"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
#~ "                                 const char *subvolume);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
#~ "                                 const char *subvolume);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_get_default"
#~ msgstr "guestfs_btrfs_subvolume_set_default"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_btrfs_subvolume_get_default (guestfs_h *g,\n"
#~ "                                      const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#~ msgid "guestfs_btrfs_subvolume_list"
#~ msgstr "guestfs_btrfs_subvolume_list"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a C<struct guestfs_btrfssubvolume_list *>, or NULL "
#~ "if there was an error.  I<The caller must call "
#~ "C<guestfs_free_btrfssubvolume_list> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_btrfssubvolume_list *> を返します。エラーが発"
#~ "生した場合、NULL が返されます。 I<呼び出し元は使用後に "
#~ "C<guestfs_free_btrfssubvolume_list> を呼び出す必要があります>。"

#~ msgid "guestfs_btrfs_subvolume_set_default"
#~ msgstr "guestfs_btrfs_subvolume_set_default"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
#~ "                                      int64_t id,\n"
#~ "                                      const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
#~ "                                      int64_t id,\n"
#~ "                                      const char *fs);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_show"
#~ msgstr "guestfs_btrfs_subvolume_snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_btrfs_subvolume_show (guestfs_h *g,\n"
#~ "                               const char *subvolume);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
#~ "                                 const char *subvolume);\n"
#~ "\n"

#~ msgid "guestfs_btrfs_subvolume_snapshot"
#~ msgstr "guestfs_btrfs_subvolume_snapshot"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This function is provided for backwards compatibility with earlier "
#~ "versions of libguestfs.  It simply calls L</"
#~ "guestfs_btrfs_subvolume_snapshot_opts> with no optional arguments."
#~ msgstr ""
#~ "この関数は以前のバージョンの libguestfs との後方互換性のために提供されてい"
#~ "ます。単にオプション引数なしで L</guestfs_umount_opts> を呼び出します。"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_snapshot_opts"
#~ msgstr "guestfs_btrfs_subvolume_snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot_opts (guestfs_h *g,\n"
#~ "                                        const char *source,\n"
#~ "                                        const char *dest,\n"
#~ "                                        ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_SUBVOLUME_SNAPSHOT_OPTS_RO, int ro,\n"
#~ " GUESTFS_BTRFS_SUBVOLUME_SNAPSHOT_OPTS_QGROUPID, const char *qgroupid,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
#~ " GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_snapshot_opts_va"
#~ msgstr "guestfs_btrfs_subvolume_snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot_opts_va (guestfs_h *g,\n"
#~ "                                           const char *source,\n"
#~ "                                           const char *dest,\n"
#~ "                                           va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_va (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   va_list args);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This is the \"va_list variant\" of L</"
#~ "guestfs_btrfs_subvolume_snapshot_opts>."
#~ msgstr "これは L</guestfs_tar_out_opts> の \"va_list variant\" です。"

#, fuzzy
#~ msgid "guestfs_btrfs_subvolume_snapshot_opts_argv"
#~ msgstr "guestfs_btrfs_subvolume_snapshot"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot_opts_argv (guestfs_h *g,\n"
#~ "                                             const char *source,\n"
#~ "                                             const char *dest,\n"
#~ "                                             const struct guestfs_btrfs_subvolume_snapshot_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
#~ "                                     const char *src,\n"
#~ "                                     const char *dest,\n"
#~ "                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
#~ "\n"

#, fuzzy
#~ msgid ""
#~ "This is the \"argv variant\" of L</guestfs_btrfs_subvolume_snapshot_opts>."
#~ msgstr "これは L</guestfs_tar_out_opts> の \"argv variant\" です。"

#, fuzzy
#~ msgid "guestfs_c_pointer"
#~ msgstr "guestfs_pwrite"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_c_pointer (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_root (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_canonical_device_name"
#~ msgstr "guestfs_canonical_device_name"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_canonical_device_name (guestfs_h *g,\n"
#~ "                                const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_canonical_device_name (guestfs_h *g,\n"
#~ "                                const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.19.7)"
#~ msgstr "(1.19.7 において追加)"

#~ msgid "guestfs_cap_get_file"
#~ msgstr "guestfs_cap_get_file"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_cap_get_file (guestfs_h *g,\n"
#~ "                       const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_cap_get_file (guestfs_h *g,\n"
#~ "                       const char *path);\n"
#~ "\n"

#~ msgid "guestfs_cap_set_file"
#~ msgstr "guestfs_cap_set_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cap_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *cap);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cap_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *cap);\n"
#~ "\n"

#~ msgid "guestfs_case_sensitive_path"
#~ msgstr "guestfs_case_sensitive_path"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_case_sensitive_path (guestfs_h *g,\n"
#~ "                              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_case_sensitive_path (guestfs_h *g,\n"
#~ "                              const char *path);\n"
#~ "\n"

#~ msgid "See also C<guestfs_realpath>."
#~ msgstr "C<guestfs_realpath> 参照。"

#~ msgid "(Added in 1.0.75)"
#~ msgstr "(1.0.75 において追加)"

#~ msgid "guestfs_cat"
#~ msgstr "guestfs_cat"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_cat (guestfs_h *g,\n"
#~ "              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_cat (guestfs_h *g,\n"
#~ "              const char *path);\n"
#~ "\n"

#~ msgid "(Added in 0.4)"
#~ msgstr "(0.4 において追加)"

#~ msgid "guestfs_checksum"
#~ msgstr "guestfs_checksum"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_checksum (guestfs_h *g,\n"
#~ "                   const char *csumtype,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_checksum (guestfs_h *g,\n"
#~ "                   const char *csumtype,\n"
#~ "                   const char *path);\n"
#~ "\n"

#~ msgid "To get the checksum for a device, use C<guestfs_checksum_device>."
#~ msgstr ""
#~ "デバイスのチェックサムを取得するには C<guestfs_checksum_device> を使用しま"
#~ "す。"

#~ msgid "To get the checksums for many files, use C<guestfs_checksums_out>."
#~ msgstr ""
#~ "多くのファイルのチェックサムを取得するには C<guestfs_checksums_out> を使用"
#~ "します。"

#~ msgid "(Added in 1.0.2)"
#~ msgstr "(1.0.2 において追加)"

#~ msgid "guestfs_checksum_device"
#~ msgstr "guestfs_checksum_device"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_checksum_device (guestfs_h *g,\n"
#~ "                          const char *csumtype,\n"
#~ "                          const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_checksum_device (guestfs_h *g,\n"
#~ "                          const char *csumtype,\n"
#~ "                          const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.3.2)"
#~ msgstr "(1.3.2 において追加)"

#~ msgid "guestfs_checksums_out"
#~ msgstr "guestfs_checksums_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_checksums_out (guestfs_h *g,\n"
#~ "                        const char *csumtype,\n"
#~ "                        const char *directory,\n"
#~ "                        const char *sumsfile);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_checksums_out (guestfs_h *g,\n"
#~ "                        const char *csumtype,\n"
#~ "                        const char *directory,\n"
#~ "                        const char *sumsfile);\n"
#~ "\n"

#~ msgid "(Added in 1.3.7)"
#~ msgstr "(1.3.7 において追加)"

#~ msgid "guestfs_chmod"
#~ msgstr "guestfs_chmod"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_chmod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_chmod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_chown"
#~ msgstr "guestfs_chown"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_chown (guestfs_h *g,\n"
#~ "                int owner,\n"
#~ "                int group,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_chown (guestfs_h *g,\n"
#~ "                int owner,\n"
#~ "                int group,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_command"
#~ msgstr "guestfs_command"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_command (guestfs_h *g,\n"
#~ "                  char *const *arguments);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_command (guestfs_h *g,\n"
#~ "                  char *const *arguments);\n"
#~ "\n"

#~ msgid "guestfs_command_lines"
#~ msgstr "guestfs_command_lines"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_command_lines (guestfs_h *g,\n"
#~ "                        char *const *arguments);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_command_lines (guestfs_h *g,\n"
#~ "                        char *const *arguments);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_sh_lines>"
#~ msgstr "関連項目: C<guestfs_sh_lines>"

#~ msgid "guestfs_compress_device_out"
#~ msgstr "guestfs_compress_device_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_device_out (guestfs_h *g,\n"
#~ "                              const char *ctype,\n"
#~ "                              const char *device,\n"
#~ "                              const char *zdevice,\n"
#~ "                              ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_device_out (guestfs_h *g,\n"
#~ "                              const char *ctype,\n"
#~ "                              const char *device,\n"
#~ "                              const char *zdevice,\n"
#~ "                              ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
#~ "\n"

#~ msgid ""
#~ "The C<ctype> and optional C<level> parameters have the same meaning as in "
#~ "C<guestfs_compress_out>."
#~ msgstr ""
#~ "C<ctype> およびオプションの C<level> パラメーターは "
#~ "C<guestfs_compress_out> におけるものと同じ意味です。"

#~ msgid "(Added in 1.13.15)"
#~ msgstr "(1.13.15 において追加)"

#~ msgid "guestfs_compress_device_out_va"
#~ msgstr "guestfs_compress_device_out_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_device_out_va (guestfs_h *g,\n"
#~ "                                 const char *ctype,\n"
#~ "                                 const char *device,\n"
#~ "                                 const char *zdevice,\n"
#~ "                                 va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_device_out_va (guestfs_h *g,\n"
#~ "                                 const char *ctype,\n"
#~ "                                 const char *device,\n"
#~ "                                 const char *zdevice,\n"
#~ "                                 va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_compress_device_out>."
#~ msgstr ""
#~ "これは L</guestfs_compress_device_out> の \"va_list variant\" です。"

#~ msgid "guestfs_compress_device_out_argv"
#~ msgstr "guestfs_compress_device_out_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_device_out_argv (guestfs_h *g,\n"
#~ "                                   const char *ctype,\n"
#~ "                                   const char *device,\n"
#~ "                                   const char *zdevice,\n"
#~ "                                   const struct guestfs_compress_device_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_device_out_argv (guestfs_h *g,\n"
#~ "                                   const char *ctype,\n"
#~ "                                   const char *device,\n"
#~ "                                   const char *zdevice,\n"
#~ "                                   const struct guestfs_compress_device_out_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_compress_device_out>."
#~ msgstr "これは L</guestfs_compress_device_out> の \"argv variant\" です。"

#~ msgid "guestfs_compress_out"
#~ msgstr "guestfs_compress_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_out (guestfs_h *g,\n"
#~ "                       const char *ctype,\n"
#~ "                       const char *file,\n"
#~ "                       const char *zfile,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_out (guestfs_h *g,\n"
#~ "                       const char *ctype,\n"
#~ "                       const char *file,\n"
#~ "                       const char *zfile,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
#~ "\n"

#~ msgid "guestfs_compress_out_va"
#~ msgstr "guestfs_compress_out_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_out_va (guestfs_h *g,\n"
#~ "                          const char *ctype,\n"
#~ "                          const char *file,\n"
#~ "                          const char *zfile,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_out_va (guestfs_h *g,\n"
#~ "                          const char *ctype,\n"
#~ "                          const char *file,\n"
#~ "                          const char *zfile,\n"
#~ "                          va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_compress_out>."
#~ msgstr "これは L</guestfs_compress_out> の \"va_list variant\" です。"

#~ msgid "guestfs_compress_out_argv"
#~ msgstr "guestfs_compress_out_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_out_argv (guestfs_h *g,\n"
#~ "                            const char *ctype,\n"
#~ "                            const char *file,\n"
#~ "                            const char *zfile,\n"
#~ "                            const struct guestfs_compress_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_out_argv (guestfs_h *g,\n"
#~ "                            const char *ctype,\n"
#~ "                            const char *file,\n"
#~ "                            const char *zfile,\n"
#~ "                            const struct guestfs_compress_out_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_compress_out>."
#~ msgstr "これは L</guestfs_compress_out> の \"argv variant\" です。"

#~ msgid "guestfs_config"
#~ msgstr "guestfs_config"

#~ msgid "guestfs_copy_device_to_device"
#~ msgstr "guestfs_copy_device_to_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_device (guestfs_h *g,\n"
#~ "                                const char *src,\n"
#~ "                                const char *dest,\n"
#~ "                                ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device (guestfs_h *g,\n"
#~ "                                const char *src,\n"
#~ "                                const char *dest,\n"
#~ "                                ...);\n"
#~ "\n"

#~ msgid ""
#~ "The four calls C<guestfs_copy_device_to_device>, "
#~ "C<guestfs_copy_device_to_file>, C<guestfs_copy_file_to_device>, and "
#~ "C<guestfs_copy_file_to_file> let you copy from a source (device|file) to "
#~ "a destination (device|file)."
#~ msgstr ""
#~ "4 つの呼び出し C<guestfs_copy_device_to_device>, "
#~ "C<guestfs_copy_device_to_file>, C<guestfs_copy_file_to_device>, および "
#~ "C<guestfs_copy_file_to_file> は、ソース (デバイス|ファイル) から宛先 (デバ"
#~ "イス|ファイル) にコピーできます。"

#~ msgid "(Added in 1.13.25)"
#~ msgstr "(1.13.25 において追加)"

#~ msgid "guestfs_copy_device_to_device_va"
#~ msgstr "guestfs_copy_device_to_device_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_va (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_va (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   va_list args);\n"
#~ "\n"

#~ msgid ""
#~ "This is the \"va_list variant\" of L</guestfs_copy_device_to_device>."
#~ msgstr ""
#~ "これは L</guestfs_copy_device_to_device> の \"va_list variant\" です。"

#~ msgid "guestfs_copy_device_to_device_argv"
#~ msgstr "guestfs_copy_device_to_device_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
#~ "                                     const char *src,\n"
#~ "                                     const char *dest,\n"
#~ "                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
#~ "                                     const char *src,\n"
#~ "                                     const char *dest,\n"
#~ "                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_copy_device_to_device>."
#~ msgstr "これは L</guestfs_copy_device_to_device> の \"argv variant\" です。"

#~ msgid "guestfs_copy_device_to_file"
#~ msgstr "guestfs_copy_device_to_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_file (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_file (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"

#~ msgid ""
#~ "See C<guestfs_copy_device_to_device> for a general overview of this call."
#~ msgstr ""
#~ "この呼び出しの一般的な概要は C<guestfs_copy_device_to_device> を参照してく"
#~ "ださい。"

#~ msgid "guestfs_copy_device_to_file_va"
#~ msgstr "guestfs_copy_device_to_file_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_copy_device_to_file>."
#~ msgstr ""
#~ "これは L</guestfs_copy_device_to_file> の \"va_list variant\" です。"

#~ msgid "guestfs_copy_device_to_file_argv"
#~ msgstr "guestfs_copy_device_to_file_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_device_to_file_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_device_to_file_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_copy_device_to_file>."
#~ msgstr "これは L</guestfs_copy_device_to_file> の \"argv variant\" です。"

#~ msgid "guestfs_copy_file_to_device"
#~ msgstr "guestfs_copy_file_to_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_device (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"

#~ msgid "guestfs_copy_file_to_device_va"
#~ msgstr "guestfs_copy_file_to_device_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_copy_file_to_device>."
#~ msgstr ""
#~ "これは L</guestfs_copy_file_to_device> の \"va_list variant\" です。"

#~ msgid "guestfs_copy_file_to_device_argv"
#~ msgstr "guestfs_copy_file_to_device_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_file_to_device_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_file_to_device_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_copy_file_to_device>."
#~ msgstr "これは L</guestfs_copy_file_to_device> の \"argv variant\" です。"

#~ msgid "guestfs_copy_file_to_file"
#~ msgstr "guestfs_copy_file_to_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_file (guestfs_h *g,\n"
#~ "                            const char *src,\n"
#~ "                            const char *dest,\n"
#~ "                            ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_file (guestfs_h *g,\n"
#~ "                            const char *src,\n"
#~ "                            const char *dest,\n"
#~ "                            ...);\n"
#~ "\n"

#~ msgid "guestfs_copy_file_to_file_va"
#~ msgstr "guestfs_copy_file_to_file_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_va (guestfs_h *g,\n"
#~ "                               const char *src,\n"
#~ "                               const char *dest,\n"
#~ "                               va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_va (guestfs_h *g,\n"
#~ "                               const char *src,\n"
#~ "                               const char *dest,\n"
#~ "                               va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_copy_file_to_file>."
#~ msgstr "これは L</guestfs_copy_file_to_file> の \"va_list variant\" です。"

#~ msgid "guestfs_copy_file_to_file_argv"
#~ msgstr "guestfs_copy_file_to_file_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 const struct guestfs_copy_file_to_file_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 const struct guestfs_copy_file_to_file_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_copy_file_to_file>."
#~ msgstr "これは L</guestfs_copy_file_to_file> の \"argv variant\" です。"

#, fuzzy
#~ msgid "guestfs_copy_in"
#~ msgstr "guestfs_copy_size"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_in (guestfs_h *g,\n"
#~ "                  const char *localpath,\n"
#~ "                  const char *remotedir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rename (guestfs_h *g,\n"
#~ "                 const char *oldpath,\n"
#~ "                 const char *newpath);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_copy_out"
#~ msgstr "guestfs_compress_out"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_out (guestfs_h *g,\n"
#~ "                   const char *remotepath,\n"
#~ "                   const char *localdir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_set (guestfs_h *g,\n"
#~ "                  const char *augpath,\n"
#~ "                  const char *val);\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " C<guestfs_copy_out> /home .\n"
#~ "\n"
#~ msgstr ""
#~ " copy-out /home .\n"
#~ "\n"

#~ msgid "guestfs_copy_size"
#~ msgstr "guestfs_copy_size"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_size (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *dest,\n"
#~ "                    int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_size (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *dest,\n"
#~ "                    int64_t size);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_copy_device_to_device> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_copy_device_to_device> を使用してください。"

#~ msgid "(Added in 1.0.87)"
#~ msgstr "(1.0.87 において追加)"

#~ msgid "guestfs_cp"
#~ msgstr "guestfs_cp"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cp (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cp (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"

#~ msgid "(Added in 1.0.18)"
#~ msgstr "(1.0.18 において追加)"

#~ msgid "guestfs_cp_a"
#~ msgstr "guestfs_cp_a"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cp_a (guestfs_h *g,\n"
#~ "               const char *src,\n"
#~ "               const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cp_a (guestfs_h *g,\n"
#~ "               const char *src,\n"
#~ "               const char *dest);\n"
#~ "\n"

#~ msgid "(Added in 1.21.38)"
#~ msgstr "(1.21.38 において追加)"

#~ msgid "guestfs_dd"
#~ msgstr "guestfs_dd"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_dd (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_dd (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"

#~ msgid "guestfs_device_index"
#~ msgstr "guestfs_device_index"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_device_index (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_device_index (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"

#~ msgid "See also C<guestfs_list_devices>, C<guestfs_part_to_dev>."
#~ msgstr "C<guestfs_list_devices>, C<guestfs_part_to_dev> 参照。"

#~ msgid "guestfs_df"
#~ msgstr "guestfs_df"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_df (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_df (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.54)"
#~ msgstr "(1.0.54 において追加)"

#~ msgid "guestfs_df_h"
#~ msgstr "guestfs_df_h"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_df_h (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_df_h (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.19.38)"
#~ msgstr "(1.19.38 において追加)"

#~ msgid "(Added in 1.19.39)"
#~ msgstr "(1.19.39 にて追加)"

#~ msgid "guestfs_dmesg"
#~ msgstr "guestfs_dmesg"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_dmesg (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_dmesg (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_download"
#~ msgstr "guestfs_download"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_download (guestfs_h *g,\n"
#~ "                   const char *remotefilename,\n"
#~ "                   const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_download (guestfs_h *g,\n"
#~ "                   const char *remotefilename,\n"
#~ "                   const char *filename);\n"
#~ "\n"

#~ msgid "See also C<guestfs_upload>, C<guestfs_cat>."
#~ msgstr "C<guestfs_upload>, C<guestfs_cat> 参照。"

#~ msgid "guestfs_download_offset"
#~ msgstr "guestfs_download_offset"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_download_offset (guestfs_h *g,\n"
#~ "                          const char *remotefilename,\n"
#~ "                          const char *filename,\n"
#~ "                          int64_t offset,\n"
#~ "                          int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_download_offset (guestfs_h *g,\n"
#~ "                          const char *remotefilename,\n"
#~ "                          const char *filename,\n"
#~ "                          int64_t offset,\n"
#~ "                          int64_t size);\n"
#~ "\n"

#~ msgid "See also C<guestfs_download>, C<guestfs_pread>."
#~ msgstr "C<guestfs_download>, C<guestfs_pread> 参照。"

#~ msgid "(Added in 1.5.17)"
#~ msgstr "(1.5.17 において追加)"

#~ msgid "guestfs_drop_caches"
#~ msgstr "guestfs_drop_caches"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_drop_caches (guestfs_h *g,\n"
#~ "                      int whattodrop);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_drop_caches (guestfs_h *g,\n"
#~ "                      int whattodrop);\n"
#~ "\n"

#~ msgid "guestfs_du"
#~ msgstr "guestfs_du"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_du (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_du (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"

#~ msgid "guestfs_e2fsck"
#~ msgstr "guestfs_e2fsck"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_E2FSCK_CORRECT, int correct,\n"
#~ " GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_E2FSCK_CORRECT, int correct,\n"
#~ " GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
#~ "\n"

#~ msgid "(Added in 1.15.17)"
#~ msgstr "(1.15.17 において追加)"

#~ msgid "guestfs_e2fsck_va"
#~ msgstr "guestfs_e2fsck_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_e2fsck>."
#~ msgstr "これは L</guestfs_e2fsck> の \"va_list variant\" です。 "

#~ msgid "guestfs_e2fsck_argv"
#~ msgstr "guestfs_e2fsck_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck_argv (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const struct guestfs_e2fsck_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck_argv (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const struct guestfs_e2fsck_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_e2fsck>."
#~ msgstr "これは L</guestfs_e2fsck> の \"argv variant\" です。"

#~ msgid "guestfs_e2fsck_f"
#~ msgstr "guestfs_e2fsck_f"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck_f (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck_f (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_e2fsck> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_e2fsck> を使用してください。"

#~ msgid "(Added in 1.0.29)"
#~ msgstr "(1.0.29 において追加)"

#~ msgid "guestfs_echo_daemon"
#~ msgstr "guestfs_echo_daemon"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_echo_daemon (guestfs_h *g,\n"
#~ "                      char *const *words);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_echo_daemon (guestfs_h *g,\n"
#~ "                      char *const *words);\n"
#~ "\n"

#~ msgid "See also C<guestfs_ping_daemon>."
#~ msgstr "C<guestfs_ping_daemon> 参照。"

#~ msgid "(Added in 1.0.69)"
#~ msgstr "(1.0.69 において追加)"

#~ msgid "guestfs_egrep"
#~ msgstr "guestfs_egrep"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_egrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_egrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_grep> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</guestfs_grep> "
#~ "を使用してください。"

#~ msgid "(Added in 1.0.66)"
#~ msgstr "(1.0.66 において追加)"

#~ msgid "guestfs_egrepi"
#~ msgstr "guestfs_egrepi"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_egrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_egrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_equal"
#~ msgstr "guestfs_equal"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_equal (guestfs_h *g,\n"
#~ "                const char *file1,\n"
#~ "                const char *file2);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_equal (guestfs_h *g,\n"
#~ "                const char *file1,\n"
#~ "                const char *file2);\n"
#~ "\n"

#~ msgid "guestfs_exists"
#~ msgstr "guestfs_exists"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_exists (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_exists (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "See also C<guestfs_is_file>, C<guestfs_is_dir>, C<guestfs_stat>."
#~ msgstr "C<guestfs_is_file>, C<guestfs_is_dir>, C<guestfs_stat> 参照。"

#~ msgid "guestfs_extlinux"
#~ msgstr "guestfs_extlinux"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_extlinux (guestfs_h *g,\n"
#~ "                   const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_extlinux (guestfs_h *g,\n"
#~ "                   const char *directory);\n"
#~ "\n"

#~ msgid "See also C<guestfs_syslinux>."
#~ msgstr "C<guestfs_syslinux> 参照。"

#~ msgid "(Added in 1.21.27)"
#~ msgstr "(1.21.27 において追加)"

#~ msgid "guestfs_fallocate"
#~ msgstr "guestfs_fallocate"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fallocate (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    int len);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fallocate (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    int len);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_fallocate64> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_fallocate64> を使用してください。"

#~ msgid "guestfs_fallocate64"
#~ msgstr "guestfs_fallocate64"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fallocate64 (guestfs_h *g,\n"
#~ "                      const char *path,\n"
#~ "                      int64_t len);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fallocate64 (guestfs_h *g,\n"
#~ "                      const char *path,\n"
#~ "                      int64_t len);\n"
#~ "\n"

#~ msgid "(Added in 1.3.17)"
#~ msgstr "(1.3.17 において追加)"

#~ msgid "guestfs_feature_available"
#~ msgstr "guestfs_feature_available"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_feature_available (guestfs_h *g,\n"
#~ "                            char *const *groups);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_feature_available (guestfs_h *g,\n"
#~ "                            char *const *groups);\n"
#~ "\n"

#~ msgid "(Added in 1.21.26)"
#~ msgstr "(1.21.26 において追加)"

#~ msgid "guestfs_fgrep"
#~ msgstr "guestfs_fgrep"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_fgrep (guestfs_h *g,\n"
#~ "                const char *pattern,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_fgrep (guestfs_h *g,\n"
#~ "                const char *pattern,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_fgrepi"
#~ msgstr "guestfs_fgrepi"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_fgrepi (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_fgrepi (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_file"
#~ msgstr "guestfs_file"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_file (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_file (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "See also: L<file(1)>, C<guestfs_vfs_type>, C<guestfs_lstat>, "
#~ "C<guestfs_is_file>, C<guestfs_is_blockdev> (etc), C<guestfs_is_zero>."
#~ msgstr ""
#~ "関連項目: L<file(1)>, C<guestfs_vfs_type>, C<guestfs_lstat>, "
#~ "C<guestfs_is_file>, C<guestfs_is_blockdev> (etc), C<guestfs_is_zero>."

#~ msgid "guestfs_file_architecture"
#~ msgstr "guestfs_file_architecture"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_file_architecture (guestfs_h *g,\n"
#~ "                            const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_file_architecture (guestfs_h *g,\n"
#~ "                            const char *filename);\n"
#~ "\n"

#~ msgid "(Added in 1.5.3)"
#~ msgstr "(1.5.3 において追加)"

#~ msgid "guestfs_filesize"
#~ msgstr "guestfs_filesize"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_filesize (guestfs_h *g,\n"
#~ "                   const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_filesize (guestfs_h *g,\n"
#~ "                   const char *file);\n"
#~ "\n"

#~ msgid ""
#~ "To get other stats about a file, use C<guestfs_stat>, C<guestfs_lstat>, "
#~ "C<guestfs_is_dir>, C<guestfs_is_file> etc.  To get the size of block "
#~ "devices, use C<guestfs_blockdev_getsize64>."
#~ msgstr ""
#~ "ファイルに関する他の統計情報を取得するには、C<guestfs_stat>, "
#~ "C<guestfs_lstat>, C<guestfs_is_dir>, C<guestfs_is_file> などを使用します。"
#~ "ブロックデバイスの容量を取得するには、C<guestfs_blockdev_getsize64> を使用"
#~ "します。"

#~ msgid "(Added in 1.0.82)"
#~ msgstr "(1.0.82 において追加)"

#~ msgid "guestfs_filesystem_available"
#~ msgstr "guestfs_filesystem_available"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_filesystem_available (guestfs_h *g,\n"
#~ "                               const char *filesystem);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_filesystem_available (guestfs_h *g,\n"
#~ "                               const char *filesystem);\n"
#~ "\n"

#~ msgid "You must call C<guestfs_launch> before using this command."
#~ msgstr ""
#~ "このコマンドを使用する前に C<guestfs_launch> を呼び出す必要があります。"

#~ msgid ""
#~ "See also C<guestfs_available>, C<guestfs_feature_available>, L<guestfs(3)/"
#~ "AVAILABILITY>."
#~ msgstr ""
#~ "C<guestfs_available>, C<guestfs_feature_available>, L<guestfs(3)/"
#~ "AVAILABILITY> 参照。"

#~ msgid "(Added in 1.19.5)"
#~ msgstr "(1.19.5 において追加)"

#~ msgid "guestfs_fill"
#~ msgstr "guestfs_fill"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fill (guestfs_h *g,\n"
#~ "               int c,\n"
#~ "               int len,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fill (guestfs_h *g,\n"
#~ "               int c,\n"
#~ "               int len,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "(Added in 1.0.79)"
#~ msgstr "(1.0.79 において追加)"

#~ msgid "(Added in 1.19.32)"
#~ msgstr "(1.19.32 において追加)"

#~ msgid "guestfs_fill_pattern"
#~ msgstr "guestfs_fill_pattern"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fill_pattern (guestfs_h *g,\n"
#~ "                       const char *pattern,\n"
#~ "                       int len,\n"
#~ "                       const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fill_pattern (guestfs_h *g,\n"
#~ "                       const char *pattern,\n"
#~ "                       int len,\n"
#~ "                       const char *path);\n"
#~ "\n"

#~ msgid "(Added in 1.3.12)"
#~ msgstr "(1.3.12 において追加)"

#~ msgid "guestfs_find"
#~ msgstr "guestfs_find"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_find (guestfs_h *g,\n"
#~ "               const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_find (guestfs_h *g,\n"
#~ "               const char *directory);\n"
#~ "\n"

#~ msgid "(Added in 1.0.27)"
#~ msgstr "(1.0.27 において追加)"

#~ msgid "guestfs_find0"
#~ msgstr "guestfs_find0"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_find0 (guestfs_h *g,\n"
#~ "                const char *directory,\n"
#~ "                const char *files);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_find0 (guestfs_h *g,\n"
#~ "                const char *directory,\n"
#~ "                const char *files);\n"
#~ "\n"

#~ msgid "(Added in 1.0.74)"
#~ msgstr "(1.0.74 において追加)"

#~ msgid "guestfs_findfs_label"
#~ msgstr "guestfs_findfs_label"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_findfs_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_findfs_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"

#~ msgid "guestfs_findfs_uuid"
#~ msgstr "guestfs_findfs_uuid"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_findfs_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_findfs_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"

#~ msgid "To find the UUID of a filesystem, use C<guestfs_vfs_uuid>."
#~ msgstr ""
#~ "ファイルシステムの UUID を見つけるには C<guestfs_vfs_uuid> を使用します。"

#~ msgid "guestfs_fsck"
#~ msgstr "guestfs_fsck"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fsck (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fsck (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.0.16)"
#~ msgstr "(1.0.16 において追加)"

#~ msgid "guestfs_fstrim"
#~ msgstr "guestfs_fstrim"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fstrim (guestfs_h *g,\n"
#~ "                 const char *mountpoint,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fstrim (guestfs_h *g,\n"
#~ "                 const char *mountpoint,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_FSTRIM_OFFSET, int64_t offset,\n"
#~ " GUESTFS_FSTRIM_LENGTH, int64_t length,\n"
#~ " GUESTFS_FSTRIM_MINIMUMFREEEXTENT, int64_t minimumfreeextent,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_FSTRIM_OFFSET, int64_t offset,\n"
#~ " GUESTFS_FSTRIM_LENGTH, int64_t length,\n"
#~ " GUESTFS_FSTRIM_MINIMUMFREEEXTENT, int64_t minimumfreeextent,\n"
#~ "\n"

#~ msgid "(Added in 1.19.6)"
#~ msgstr "(1.19.6 において追加)"

#~ msgid "guestfs_fstrim_va"
#~ msgstr "guestfs_fstrim_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fstrim_va (guestfs_h *g,\n"
#~ "                    const char *mountpoint,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fstrim_va (guestfs_h *g,\n"
#~ "                    const char *mountpoint,\n"
#~ "                    va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_fstrim>."
#~ msgstr "これは L</guestfs_fstrim> の \"va_list variant\" です。"

#~ msgid "guestfs_fstrim_argv"
#~ msgstr "guestfs_fstrim_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fstrim_argv (guestfs_h *g,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      const struct guestfs_fstrim_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fstrim_argv (guestfs_h *g,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      const struct guestfs_fstrim_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_fstrim>."
#~ msgstr "これは L</guestfs_fstrim> の \"argv variant\" です。"

#~ msgid "guestfs_get_append"
#~ msgstr "guestfs_get_append"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_append (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_append (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.26)"
#~ msgstr "(1.0.26 において追加)"

#~ msgid "guestfs_get_attach_method"
#~ msgstr "guestfs_get_attach_method"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_attach_method (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_attach_method (guestfs_h *g);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_get_backend> call instead."
#~ msgstr ""
#~ "I<この函数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_get_backend> を使用してください。"

#~ msgid "See C<guestfs_set_backend> and L<guestfs(3)/BACKEND>."
#~ msgstr "C<guestfs_set_backend> および L<guestfs(3)/BACKEND> 参照。"

#~ msgid "(Added in 1.9.8)"
#~ msgstr "(1.9.8 において追加)"

#~ msgid "guestfs_get_autosync"
#~ msgstr "guestfs_get_autosync"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_autosync (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_autosync (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_backend"
#~ msgstr "guestfs_get_backend"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_backend (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_backend (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_cachedir"
#~ msgstr "guestfs_get_cachedir"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_cachedir (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_cachedir (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.19.58)"
#~ msgstr "(1.19.58 において追加)"

#~ msgid "guestfs_get_direct"
#~ msgstr "guestfs_get_direct"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_direct (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_direct (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.72)"
#~ msgstr "(1.0.72 において追加)"

#~ msgid "guestfs_get_e2attrs"
#~ msgstr "guestfs_get_e2attrs"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"

#~ msgid "See also C<guestfs_set_e2attrs>."
#~ msgstr "C<guestfs_set_e2attrs> 参照。"

#~ msgid "(Added in 1.17.31)"
#~ msgstr "(1.17.31 において追加)"

#~ msgid "guestfs_get_e2generation"
#~ msgstr "guestfs_get_e2generation"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_get_e2generation (guestfs_h *g,\n"
#~ "                           const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_get_e2generation (guestfs_h *g,\n"
#~ "                           const char *file);\n"
#~ "\n"

#~ msgid "See C<guestfs_set_e2generation>."
#~ msgstr "C<guestfs_set_e2generation> 参照。"

#~ msgid "guestfs_get_e2label"
#~ msgstr "guestfs_get_e2label"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_e2label (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_e2label (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_vfs_label> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_vfs_label> を使用してください。"

#~ msgid "(Added in 1.0.15)"
#~ msgstr "(1.0.15 において追加)"

#~ msgid "guestfs_get_e2uuid"
#~ msgstr "guestfs_get_e2uuid"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_vfs_uuid> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_vfs_uuid> を使用してください。"

#~ msgid "guestfs_get_libvirt_requested_credential_challenge"
#~ msgstr "guestfs_get_libvirt_requested_credential_challenge"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_challenge (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_challenge (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"

#~ msgid "(Added in 1.19.52)"
#~ msgstr "(1.19.52 において追加))"

#~ msgid "guestfs_get_libvirt_requested_credential_defresult"
#~ msgstr "guestfs_get_libvirt_requested_credential_defresult"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_defresult (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_defresult (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"

#~ msgid "guestfs_get_libvirt_requested_credential_prompt"
#~ msgstr "guestfs_get_libvirt_requested_credential_prompt"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_prompt (guestfs_h *g,\n"
#~ "                                                  int index);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_prompt (guestfs_h *g,\n"
#~ "                                                  int index);\n"
#~ "\n"

#~ msgid "guestfs_get_libvirt_requested_credentials"
#~ msgstr "guestfs_get_libvirt_requested_credentials"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_get_libvirt_requested_credentials (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_get_libvirt_requested_credentials (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_memsize"
#~ msgstr "guestfs_get_memsize"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_memsize (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_memsize (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.55)"
#~ msgstr "(1.0.55 において追加)"

#~ msgid "guestfs_get_network"
#~ msgstr "guestfs_get_network"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_network (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_network (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.5.4)"
#~ msgstr "(1.5.4 において追加)"

#~ msgid "guestfs_get_path"
#~ msgstr "guestfs_get_path"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_path (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_path (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_pgroup"
#~ msgstr "guestfs_get_pgroup"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_pgroup (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_pgroup (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.11.18)"
#~ msgstr "(1.11.18 において追加)"

#~ msgid "guestfs_get_pid"
#~ msgstr "guestfs_get_pid"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_pid (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_pid (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.56)"
#~ msgstr "(1.0.56 において追加)"

#~ msgid "(Added in 1.21.29)"
#~ msgstr "(1.21.29 において追加)"

#~ msgid "guestfs_get_qemu"
#~ msgstr "guestfs_get_qemu"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_qemu (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_qemu (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.6)"
#~ msgstr "(1.0.6 において追加)"

#~ msgid "guestfs_get_recovery_proc"
#~ msgstr "guestfs_get_recovery_proc"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_recovery_proc (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_recovery_proc (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.77)"
#~ msgstr "(1.0.77 において追加)"

#~ msgid "guestfs_get_selinux"
#~ msgstr "guestfs_get_selinux"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_selinux (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_selinux (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.67)"
#~ msgstr "(1.0.67 において追加)"

#~ msgid "guestfs_get_smp"
#~ msgstr "guestfs_get_smp"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_smp (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_smp (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_state"
#~ msgstr "guestfs_get_state"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_state (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_state (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_tmpdir"
#~ msgstr "guestfs_get_tmpdir"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_tmpdir (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_tmpdir (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_trace"
#~ msgstr "guestfs_get_trace"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_trace (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_trace (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_umask"
#~ msgstr "guestfs_get_umask"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_umask (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_umask (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_get_verbose"
#~ msgstr "guestfs_get_verbose"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_verbose (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_verbose (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_getcon"
#~ msgstr "guestfs_getcon"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_getcon (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_getcon (guestfs_h *g);\n"
#~ "\n"

#~ msgid ""
#~ "See the documentation about SELINUX in L<guestfs(3)>, and "
#~ "C<guestfs_setcon>"
#~ msgstr ""
#~ "L<guestfs(3)> における SELinux および C<guestfs_setcon> に関するドキュメン"
#~ "トを参照してください。"

#~ msgid "guestfs_getxattr"
#~ msgstr "guestfs_getxattr"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_getxattr (guestfs_h *g,\n"
#~ "                   const char *path,\n"
#~ "                   const char *name,\n"
#~ "                   size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_getxattr (guestfs_h *g,\n"
#~ "                   const char *path,\n"
#~ "                   const char *name,\n"
#~ "                   size_t *size_r);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_getxattrs>, C<guestfs_lgetxattr>, L<attr(5)>."
#~ msgstr "関連項目: C<guestfs_getxattrs>, C<guestfs_lgetxattr>, L<attr(5)>"

#~ msgid "(Added in 1.7.24)"
#~ msgstr "(1.7.24 において追加)"

#~ msgid "guestfs_getxattrs"
#~ msgstr "guestfs_getxattrs"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_getxattrs (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_getxattrs (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_lgetxattrs>, L<attr(5)>."
#~ msgstr "関連項目: C<guestfs_lgetxattrs>, L<attr(5)>"

#~ msgid ""
#~ "This function returns a C<struct guestfs_xattr_list *>, or NULL if there "
#~ "was an error.  I<The caller must call C<guestfs_free_xattr_list> after "
#~ "use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_xattr_list *> を返します。もしくは、エラーが発"
#~ "生すると NULL を返します。 I<呼び出し元は使用後に "
#~ "C<guestfs_free_xattr_list> を呼び出す必要があります>。"

#~ msgid "(Added in 1.0.59)"
#~ msgstr "(1.0.59 において追加)"

#~ msgid "guestfs_glob_expand"
#~ msgstr "guestfs_glob_expand"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_glob_expand (guestfs_h *g,\n"
#~ "                      const char *pattern);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_glob_expand (guestfs_h *g,\n"
#~ "                      const char *pattern);\n"
#~ "\n"

#~ msgid "(Added in 1.0.50)"
#~ msgstr "(1.0.50 において追加)"

#~ msgid "guestfs_grep"
#~ msgstr "guestfs_grep"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep (guestfs_h *g,\n"
#~ "               const char *regex,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep (guestfs_h *g,\n"
#~ "               const char *regex,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_grep_opts_va"
#~ msgstr "guestfs_grep_opts_va"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep_opts_va (guestfs_h *g,\n"
#~ "                       const char *regex,\n"
#~ "                       const char *path,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep_opts_va (guestfs_h *g,\n"
#~ "                       const char *regex,\n"
#~ "                       const char *path,\n"
#~ "                       va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_grep_opts>."
#~ msgstr "これは L</guestfs_grep_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_grep_opts_argv"
#~ msgstr "guestfs_grep_opts_argv"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep_opts_argv (guestfs_h *g,\n"
#~ "                         const char *regex,\n"
#~ "                         const char *path,\n"
#~ "                         const struct guestfs_grep_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep_opts_argv (guestfs_h *g,\n"
#~ "                         const char *regex,\n"
#~ "                         const char *path,\n"
#~ "                         const struct guestfs_grep_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_grep_opts>."
#~ msgstr "これは L</guestfs_grep_opts> の \"argv variant\" です。"

#~ msgid "guestfs_grepi"
#~ msgstr "guestfs_grepi"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grepi (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grepi (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_grub_install"
#~ msgstr "guestfs_grub_install"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_grub_install (guestfs_h *g,\n"
#~ "                       const char *root,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_grub_install (guestfs_h *g,\n"
#~ "                       const char *root,\n"
#~ "                       const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.0.17)"
#~ msgstr "(1.0.17 において追加)"

#~ msgid "guestfs_head"
#~ msgstr "guestfs_head"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_head (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_head (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_head_n"
#~ msgstr "guestfs_head_n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_head_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_head_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_hexdump"
#~ msgstr "guestfs_hexdump"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hexdump (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hexdump (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "(Added in 1.0.22)"
#~ msgstr "(1.0.22 において追加)"

#~ msgid "guestfs_hivex_close"
#~ msgstr "guestfs_hivex_close"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_close (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.19.35)"
#~ msgstr "(1.19.35 において追加)"

#~ msgid "guestfs_hivex_commit"
#~ msgstr "guestfs_hivex_commit"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_commit (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_commit (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_add_child"
#~ msgstr "guestfs_hivex_node_add_child"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_add_child (guestfs_h *g,\n"
#~ "                               int64_t parent,\n"
#~ "                               const char *name);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_add_child (guestfs_h *g,\n"
#~ "                               int64_t parent,\n"
#~ "                               const char *name);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_children"
#~ msgstr "guestfs_hivex_node_children"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_node_list *\n"
#~ " guestfs_hivex_node_children (guestfs_h *g,\n"
#~ "                              int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_hivex_node_list *\n"
#~ " guestfs_hivex_node_children (guestfs_h *g,\n"
#~ "                              int64_t nodeh);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a C<struct guestfs_hivex_node_list *>, or NULL if "
#~ "there was an error.  I<The caller must call "
#~ "C<guestfs_free_hivex_node_list> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_hivex_node_list *> を返します。エラーが発生す"
#~ "ると NULL を返します。 I<呼び出し元は使用した後に "
#~ "C<guestfs_free_hivex_node_list> を呼び出す必要があります>。"

#~ msgid "guestfs_hivex_node_delete_child"
#~ msgstr "guestfs_hivex_node_delete_child"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_node_delete_child (guestfs_h *g,\n"
#~ "                                  int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_node_delete_child (guestfs_h *g,\n"
#~ "                                  int64_t nodeh);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_get_child"
#~ msgstr "guestfs_hivex_node_get_child"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_child (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *name);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_child (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *name);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_get_value"
#~ msgstr "guestfs_hivex_node_get_value"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_name"
#~ msgstr "guestfs_hivex_node_name"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_node_name (guestfs_h *g,\n"
#~ "                          int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_node_name (guestfs_h *g,\n"
#~ "                          int64_t nodeh);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_parent"
#~ msgstr "guestfs_hivex_node_parent"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_parent (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_parent (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_set_value"
#~ msgstr "guestfs_hivex_node_set_value"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_node_set_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key,\n"
#~ "                               int64_t t,\n"
#~ "                               const char *val,\n"
#~ "                               size_t val_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_node_set_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key,\n"
#~ "                               int64_t t,\n"
#~ "                               const char *val,\n"
#~ "                               size_t val_size);\n"
#~ "\n"

#~ msgid "guestfs_hivex_node_values"
#~ msgstr "guestfs_hivex_node_values"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_value_list *\n"
#~ " guestfs_hivex_node_values (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_hivex_value_list *\n"
#~ " guestfs_hivex_node_values (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a C<struct guestfs_hivex_value_list *>, or NULL if "
#~ "there was an error.  I<The caller must call "
#~ "C<guestfs_free_hivex_value_list> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_hivex_value_list *> を返します。エラーが発生す"
#~ "ると NULL を返します。 I<呼び出し元は使用した後に "
#~ "C<guestfs_free_hivex_value_list> を呼び出す必要があります>。"

#~ msgid "guestfs_hivex_open"
#~ msgstr "guestfs_hivex_open"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_open (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_open (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     ...);\n"
#~ "\n"

#~ msgid "guestfs_hivex_open_va"
#~ msgstr "guestfs_hivex_open_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_open_va (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_open_va (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_hivex_open>."
#~ msgstr "これは L</guestfs_hivex_open> の \"va_list variant\" です。"

#~ msgid "guestfs_hivex_open_argv"
#~ msgstr "guestfs_hivex_open_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_open_argv (guestfs_h *g,\n"
#~ "                          const char *filename,\n"
#~ "                          const struct guestfs_hivex_open_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_open_argv (guestfs_h *g,\n"
#~ "                          const char *filename,\n"
#~ "                          const struct guestfs_hivex_open_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_hivex_open>."
#~ msgstr "これは L</guestfs_hivex_open> の \"argv variant\" です。"

#~ msgid "guestfs_hivex_root"
#~ msgstr "guestfs_hivex_root"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_root (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_root (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_hivex_value_key"
#~ msgstr "guestfs_hivex_value_key"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_value_key (guestfs_h *g,\n"
#~ "                          int64_t valueh);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_value_key (guestfs_h *g,\n"
#~ "                          int64_t valueh);\n"
#~ "\n"

#~ msgid "guestfs_hivex_value_type"
#~ msgstr "guestfs_hivex_value_type"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_value_type (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_value_type (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"

#~ msgid "guestfs_hivex_value_utf8"
#~ msgstr "guestfs_hivex_value_utf8"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_value_utf8 (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_value_utf8 (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"

#~ msgid "guestfs_hivex_value_value"
#~ msgstr "guestfs_hivex_value_value"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_value_value (guestfs_h *g,\n"
#~ "                            int64_t valueh,\n"
#~ "                            size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_value_value (guestfs_h *g,\n"
#~ "                            int64_t valueh,\n"
#~ "                            size_t *size_r);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_hivex_value_utf8>."
#~ msgstr "関連項目: C<guestfs_hivex_value_utf8>。"

#~ msgid "guestfs_initrd_cat"
#~ msgstr "guestfs_initrd_cat"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_initrd_cat (guestfs_h *g,\n"
#~ "                     const char *initrdpath,\n"
#~ "                     const char *filename,\n"
#~ "                     size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_initrd_cat (guestfs_h *g,\n"
#~ "                     const char *initrdpath,\n"
#~ "                     const char *filename,\n"
#~ "                     size_t *size_r);\n"
#~ "\n"

#~ msgid "See also C<guestfs_initrd_list>."
#~ msgstr "C<guestfs_initrd_list> 参照。"

#~ msgid "guestfs_initrd_list"
#~ msgstr "guestfs_initrd_list"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_initrd_list (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_initrd_list (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"

#~ msgid "guestfs_inotify_add_watch"
#~ msgstr "guestfs_inotify_add_watch"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_inotify_add_watch (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            int mask);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_inotify_add_watch (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            int mask);\n"
#~ "\n"

#~ msgid "guestfs_inotify_close"
#~ msgstr "guestfs_inotify_close"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inotify_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inotify_close (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_inotify_files"
#~ msgstr "guestfs_inotify_files"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inotify_files (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inotify_files (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_inotify_init"
#~ msgstr "guestfs_inotify_init"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inotify_init (guestfs_h *g,\n"
#~ "                       int maxevents);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inotify_init (guestfs_h *g,\n"
#~ "                       int maxevents);\n"
#~ "\n"

#~ msgid ""
#~ "Before any events are generated, you have to add some watches to the "
#~ "internal watch list.  See: C<guestfs_inotify_add_watch> and "
#~ "C<guestfs_inotify_rm_watch>."
#~ msgstr ""
#~ "何らかのイベントを生成する前に、いくつかのウォッチと内部ウォッチリストに追"
#~ "加する必要があります。  参照: C<guestfs_inotify_add_watch> および "
#~ "C<guestfs_inotify_rm_watch>。"

#~ msgid "guestfs_inotify_read"
#~ msgstr "guestfs_inotify_read"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_inotify_event_list *\n"
#~ " guestfs_inotify_read (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_inotify_event_list *\n"
#~ " guestfs_inotify_read (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_inotify_rm_watch"
#~ msgstr "guestfs_inotify_rm_watch"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inotify_rm_watch (guestfs_h *g,\n"
#~ "                           int wd);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inotify_rm_watch (guestfs_h *g,\n"
#~ "                           int wd);\n"
#~ "\n"

#~ msgid ""
#~ "Remove a previously defined inotify watch.  See "
#~ "C<guestfs_inotify_add_watch>."
#~ msgstr ""
#~ "前に定義された inotify ウォッチを削除します。 "
#~ "C<guestfs_inotify_add_watch> 参照。"

#~ msgid "guestfs_inspect_get_arch"
#~ msgstr "guestfs_inspect_get_arch"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_arch (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_arch (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"

#~ msgid ""
#~ "This returns the architecture of the inspected operating system.  The "
#~ "possible return values are listed under C<guestfs_file_architecture>."
#~ msgstr ""
#~ "これは検査したオペレーティングシステムのアーキテクチャーを返します。とりう"
#~ "る値は C<guestfs_file_architecture> の下に一覧化されています。"

#~ msgid "guestfs_inspect_get_distro"
#~ msgstr "guestfs_inspect_get_distro"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_distro (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_distro (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_get_drive_mappings"
#~ msgstr "guestfs_inspect_get_drive_mappings"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also "
#~ "C<guestfs_inspect_get_mountpoints>, C<guestfs_inspect_get_filesystems>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を確認してください。合わせて "
#~ "C<guestfs_inspect_get_mountpoints>, C<guestfs_inspect_get_filesystems> を"
#~ "参照してください。"

#~ msgid "(Added in 1.9.17)"
#~ msgstr "(1.9.17 において追加)"

#~ msgid "guestfs_inspect_get_filesystems"
#~ msgstr "guestfs_inspect_get_filesystems"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_filesystems (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_filesystems (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also "
#~ "C<guestfs_inspect_get_mountpoints>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を読んでください。  "
#~ "C<guestfs_inspect_get_mountpoints> 参照。"

#~ msgid "guestfs_inspect_get_format"
#~ msgstr "guestfs_inspect_get_format"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_format (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_format (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"

#~ msgid "(Added in 1.9.4)"
#~ msgstr "(1.9.4 において追加)"

#~ msgid "guestfs_inspect_get_hostname"
#~ msgstr "guestfs_inspect_get_hostname"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_hostname (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_hostname (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"

#~ msgid "(Added in 1.7.9)"
#~ msgstr "(1.7.9 において追加)"

#~ msgid "guestfs_inspect_get_icon"
#~ msgstr "guestfs_inspect_get_icon"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon (guestfs_h *g,\n"
#~ "                           const char *root,\n"
#~ "                           size_t *size_r,\n"
#~ "                           ...);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon (guestfs_h *g,\n"
#~ "                           const char *root,\n"
#~ "                           size_t *size_r,\n"
#~ "                           ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
#~ " GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
#~ " GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
#~ "\n"

#~ msgid "(Added in 1.11.12)"
#~ msgstr "(1.11.12 において追加)"

#~ msgid "guestfs_inspect_get_icon_va"
#~ msgstr "guestfs_inspect_get_icon_va"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_va (guestfs_h *g,\n"
#~ "                              const char *root,\n"
#~ "                              size_t *size_r,\n"
#~ "                              va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_va (guestfs_h *g,\n"
#~ "                              const char *root,\n"
#~ "                              size_t *size_r,\n"
#~ "                              va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_inspect_get_icon>."
#~ msgstr "これは L</guestfs_inspect_get_icon> の \"va_list variant\" です。"

#~ msgid "guestfs_inspect_get_icon_argv"
#~ msgstr "guestfs_inspect_get_icon_argv"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
#~ "                                const char *root,\n"
#~ "                                size_t *size_r,\n"
#~ "                                const struct guestfs_inspect_get_icon_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
#~ "                                const char *root,\n"
#~ "                                size_t *size_r,\n"
#~ "                                const struct guestfs_inspect_get_icon_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_inspect_get_icon>."
#~ msgstr "これは L</guestfs_inspect_get_icon> の \"argv variant\" です。"

#~ msgid "guestfs_inspect_get_major_version"
#~ msgstr "guestfs_inspect_get_major_version"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_get_major_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_get_major_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_get_minor_version"
#~ msgstr "guestfs_inspect_get_minor_version"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_get_minor_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_get_minor_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also "
#~ "C<guestfs_inspect_get_major_version>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を読んでください。  "
#~ "C<guestfs_inspect_get_major_version> 参照。"

#~ msgid "guestfs_inspect_get_mountpoints"
#~ msgstr "guestfs_inspect_get_mountpoints"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also "
#~ "C<guestfs_inspect_get_filesystems>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を読んでください。  "
#~ "C<guestfs_inspect_get_filesystems> 参照。"

#~ msgid "guestfs_inspect_get_package_format"
#~ msgstr "guestfs_inspect_get_package_format"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_format (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_format (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"

#~ msgid "(Added in 1.7.5)"
#~ msgstr "(1.7.5 において追加)"

#~ msgid "guestfs_inspect_get_package_management"
#~ msgstr "guestfs_inspect_get_package_management"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_management (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_management (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_get_product_name"
#~ msgstr "guestfs_inspect_get_product_name"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_name (guestfs_h *g,\n"
#~ "                                   const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_name (guestfs_h *g,\n"
#~ "                                   const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_get_product_variant"
#~ msgstr "guestfs_inspect_get_product_variant"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_variant (guestfs_h *g,\n"
#~ "                                      const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_variant (guestfs_h *g,\n"
#~ "                                      const char *root);\n"
#~ "\n"

#~ msgid ""
#~ "Please read L<guestfs(3)/INSPECTION> for more details.  See also "
#~ "C<guestfs_inspect_get_product_name>, C<guestfs_inspect_get_major_version>."
#~ msgstr ""
#~ "詳細は L<guestfs(3)/INSPECTION> を参照してください。 "
#~ "C<guestfs_inspect_get_product_name>, C<guestfs_inspect_get_major_version> "
#~ "も合わせて参照してください。"

#~ msgid "(Added in 1.9.13)"
#~ msgstr "(1.9.13 において追加)"

#~ msgid "guestfs_inspect_get_roots"
#~ msgstr "guestfs_inspect_get_roots"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_roots (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_roots (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.7.3)"
#~ msgstr "(1.7.3 において追加)"

#~ msgid "guestfs_inspect_get_type"
#~ msgstr "guestfs_inspect_get_type"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_type (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_type (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_get_windows_current_control_set"
#~ msgstr "guestfs_inspect_get_windows_current_control_set"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
#~ "                                                  const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
#~ "                                                  const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_get_windows_systemroot"
#~ msgstr "guestfs_inspect_get_windows_systemroot"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"

#~ msgid "(Added in 1.5.25)"
#~ msgstr "(1.5.25 において追加)"

#~ msgid "guestfs_inspect_is_live"
#~ msgstr "guestfs_inspect_is_live"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_is_live (guestfs_h *g,\n"
#~ "                          const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_is_live (guestfs_h *g,\n"
#~ "                          const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_is_multipart"
#~ msgstr "guestfs_inspect_is_multipart"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_is_multipart (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_is_multipart (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_is_netinst"
#~ msgstr "guestfs_inspect_is_netinst"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_is_netinst (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_is_netinst (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"

#~ msgid "guestfs_inspect_list_applications"
#~ msgstr "guestfs_inspect_list_applications"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application_list *\n"
#~ " guestfs_inspect_list_applications (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_application_list *\n"
#~ " guestfs_inspect_list_applications (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"

#~ msgid "(Added in 1.7.8)"
#~ msgstr "(1.7.8 において追加)"

#~ msgid "guestfs_inspect_list_applications2"
#~ msgstr "guestfs_inspect_list_applications2"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application2_list *\n"
#~ " guestfs_inspect_list_applications2 (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_application2_list *\n"
#~ " guestfs_inspect_list_applications2 (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"

#~ msgid "(Added in 1.19.56)"
#~ msgstr "(1.19.56 において追加)"

#~ msgid "guestfs_inspect_os"
#~ msgstr "guestfs_inspect_os"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_os (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_os (guestfs_h *g);\n"
#~ "\n"

#~ msgid "See also C<guestfs_list_filesystems>."
#~ msgstr "C<guestfs_list_filesystems> 参照。"

#~ msgid "guestfs_is_blockdev"
#~ msgstr "guestfs_is_blockdev"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_blockdev (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_blockdev (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"

#~ msgid "(Added in 1.5.10)"
#~ msgstr "(1.5.10 において追加)"

#~ msgid "See also C<guestfs_stat>."
#~ msgstr "C<guestfs_stat> 参照。"

#~ msgid "guestfs_is_busy"
#~ msgstr "guestfs_is_busy"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_busy (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_busy (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_is_chardev"
#~ msgstr "guestfs_is_chardev"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_chardev (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_chardev (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#~ msgid "guestfs_is_config"
#~ msgstr "guestfs_is_config"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_config (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_config (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_is_dir"
#~ msgstr "guestfs_is_dir"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_dir (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_dir (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_is_fifo"
#~ msgstr "guestfs_is_fifo"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_fifo (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_fifo (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_is_file"
#~ msgstr "guestfs_is_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_file (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_file (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_is_launching"
#~ msgstr "guestfs_is_launching"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_launching (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_launching (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_is_lv"
#~ msgstr "guestfs_is_lv"

#~ msgid "guestfs_is_ready"
#~ msgstr "guestfs_is_ready"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_ready (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_ready (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_is_socket"
#~ msgstr "guestfs_is_socket"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_socket (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_socket (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"

#~ msgid "guestfs_is_symlink"
#~ msgstr "guestfs_is_symlink"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_symlink (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_symlink (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#~ msgid "guestfs_is_whole_device"
#~ msgstr "guestfs_is_whole_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_whole_device (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_whole_device (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.21.9)"
#~ msgstr "(1.21.9 において追加)"

#~ msgid "guestfs_is_zero"
#~ msgstr "guestfs_is_zero"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_zero (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_zero (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "(Added in 1.11.8)"
#~ msgstr "(1.11.8 において追加)"

#~ msgid "guestfs_is_zero_device"
#~ msgstr "guestfs_is_zero_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_zero_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_zero_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid "guestfs_isoinfo"
#~ msgstr "guestfs_isoinfo"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo (guestfs_h *g,\n"
#~ "                  const char *isofile);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo (guestfs_h *g,\n"
#~ "                  const char *isofile);\n"
#~ "\n"

#~ msgid "(Added in 1.17.19)"
#~ msgstr "(1.17.19 において追加)"

#~ msgid "guestfs_isoinfo_device"
#~ msgstr "guestfs_isoinfo_device"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid "guestfs_kill_subprocess"
#~ msgstr "guestfs_kill_subprocess"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_kill_subprocess (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_kill_subprocess (guestfs_h *g);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_shutdown> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_shutdown> を使用してください。"

#~ msgid "Do not call this.  See: C<guestfs_shutdown> instead."
#~ msgstr ""
#~ "これを呼び出してはいけません。代わりに C<guestfs_shutdown> を参照してくだ"
#~ "さい。"

#~ msgid "guestfs_launch"
#~ msgstr "guestfs_launch"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_launch (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_launch (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_lchown"
#~ msgstr "guestfs_lchown"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lchown (guestfs_h *g,\n"
#~ "                 int owner,\n"
#~ "                 int group,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lchown (guestfs_h *g,\n"
#~ "                 int owner,\n"
#~ "                 int group,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_ldmtool_create_all"
#~ msgstr "guestfs_ldmtool_create_all"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ldmtool_create_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ldmtool_create_all (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.20.0)"
#~ msgstr "(1.20.0 において追加)"

#~ msgid "guestfs_ldmtool_diskgroup_disks"
#~ msgstr "guestfs_ldmtool_diskgroup_disks"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_disks (guestfs_h *g,\n"
#~ "                                  const char *diskgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_disks (guestfs_h *g,\n"
#~ "                                  const char *diskgroup);\n"
#~ "\n"

#~ msgid "guestfs_ldmtool_diskgroup_name"
#~ msgstr "guestfs_ldmtool_diskgroup_name"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_ldmtool_diskgroup_name (guestfs_h *g,\n"
#~ "                                 const char *diskgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_ldmtool_diskgroup_name (guestfs_h *g,\n"
#~ "                                 const char *diskgroup);\n"
#~ "\n"

#~ msgid "guestfs_ldmtool_diskgroup_volumes"
#~ msgstr "guestfs_ldmtool_diskgroup_volumes"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_volumes (guestfs_h *g,\n"
#~ "                                    const char *diskgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_volumes (guestfs_h *g,\n"
#~ "                                    const char *diskgroup);\n"
#~ "\n"

#~ msgid "guestfs_lgetxattr"
#~ msgstr "guestfs_lgetxattr"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_lgetxattr (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    const char *name,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_lgetxattr (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    const char *name,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_lgetxattrs>, C<guestfs_getxattr>, L<attr(5)>."
#~ msgstr "関連項目: C<guestfs_lgetxattrs>, C<guestfs_getxattr>, L<attr(5)>"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lgetxattrs (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lgetxattrs (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#~ msgid "guestfs_list_9p"
#~ msgstr "guestfs_list_9p"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_9p (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_9p (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_list_devices"
#~ msgstr "guestfs_list_devices"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_devices (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_list_disk_labels"
#~ msgstr "guestfs_list_disk_labels"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_disk_labels (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_disk_labels (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.19.49)"
#~ msgstr "(1.19.49 において追加)"

#~ msgid "guestfs_list_dm_devices"
#~ msgstr "guestfs_list_dm_devices"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_dm_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_dm_devices (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.11.15)"
#~ msgstr "(1.11.15 において追加)"

#~ msgid "guestfs_list_filesystems"
#~ msgstr "guestfs_list_filesystems"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_filesystems (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_filesystems (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.5.15)"
#~ msgstr "(1.5.15 において追加)"

#~ msgid "guestfs_list_ldm_partitions"
#~ msgstr "guestfs_list_ldm_partitions"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_ldm_partitions (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_ldm_partitions (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_list_ldm_volumes"
#~ msgstr "guestfs_list_ldm_volumes"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_ldm_volumes (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_ldm_volumes (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_list_md_devices"
#~ msgstr "guestfs_list_md_devices"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_md_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_md_devices (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.15.4)"
#~ msgstr "(1.15.4 において追加)"

#~ msgid "guestfs_list_partitions"
#~ msgstr "guestfs_list_partitions"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_partitions (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_partitions (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_ll"
#~ msgstr "guestfs_ll"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_ll (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_ll (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"

#~ msgid "guestfs_llz"
#~ msgstr "guestfs_llz"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_llz (guestfs_h *g,\n"
#~ "              const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_llz (guestfs_h *g,\n"
#~ "              const char *directory);\n"
#~ "\n"

#~ msgid "(Added in 1.17.6)"
#~ msgstr "(1.17.6 において追加)"

#~ msgid "guestfs_ln"
#~ msgstr "guestfs_ln"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln (guestfs_h *g,\n"
#~ "             const char *target,\n"
#~ "             const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln (guestfs_h *g,\n"
#~ "             const char *target,\n"
#~ "             const char *linkname);\n"
#~ "\n"

#~ msgid "guestfs_ln_f"
#~ msgstr "guestfs_ln_f"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln_f (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln_f (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"

#~ msgid "guestfs_ln_s"
#~ msgstr "guestfs_ln_s"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln_s (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln_s (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"

#~ msgid "guestfs_ln_sf"
#~ msgstr "guestfs_ln_sf"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln_sf (guestfs_h *g,\n"
#~ "                const char *target,\n"
#~ "                const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln_sf (guestfs_h *g,\n"
#~ "                const char *target,\n"
#~ "                const char *linkname);\n"
#~ "\n"

#~ msgid "guestfs_lremovexattr"
#~ msgstr "guestfs_lremovexattr"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lremovexattr (guestfs_h *g,\n"
#~ "                       const char *xattr,\n"
#~ "                       const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lremovexattr (guestfs_h *g,\n"
#~ "                       const char *xattr,\n"
#~ "                       const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "This is the same as C<guestfs_removexattr>, but if C<path> is a symbolic "
#~ "link, then it removes an extended attribute of the link itself."
#~ msgstr ""
#~ "これは C<guestfs_removexattr> と同じです。ただし、C<path> がシンボリックリ"
#~ "ンクならば、リンク自身の拡張属性を削除します。"

#~ msgid "guestfs_ls"
#~ msgstr "guestfs_ls"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ls (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ls (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"

#~ msgid "guestfs_ls0"
#~ msgstr "guestfs_ls0"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ls0 (guestfs_h *g,\n"
#~ "              const char *dir,\n"
#~ "              const char *filenames);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ls0 (guestfs_h *g,\n"
#~ "              const char *dir,\n"
#~ "              const char *filenames);\n"
#~ "\n"

#~ msgid "guestfs_lsetxattr"
#~ msgstr "guestfs_lsetxattr"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lsetxattr (guestfs_h *g,\n"
#~ "                    const char *xattr,\n"
#~ "                    const char *val,\n"
#~ "                    int vallen,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lsetxattr (guestfs_h *g,\n"
#~ "                    const char *xattr,\n"
#~ "                    const char *val,\n"
#~ "                    int vallen,\n"
#~ "                    const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "This is the same as C<guestfs_setxattr>, but if C<path> is a symbolic "
#~ "link, then it sets an extended attribute of the link itself."
#~ msgstr ""
#~ "これは C<guestfs_setxattr> と同じですが、C<path> がシンボリックリンクで"
#~ "す。そして、リンク自身の拡張属性を設定します。"

#~ msgid "guestfs_lstat"
#~ msgstr "guestfs_lstat"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_lstat (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_lstat (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "This is the same as C<guestfs_stat> except that if C<path> is a symbolic "
#~ "link, then the link is stat-ed, not the file it refers to."
#~ msgstr ""
#~ "これは、C<path> がシンボリックリンクであることを除き、C<guestfs_stat> と同"
#~ "じです。そしてリンクは、参照しているファイルではなく、stat-ed です。"

#~ msgid ""
#~ "This function returns a C<struct guestfs_stat *>, or NULL if there was an "
#~ "error.  I<The caller must call C<guestfs_free_stat> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_stat *> を返します。エラーがあれば NULL で"
#~ "す。 I<呼び出し元は使用後に C<guestfs_free_stat> を呼び出す必要があります"
#~ ">。"

#~ msgid "guestfs_lstatlist"
#~ msgstr "guestfs_lstatlist"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat_list *\n"
#~ " guestfs_lstatlist (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    char *const *names);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_stat_list *\n"
#~ " guestfs_lstatlist (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    char *const *names);\n"
#~ "\n"

#~ msgid "guestfs_luks_add_key"
#~ msgstr "guestfs_luks_add_key"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_add_key (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *newkey,\n"
#~ "                       int keyslot);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_add_key (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *newkey,\n"
#~ "                       int keyslot);\n"
#~ "\n"

#~ msgid "(Added in 1.5.2)"
#~ msgstr "(1.5.2 において追加)"

#~ msgid "guestfs_luks_close"
#~ msgstr "guestfs_luks_close"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_close (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_close (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.5.1)"
#~ msgstr "(1.5.1 において追加)"

#~ msgid "guestfs_luks_format"
#~ msgstr "guestfs_luks_format"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_format (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *key,\n"
#~ "                      int keyslot);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_format (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *key,\n"
#~ "                      int keyslot);\n"
#~ "\n"

#~ msgid "guestfs_luks_format_cipher"
#~ msgstr "guestfs_luks_format_cipher"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_format_cipher (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *key,\n"
#~ "                             int keyslot,\n"
#~ "                             const char *cipher);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_format_cipher (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *key,\n"
#~ "                             int keyslot,\n"
#~ "                             const char *cipher);\n"
#~ "\n"

#~ msgid "guestfs_luks_kill_slot"
#~ msgstr "guestfs_luks_kill_slot"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_kill_slot (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const char *key,\n"
#~ "                         int keyslot);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_kill_slot (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const char *key,\n"
#~ "                         int keyslot);\n"
#~ "\n"

#~ msgid "guestfs_luks_open"
#~ msgstr "guestfs_luks_open"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_open (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *key,\n"
#~ "                    const char *mapname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_open (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *key,\n"
#~ "                    const char *mapname);\n"
#~ "\n"

#~ msgid "Use C<guestfs_list_dm_devices> to list all device mapper devices."
#~ msgstr ""
#~ "すべてのデバイスマッパーデバイスを一覧表示するには "
#~ "C<guestfs_list_dm_devices> を使用します。"

#~ msgid "guestfs_luks_open_ro"
#~ msgstr "guestfs_luks_open_ro"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_open_ro (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *mapname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_open_ro (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *mapname);\n"
#~ "\n"

#~ msgid ""
#~ "This is the same as C<guestfs_luks_open> except that a read-only mapping "
#~ "is created."
#~ msgstr ""
#~ "これは、読み込み専用のマッピングが作成されることを除き、"
#~ "C<guestfs_luks_open> と同じです。"

#~ msgid "guestfs_lvcreate"
#~ msgstr "guestfs_lvcreate"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvcreate (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *volgroup,\n"
#~ "                   int mbytes);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvcreate (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *volgroup,\n"
#~ "                   int mbytes);\n"
#~ "\n"

#~ msgid "guestfs_lvcreate_free"
#~ msgstr "guestfs_lvcreate_free"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvcreate_free (guestfs_h *g,\n"
#~ "                        const char *logvol,\n"
#~ "                        const char *volgroup,\n"
#~ "                        int percent);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvcreate_free (guestfs_h *g,\n"
#~ "                        const char *logvol,\n"
#~ "                        const char *volgroup,\n"
#~ "                        int percent);\n"
#~ "\n"

#~ msgid "(Added in 1.17.18)"
#~ msgstr "(1.17.18 において追加)"

#~ msgid "guestfs_lvm_canonical_lv_name"
#~ msgstr "guestfs_lvm_canonical_lv_name"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
#~ "                                const char *lvname);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
#~ "                                const char *lvname);\n"
#~ "\n"

#~ msgid "See also C<guestfs_is_lv>, C<guestfs_canonical_device_name>."
#~ msgstr ""
#~ "C<guestfs_is_lv>, C<guestfs_canonical_device_name> も参照してください。"

#~ msgid "(Added in 1.5.24)"
#~ msgstr "(1.5.24 において追加)"

#~ msgid "guestfs_lvm_clear_filter"
#~ msgstr "guestfs_lvm_clear_filter"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvm_clear_filter (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvm_clear_filter (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_lvm_remove_all"
#~ msgstr "guestfs_lvm_remove_all"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvm_remove_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvm_remove_all (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_lvm_set_filter"
#~ msgstr "guestfs_lvm_set_filter"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvm_set_filter (guestfs_h *g,\n"
#~ "                         char *const *devices);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvm_set_filter (guestfs_h *g,\n"
#~ "                         char *const *devices);\n"
#~ "\n"

#~ msgid "guestfs_lvremove"
#~ msgstr "guestfs_lvremove"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.0.13)"
#~ msgstr "(1.0.13 において追加)"

#~ msgid "guestfs_lvrename"
#~ msgstr "guestfs_lvrename"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvrename (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *newlogvol);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvrename (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *newlogvol);\n"
#~ "\n"

#~ msgid "(Added in 1.0.83)"
#~ msgstr "(1.0.83 において追加)"

#~ msgid "guestfs_lvresize"
#~ msgstr "guestfs_lvresize"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvresize (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int mbytes);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvresize (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int mbytes);\n"
#~ "\n"

#~ msgid "guestfs_lvresize_free"
#~ msgstr "guestfs_lvresize_free"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvresize_free (guestfs_h *g,\n"
#~ "                        const char *lv,\n"
#~ "                        int percent);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvresize_free (guestfs_h *g,\n"
#~ "                        const char *lv,\n"
#~ "                        int percent);\n"
#~ "\n"

#~ msgid "(Added in 1.3.3)"
#~ msgstr "(1.3.3 において追加)"

#~ msgid "guestfs_lvs"
#~ msgstr "guestfs_lvs"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_lvs (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_lvs (guestfs_h *g);\n"
#~ "\n"

#~ msgid "See also C<guestfs_lvs_full>, C<guestfs_list_filesystems>."
#~ msgstr "C<guestfs_lvs_full>, C<guestfs_list_filesystems> 参照。"

#~ msgid "guestfs_lvs_full"
#~ msgstr "guestfs_lvs_full"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_lv_list *\n"
#~ " guestfs_lvs_full (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_lvm_lv_list *\n"
#~ " guestfs_lvs_full (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_lvuuid"
#~ msgstr "guestfs_lvuuid"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_lvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_lvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#~ msgid "guestfs_lxattrlist"
#~ msgstr "guestfs_lxattrlist"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lxattrlist (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     char *const *names);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lxattrlist (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     char *const *names);\n"
#~ "\n"

#~ msgid "guestfs_max_disks"
#~ msgstr "guestfs_max_disks"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_max_disks (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_max_disks (guestfs_h *g);\n"
#~ "\n"

#~ msgid ""
#~ "Return the maximum number of disks that may be added to a handle (eg. by "
#~ "C<guestfs_add_drive_opts> and similar calls)."
#~ msgstr ""
#~ "ハンドルに追加できるディスクの最大数を返します (例: "
#~ "C<guestfs_add_drive_opts> および同様の呼び出し)。"

#~ msgid "guestfs_md_create"
#~ msgstr "guestfs_md_create"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_create (guestfs_h *g,\n"
#~ "                    const char *name,\n"
#~ "                    char *const *devices,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_create (guestfs_h *g,\n"
#~ "                    const char *name,\n"
#~ "                    char *const *devices,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
#~ " GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
#~ " GUESTFS_MD_CREATE_SPARE, int spare,\n"
#~ " GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
#~ " GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
#~ " GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
#~ " GUESTFS_MD_CREATE_SPARE, int spare,\n"
#~ " GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
#~ " GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
#~ "\n"

#~ msgid "(Added in 1.15.6)"
#~ msgstr "(1.15.6 において追加)"

#~ msgid "guestfs_md_create_va"
#~ msgstr "guestfs_md_create_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_create_va (guestfs_h *g,\n"
#~ "                       const char *name,\n"
#~ "                       char *const *devices,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_create_va (guestfs_h *g,\n"
#~ "                       const char *name,\n"
#~ "                       char *const *devices,\n"
#~ "                       va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_md_create>."
#~ msgstr "これは L</guestfs_md_create> の \"va_list variant\" です。"

#~ msgid "guestfs_md_create_argv"
#~ msgstr "guestfs_md_create_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_create_argv (guestfs_h *g,\n"
#~ "                         const char *name,\n"
#~ "                         char *const *devices,\n"
#~ "                         const struct guestfs_md_create_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_create_argv (guestfs_h *g,\n"
#~ "                         const char *name,\n"
#~ "                         char *const *devices,\n"
#~ "                         const struct guestfs_md_create_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_md_create>."
#~ msgstr "これは L</guestfs_md_create> の \"argv variant\" です。"

#~ msgid "guestfs_md_detail"
#~ msgstr "guestfs_md_detail"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_md_detail (guestfs_h *g,\n"
#~ "                    const char *md);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_md_detail (guestfs_h *g,\n"
#~ "                    const char *md);\n"
#~ "\n"

#~ msgid "guestfs_md_stat"
#~ msgstr "guestfs_md_stat"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_mdstat_list *\n"
#~ " guestfs_md_stat (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_mdstat_list *\n"
#~ " guestfs_md_stat (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"

#~ msgid ""
#~ "To get a list of software RAID devices, call C<guestfs_list_md_devices>."
#~ msgstr ""
#~ "ソフトウェア RAID デバイスの一覧を取得するには、"
#~ "C<guestfs_list_md_devices> を呼び出します。"

#~ msgid "(Added in 1.17.21)"
#~ msgstr "(1.17.21 において追加)"

#~ msgid "guestfs_md_stop"
#~ msgstr "guestfs_md_stop"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_stop (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_stop (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"

#~ msgid "guestfs_mkdir"
#~ msgstr "guestfs_mkdir"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mkdir_mode"
#~ msgstr "guestfs_mkdir_mode"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkdir_mode (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     int mode);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkdir_mode (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     int mode);\n"
#~ "\n"

#~ msgid "See also C<guestfs_mkdir>, C<guestfs_umask>"
#~ msgstr "C<guestfs_mkdir>, C<guestfs_umask> 参照。"

#~ msgid "guestfs_mkdir_p"
#~ msgstr "guestfs_mkdir_p"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkdir_p (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkdir_p (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mkdtemp"
#~ msgstr "guestfs_mkdtemp"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mkdtemp (guestfs_h *g,\n"
#~ "                  const char *tmpl);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mkdtemp (guestfs_h *g,\n"
#~ "                  const char *tmpl);\n"
#~ "\n"

#~ msgid "guestfs_mke2fs"
#~ msgstr "guestfs_mke2fs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKE2FS_BLOCKSCOUNT, int64_t blockscount,\n"
#~ " GUESTFS_MKE2FS_BLOCKSIZE, int64_t blocksize,\n"
#~ " GUESTFS_MKE2FS_FRAGSIZE, int64_t fragsize,\n"
#~ " GUESTFS_MKE2FS_BLOCKSPERGROUP, int64_t blockspergroup,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFGROUPS, int64_t numberofgroups,\n"
#~ " GUESTFS_MKE2FS_BYTESPERINODE, int64_t bytesperinode,\n"
#~ " GUESTFS_MKE2FS_INODESIZE, int64_t inodesize,\n"
#~ " GUESTFS_MKE2FS_JOURNALSIZE, int64_t journalsize,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFINODES, int64_t numberofinodes,\n"
#~ " GUESTFS_MKE2FS_STRIDESIZE, int64_t stridesize,\n"
#~ " GUESTFS_MKE2FS_STRIPEWIDTH, int64_t stripewidth,\n"
#~ " GUESTFS_MKE2FS_MAXONLINERESIZE, int64_t maxonlineresize,\n"
#~ " GUESTFS_MKE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_MKE2FS_MMPUPDATEINTERVAL, int mmpupdateinterval,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEVICE, const char *journaldevice,\n"
#~ " GUESTFS_MKE2FS_LABEL, const char *label,\n"
#~ " GUESTFS_MKE2FS_LASTMOUNTEDDIR, const char *lastmounteddir,\n"
#~ " GUESTFS_MKE2FS_CREATOROS, const char *creatoros,\n"
#~ " GUESTFS_MKE2FS_FSTYPE, const char *fstype,\n"
#~ " GUESTFS_MKE2FS_USAGETYPE, const char *usagetype,\n"
#~ " GUESTFS_MKE2FS_UUID, const char *uuid,\n"
#~ " GUESTFS_MKE2FS_FORCECREATE, int forcecreate,\n"
#~ " GUESTFS_MKE2FS_WRITESBANDGROUPONLY, int writesbandgrouponly,\n"
#~ " GUESTFS_MKE2FS_LAZYITABLEINIT, int lazyitableinit,\n"
#~ " GUESTFS_MKE2FS_LAZYJOURNALINIT, int lazyjournalinit,\n"
#~ " GUESTFS_MKE2FS_TESTFS, int testfs,\n"
#~ " GUESTFS_MKE2FS_DISCARD, int discard,\n"
#~ " GUESTFS_MKE2FS_QUOTATYPE, int quotatype,\n"
#~ " GUESTFS_MKE2FS_EXTENT, int extent,\n"
#~ " GUESTFS_MKE2FS_FILETYPE, int filetype,\n"
#~ " GUESTFS_MKE2FS_FLEXBG, int flexbg,\n"
#~ " GUESTFS_MKE2FS_HASJOURNAL, int hasjournal,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEV, int journaldev,\n"
#~ " GUESTFS_MKE2FS_LARGEFILE, int largefile,\n"
#~ " GUESTFS_MKE2FS_QUOTA, int quota,\n"
#~ " GUESTFS_MKE2FS_RESIZEINODE, int resizeinode,\n"
#~ " GUESTFS_MKE2FS_SPARSESUPER, int sparsesuper,\n"
#~ " GUESTFS_MKE2FS_UNINITBG, int uninitbg,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKE2FS_BLOCKSCOUNT, int64_t blockscount,\n"
#~ " GUESTFS_MKE2FS_BLOCKSIZE, int64_t blocksize,\n"
#~ " GUESTFS_MKE2FS_FRAGSIZE, int64_t fragsize,\n"
#~ " GUESTFS_MKE2FS_BLOCKSPERGROUP, int64_t blockspergroup,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFGROUPS, int64_t numberofgroups,\n"
#~ " GUESTFS_MKE2FS_BYTESPERINODE, int64_t bytesperinode,\n"
#~ " GUESTFS_MKE2FS_INODESIZE, int64_t inodesize,\n"
#~ " GUESTFS_MKE2FS_JOURNALSIZE, int64_t journalsize,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFINODES, int64_t numberofinodes,\n"
#~ " GUESTFS_MKE2FS_STRIDESIZE, int64_t stridesize,\n"
#~ " GUESTFS_MKE2FS_STRIPEWIDTH, int64_t stripewidth,\n"
#~ " GUESTFS_MKE2FS_MAXONLINERESIZE, int64_t maxonlineresize,\n"
#~ " GUESTFS_MKE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_MKE2FS_MMPUPDATEINTERVAL, int mmpupdateinterval,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEVICE, const char *journaldevice,\n"
#~ " GUESTFS_MKE2FS_LABEL, const char *label,\n"
#~ " GUESTFS_MKE2FS_LASTMOUNTEDDIR, const char *lastmounteddir,\n"
#~ " GUESTFS_MKE2FS_CREATOROS, const char *creatoros,\n"
#~ " GUESTFS_MKE2FS_FSTYPE, const char *fstype,\n"
#~ " GUESTFS_MKE2FS_USAGETYPE, const char *usagetype,\n"
#~ " GUESTFS_MKE2FS_UUID, const char *uuid,\n"
#~ " GUESTFS_MKE2FS_FORCECREATE, int forcecreate,\n"
#~ " GUESTFS_MKE2FS_WRITESBANDGROUPONLY, int writesbandgrouponly,\n"
#~ " GUESTFS_MKE2FS_LAZYITABLEINIT, int lazyitableinit,\n"
#~ " GUESTFS_MKE2FS_LAZYJOURNALINIT, int lazyjournalinit,\n"
#~ " GUESTFS_MKE2FS_TESTFS, int testfs,\n"
#~ " GUESTFS_MKE2FS_DISCARD, int discard,\n"
#~ " GUESTFS_MKE2FS_QUOTATYPE, int quotatype,\n"
#~ " GUESTFS_MKE2FS_EXTENT, int extent,\n"
#~ " GUESTFS_MKE2FS_FILETYPE, int filetype,\n"
#~ " GUESTFS_MKE2FS_FLEXBG, int flexbg,\n"
#~ " GUESTFS_MKE2FS_HASJOURNAL, int hasjournal,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEV, int journaldev,\n"
#~ " GUESTFS_MKE2FS_LARGEFILE, int largefile,\n"
#~ " GUESTFS_MKE2FS_QUOTA, int quota,\n"
#~ " GUESTFS_MKE2FS_RESIZEINODE, int resizeinode,\n"
#~ " GUESTFS_MKE2FS_SPARSESUPER, int sparsesuper,\n"
#~ " GUESTFS_MKE2FS_UNINITBG, int uninitbg,\n"
#~ "\n"

#~ msgid "(Added in 1.19.44)"
#~ msgstr "(1.19.44 において追加)"

#~ msgid "guestfs_mke2fs_va"
#~ msgstr "guestfs_mke2fs_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mke2fs>."
#~ msgstr "これは L</guestfs_mke2fs> の \"va_list variant\" です。"

#~ msgid "guestfs_mke2fs_J"
#~ msgstr "guestfs_mke2fs_J"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_J (guestfs_h *g,\n"
#~ "                   const char *fstype,\n"
#~ "                   int blocksize,\n"
#~ "                   const char *device,\n"
#~ "                   const char *journal);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_J (guestfs_h *g,\n"
#~ "                   const char *fstype,\n"
#~ "                   int blocksize,\n"
#~ "                   const char *device,\n"
#~ "                   const char *journal);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_mke2fs> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_mke2fs> を使用してください。"

#~ msgid "See also C<guestfs_mke2journal>."
#~ msgstr "C<guestfs_mke2journal> 参照。"

#~ msgid "(Added in 1.0.68)"
#~ msgstr "(1.0.68 において追加)"

#~ msgid "guestfs_mke2fs_JL"
#~ msgstr "guestfs_mke2fs_JL"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_JL (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_JL (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *label);\n"
#~ "\n"

#~ msgid "See also C<guestfs_mke2journal_L>."
#~ msgstr "C<guestfs_mke2journal_L> 参照。"

#~ msgid "guestfs_mke2fs_JU"
#~ msgstr "guestfs_mke2fs_JU"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_JU (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_JU (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *uuid);\n"
#~ "\n"

#~ msgid "See also C<guestfs_mke2journal_U>."
#~ msgstr "C<guestfs_mke2journal_U> 参照。"

#~ msgid "guestfs_mke2journal"
#~ msgstr "guestfs_mke2journal"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2journal (guestfs_h *g,\n"
#~ "                      int blocksize,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2journal (guestfs_h *g,\n"
#~ "                      int blocksize,\n"
#~ "                      const char *device);\n"
#~ "\n"

#~ msgid "guestfs_mke2journal_L"
#~ msgstr "guestfs_mke2journal_L"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2journal_L (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *label,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2journal_L (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *label,\n"
#~ "                        const char *device);\n"
#~ "\n"

#~ msgid "guestfs_mke2journal_U"
#~ msgstr "guestfs_mke2journal_U"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2journal_U (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *uuid,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2journal_U (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *uuid,\n"
#~ "                        const char *device);\n"
#~ "\n"

#~ msgid "guestfs_mkfifo"
#~ msgstr "guestfs_mkfifo"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfifo (guestfs_h *g,\n"
#~ "                 int mode,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfifo (guestfs_h *g,\n"
#~ "                 int mode,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mkfs"
#~ msgstr "guestfs_mkfs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"

#~ msgid "guestfs_mkfs_opts"
#~ msgstr "guestfs_mkfs_opts"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_opts (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_opts (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"

#, fuzzy, no-wrap
#~ msgid ""
#~ " GUESTFS_MKFS_OPTS_BLOCKSIZE, int blocksize,\n"
#~ " GUESTFS_MKFS_OPTS_FEATURES, const char *features,\n"
#~ " GUESTFS_MKFS_OPTS_INODE, int inode,\n"
#~ " GUESTFS_MKFS_OPTS_SECTORSIZE, int sectorsize,\n"
#~ " GUESTFS_MKFS_OPTS_LABEL, const char *label,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKFS_OPTS_BLOCKSIZE, int blocksize,\n"
#~ " GUESTFS_MKFS_OPTS_FEATURES, const char *features,\n"
#~ " GUESTFS_MKFS_OPTS_INODE, int inode,\n"
#~ " GUESTFS_MKFS_OPTS_SECTORSIZE, int sectorsize,\n"
#~ "\n"

#~ msgid "guestfs_mkfs_opts_va"
#~ msgstr "guestfs_mkfs_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_opts_va (guestfs_h *g,\n"
#~ "                       const char *fstype,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_opts_va (guestfs_h *g,\n"
#~ "                       const char *fstype,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mkfs_opts>."
#~ msgstr "これは L</guestfs_mkfs_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_mkfs_opts_argv"
#~ msgstr "guestfs_mkfs_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_opts_argv (guestfs_h *g,\n"
#~ "                         const char *fstype,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_mkfs_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_opts_argv (guestfs_h *g,\n"
#~ "                         const char *fstype,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_mkfs_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_mkfs_opts>."
#~ msgstr "これは L</guestfs_mkfs_opts> の \"argv variant\" です。"

#~ msgid "guestfs_mkfs_b"
#~ msgstr "guestfs_mkfs_b"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_b (guestfs_h *g,\n"
#~ "                 const char *fstype,\n"
#~ "                 int blocksize,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_b (guestfs_h *g,\n"
#~ "                 const char *fstype,\n"
#~ "                 int blocksize,\n"
#~ "                 const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_mkfs> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</guestfs_mkfs> "
#~ "を使用してください。"

#~ msgid "guestfs_mkfs_btrfs"
#~ msgstr "guestfs_mkfs_btrfs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs (guestfs_h *g,\n"
#~ "                     char *const *devices,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs (guestfs_h *g,\n"
#~ "                     char *const *devices,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
#~ " GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
#~ " GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
#~ " GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
#~ " GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
#~ " GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
#~ " GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
#~ " GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
#~ " GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
#~ " GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
#~ " GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
#~ " GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
#~ " GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
#~ " GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
#~ " GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
#~ "\n"

#~ msgid "To create general filesystems, use C<guestfs_mkfs>."
#~ msgstr ""
#~ "一般的なファイルシステムを作成するには C<guestfs_mkfs> を使用します。"

#~ msgid "(Added in 1.17.25)"
#~ msgstr "(1.17.25 において追加)"

#~ msgid "guestfs_mkfs_btrfs_va"
#~ msgstr "guestfs_mkfs_btrfs_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
#~ "                        char *const *devices,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
#~ "                        char *const *devices,\n"
#~ "                        va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mkfs_btrfs>."
#~ msgstr "これは L</guestfs_mkfs_btrfs> の \"va_list variant\" です。"

#~ msgid "guestfs_mkfs_btrfs_argv"
#~ msgstr "guestfs_mkfs_btrfs_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
#~ "                          char *const *devices,\n"
#~ "                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
#~ "                          char *const *devices,\n"
#~ "                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_mkfs_btrfs>."
#~ msgstr "これは L</guestfs_mkfs_btrfs> の \"argv variant\" です。"

#~ msgid "guestfs_mklost_and_found"
#~ msgstr "guestfs_mklost_and_found"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mklost_and_found (guestfs_h *g,\n"
#~ "                           const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mklost_and_found (guestfs_h *g,\n"
#~ "                           const char *mountpoint);\n"
#~ "\n"

#~ msgid "guestfs_mkmountpoint"
#~ msgstr "guestfs_mkmountpoint"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"

#~ msgid ""
#~ "C<guestfs_mkmountpoint> and C<guestfs_rmmountpoint> are specialized calls "
#~ "that can be used to create extra mountpoints before mounting the first "
#~ "filesystem."
#~ msgstr ""
#~ "C<guestfs_mkmountpoint> および C<guestfs_rmmountpoint> は、最初のファイル"
#~ "システムをマウントする前に追加のマウントポイントを作成するために使用でき"
#~ "る、特別な呼び出しです。"

#~ msgid "(Added in 1.0.62)"
#~ msgstr "(1.0.62 において追加)"

#~ msgid "guestfs_mknod"
#~ msgstr "guestfs_mknod"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mknod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                int devmajor,\n"
#~ "                int devminor,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mknod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                int devmajor,\n"
#~ "                int devminor,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mknod_b"
#~ msgstr "guestfs_mknod_b"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mknod_b (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mknod_b (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mknod_c"
#~ msgstr "guestfs_mknod_c"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mknod_c (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mknod_c (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mkswap"
#~ msgstr "guestfs_mkswap"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_opts (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_opts (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
#~ " GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
#~ " GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
#~ "\n"

#~ msgid "guestfs_mkswap_opts_va"
#~ msgstr "guestfs_mkswap_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_opts_va (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_opts_va (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mkswap_opts>."
#~ msgstr "これは L</guestfs_mkswap_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_mkswap_opts_argv"
#~ msgstr "guestfs_mkswap_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_opts_argv (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const struct guestfs_mkswap_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_opts_argv (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const struct guestfs_mkswap_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_mkswap_opts>."
#~ msgstr "これは L</guestfs_mkswap_opts> の \"argv variant\" です。"

#~ msgid "guestfs_mkswap_L"
#~ msgstr "guestfs_mkswap_L"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_L (guestfs_h *g,\n"
#~ "                   const char *label,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_L (guestfs_h *g,\n"
#~ "                   const char *label,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_mkswap> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_mkswap> を使用してください。"

#~ msgid "guestfs_mkswap_U"
#~ msgstr "guestfs_mkswap_U"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_U (guestfs_h *g,\n"
#~ "                   const char *uuid,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_U (guestfs_h *g,\n"
#~ "                   const char *uuid,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid "guestfs_mkswap_file"
#~ msgstr "guestfs_mkswap_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_file (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_file (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"

#~ msgid "guestfs_mktemp"
#~ msgstr "guestfs_mktemp"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mktemp (guestfs_h *g,\n"
#~ "                 const char *tmpl,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mktemp (guestfs_h *g,\n"
#~ "                 const char *tmpl,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKTEMP_SUFFIX, const char *suffix,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKTEMP_SUFFIX, const char *suffix,\n"
#~ "\n"

#~ msgid "See also: C<guestfs_mkdtemp>."
#~ msgstr "関連項目: C<guestfs_mkdtemp>."

#~ msgid "(Added in 1.19.53)"
#~ msgstr "(1.19.53 において追加)"

#~ msgid "guestfs_mktemp_va"
#~ msgstr "guestfs_mktemp_va"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mktemp_va (guestfs_h *g,\n"
#~ "                    const char *tmpl,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mktemp_va (guestfs_h *g,\n"
#~ "                    const char *tmpl,\n"
#~ "                    va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mktemp>."
#~ msgstr "これは L</guestfs_mktemp> の \"va_list variant\" です。"

#~ msgid "guestfs_mktemp_argv"
#~ msgstr "guestfs_mktemp_argv"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mktemp_argv (guestfs_h *g,\n"
#~ "                      const char *tmpl,\n"
#~ "                      const struct guestfs_mktemp_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mktemp_argv (guestfs_h *g,\n"
#~ "                      const char *tmpl,\n"
#~ "                      const struct guestfs_mktemp_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_mktemp>."
#~ msgstr "これは L</guestfs_mktemp> の \"argv variant\" です。"

#~ msgid "guestfs_modprobe"
#~ msgstr "guestfs_modprobe"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_modprobe (guestfs_h *g,\n"
#~ "                   const char *modulename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_modprobe (guestfs_h *g,\n"
#~ "                   const char *modulename);\n"
#~ "\n"

#~ msgid "guestfs_mount"
#~ msgstr "guestfs_mount"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount (guestfs_h *g,\n"
#~ "                const char *mountable,\n"
#~ "                const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount (guestfs_h *g,\n"
#~ "                const char *mountable,\n"
#~ "                const char *mountpoint);\n"
#~ "\n"

#~ msgid "guestfs_mount_9p"
#~ msgstr "guestfs_mount_9p"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_9p (guestfs_h *g,\n"
#~ "                   const char *mounttag,\n"
#~ "                   const char *mountpoint,\n"
#~ "                   ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_9p (guestfs_h *g,\n"
#~ "                   const char *mounttag,\n"
#~ "                   const char *mountpoint,\n"
#~ "                   ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
#~ "\n"

#~ msgid "guestfs_mount_9p_va"
#~ msgstr "guestfs_mount_9p_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_9p_va (guestfs_h *g,\n"
#~ "                      const char *mounttag,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_9p_va (guestfs_h *g,\n"
#~ "                      const char *mounttag,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mount_9p>."
#~ msgstr "これは L</guestfs_mount_9p> の \"va_list variant\" です。"

#~ msgid "guestfs_mount_9p_argv"
#~ msgstr "guestfs_mount_9p_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_9p_argv (guestfs_h *g,\n"
#~ "                        const char *mounttag,\n"
#~ "                        const char *mountpoint,\n"
#~ "                        const struct guestfs_mount_9p_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_9p_argv (guestfs_h *g,\n"
#~ "                        const char *mounttag,\n"
#~ "                        const char *mountpoint,\n"
#~ "                        const struct guestfs_mount_9p_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_mount_9p>."
#~ msgstr "これは L</guestfs_mount_9p> の \"argv variant\" です。"

#~ msgid "guestfs_mount_local"
#~ msgstr "guestfs_mount_local"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local (guestfs_h *g,\n"
#~ "                      const char *localmountpoint,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local (guestfs_h *g,\n"
#~ "                      const char *localmountpoint,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
#~ " GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
#~ " GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
#~ " GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
#~ " GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
#~ " GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
#~ " GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
#~ "\n"

#~ msgid "(Added in 1.17.22)"
#~ msgstr "(1.17.22 において追加)"

#~ msgid "guestfs_mount_local_va"
#~ msgstr "guestfs_mount_local_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local_va (guestfs_h *g,\n"
#~ "                         const char *localmountpoint,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local_va (guestfs_h *g,\n"
#~ "                         const char *localmountpoint,\n"
#~ "                         va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_mount_local>."
#~ msgstr "これは L</guestfs_mount_local> の \"va_list variant\" です。"

#~ msgid "guestfs_mount_local_argv"
#~ msgstr "guestfs_mount_local_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local_argv (guestfs_h *g,\n"
#~ "                           const char *localmountpoint,\n"
#~ "                           const struct guestfs_mount_local_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local_argv (guestfs_h *g,\n"
#~ "                           const char *localmountpoint,\n"
#~ "                           const struct guestfs_mount_local_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_mount_local>."
#~ msgstr "これは L</guestfs_mount_local> の \"argv variant\" です。"

#~ msgid "guestfs_mount_local_run"
#~ msgstr "guestfs_mount_local_run"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local_run (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local_run (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_mount_loop"
#~ msgstr "guestfs_mount_loop"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_loop (guestfs_h *g,\n"
#~ "                     const char *file,\n"
#~ "                     const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_loop (guestfs_h *g,\n"
#~ "                     const char *file,\n"
#~ "                     const char *mountpoint);\n"
#~ "\n"

#~ msgid "guestfs_mount_options"
#~ msgstr "guestfs_mount_options"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_options (guestfs_h *g,\n"
#~ "                        const char *options,\n"
#~ "                        const char *mountable,\n"
#~ "                        const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_options (guestfs_h *g,\n"
#~ "                        const char *options,\n"
#~ "                        const char *mountable,\n"
#~ "                        const char *mountpoint);\n"
#~ "\n"

#~ msgid "(Added in 1.0.10)"
#~ msgstr "(1.0.10 において追加)"

#~ msgid "guestfs_mount_ro"
#~ msgstr "guestfs_mount_ro"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_ro (guestfs_h *g,\n"
#~ "                   const char *mountable,\n"
#~ "                   const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_ro (guestfs_h *g,\n"
#~ "                   const char *mountable,\n"
#~ "                   const char *mountpoint);\n"
#~ "\n"

#~ msgid "guestfs_mount_vfs"
#~ msgstr "guestfs_mount_vfs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_vfs (guestfs_h *g,\n"
#~ "                    const char *options,\n"
#~ "                    const char *vfstype,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_vfs (guestfs_h *g,\n"
#~ "                    const char *options,\n"
#~ "                    const char *vfstype,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *mountpoint);\n"
#~ "\n"

#~ msgid "guestfs_mountpoints"
#~ msgstr "guestfs_mountpoints"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_mountpoints (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_mountpoints (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_mounts"
#~ msgstr "guestfs_mounts"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_mounts (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_mounts (guestfs_h *g);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_mountpoints>"
#~ msgstr "関連項目: C<guestfs_mountpoints>"

#~ msgid "guestfs_mv"
#~ msgstr "guestfs_mv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mv (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mv (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_rename>."
#~ msgstr "関連項目: C<guestfs_rename>。"

#~ msgid "guestfs_nr_devices"
#~ msgstr "guestfs_nr_devices"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_nr_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_nr_devices (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.19.15)"
#~ msgstr "(1.19.15 において追加)"

#~ msgid "guestfs_ntfs_3g_probe"
#~ msgstr "guestfs_ntfs_3g_probe"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfs_3g_probe (guestfs_h *g,\n"
#~ "                        int rw,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfs_3g_probe (guestfs_h *g,\n"
#~ "                        int rw,\n"
#~ "                        const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.0.43)"
#~ msgstr "(1.0.43 において追加)"

#~ msgid "guestfs_ntfsclone_in"
#~ msgstr "guestfs_ntfsclone_in"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_in (guestfs_h *g,\n"
#~ "                       const char *backupfile,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_in (guestfs_h *g,\n"
#~ "                       const char *backupfile,\n"
#~ "                       const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "Restore the C<backupfile> (from a previous call to "
#~ "C<guestfs_ntfsclone_out>) to C<device>, overwriting any existing contents "
#~ "of this device."
#~ msgstr ""
#~ "C<backupfile> を(前に C<guestfs_ntfsclone_out> を呼び出したところから)  "
#~ "C<device> に復元します。このデバイスの既存の内容はすべて上書きされます。"

#~ msgid "(Added in 1.17.9)"
#~ msgstr "(1.17.9 において追加)"

#~ msgid "guestfs_ntfsclone_out"
#~ msgstr "guestfs_ntfsclone_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_out (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *backupfile,\n"
#~ "                        ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_out (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *backupfile,\n"
#~ "                        ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
#~ " GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
#~ " GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
#~ " GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
#~ " GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
#~ " GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
#~ " GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
#~ " GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
#~ " GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
#~ "\n"

#~ msgid ""
#~ "Use C<guestfs_ntfsclone_in> to restore the file back to a libguestfs "
#~ "device."
#~ msgstr ""
#~ "libguestfs デバイスにファイルを復元するには C<guestfs_ntfsclone_in> を使用"
#~ "します。"

#~ msgid "guestfs_ntfsclone_out_va"
#~ msgstr "guestfs_ntfsclone_out_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_va (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const char *backupfile,\n"
#~ "                           va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_va (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const char *backupfile,\n"
#~ "                           va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_ntfsclone_out>."
#~ msgstr "これは L</guestfs_ntfsclone_out> の \"va_list variant\" です。"

#~ msgid "guestfs_ntfsclone_out_argv"
#~ msgstr "guestfs_ntfsclone_out_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *backupfile,\n"
#~ "                             const struct guestfs_ntfsclone_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *backupfile,\n"
#~ "                             const struct guestfs_ntfsclone_out_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_ntfsclone_out>."
#~ msgstr "これは L</guestfs_ntfsclone_out> の \"argv variant\" です。"

#~ msgid "guestfs_ntfsfix"
#~ msgstr "guestfs_ntfsfix"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsfix (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsfix (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
#~ "\n"

#~ msgid "guestfs_ntfsfix_va"
#~ msgstr "guestfs_ntfsfix_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsfix_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsfix_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_ntfsfix>."
#~ msgstr "これは L</guestfs_ntfsfix> の \"va_list variant\" です。"

#~ msgid "guestfs_ntfsfix_argv"
#~ msgstr "guestfs_ntfsfix_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsfix_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_ntfsfix_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsfix_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_ntfsfix_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_ntfsfix>."
#~ msgstr "これは L</guestfs_ntfsfix> の \"argv variant\" です。"

#~ msgid "guestfs_ntfsresize"
#~ msgstr "guestfs_ntfsresize"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"

#~ msgid "guestfs_ntfsresize_opts"
#~ msgstr "guestfs_ntfsresize_opts"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
#~ " GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
#~ " GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
#~ "\n"

#~ msgid "guestfs_ntfsresize_opts_va"
#~ msgstr "guestfs_ntfsresize_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_ntfsresize_opts>."
#~ msgstr "これは L</guestfs_ntfsresize_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_ntfsresize_opts_argv"
#~ msgstr "guestfs_ntfsresize_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
#~ "                               const char *device,\n"
#~ "                               const struct guestfs_ntfsresize_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
#~ "                               const char *device,\n"
#~ "                               const struct guestfs_ntfsresize_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_ntfsresize_opts>."
#~ msgstr "これは L</guestfs_ntfsresize_opts> の \"argv variant\" です。"

#~ msgid "guestfs_ntfsresize_size"
#~ msgstr "guestfs_ntfsresize_size"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_size (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_size (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int64_t size);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_ntfsresize> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_ntfsresize> を使用してください。"

#~ msgid "(Added in 1.3.14)"
#~ msgstr "(1.3.14 において追加)"

#~ msgid "guestfs_parse_environment"
#~ msgstr "guestfs_parse_environment"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_parse_environment (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_parse_environment (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_parse_environment_list"
#~ msgstr "guestfs_parse_environment_list"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_parse_environment_list (guestfs_h *g,\n"
#~ "                                 char *const *environment);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_parse_environment_list (guestfs_h *g,\n"
#~ "                                 char *const *environment);\n"
#~ "\n"

#~ msgid "guestfs_part_add"
#~ msgstr "guestfs_part_add"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_add (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   const char *prlogex,\n"
#~ "                   int64_t startsect,\n"
#~ "                   int64_t endsect);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_add (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   const char *prlogex,\n"
#~ "                   int64_t startsect,\n"
#~ "                   int64_t endsect);\n"
#~ "\n"

#~ msgid "(Added in 1.0.78)"
#~ msgstr "(1.0.78 において追加)"

#~ msgid "guestfs_part_del"
#~ msgstr "guestfs_part_del"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_del (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_del (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum);\n"
#~ "\n"

#~ msgid "guestfs_part_disk"
#~ msgstr "guestfs_part_disk"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_disk (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_disk (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"

#~ msgid "guestfs_part_get_bootable"
#~ msgstr "guestfs_part_get_bootable"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_get_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_get_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"

#~ msgid "See also C<guestfs_part_set_bootable>."
#~ msgstr "C<guestfs_part_set_bootable> 参照。"

#~ msgid "(Added in 1.21.1)"
#~ msgstr "(1.21.1 において追加)"

#, fuzzy
#~ msgid "guestfs_part_get_gpt_guid"
#~ msgstr "guestfs_part_get_gpt_type"

#, fuzzy, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_get_gpt_guid (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_get_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"

#~ msgid "guestfs_part_get_gpt_type"
#~ msgstr "guestfs_part_get_gpt_type"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_get_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_get_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"

#~ msgid "guestfs_part_get_mbr_id"
#~ msgstr "guestfs_part_get_mbr_id"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_get_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_get_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum);\n"
#~ "\n"

#~ msgid "guestfs_part_get_parttype"
#~ msgstr "guestfs_part_get_parttype"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_get_parttype (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_get_parttype (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"

#~ msgid "guestfs_part_init"
#~ msgstr "guestfs_part_init"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_init (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_init (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"

#~ msgid "guestfs_part_list"
#~ msgstr "guestfs_part_list"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_partition_list *\n"
#~ " guestfs_part_list (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_partition_list *\n"
#~ " guestfs_part_list (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"

#~ msgid "guestfs_part_set_bootable"
#~ msgstr "guestfs_part_set_bootable"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            int bootable);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            int bootable);\n"
#~ "\n"

#, fuzzy
#~ msgid "guestfs_part_set_gpt_guid"
#~ msgstr "guestfs_part_set_gpt_type"

#, fuzzy, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_gpt_guid (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            const char *guid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            const char *guid);\n"
#~ "\n"

#~ msgid "guestfs_part_set_gpt_type"
#~ msgstr "guestfs_part_set_gpt_type"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            const char *guid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            const char *guid);\n"
#~ "\n"

#~ msgid "guestfs_part_set_mbr_id"
#~ msgstr "guestfs_part_set_mbr_id"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum,\n"
#~ "                          int idbyte);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum,\n"
#~ "                          int idbyte);\n"
#~ "\n"

#~ msgid "guestfs_part_set_name"
#~ msgstr "guestfs_part_set_name"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_name (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int partnum,\n"
#~ "                        const char *name);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_name (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int partnum,\n"
#~ "                        const char *name);\n"
#~ "\n"

#~ msgid "guestfs_part_to_dev"
#~ msgstr "guestfs_part_to_dev"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_to_dev (guestfs_h *g,\n"
#~ "                      const char *partition);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_to_dev (guestfs_h *g,\n"
#~ "                      const char *partition);\n"
#~ "\n"

#~ msgid "See also C<guestfs_part_to_partnum>, C<guestfs_device_index>."
#~ msgstr "C<guestfs_part_to_partnum>, C<guestfs_device_index> 参照。"

#~ msgid "guestfs_part_to_partnum"
#~ msgstr "guestfs_part_to_partnum"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_to_partnum (guestfs_h *g,\n"
#~ "                          const char *partition);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_to_partnum (guestfs_h *g,\n"
#~ "                          const char *partition);\n"
#~ "\n"

#~ msgid "See also C<guestfs_part_to_dev>."
#~ msgstr "C<guestfs_part_to_dev> 参照。"

#~ msgid "guestfs_ping_daemon"
#~ msgstr "guestfs_ping_daemon"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ping_daemon (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ping_daemon (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_pread"
#~ msgstr "guestfs_pread"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_pread (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                int count,\n"
#~ "                int64_t offset,\n"
#~ "                size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_pread (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                int count,\n"
#~ "                int64_t offset,\n"
#~ "                size_t *size_r);\n"
#~ "\n"

#~ msgid "See also C<guestfs_pwrite>, C<guestfs_pread_device>."
#~ msgstr "C<guestfs_pwrite>, C<guestfs_pread_device> 参照。"

#~ msgid "guestfs_pread_device"
#~ msgstr "guestfs_pread_device"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_pread_device (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       int count,\n"
#~ "                       int64_t offset,\n"
#~ "                       size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_pread_device (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       int count,\n"
#~ "                       int64_t offset,\n"
#~ "                       size_t *size_r);\n"
#~ "\n"

#~ msgid "See also C<guestfs_pread>."
#~ msgstr "C<guestfs_pread> 参照。"

#~ msgid "(Added in 1.5.21)"
#~ msgstr "(1.5.21 において追加)"

#~ msgid "(Added in 1.19.26)"
#~ msgstr "(1.19.26 において追加)"

#~ msgid "guestfs_pvcreate"
#~ msgstr "guestfs_pvcreate"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvcreate (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvcreate (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid "guestfs_pvremove"
#~ msgstr "guestfs_pvremove"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid "guestfs_pvresize"
#~ msgstr "guestfs_pvresize"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvresize (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvresize (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid "guestfs_pvresize_size"
#~ msgstr "guestfs_pvresize_size"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvresize_size (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvresize_size (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int64_t size);\n"
#~ "\n"

#~ msgid "guestfs_pvs"
#~ msgstr "guestfs_pvs"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_pvs (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_pvs (guestfs_h *g);\n"
#~ "\n"

#~ msgid "See also C<guestfs_pvs_full>."
#~ msgstr "C<guestfs_pvs_full> 参照。"

#~ msgid "guestfs_pvs_full"
#~ msgstr "guestfs_pvs_full"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_pv_list *\n"
#~ " guestfs_pvs_full (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_lvm_pv_list *\n"
#~ " guestfs_pvs_full (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_pvuuid"
#~ msgstr "guestfs_pvuuid"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_pvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_pvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#~ msgid "guestfs_pwrite"
#~ msgstr "guestfs_pwrite"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pwrite (guestfs_h *g,\n"
#~ "                 const char *path,\n"
#~ "                 const char *content,\n"
#~ "                 size_t content_size,\n"
#~ "                 int64_t offset);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pwrite (guestfs_h *g,\n"
#~ "                 const char *path,\n"
#~ "                 const char *content,\n"
#~ "                 size_t content_size,\n"
#~ "                 int64_t offset);\n"
#~ "\n"

#~ msgid "See also C<guestfs_pread>, C<guestfs_pwrite_device>."
#~ msgstr "C<guestfs_pread>, C<guestfs_pwrite_device> 参照。"

#~ msgid "guestfs_pwrite_device"
#~ msgstr "guestfs_pwrite_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pwrite_device (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *content,\n"
#~ "                        size_t content_size,\n"
#~ "                        int64_t offset);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pwrite_device (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *content,\n"
#~ "                        size_t content_size,\n"
#~ "                        int64_t offset);\n"
#~ "\n"

#~ msgid "See also C<guestfs_pwrite>."
#~ msgstr "C<guestfs_pwrite> 参照。"

#~ msgid "(Added in 1.5.20)"
#~ msgstr "(1.5.20 において追加)"

#~ msgid "guestfs_read_file"
#~ msgstr "guestfs_read_file"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_read_file (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_read_file (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"

#~ msgid "(Added in 1.0.63)"
#~ msgstr "(1.0.63 において追加)"

#~ msgid "guestfs_read_lines"
#~ msgstr "guestfs_read_lines"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_read_lines (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_read_lines (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#~ msgid "guestfs_readdir"
#~ msgstr "guestfs_readdir"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_dirent_list *\n"
#~ " guestfs_readdir (guestfs_h *g,\n"
#~ "                  const char *dir);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_dirent_list *\n"
#~ " guestfs_readdir (guestfs_h *g,\n"
#~ "                  const char *dir);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a C<struct guestfs_dirent_list *>, or NULL if there "
#~ "was an error.  I<The caller must call C<guestfs_free_dirent_list> after "
#~ "use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_dirent_list *> を返します。もしくは、エラーが"
#~ "発生すると NULL を返します。 I<呼び出し元は使用後に "
#~ "C<guestfs_free_dirent_list> を呼び出す必要があります>。"

#~ msgid "guestfs_readlink"
#~ msgstr "guestfs_readlink"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_readlink (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_readlink (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"

#~ msgid "guestfs_readlinklist"
#~ msgstr "guestfs_readlinklist"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_readlinklist (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       char *const *names);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_readlinklist (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       char *const *names);\n"
#~ "\n"

#~ msgid "guestfs_realpath"
#~ msgstr "guestfs_realpath"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_realpath (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_realpath (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"

#~ msgid "guestfs_removexattr"
#~ msgstr "guestfs_removexattr"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_removexattr (guestfs_h *g,\n"
#~ "                      const char *xattr,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_removexattr (guestfs_h *g,\n"
#~ "                      const char *xattr,\n"
#~ "                      const char *path);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_lremovexattr>, L<attr(5)>."
#~ msgstr "関連項目: C<guestfs_lremovexattr>, L<attr(5)>"

#~ msgid "guestfs_rename"
#~ msgstr "guestfs_rename"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rename (guestfs_h *g,\n"
#~ "                 const char *oldpath,\n"
#~ "                 const char *newpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rename (guestfs_h *g,\n"
#~ "                 const char *oldpath,\n"
#~ "                 const char *newpath);\n"
#~ "\n"

#~ msgid "(Added in 1.21.5)"
#~ msgstr "(1.21.5 において追加)"

#~ msgid "guestfs_resize2fs"
#~ msgstr "guestfs_resize2fs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_resize2fs (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_resize2fs (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"

#~ msgid "guestfs_resize2fs_M"
#~ msgstr "guestfs_resize2fs_M"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_resize2fs_M (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_resize2fs_M (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"

#~ msgid "guestfs_resize2fs_size"
#~ msgstr "guestfs_resize2fs_size"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_resize2fs_size (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_resize2fs_size (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         int64_t size);\n"
#~ "\n"

#~ msgid "guestfs_rm"
#~ msgstr "guestfs_rm"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rm (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rm (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"

#~ msgid "(Added in 1.19.42)"
#~ msgstr "(1.19.42 において追加)"

#~ msgid "guestfs_rm_rf"
#~ msgstr "guestfs_rm_rf"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rm_rf (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rm_rf (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_rmdir"
#~ msgstr "guestfs_rmdir"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rmdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rmdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_rmmountpoint"
#~ msgstr "guestfs_rmmountpoint"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rmmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rmmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"

#~ msgid "(Added in 1.19.29)"
#~ msgstr "(1.19.29 において追加)"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_argv (guestfs_h *g,\n"
#~ "                     const char *src,\n"
#~ "                     const char *dest,\n"
#~ "                     const struct guestfs_rsync_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_argv (guestfs_h *g,\n"
#~ "                     const char *src,\n"
#~ "                     const char *dest,\n"
#~ "                     const struct guestfs_rsync_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_rsync>."
#~ msgstr "これは L</guestfs_rsync> の \"argv variant\" です。"

#~ msgid "guestfs_rsync_in"
#~ msgstr "guestfs_rsync_in"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_in (guestfs_h *g,\n"
#~ "                   const char *remote,\n"
#~ "                   const char *dest,\n"
#~ "                   ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_in (guestfs_h *g,\n"
#~ "                   const char *remote,\n"
#~ "                   const char *dest,\n"
#~ "                   ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_RSYNC_IN_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_IN_DELETEDEST, int deletedest,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_RSYNC_IN_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_IN_DELETEDEST, int deletedest,\n"
#~ "\n"

#~ msgid "The optional arguments are the same as those of C<guestfs_rsync>."
#~ msgstr "オプションの引数は C<guestfs_rsync> のものと同じです。"

#~ msgid "guestfs_rsync_in_va"
#~ msgstr "guestfs_rsync_in_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_in_va (guestfs_h *g,\n"
#~ "                      const char *remote,\n"
#~ "                      const char *dest,\n"
#~ "                      va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_in_va (guestfs_h *g,\n"
#~ "                      const char *remote,\n"
#~ "                      const char *dest,\n"
#~ "                      va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_rsync_in>."
#~ msgstr "これは L</guestfs_rsync_in> の \"va_list variant\" です。"

#~ msgid "guestfs_rsync_in_argv"
#~ msgstr "guestfs_rsync_in_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_in_argv (guestfs_h *g,\n"
#~ "                        const char *remote,\n"
#~ "                        const char *dest,\n"
#~ "                        const struct guestfs_rsync_in_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_in_argv (guestfs_h *g,\n"
#~ "                        const char *remote,\n"
#~ "                        const char *dest,\n"
#~ "                        const struct guestfs_rsync_in_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_rsync_in>."
#~ msgstr "これは L</guestfs_rsync_in> の \"argv variant\" です。"

#~ msgid "guestfs_rsync_out"
#~ msgstr "guestfs_rsync_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_out (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *remote,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_out (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *remote,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_RSYNC_OUT_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_OUT_DELETEDEST, int deletedest,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_RSYNC_OUT_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_OUT_DELETEDEST, int deletedest,\n"
#~ "\n"

#~ msgid "guestfs_rsync_out_va"
#~ msgstr "guestfs_rsync_out_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_out_va (guestfs_h *g,\n"
#~ "                       const char *src,\n"
#~ "                       const char *remote,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_out_va (guestfs_h *g,\n"
#~ "                       const char *src,\n"
#~ "                       const char *remote,\n"
#~ "                       va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_rsync_out>."
#~ msgstr "これは L</guestfs_rsync_out> の \"va_list variant\" です。"

#~ msgid "guestfs_rsync_out_argv"
#~ msgstr "guestfs_rsync_out_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_out_argv (guestfs_h *g,\n"
#~ "                         const char *src,\n"
#~ "                         const char *remote,\n"
#~ "                         const struct guestfs_rsync_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_out_argv (guestfs_h *g,\n"
#~ "                         const char *src,\n"
#~ "                         const char *remote,\n"
#~ "                         const struct guestfs_rsync_out_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_rsync_out>."
#~ msgstr "これは L</guestfs_rsync_out> の \"argv variant\" です。"

#~ msgid "guestfs_scrub_device"
#~ msgstr "guestfs_scrub_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_scrub_device (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_scrub_device (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.0.52)"
#~ msgstr "(1.0.52 において追加)"

#~ msgid "guestfs_scrub_file"
#~ msgstr "guestfs_scrub_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_scrub_file (guestfs_h *g,\n"
#~ "                     const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_scrub_file (guestfs_h *g,\n"
#~ "                     const char *file);\n"
#~ "\n"

#~ msgid "guestfs_scrub_freespace"
#~ msgstr "guestfs_scrub_freespace"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_scrub_freespace (guestfs_h *g,\n"
#~ "                          const char *dir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_scrub_freespace (guestfs_h *g,\n"
#~ "                          const char *dir);\n"
#~ "\n"

#~ msgid "guestfs_set_append"
#~ msgstr "guestfs_set_append"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_append (guestfs_h *g,\n"
#~ "                     const char *append);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_append (guestfs_h *g,\n"
#~ "                     const char *append);\n"
#~ "\n"

#~ msgid "guestfs_set_attach_method"
#~ msgstr "guestfs_set_attach_method"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_attach_method (guestfs_h *g,\n"
#~ "                            const char *backend);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_attach_method (guestfs_h *g,\n"
#~ "                            const char *backend);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_set_backend> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_set_backend> を使用してください。"

#~ msgid "guestfs_set_autosync"
#~ msgstr "guestfs_set_autosync"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_autosync (guestfs_h *g,\n"
#~ "                       int autosync);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_autosync (guestfs_h *g,\n"
#~ "                       int autosync);\n"
#~ "\n"

#~ msgid "guestfs_set_backend"
#~ msgstr "guestfs_set_backend"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_backend (guestfs_h *g,\n"
#~ "                      const char *backend);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_backend (guestfs_h *g,\n"
#~ "                      const char *backend);\n"
#~ "\n"

#~ msgid "guestfs_set_cachedir"
#~ msgstr "guestfs_set_cachedir"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_cachedir (guestfs_h *g,\n"
#~ "                       const char *cachedir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_cachedir (guestfs_h *g,\n"
#~ "                       const char *cachedir);\n"
#~ "\n"

#~ msgid "guestfs_set_direct"
#~ msgstr "guestfs_set_direct"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_direct (guestfs_h *g,\n"
#~ "                     int direct);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_direct (guestfs_h *g,\n"
#~ "                     int direct);\n"
#~ "\n"

#~ msgid "guestfs_set_e2attrs"
#~ msgstr "guestfs_set_e2attrs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file,\n"
#~ "                      const char *attrs,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file,\n"
#~ "                      const char *attrs,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
#~ "\n"

#~ msgid ""
#~ "C<attrs> is a string of characters representing file attributes.  See "
#~ "C<guestfs_get_e2attrs> for a list of possible attributes.  Not all "
#~ "attributes can be changed."
#~ msgstr ""
#~ "C<attrs> はファイル属性を表す文字の列です。利用可能な属性の一覧は "
#~ "C<guestfs_get_e2attrs> を参照してください。すべての属性が変更できるわけで"
#~ "はありません。"

#~ msgid "guestfs_set_e2attrs_va"
#~ msgstr "guestfs_set_e2attrs_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2attrs_va (guestfs_h *g,\n"
#~ "                         const char *file,\n"
#~ "                         const char *attrs,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2attrs_va (guestfs_h *g,\n"
#~ "                         const char *file,\n"
#~ "                         const char *attrs,\n"
#~ "                         va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_set_e2attrs>."
#~ msgstr "これは L</guestfs_set_e2attrs> の \"va_list variant\" です。"

#~ msgid "guestfs_set_e2attrs_argv"
#~ msgstr "guestfs_set_e2attrs_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2attrs_argv (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           const char *attrs,\n"
#~ "                           const struct guestfs_set_e2attrs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2attrs_argv (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           const char *attrs,\n"
#~ "                           const struct guestfs_set_e2attrs_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_set_e2attrs>."
#~ msgstr "これは L</guestfs_set_e2attrs> の \"argv variant\" です。"

#~ msgid "guestfs_set_e2generation"
#~ msgstr "guestfs_set_e2generation"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2generation (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           int64_t generation);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2generation (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           int64_t generation);\n"
#~ "\n"

#~ msgid "See C<guestfs_get_e2generation>."
#~ msgstr "C<guestfs_get_e2generation> 参照。"

#~ msgid "guestfs_set_e2label"
#~ msgstr "guestfs_set_e2label"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2label (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2label (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *label);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_set_label> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_set_label> を使用してください。"

#~ msgid "guestfs_set_e2uuid"
#~ msgstr "guestfs_set_e2uuid"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     const char *uuid);\n"
#~ "\n"

#~ msgid "guestfs_set_label"
#~ msgstr "guestfs_set_label"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_label (guestfs_h *g,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_label (guestfs_h *g,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *label);\n"
#~ "\n"

#~ msgid "To read the label on a filesystem, call C<guestfs_vfs_label>."
#~ msgstr ""
#~ "ファイルシステムにあるラベルを読み込むには C<guestfs_vfs_label> を呼び出し"
#~ "ます。"

#~ msgid "guestfs_set_libvirt_requested_credential"
#~ msgstr "guestfs_set_libvirt_requested_credential"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_libvirt_requested_credential (guestfs_h *g,\n"
#~ "                                           int index,\n"
#~ "                                           const char *cred,\n"
#~ "                                           size_t cred_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_libvirt_requested_credential (guestfs_h *g,\n"
#~ "                                           int index,\n"
#~ "                                           const char *cred,\n"
#~ "                                           size_t cred_size);\n"
#~ "\n"

#~ msgid "guestfs_set_libvirt_supported_credentials"
#~ msgstr "guestfs_set_libvirt_supported_credentials"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_libvirt_supported_credentials (guestfs_h *g,\n"
#~ "                                            char *const *creds);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_libvirt_supported_credentials (guestfs_h *g,\n"
#~ "                                            char *const *creds);\n"
#~ "\n"

#~ msgid "guestfs_set_memsize"
#~ msgstr "guestfs_set_memsize"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_memsize (guestfs_h *g,\n"
#~ "                      int memsize);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_memsize (guestfs_h *g,\n"
#~ "                      int memsize);\n"
#~ "\n"

#~ msgid "guestfs_set_network"
#~ msgstr "guestfs_set_network"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_network (guestfs_h *g,\n"
#~ "                      int network);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_network (guestfs_h *g,\n"
#~ "                      int network);\n"
#~ "\n"

#~ msgid "guestfs_set_path"
#~ msgstr "guestfs_set_path"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_path (guestfs_h *g,\n"
#~ "                   const char *searchpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_path (guestfs_h *g,\n"
#~ "                   const char *searchpath);\n"
#~ "\n"

#~ msgid "guestfs_set_pgroup"
#~ msgstr "guestfs_set_pgroup"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_pgroup (guestfs_h *g,\n"
#~ "                     int pgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_pgroup (guestfs_h *g,\n"
#~ "                     int pgroup);\n"
#~ "\n"

#~ msgid "guestfs_set_qemu"
#~ msgstr "guestfs_set_qemu"

#~ msgid "guestfs_set_recovery_proc"
#~ msgstr "guestfs_set_recovery_proc"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_recovery_proc (guestfs_h *g,\n"
#~ "                            int recoveryproc);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_recovery_proc (guestfs_h *g,\n"
#~ "                            int recoveryproc);\n"
#~ "\n"

#~ msgid "guestfs_set_selinux"
#~ msgstr "guestfs_set_selinux"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_selinux (guestfs_h *g,\n"
#~ "                      int selinux);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_selinux (guestfs_h *g,\n"
#~ "                      int selinux);\n"
#~ "\n"

#~ msgid "guestfs_set_smp"
#~ msgstr "guestfs_set_smp"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_smp (guestfs_h *g,\n"
#~ "                  int smp);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_smp (guestfs_h *g,\n"
#~ "                  int smp);\n"
#~ "\n"

#~ msgid "This function must be called before C<guestfs_launch>."
#~ msgstr "この関数は C<guestfs_launch> の前に呼び出す必要があります。"

#~ msgid "guestfs_set_tmpdir"
#~ msgstr "guestfs_set_tmpdir"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_tmpdir (guestfs_h *g,\n"
#~ "                     const char *tmpdir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_tmpdir (guestfs_h *g,\n"
#~ "                     const char *tmpdir);\n"
#~ "\n"

#~ msgid "guestfs_set_trace"
#~ msgstr "guestfs_set_trace"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_trace (guestfs_h *g,\n"
#~ "                    int trace);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_trace (guestfs_h *g,\n"
#~ "                    int trace);\n"
#~ "\n"

#~ msgid "guestfs_set_verbose"
#~ msgstr "guestfs_set_verbose"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_verbose (guestfs_h *g,\n"
#~ "                      int verbose);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_verbose (guestfs_h *g,\n"
#~ "                      int verbose);\n"
#~ "\n"

#~ msgid "guestfs_setcon"
#~ msgstr "guestfs_setcon"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_setcon (guestfs_h *g,\n"
#~ "                 const char *context);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_setcon (guestfs_h *g,\n"
#~ "                 const char *context);\n"
#~ "\n"

#~ msgid "guestfs_setxattr"
#~ msgstr "guestfs_setxattr"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_setxattr (guestfs_h *g,\n"
#~ "                   const char *xattr,\n"
#~ "                   const char *val,\n"
#~ "                   int vallen,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_setxattr (guestfs_h *g,\n"
#~ "                   const char *xattr,\n"
#~ "                   const char *val,\n"
#~ "                   int vallen,\n"
#~ "                   const char *path);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_lsetxattr>, L<attr(5)>."
#~ msgstr "関連項目: C<guestfs_lsetxattr>, L<attr(5)>"

#~ msgid "guestfs_sfdisk"
#~ msgstr "guestfs_sfdisk"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sfdisk (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 int cyls,\n"
#~ "                 int heads,\n"
#~ "                 int sectors,\n"
#~ "                 char *const *lines);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sfdisk (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 int cyls,\n"
#~ "                 int heads,\n"
#~ "                 int sectors,\n"
#~ "                 char *const *lines);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_part_add> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_part_add> を使用してください。"

#~ msgid ""
#~ "See also: C<guestfs_sfdisk_l>, C<guestfs_sfdisk_N>, C<guestfs_part_init>"
#~ msgstr ""
#~ "関連項目: C<guestfs_sfdisk_l>, C<guestfs_sfdisk_N>, C<guestfs_part_init>"

#~ msgid "guestfs_sfdiskM"
#~ msgstr "guestfs_sfdiskM"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sfdiskM (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  char *const *lines);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sfdiskM (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  char *const *lines);\n"
#~ "\n"

#~ msgid ""
#~ "See also: C<guestfs_sfdisk>, the L<sfdisk(8)> manpage and "
#~ "C<guestfs_part_disk>"
#~ msgstr ""
#~ "関連項目: C<guestfs_sfdisk>, L<sfdisk(8)> マニュアルページおよび "
#~ "C<guestfs_part_disk>"

#~ msgid "guestfs_sfdisk_N"
#~ msgstr "guestfs_sfdisk_N"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sfdisk_N (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum,\n"
#~ "                   int cyls,\n"
#~ "                   int heads,\n"
#~ "                   int sectors,\n"
#~ "                   const char *line);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sfdisk_N (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum,\n"
#~ "                   int cyls,\n"
#~ "                   int heads,\n"
#~ "                   int sectors,\n"
#~ "                   const char *line);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_part_add>"
#~ msgstr "関連項目: C<guestfs_part_add>"

#~ msgid "guestfs_sfdisk_disk_geometry"
#~ msgstr "guestfs_sfdisk_disk_geometry"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
#~ "                               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
#~ "                               const char *device);\n"
#~ "\n"

#~ msgid "guestfs_sfdisk_kernel_geometry"
#~ msgstr "guestfs_sfdisk_kernel_geometry"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
#~ "                                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
#~ "                                 const char *device);\n"
#~ "\n"

#~ msgid "guestfs_sfdisk_l"
#~ msgstr "guestfs_sfdisk_l"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sfdisk_l (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sfdisk_l (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</"
#~ "guestfs_part_list> call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_part_list> を使用してください。"

#~ msgid "See also: C<guestfs_part_list>"
#~ msgstr "関連項目: C<guestfs_part_list>"

#~ msgid "guestfs_sh"
#~ msgstr "guestfs_sh"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sh (guestfs_h *g,\n"
#~ "             const char *command);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sh (guestfs_h *g,\n"
#~ "             const char *command);\n"
#~ "\n"

#~ msgid "guestfs_sh_lines"
#~ msgstr "guestfs_sh_lines"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_sh_lines (guestfs_h *g,\n"
#~ "                   const char *command);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_sh_lines (guestfs_h *g,\n"
#~ "                   const char *command);\n"
#~ "\n"

#~ msgid "See also: C<guestfs_command_lines>"
#~ msgstr "関連項目: C<guestfs_command_lines>"

#~ msgid "guestfs_shutdown"
#~ msgstr "guestfs_shutdown"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_shutdown (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_shutdown (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.19.16)"
#~ msgstr "(1.19.16 において追加)"

#~ msgid "guestfs_sleep"
#~ msgstr "guestfs_sleep"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sleep (guestfs_h *g,\n"
#~ "                int secs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sleep (guestfs_h *g,\n"
#~ "                int secs);\n"
#~ "\n"

#~ msgid "(Added in 1.0.41)"
#~ msgstr "(1.0.41 において追加)"

#~ msgid "guestfs_stat"
#~ msgstr "guestfs_stat"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_stat (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_stat (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_statvfs"
#~ msgstr "guestfs_statvfs"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_statvfs *\n"
#~ " guestfs_statvfs (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_statvfs *\n"
#~ " guestfs_statvfs (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_strings"
#~ msgstr "guestfs_strings"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_strings (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_strings (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_strings_e"
#~ msgstr "guestfs_strings_e"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_strings_e (guestfs_h *g,\n"
#~ "                    const char *encoding,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_strings_e (guestfs_h *g,\n"
#~ "                    const char *encoding,\n"
#~ "                    const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "Single 7-bit-byte characters like ASCII and the ASCII-compatible parts of "
#~ "ISO-8859-X (this is what C<guestfs_strings> uses)."
#~ msgstr ""
#~ "ASCII および ISO-8859-X の ASCII (これは C<guestfs_strings> が使用するもの"
#~ "です) のような単一の 7 ビットのバイト文字。"

#~ msgid "guestfs_swapoff_device"
#~ msgstr "guestfs_swapoff_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "This command disables the libguestfs appliance swap device or partition "
#~ "named C<device>.  See C<guestfs_swapon_device>."
#~ msgstr ""
#~ "このコマンドは libguestfs アプライアンスの swap デバイスまたは C<device> "
#~ "という名前のパーティションを無効にします。 C<guestfs_swapon_device> 参照。"

#~ msgid "guestfs_swapoff_file"
#~ msgstr "guestfs_swapoff_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_file (guestfs_h *g,\n"
#~ "                       const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_file (guestfs_h *g,\n"
#~ "                       const char *file);\n"
#~ "\n"

#~ msgid "guestfs_swapoff_label"
#~ msgstr "guestfs_swapoff_label"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_label (guestfs_h *g,\n"
#~ "                        const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_label (guestfs_h *g,\n"
#~ "                        const char *label);\n"
#~ "\n"

#~ msgid "guestfs_swapoff_uuid"
#~ msgstr "guestfs_swapoff_uuid"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_uuid (guestfs_h *g,\n"
#~ "                       const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_uuid (guestfs_h *g,\n"
#~ "                       const char *uuid);\n"
#~ "\n"

#~ msgid "guestfs_swapon_device"
#~ msgstr "guestfs_swapon_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_device (guestfs_h *g,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_device (guestfs_h *g,\n"
#~ "                        const char *device);\n"
#~ "\n"

#~ msgid "guestfs_swapon_file"
#~ msgstr "guestfs_swapon_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_file (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_file (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"

#~ msgid "guestfs_swapon_label"
#~ msgstr "guestfs_swapon_label"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"

#~ msgid "guestfs_swapon_uuid"
#~ msgstr "guestfs_swapon_uuid"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"

#~ msgid "guestfs_sync"
#~ msgstr "guestfs_sync"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sync (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sync (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_syslinux"
#~ msgstr "guestfs_syslinux"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_syslinux (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_syslinux (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_SYSLINUX_DIRECTORY, const char *directory,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_SYSLINUX_DIRECTORY, const char *directory,\n"
#~ "\n"

#~ msgid "See also C<guestfs_extlinux>."
#~ msgstr "C<guestfs_extlinux> 参照。"

#~ msgid "guestfs_syslinux_va"
#~ msgstr "guestfs_syslinux_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_syslinux_va (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_syslinux_va (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_syslinux>."
#~ msgstr "これは L</guestfs_syslinux> の \"va_list variant\" です。"

#~ msgid "guestfs_syslinux_argv"
#~ msgstr "guestfs_syslinux_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_syslinux_argv (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const struct guestfs_syslinux_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_syslinux_argv (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const struct guestfs_syslinux_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_syslinux>."
#~ msgstr "これは L</guestfs_syslinux> の \"argv variant\" です。"

#~ msgid "guestfs_tail"
#~ msgstr "guestfs_tail"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_tail (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_tail (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_tail_n"
#~ msgstr "guestfs_tail_n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_tail_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_tail_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_tar_in"
#~ msgstr "guestfs_tar_in"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in (guestfs_h *g,\n"
#~ "                 const char *tarfile,\n"
#~ "                 const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in (guestfs_h *g,\n"
#~ "                 const char *tarfile,\n"
#~ "                 const char *directory);\n"
#~ "\n"

#~ msgid "(Added in 1.0.3)"
#~ msgstr "(1.0.3 において追加)"

#~ msgid "guestfs_tar_in_opts"
#~ msgstr "guestfs_tar_in_opts"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in_opts (guestfs_h *g,\n"
#~ "                      const char *tarfile,\n"
#~ "                      const char *directory,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in_opts (guestfs_h *g,\n"
#~ "                      const char *tarfile,\n"
#~ "                      const char *directory,\n"
#~ "                      ...);\n"
#~ "\n"

#~ msgid "guestfs_tar_in_opts_va"
#~ msgstr "guestfs_tar_in_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in_opts_va (guestfs_h *g,\n"
#~ "                         const char *tarfile,\n"
#~ "                         const char *directory,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in_opts_va (guestfs_h *g,\n"
#~ "                         const char *tarfile,\n"
#~ "                         const char *directory,\n"
#~ "                         va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_tar_in_opts>."
#~ msgstr "これは L</guestfs_tar_in_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_tar_in_opts_argv"
#~ msgstr "guestfs_tar_in_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in_opts_argv (guestfs_h *g,\n"
#~ "                           const char *tarfile,\n"
#~ "                           const char *directory,\n"
#~ "                           const struct guestfs_tar_in_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in_opts_argv (guestfs_h *g,\n"
#~ "                           const char *tarfile,\n"
#~ "                           const char *directory,\n"
#~ "                           const struct guestfs_tar_in_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_tar_in_opts>."
#~ msgstr "これは L</guestfs_tar_in_opts> の \"argv variant\" です。"

#~ msgid "guestfs_tar_out"
#~ msgstr "guestfs_tar_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarfile);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarfile);\n"
#~ "\n"

#~ msgid "guestfs_tar_out_opts"
#~ msgstr "guestfs_tar_out_opts"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out_opts (guestfs_h *g,\n"
#~ "                       const char *directory,\n"
#~ "                       const char *tarfile,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out_opts (guestfs_h *g,\n"
#~ "                       const char *directory,\n"
#~ "                       const char *tarfile,\n"
#~ "                       ...);\n"
#~ "\n"

#~ msgid "guestfs_tar_out_opts_va"
#~ msgstr "guestfs_tar_out_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out_opts_va (guestfs_h *g,\n"
#~ "                          const char *directory,\n"
#~ "                          const char *tarfile,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out_opts_va (guestfs_h *g,\n"
#~ "                          const char *directory,\n"
#~ "                          const char *tarfile,\n"
#~ "                          va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_tar_out_opts>."
#~ msgstr "これは L</guestfs_tar_out_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_tar_out_opts_argv"
#~ msgstr "guestfs_tar_out_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out_opts_argv (guestfs_h *g,\n"
#~ "                            const char *directory,\n"
#~ "                            const char *tarfile,\n"
#~ "                            const struct guestfs_tar_out_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out_opts_argv (guestfs_h *g,\n"
#~ "                            const char *directory,\n"
#~ "                            const char *tarfile,\n"
#~ "                            const struct guestfs_tar_out_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_tar_out_opts>."
#~ msgstr "これは L</guestfs_tar_out_opts> の \"argv variant\" です。"

#~ msgid "guestfs_tgz_in"
#~ msgstr "guestfs_tgz_in"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tgz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tgz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_tar_in> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_tar_in> を使用してください。"

#~ msgid "guestfs_tgz_out"
#~ msgstr "guestfs_tgz_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tgz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tgz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_tar_out> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_tar_out> を使用してください。"

#~ msgid "guestfs_touch"
#~ msgstr "guestfs_touch"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_touch (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_touch (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_truncate"
#~ msgstr "guestfs_truncate"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_truncate (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_truncate (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"

#~ msgid "guestfs_truncate_size"
#~ msgstr "guestfs_truncate_size"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_truncate_size (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_truncate_size (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        int64_t size);\n"
#~ "\n"

#~ msgid "guestfs_tune2fs"
#~ msgstr "guestfs_tune2fs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tune2fs (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tune2fs (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_TUNE2FS_FORCE, int force,\n"
#~ " GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
#~ " GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
#~ " GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
#~ " GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
#~ " GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
#~ " GUESTFS_TUNE2FS_USER, int64_t user,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_TUNE2FS_FORCE, int force,\n"
#~ " GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
#~ " GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
#~ " GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
#~ " GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
#~ " GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
#~ " GUESTFS_TUNE2FS_USER, int64_t user,\n"
#~ "\n"

#~ msgid "guestfs_tune2fs_va"
#~ msgstr "guestfs_tune2fs_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tune2fs_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tune2fs_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_tune2fs>."
#~ msgstr "これは L</guestfs_tune2fs> の \"va_list variant\" です。"

#~ msgid "guestfs_tune2fs_argv"
#~ msgstr "guestfs_tune2fs_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tune2fs_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_tune2fs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tune2fs_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_tune2fs_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_tune2fs>."
#~ msgstr "これは L</guestfs_tune2fs> の \"argv variant\" です。"

#~ msgid "guestfs_tune2fs_l"
#~ msgstr "guestfs_tune2fs_l"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_tune2fs_l (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_tune2fs_l (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"

#~ msgid "guestfs_txz_in"
#~ msgstr "guestfs_txz_in"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_txz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_txz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"

#~ msgid "guestfs_txz_out"
#~ msgstr "guestfs_txz_out"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_txz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_txz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"

#~ msgid "guestfs_umask"
#~ msgstr "guestfs_umask"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umask (guestfs_h *g,\n"
#~ "                int mask);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umask (guestfs_h *g,\n"
#~ "                int mask);\n"
#~ "\n"

#~ msgid ""
#~ "See also C<guestfs_get_umask>, L<umask(2)>, C<guestfs_mknod>, "
#~ "C<guestfs_mkdir>."
#~ msgstr ""
#~ "C<guestfs_get_umask>, L<umask(2)>, C<guestfs_mknod>, C<guestfs_mkdir> 参"
#~ "照。"

#~ msgid "guestfs_umount"
#~ msgstr "guestfs_umount"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount (guestfs_h *g,\n"
#~ "                 const char *pathordevice);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount (guestfs_h *g,\n"
#~ "                 const char *pathordevice);\n"
#~ "\n"

#~ msgid ""
#~ "This function is provided for backwards compatibility with earlier "
#~ "versions of libguestfs.  It simply calls L</guestfs_umount_opts> with no "
#~ "optional arguments."
#~ msgstr ""
#~ "この関数は以前のバージョンの libguestfs との後方互換性のために提供されてい"
#~ "ます。単にオプション引数なしで L</guestfs_umount_opts> を呼び出します。"

#~ msgid "guestfs_umount_opts"
#~ msgstr "guestfs_umount_opts"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_opts (guestfs_h *g,\n"
#~ "                      const char *pathordevice,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_opts (guestfs_h *g,\n"
#~ "                      const char *pathordevice,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_UMOUNT_OPTS_FORCE, int force,\n"
#~ " GUESTFS_UMOUNT_OPTS_LAZYUNMOUNT, int lazyunmount,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_UMOUNT_OPTS_FORCE, int force,\n"
#~ " GUESTFS_UMOUNT_OPTS_LAZYUNMOUNT, int lazyunmount,\n"
#~ "\n"

#~ msgid "guestfs_umount_opts_va"
#~ msgstr "guestfs_umount_opts_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_opts_va (guestfs_h *g,\n"
#~ "                         const char *pathordevice,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_opts_va (guestfs_h *g,\n"
#~ "                         const char *pathordevice,\n"
#~ "                         va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_umount_opts>."
#~ msgstr "これは L</guestfs_umount_opts> の \"va_list variant\" です。"

#~ msgid "guestfs_umount_opts_argv"
#~ msgstr "guestfs_umount_opts_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_opts_argv (guestfs_h *g,\n"
#~ "                           const char *pathordevice,\n"
#~ "                           const struct guestfs_umount_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_opts_argv (guestfs_h *g,\n"
#~ "                           const char *pathordevice,\n"
#~ "                           const struct guestfs_umount_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_umount_opts>."
#~ msgstr "これは L</guestfs_umount_opts> の \"argv variant\" です。"

#~ msgid "guestfs_umount_all"
#~ msgstr "guestfs_umount_all"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_all (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_umount_local"
#~ msgstr "guestfs_umount_local"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_local (guestfs_h *g,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_local (guestfs_h *g,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
#~ "\n"

#~ msgid "guestfs_umount_local_va"
#~ msgstr "guestfs_umount_local_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_local_va (guestfs_h *g,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_local_va (guestfs_h *g,\n"
#~ "                          va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_umount_local>."
#~ msgstr "これは L</guestfs_umount_local> の \"va_list variant\" です。"

#~ msgid "guestfs_umount_local_argv"
#~ msgstr "guestfs_umount_local_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_local_argv (guestfs_h *g,\n"
#~ "                            const struct guestfs_umount_local_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_local_argv (guestfs_h *g,\n"
#~ "                            const struct guestfs_umount_local_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_umount_local>."
#~ msgstr "これは L</guestfs_umount_local> の \"argv variant\" です。"

#~ msgid "guestfs_upload"
#~ msgstr "guestfs_upload"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_upload (guestfs_h *g,\n"
#~ "                 const char *filename,\n"
#~ "                 const char *remotefilename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_upload (guestfs_h *g,\n"
#~ "                 const char *filename,\n"
#~ "                 const char *remotefilename);\n"
#~ "\n"

#~ msgid "See also C<guestfs_download>."
#~ msgstr "C<guestfs_download> 参照。"

#~ msgid "guestfs_upload_offset"
#~ msgstr "guestfs_upload_offset"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_upload_offset (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        const char *remotefilename,\n"
#~ "                        int64_t offset);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_upload_offset (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        const char *remotefilename,\n"
#~ "                        int64_t offset);\n"
#~ "\n"

#~ msgid "See also C<guestfs_upload>, C<guestfs_pwrite>."
#~ msgstr "C<guestfs_upload>, C<guestfs_pwrite> 参照。"

#~ msgid "guestfs_user_cancel"
#~ msgstr "guestfs_user_cancel"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_user_cancel (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_user_cancel (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_utimens"
#~ msgstr "guestfs_utimens"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_utimens (guestfs_h *g,\n"
#~ "                  const char *path,\n"
#~ "                  int64_t atsecs,\n"
#~ "                  int64_t atnsecs,\n"
#~ "                  int64_t mtsecs,\n"
#~ "                  int64_t mtnsecs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_utimens (guestfs_h *g,\n"
#~ "                  const char *path,\n"
#~ "                  int64_t atsecs,\n"
#~ "                  int64_t atnsecs,\n"
#~ "                  int64_t mtsecs,\n"
#~ "                  int64_t mtnsecs);\n"
#~ "\n"

#~ msgid "guestfs_utsname"
#~ msgstr "guestfs_utsname"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_utsname *\n"
#~ " guestfs_utsname (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_utsname *\n"
#~ " guestfs_utsname (guestfs_h *g);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a C<struct guestfs_utsname *>, or NULL if there was "
#~ "an error.  I<The caller must call C<guestfs_free_utsname> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_utsname *> を返します。エラーが起きた場合 "
#~ "NULL を返します。 I<呼び出し元は使用した後に C<guestfs_free_utsname> を呼"
#~ "び出す必要があります>。"

#~ msgid "(Added in 1.19.27)"
#~ msgstr "(1.19.27 において追加)"

#~ msgid "guestfs_version"
#~ msgstr "guestfs_version"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_version *\n"
#~ " guestfs_version (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_version *\n"
#~ " guestfs_version (guestfs_h *g);\n"
#~ "\n"

#~ msgid "(Added in 1.0.58)"
#~ msgstr "(1.0.58 において追加)"

#~ msgid "guestfs_vfs_label"
#~ msgstr "guestfs_vfs_label"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vfs_label (guestfs_h *g,\n"
#~ "                    const char *mountable);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vfs_label (guestfs_h *g,\n"
#~ "                    const char *mountable);\n"
#~ "\n"

#~ msgid "To find a filesystem from the label, use C<guestfs_findfs_label>."
#~ msgstr ""
#~ "ラベルからファイルシステムを検索するには C<guestfs_findfs_label> を使用し"
#~ "ます。"

#~ msgid "(Added in 1.3.18)"
#~ msgstr "(1.3.18 において追加)"

#~ msgid "guestfs_vfs_type"
#~ msgstr "guestfs_vfs_type"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vfs_type (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vfs_type (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"

#~ msgid "guestfs_vfs_uuid"
#~ msgstr "guestfs_vfs_uuid"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vfs_uuid (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vfs_uuid (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"

#~ msgid "To find a filesystem from the UUID, use C<guestfs_findfs_uuid>."
#~ msgstr ""
#~ "UUID からファイルシステムを検索するには C<guestfs_findfs_uuid> を使用しま"
#~ "す。"

#~ msgid "guestfs_vg_activate"
#~ msgstr "guestfs_vg_activate"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vg_activate (guestfs_h *g,\n"
#~ "                      int activate,\n"
#~ "                      char *const *volgroups);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vg_activate (guestfs_h *g,\n"
#~ "                      int activate,\n"
#~ "                      char *const *volgroups);\n"
#~ "\n"

#~ msgid "guestfs_vg_activate_all"
#~ msgstr "guestfs_vg_activate_all"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vg_activate_all (guestfs_h *g,\n"
#~ "                          int activate);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vg_activate_all (guestfs_h *g,\n"
#~ "                          int activate);\n"
#~ "\n"

#~ msgid "guestfs_vgchange_uuid"
#~ msgstr "guestfs_vgchange_uuid"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgchange_uuid (guestfs_h *g,\n"
#~ "                        const char *vg);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgchange_uuid (guestfs_h *g,\n"
#~ "                        const char *vg);\n"
#~ "\n"

#~ msgid "guestfs_vgchange_uuid_all"
#~ msgstr "guestfs_vgchange_uuid_all"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgchange_uuid_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgchange_uuid_all (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_vgcreate"
#~ msgstr "guestfs_vgcreate"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgcreate (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   char *const *physvols);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgcreate (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   char *const *physvols);\n"
#~ "\n"

#~ msgid "guestfs_vglvuuids"
#~ msgstr "guestfs_vglvuuids"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_vglvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_vglvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"

#~ msgid "See also C<guestfs_vgpvuuids>."
#~ msgstr "C<guestfs_vgpvuuids> 参照。"

#~ msgid "guestfs_vgmeta"
#~ msgstr "guestfs_vgmeta"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vgmeta (guestfs_h *g,\n"
#~ "                 const char *vgname,\n"
#~ "                 size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vgmeta (guestfs_h *g,\n"
#~ "                 const char *vgname,\n"
#~ "                 size_t *size_r);\n"
#~ "\n"

#~ msgid "(Added in 1.17.20)"
#~ msgstr "(1.17.20 において追加)"

#~ msgid "guestfs_vgpvuuids"
#~ msgstr "guestfs_vgpvuuids"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_vgpvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_vgpvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"

#~ msgid "See also C<guestfs_vglvuuids>."
#~ msgstr "C<guestfs_vglvuuids> 参照。"

#~ msgid "guestfs_vgremove"
#~ msgstr "guestfs_vgremove"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgremove (guestfs_h *g,\n"
#~ "                   const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgremove (guestfs_h *g,\n"
#~ "                   const char *vgname);\n"
#~ "\n"

#~ msgid "guestfs_vgrename"
#~ msgstr "guestfs_vgrename"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgrename (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   const char *newvolgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgrename (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   const char *newvolgroup);\n"
#~ "\n"

#~ msgid "guestfs_vgs"
#~ msgstr "guestfs_vgs"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_vgs (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_vgs (guestfs_h *g);\n"
#~ "\n"

#~ msgid "See also C<guestfs_vgs_full>."
#~ msgstr "C<guestfs_vgs_full> 参照。"

#~ msgid "guestfs_vgs_full"
#~ msgstr "guestfs_vgs_full"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_vg_list *\n"
#~ " guestfs_vgs_full (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_lvm_vg_list *\n"
#~ " guestfs_vgs_full (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_vgscan"
#~ msgstr "guestfs_vgscan"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgscan (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgscan (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_vguuid"
#~ msgstr "guestfs_vguuid"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vguuid (guestfs_h *g,\n"
#~ "                 const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vguuid (guestfs_h *g,\n"
#~ "                 const char *vgname);\n"
#~ "\n"

#~ msgid "guestfs_wait_ready"
#~ msgstr "guestfs_wait_ready"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wait_ready (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wait_ready (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_wc_c"
#~ msgstr "guestfs_wc_c"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wc_c (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wc_c (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_wc_l"
#~ msgstr "guestfs_wc_l"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wc_l (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wc_l (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_wc_w"
#~ msgstr "guestfs_wc_w"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wc_w (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wc_w (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#~ msgid "guestfs_wipefs"
#~ msgstr "guestfs_wipefs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wipefs (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wipefs (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "Compare with C<guestfs_zero> which zeroes the first few blocks of a "
#~ "device."
#~ msgstr ""
#~ "デバイスの先頭数ブロックにゼロを書き込む C<guestfs_zero> と比較します。"

#~ msgid "guestfs_write"
#~ msgstr "guestfs_write"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_write (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                const char *content,\n"
#~ "                size_t content_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_write (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                const char *content,\n"
#~ "                size_t content_size);\n"
#~ "\n"

#~ msgid "See also C<guestfs_write_append>."
#~ msgstr "C<guestfs_write_append> 参照。"

#~ msgid "guestfs_write_append"
#~ msgstr "guestfs_write_append"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_write_append (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *content,\n"
#~ "                       size_t content_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_write_append (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *content,\n"
#~ "                       size_t content_size);\n"
#~ "\n"

#~ msgid "See also C<guestfs_write>."
#~ msgstr "C<guestfs_write> 参照。"

#~ msgid "guestfs_write_file"
#~ msgstr "guestfs_write_file"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_write_file (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     const char *content,\n"
#~ "                     int size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_write_file (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     const char *content,\n"
#~ "                     int size);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_write> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_write> を使用してください。"

#~ msgid "guestfs_xfs_admin"
#~ msgstr "guestfs_xfs_admin"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_admin (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_admin (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_XFS_ADMIN_EXTUNWRITTEN, int extunwritten,\n"
#~ " GUESTFS_XFS_ADMIN_IMGFILE, int imgfile,\n"
#~ " GUESTFS_XFS_ADMIN_V2LOG, int v2log,\n"
#~ " GUESTFS_XFS_ADMIN_PROJID32BIT, int projid32bit,\n"
#~ " GUESTFS_XFS_ADMIN_LAZYCOUNTER, int lazycounter,\n"
#~ " GUESTFS_XFS_ADMIN_LABEL, const char *label,\n"
#~ " GUESTFS_XFS_ADMIN_UUID, const char *uuid,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_XFS_ADMIN_EXTUNWRITTEN, int extunwritten,\n"
#~ " GUESTFS_XFS_ADMIN_IMGFILE, int imgfile,\n"
#~ " GUESTFS_XFS_ADMIN_V2LOG, int v2log,\n"
#~ " GUESTFS_XFS_ADMIN_PROJID32BIT, int projid32bit,\n"
#~ " GUESTFS_XFS_ADMIN_LAZYCOUNTER, int lazycounter,\n"
#~ " GUESTFS_XFS_ADMIN_LABEL, const char *label,\n"
#~ " GUESTFS_XFS_ADMIN_UUID, const char *uuid,\n"
#~ "\n"

#~ msgid "(Added in 1.19.33)"
#~ msgstr "(1.19.33 において追加)"

#~ msgid "guestfs_xfs_admin_va"
#~ msgstr "guestfs_xfs_admin_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_admin_va (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_admin_va (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_xfs_admin>."
#~ msgstr "これは L</guestfs_xfs_admin> の \"va_list variant\" です。"

#~ msgid "guestfs_xfs_admin_argv"
#~ msgstr "guestfs_xfs_admin_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_admin_argv (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_xfs_admin_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_admin_argv (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_xfs_admin_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_xfs_admin>."
#~ msgstr "これは L</guestfs_xfs_admin> の \"argv variant\" です。"

#~ msgid "guestfs_xfs_growfs"
#~ msgstr "guestfs_xfs_growfs"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_growfs (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_growfs (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_XFS_GROWFS_DATASEC, int datasec,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSEC, int logsec,\n"
#~ " GUESTFS_XFS_GROWFS_RTSEC, int rtsec,\n"
#~ " GUESTFS_XFS_GROWFS_DATASIZE, int64_t datasize,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSIZE, int64_t logsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTSIZE, int64_t rtsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTEXTSIZE, int64_t rtextsize,\n"
#~ " GUESTFS_XFS_GROWFS_MAXPCT, int maxpct,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_XFS_GROWFS_DATASEC, int datasec,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSEC, int logsec,\n"
#~ " GUESTFS_XFS_GROWFS_RTSEC, int rtsec,\n"
#~ " GUESTFS_XFS_GROWFS_DATASIZE, int64_t datasize,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSIZE, int64_t logsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTSIZE, int64_t rtsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTEXTSIZE, int64_t rtextsize,\n"
#~ " GUESTFS_XFS_GROWFS_MAXPCT, int maxpct,\n"
#~ "\n"

#~ msgid "(Added in 1.19.28)"
#~ msgstr "(1.19.28 において追加)"

#~ msgid "guestfs_xfs_growfs_va"
#~ msgstr "guestfs_xfs_growfs_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_growfs_va (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_growfs_va (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_xfs_growfs>."
#~ msgstr "これは L</guestfs_xfs_growfs> の \"va_list variant\" です。"

#~ msgid "guestfs_xfs_growfs_argv"
#~ msgstr "guestfs_xfs_growfs_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_growfs_argv (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          const struct guestfs_xfs_growfs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_growfs_argv (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          const struct guestfs_xfs_growfs_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_xfs_growfs>."
#~ msgstr "これは L</guestfs_xfs_growfs> の \"argv variant\" です。"

#~ msgid "guestfs_xfs_info"
#~ msgstr "guestfs_xfs_info"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xfsinfo *\n"
#~ " guestfs_xfs_info (guestfs_h *g,\n"
#~ "                   const char *pathordevice);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xfsinfo *\n"
#~ " guestfs_xfs_info (guestfs_h *g,\n"
#~ "                   const char *pathordevice);\n"
#~ "\n"

#~ msgid ""
#~ "This function returns a C<struct guestfs_xfsinfo *>, or NULL if there was "
#~ "an error.  I<The caller must call C<guestfs_free_xfsinfo> after use>."
#~ msgstr ""
#~ "この関数は C<struct guestfs_xfsinfo *> を返します。エラーが起きた場合 "
#~ "NULL を返します。I<呼び出し元は使用した後に C<guestfs_free_xfsinfo> を呼び"
#~ "出す必要があります>。"

#~ msgid "(Added in 1.19.21)"
#~ msgstr "(1.19.21 において追加)"

#~ msgid "guestfs_xfs_repair"
#~ msgstr "guestfs_xfs_repair"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_repair (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_repair (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_XFS_REPAIR_FORCELOGZERO, int forcelogzero,\n"
#~ " GUESTFS_XFS_REPAIR_NOMODIFY, int nomodify,\n"
#~ " GUESTFS_XFS_REPAIR_NOPREFETCH, int noprefetch,\n"
#~ " GUESTFS_XFS_REPAIR_FORCEGEOMETRY, int forcegeometry,\n"
#~ " GUESTFS_XFS_REPAIR_MAXMEM, int64_t maxmem,\n"
#~ " GUESTFS_XFS_REPAIR_IHASHSIZE, int64_t ihashsize,\n"
#~ " GUESTFS_XFS_REPAIR_BHASHSIZE, int64_t bhashsize,\n"
#~ " GUESTFS_XFS_REPAIR_AGSTRIDE, int64_t agstride,\n"
#~ " GUESTFS_XFS_REPAIR_LOGDEV, const char *logdev,\n"
#~ " GUESTFS_XFS_REPAIR_RTDEV, const char *rtdev,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_XFS_REPAIR_FORCELOGZERO, int forcelogzero,\n"
#~ " GUESTFS_XFS_REPAIR_NOMODIFY, int nomodify,\n"
#~ " GUESTFS_XFS_REPAIR_NOPREFETCH, int noprefetch,\n"
#~ " GUESTFS_XFS_REPAIR_FORCEGEOMETRY, int forcegeometry,\n"
#~ " GUESTFS_XFS_REPAIR_MAXMEM, int64_t maxmem,\n"
#~ " GUESTFS_XFS_REPAIR_IHASHSIZE, int64_t ihashsize,\n"
#~ " GUESTFS_XFS_REPAIR_BHASHSIZE, int64_t bhashsize,\n"
#~ " GUESTFS_XFS_REPAIR_AGSTRIDE, int64_t agstride,\n"
#~ " GUESTFS_XFS_REPAIR_LOGDEV, const char *logdev,\n"
#~ " GUESTFS_XFS_REPAIR_RTDEV, const char *rtdev,\n"
#~ "\n"

#~ msgid "(Added in 1.19.36)"
#~ msgstr "(1.19.36 において追加)"

#~ msgid "guestfs_xfs_repair_va"
#~ msgstr "guestfs_xfs_repair_va"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_repair_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_repair_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"

#~ msgid "This is the \"va_list variant\" of L</guestfs_xfs_repair>."
#~ msgstr "これは L</guestfs_xfs_repair> の \"va_list variant\" です。"

#~ msgid "guestfs_xfs_repair_argv"
#~ msgstr "guestfs_xfs_repair_argv"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_repair_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_xfs_repair_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_repair_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_xfs_repair_argv *optargs);\n"
#~ "\n"

#~ msgid "This is the \"argv variant\" of L</guestfs_xfs_repair>."
#~ msgstr "これは L</guestfs_xfs_repair> の \"argv variant\" です。"

#~ msgid "guestfs_zegrep"
#~ msgstr "guestfs_zegrep"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zegrep (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zegrep (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_zegrepi"
#~ msgstr "guestfs_zegrepi"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zegrepi (guestfs_h *g,\n"
#~ "                  const char *regex,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zegrepi (guestfs_h *g,\n"
#~ "                  const char *regex,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_zero"
#~ msgstr "guestfs_zero"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zero (guestfs_h *g,\n"
#~ "               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zero (guestfs_h *g,\n"
#~ "               const char *device);\n"
#~ "\n"

#~ msgid ""
#~ "See also: C<guestfs_zero_device>, C<guestfs_scrub_device>, "
#~ "C<guestfs_is_zero_device>"
#~ msgstr ""
#~ "関連項目: C<guestfs_zero_device>, C<guestfs_scrub_device>, "
#~ "C<guestfs_is_zero_device>"

#~ msgid "guestfs_zero_device"
#~ msgstr "guestfs_zero_device"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zero_device (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zero_device (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"

#~ msgid "(Added in 1.3.1)"
#~ msgstr "(1.3.1 において追加)"

#~ msgid "guestfs_zero_free_space"
#~ msgstr "guestfs_zero_free_space"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zero_free_space (guestfs_h *g,\n"
#~ "                          const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zero_free_space (guestfs_h *g,\n"
#~ "                          const char *directory);\n"
#~ "\n"

#~ msgid "guestfs_zerofree"
#~ msgstr "guestfs_zerofree"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zerofree (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zerofree (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#~ msgid "guestfs_zfgrep"
#~ msgstr "guestfs_zfgrep"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zfgrep (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zfgrep (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "guestfs_zfgrepi"
#~ msgstr "guestfs_zfgrepi"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zfgrepi (guestfs_h *g,\n"
#~ "                  const char *pattern,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zfgrepi (guestfs_h *g,\n"
#~ "                  const char *pattern,\n"
#~ "                  const char *path);\n"
#~ "\n"

#~ msgid "guestfs_zfile"
#~ msgstr "guestfs_zfile"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_zfile (guestfs_h *g,\n"
#~ "                const char *meth,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_zfile (guestfs_h *g,\n"
#~ "                const char *meth,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid ""
#~ "I<This function is deprecated.> In new code, use the L</guestfs_file> "
#~ "call instead."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</guestfs_file> "
#~ "を使用してください。"

#~ msgid "guestfs_zgrep"
#~ msgstr "guestfs_zgrep"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zgrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zgrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"

#~ msgid "guestfs_zgrepi"
#~ msgstr "guestfs_zgrepi"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zgrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zgrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"

#~ msgid "B<acl>"
#~ msgstr "B<acl>"

#~ msgid ""
#~ "The following functions: L</guestfs_acl_delete_def_file> L</"
#~ "guestfs_acl_get_file> L</guestfs_acl_set_file>"
#~ msgstr ""
#~ "次の関数: L</guestfs_acl_delete_def_file> L</guestfs_acl_get_file> L</"
#~ "guestfs_acl_set_file>"

#~ msgid "B<btrfs>"
#~ msgstr "B<btrfs>"

#~ msgid "B<extlinux>"
#~ msgstr "B<extlinux>"

#~ msgid "The following functions: L</guestfs_extlinux>"
#~ msgstr "次の関数: L</guestfs_extlinux>"

#~ msgid "B<fstrim>"
#~ msgstr "B<fstrim>"

#~ msgid "The following functions: L</guestfs_fstrim>"
#~ msgstr "次の関数: L</guestfs_fstrim>"

#~ msgid "B<grub>"
#~ msgstr "B<grub>"

#~ msgid "The following functions: L</guestfs_grub_install>"
#~ msgstr "次の関数: L</guestfs_grub_install>"

#~ msgid "B<hivex>"
#~ msgstr "B<hivex>"

#~ msgid "B<inotify>"
#~ msgstr "B<inotify>"

#~ msgid ""
#~ "The following functions: L</guestfs_inotify_add_watch> L</"
#~ "guestfs_inotify_close> L</guestfs_inotify_files> L</guestfs_inotify_init> "
#~ "L</guestfs_inotify_read> L</guestfs_inotify_rm_watch>"
#~ msgstr ""
#~ "次の関数: L</guestfs_inotify_add_watch> L</guestfs_inotify_close> L</"
#~ "guestfs_inotify_files> L</guestfs_inotify_init> L</guestfs_inotify_read> "
#~ "L</guestfs_inotify_rm_watch>"

#~ msgid ""
#~ "The following functions: L</guestfs_ldmtool_create_all> L</"
#~ "guestfs_ldmtool_diskgroup_disks> L</guestfs_ldmtool_diskgroup_name> L</"
#~ "guestfs_ldmtool_diskgroup_volumes> L</guestfs_ldmtool_remove_all> L</"
#~ "guestfs_ldmtool_scan> L</guestfs_ldmtool_scan_devices> L</"
#~ "guestfs_ldmtool_volume_hint> L</guestfs_ldmtool_volume_partitions> L</"
#~ "guestfs_ldmtool_volume_type> L</guestfs_list_ldm_partitions> L</"
#~ "guestfs_list_ldm_volumes>"
#~ msgstr ""
#~ "次の関数: L</guestfs_ldmtool_create_all> L</"
#~ "guestfs_ldmtool_diskgroup_disks> L</guestfs_ldmtool_diskgroup_name> L</"
#~ "guestfs_ldmtool_diskgroup_volumes> L</guestfs_ldmtool_remove_all> L</"
#~ "guestfs_ldmtool_scan> L</guestfs_ldmtool_scan_devices> L</"
#~ "guestfs_ldmtool_volume_hint> L</guestfs_ldmtool_volume_partitions> L</"
#~ "guestfs_ldmtool_volume_type> L</guestfs_list_ldm_partitions> L</"
#~ "guestfs_list_ldm_volumes>"

#~ msgid "B<linuxcaps>"
#~ msgstr "B<linuxcaps>"

#~ msgid ""
#~ "The following functions: L</guestfs_cap_get_file> L</guestfs_cap_set_file>"
#~ msgstr "次の関数: L</guestfs_cap_get_file> L</guestfs_cap_set_file>"

#~ msgid "B<linuxfsuuid>"
#~ msgstr "B<linuxfsuuid>"

#~ msgid ""
#~ "The following functions: L</guestfs_mke2fs_JU> L</guestfs_mke2journal_U> "
#~ "L</guestfs_mkswap_U> L</guestfs_swapoff_uuid> L</guestfs_swapon_uuid>"
#~ msgstr ""
#~ "次の関数: L</guestfs_mke2fs_JU> L</guestfs_mke2journal_U> L</"
#~ "guestfs_mkswap_U> L</guestfs_swapoff_uuid> L</guestfs_swapon_uuid>"

#~ msgid "B<linuxmodules>"
#~ msgstr "B<linuxmodules>"

#~ msgid "The following functions: L</guestfs_modprobe>"
#~ msgstr "次の関数: L</guestfs_modprobe>"

#~ msgid "B<linuxxattrs>"
#~ msgstr "B<linuxxattrs>"

#~ msgid ""
#~ "The following functions: L</guestfs_getxattr> L</guestfs_getxattrs> L</"
#~ "guestfs_internal_lxattrlist> L</guestfs_lgetxattr> L</guestfs_lgetxattrs> "
#~ "L</guestfs_lremovexattr> L</guestfs_lsetxattr> L</guestfs_removexattr> L</"
#~ "guestfs_setxattr>"
#~ msgstr ""
#~ "次の関数: L</guestfs_getxattr> L</guestfs_getxattrs> L</"
#~ "guestfs_internal_lxattrlist> L</guestfs_lgetxattr> L</guestfs_lgetxattrs> "
#~ "L</guestfs_lremovexattr> L</guestfs_lsetxattr> L</guestfs_removexattr> L</"
#~ "guestfs_setxattr>"

#~ msgid "B<luks>"
#~ msgstr "B<luks>"

#~ msgid ""
#~ "The following functions: L</guestfs_luks_add_key> L</guestfs_luks_close> "
#~ "L</guestfs_luks_format> L</guestfs_luks_format_cipher> L</"
#~ "guestfs_luks_kill_slot> L</guestfs_luks_open> L</guestfs_luks_open_ro>"
#~ msgstr ""
#~ "次の関数: L</guestfs_luks_add_key> L</guestfs_luks_close> L</"
#~ "guestfs_luks_format> L</guestfs_luks_format_cipher> L</"
#~ "guestfs_luks_kill_slot> L</guestfs_luks_open> L</guestfs_luks_open_ro>"

#~ msgid "B<lvm2>"
#~ msgstr "B<lvm2>"

#~ msgid ""
#~ "The following functions: L</guestfs_lvcreate> L</guestfs_lvcreate_free> "
#~ "L</guestfs_lvm_remove_all> L</guestfs_lvm_set_filter> L</"
#~ "guestfs_lvremove> L</guestfs_lvresize> L</guestfs_lvresize_free> L</"
#~ "guestfs_lvs> L</guestfs_lvs_full> L</guestfs_pvchange_uuid> L</"
#~ "guestfs_pvchange_uuid_all> L</guestfs_pvcreate> L</guestfs_pvremove> L</"
#~ "guestfs_pvresize> L</guestfs_pvresize_size> L</guestfs_pvs> L</"
#~ "guestfs_pvs_full> L</guestfs_vg_activate> L</guestfs_vg_activate_all> L</"
#~ "guestfs_vgchange_uuid> L</guestfs_vgchange_uuid_all> L</guestfs_vgcreate> "
#~ "L</guestfs_vgmeta> L</guestfs_vgremove> L</guestfs_vgs> L</"
#~ "guestfs_vgs_full>"
#~ msgstr ""
#~ "次の関数: L</guestfs_lvcreate> L</guestfs_lvcreate_free> L</"
#~ "guestfs_lvm_remove_all> L</guestfs_lvm_set_filter> L</guestfs_lvremove> "
#~ "L</guestfs_lvresize> L</guestfs_lvresize_free> L</guestfs_lvs> L</"
#~ "guestfs_lvs_full> L</guestfs_pvchange_uuid> L</guestfs_pvchange_uuid_all> "
#~ "L</guestfs_pvcreate> L</guestfs_pvremove> L</guestfs_pvresize> L</"
#~ "guestfs_pvresize_size> L</guestfs_pvs> L</guestfs_pvs_full> L</"
#~ "guestfs_vg_activate> L</guestfs_vg_activate_all> L</"
#~ "guestfs_vgchange_uuid> L</guestfs_vgchange_uuid_all> L</guestfs_vgcreate> "
#~ "L</guestfs_vgmeta> L</guestfs_vgremove> L</guestfs_vgs> L</"
#~ "guestfs_vgs_full>"

#~ msgid "B<mdadm>"
#~ msgstr "B<mdadm>"

#~ msgid ""
#~ "The following functions: L</guestfs_md_create> L</guestfs_md_detail> L</"
#~ "guestfs_md_stat> L</guestfs_md_stop>"
#~ msgstr ""
#~ "次の関数: L</guestfs_md_create> L</guestfs_md_detail> L</guestfs_md_stat> "
#~ "L</guestfs_md_stop>"

#~ msgid "B<mknod>"
#~ msgstr "B<mknod>"

#~ msgid ""
#~ "The following functions: L</guestfs_mkfifo> L</guestfs_mknod> L</"
#~ "guestfs_mknod_b> L</guestfs_mknod_c>"
#~ msgstr ""
#~ "次の関数: L</guestfs_mkfifo> L</guestfs_mknod> L</guestfs_mknod_b> L</"
#~ "guestfs_mknod_c>"

#~ msgid "B<ntfs3g>"
#~ msgstr "B<ntfs3g>"

#~ msgid ""
#~ "The following functions: L</guestfs_ntfs_3g_probe> L</"
#~ "guestfs_ntfsclone_in> L</guestfs_ntfsclone_out> L</guestfs_ntfsfix>"
#~ msgstr ""
#~ "次の関数: L</guestfs_ntfs_3g_probe> L</guestfs_ntfsclone_in> L</"
#~ "guestfs_ntfsclone_out> L</guestfs_ntfsfix>"

#~ msgid "B<ntfsprogs>"
#~ msgstr "B<ntfsprogs>"

#~ msgid ""
#~ "The following functions: L</guestfs_ntfsresize> L</"
#~ "guestfs_ntfsresize_size>"
#~ msgstr "次の関数: L</guestfs_ntfsresize> L</guestfs_ntfsresize_size>"

#~ msgid "B<rsync>"
#~ msgstr "B<rsync>"

#~ msgid ""
#~ "The following functions: L</guestfs_rsync> L</guestfs_rsync_in> L</"
#~ "guestfs_rsync_out>"
#~ msgstr ""
#~ "次の関数: L</guestfs_rsync> L</guestfs_rsync_in> L</guestfs_rsync_out>"

#~ msgid "B<scrub>"
#~ msgstr "B<scrub>"

#~ msgid ""
#~ "The following functions: L</guestfs_scrub_device> L</guestfs_scrub_file> "
#~ "L</guestfs_scrub_freespace>"
#~ msgstr ""
#~ "次の関数: L</guestfs_scrub_device> L</guestfs_scrub_file> L</"
#~ "guestfs_scrub_freespace>"

#~ msgid "B<selinux>"
#~ msgstr "B<selinux>"

#~ msgid "The following functions: L</guestfs_getcon> L</guestfs_setcon>"
#~ msgstr "次の関数: L</guestfs_getcon> L</guestfs_setcon>"

#~ msgid "The following functions: L</guestfs_syslinux>"
#~ msgstr "次の関数: L</guestfs_syslinux>"

#~ msgid "B<wipefs>"
#~ msgstr "B<wipefs>"

#~ msgid "The following functions: L</guestfs_wipefs>"
#~ msgstr "次の関数: L</guestfs_wipefs>"

#~ msgid "B<xfs>"
#~ msgstr "B<xfs>"

#~ msgid ""
#~ "The following functions: L</guestfs_xfs_admin> L</guestfs_xfs_growfs> L</"
#~ "guestfs_xfs_info> L</guestfs_xfs_repair>"
#~ msgstr ""
#~ "次の関数: L</guestfs_xfs_admin> L</guestfs_xfs_growfs> L</"
#~ "guestfs_xfs_info> L</guestfs_xfs_repair>"

#~ msgid "B<xz>"
#~ msgstr "B<xz>"

#~ msgid "The following functions: L</guestfs_txz_in> L</guestfs_txz_out>"
#~ msgstr "次の関数: L</guestfs_txz_in> L</guestfs_txz_out>"

#~ msgid "B<zerofree>"
#~ msgstr "B<zerofree>"

#~ msgid "The following functions: L</guestfs_zerofree>"
#~ msgstr "次の関数: L</guestfs_zerofree>"

#~ msgid "guestfs_int_bool"
#~ msgstr "guestfs_int_bool"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_int_bool {\n"
#~ "   int32_t i;\n"
#~ "   int32_t b;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_int_bool {\n"
#~ "   int32_t i;\n"
#~ "   int32_t b;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_lvm_pv"
#~ msgstr "guestfs_lvm_pv"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_pv {\n"
#~ "   char *pv_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char pv_uuid[32];\n"
#~ "   char *pv_fmt;\n"
#~ "   uint64_t pv_size;\n"
#~ "   uint64_t dev_size;\n"
#~ "   uint64_t pv_free;\n"
#~ "   uint64_t pv_used;\n"
#~ "   char *pv_attr;\n"
#~ "   int64_t pv_pe_count;\n"
#~ "   int64_t pv_pe_alloc_count;\n"
#~ "   char *pv_tags;\n"
#~ "   uint64_t pe_start;\n"
#~ "   int64_t pv_mda_count;\n"
#~ "   uint64_t pv_mda_free;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_lvm_pv {\n"
#~ "   char *pv_name;\n"
#~ "   /* 以下の項目は NULL 終了していないので、表示するときに注意してください: */\n"
#~ "   char pv_uuid[32];\n"
#~ "   char *pv_fmt;\n"
#~ "   uint64_t pv_size;\n"
#~ "   uint64_t dev_size;\n"
#~ "   uint64_t pv_free;\n"
#~ "   uint64_t pv_used;\n"
#~ "   char *pv_attr;\n"
#~ "   int64_t pv_pe_count;\n"
#~ "   int64_t pv_pe_alloc_count;\n"
#~ "   char *pv_tags;\n"
#~ "   uint64_t pe_start;\n"
#~ "   int64_t pv_mda_count;\n"
#~ "   uint64_t pv_mda_free;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_lvm_vg"
#~ msgstr "guestfs_lvm_vg"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_vg {\n"
#~ "   char *vg_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char vg_uuid[32];\n"
#~ "   char *vg_fmt;\n"
#~ "   char *vg_attr;\n"
#~ "   uint64_t vg_size;\n"
#~ "   uint64_t vg_free;\n"
#~ "   char *vg_sysid;\n"
#~ "   uint64_t vg_extent_size;\n"
#~ "   int64_t vg_extent_count;\n"
#~ "   int64_t vg_free_count;\n"
#~ "   int64_t max_lv;\n"
#~ "   int64_t max_pv;\n"
#~ "   int64_t pv_count;\n"
#~ "   int64_t lv_count;\n"
#~ "   int64_t snap_count;\n"
#~ "   int64_t vg_seqno;\n"
#~ "   char *vg_tags;\n"
#~ "   int64_t vg_mda_count;\n"
#~ "   uint64_t vg_mda_free;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_lvm_vg {\n"
#~ "   char *vg_name;\n"
#~ "   /* 以下の項目は NULL 終了していないので、表示するときに注意してください: */\n"
#~ "   char vg_uuid[32];\n"
#~ "   char *vg_fmt;\n"
#~ "   char *vg_attr;\n"
#~ "   uint64_t vg_size;\n"
#~ "   uint64_t vg_free;\n"
#~ "   char *vg_sysid;\n"
#~ "   uint64_t vg_extent_size;\n"
#~ "   int64_t vg_extent_count;\n"
#~ "   int64_t vg_free_count;\n"
#~ "   int64_t max_lv;\n"
#~ "   int64_t max_pv;\n"
#~ "   int64_t pv_count;\n"
#~ "   int64_t lv_count;\n"
#~ "   int64_t snap_count;\n"
#~ "   int64_t vg_seqno;\n"
#~ "   char *vg_tags;\n"
#~ "   int64_t vg_mda_count;\n"
#~ "   uint64_t vg_mda_free;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_lvm_lv"
#~ msgstr "guestfs_lvm_lv"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_lv {\n"
#~ "   char *lv_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char lv_uuid[32];\n"
#~ "   char *lv_attr;\n"
#~ "   int64_t lv_major;\n"
#~ "   int64_t lv_minor;\n"
#~ "   int64_t lv_kernel_major;\n"
#~ "   int64_t lv_kernel_minor;\n"
#~ "   uint64_t lv_size;\n"
#~ "   int64_t seg_count;\n"
#~ "   char *origin;\n"
#~ "   /* The next field is [0..100] or -1 meaning 'not present': */\n"
#~ "   float snap_percent;\n"
#~ "   /* The next field is [0..100] or -1 meaning 'not present': */\n"
#~ "   float copy_percent;\n"
#~ "   char *move_pv;\n"
#~ "   char *lv_tags;\n"
#~ "   char *mirror_log;\n"
#~ "   char *modules;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_lvm_lv {\n"
#~ "   char *lv_name;\n"
#~ "   /* 以下の項目は NULL 終了していないので、表示するときに注意してください: */\n"
#~ "   char lv_uuid[32];\n"
#~ "   char *lv_attr;\n"
#~ "   int64_t lv_major;\n"
#~ "   int64_t lv_minor;\n"
#~ "   int64_t lv_kernel_major;\n"
#~ "   int64_t lv_kernel_minor;\n"
#~ "   uint64_t lv_size;\n"
#~ "   int64_t seg_count;\n"
#~ "   char *origin;\n"
#~ "   /* 以下の項目は [0..100] または存在しないことを意味する -1 : */\n"
#~ "   float snap_percent;\n"
#~ "   /* 以下の項目は [0..100] または存在しないことを意味する -1 : */\n"
#~ "   float copy_percent;\n"
#~ "   char *move_pv;\n"
#~ "   char *lv_tags;\n"
#~ "   char *mirror_log;\n"
#~ "   char *modules;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat {\n"
#~ "   int64_t dev;\n"
#~ "   int64_t ino;\n"
#~ "   int64_t mode;\n"
#~ "   int64_t nlink;\n"
#~ "   int64_t uid;\n"
#~ "   int64_t gid;\n"
#~ "   int64_t rdev;\n"
#~ "   int64_t size;\n"
#~ "   int64_t blksize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t atime;\n"
#~ "   int64_t mtime;\n"
#~ "   int64_t ctime;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_stat {\n"
#~ "   int64_t dev;\n"
#~ "   int64_t ino;\n"
#~ "   int64_t mode;\n"
#~ "   int64_t nlink;\n"
#~ "   int64_t uid;\n"
#~ "   int64_t gid;\n"
#~ "   int64_t rdev;\n"
#~ "   int64_t size;\n"
#~ "   int64_t blksize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t atime;\n"
#~ "   int64_t mtime;\n"
#~ "   int64_t ctime;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_statvfs {\n"
#~ "   int64_t bsize;\n"
#~ "   int64_t frsize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t bfree;\n"
#~ "   int64_t bavail;\n"
#~ "   int64_t files;\n"
#~ "   int64_t ffree;\n"
#~ "   int64_t favail;\n"
#~ "   int64_t fsid;\n"
#~ "   int64_t flag;\n"
#~ "   int64_t namemax;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_statvfs {\n"
#~ "   int64_t bsize;\n"
#~ "   int64_t frsize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t bfree;\n"
#~ "   int64_t bavail;\n"
#~ "   int64_t files;\n"
#~ "   int64_t ffree;\n"
#~ "   int64_t favail;\n"
#~ "   int64_t fsid;\n"
#~ "   int64_t flag;\n"
#~ "   int64_t namemax;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_dirent"
#~ msgstr "guestfs_dirent"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_dirent {\n"
#~ "   int64_t ino;\n"
#~ "   char ftyp;\n"
#~ "   char *name;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_dirent {\n"
#~ "   int64_t ino;\n"
#~ "   char ftyp;\n"
#~ "   char *name;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_version {\n"
#~ "   int64_t major;\n"
#~ "   int64_t minor;\n"
#~ "   int64_t release;\n"
#~ "   char *extra;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_version {\n"
#~ "   int64_t major;\n"
#~ "   int64_t minor;\n"
#~ "   int64_t release;\n"
#~ "   char *extra;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_xattr"
#~ msgstr "guestfs_xattr"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr {\n"
#~ "   char *attrname;\n"
#~ "   /* The next two fields describe a byte array. */\n"
#~ "   uint32_t attrval_len;\n"
#~ "   char *attrval;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_xattr {\n"
#~ "   char *attrname;\n"
#~ "   /* 以下の 2 項目はバイト列を表します。 */\n"
#~ "   uint32_t attrval_len;\n"
#~ "   char *attrval;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_inotify_event"
#~ msgstr "guestfs_inotify_event"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_inotify_event {\n"
#~ "   int64_t in_wd;\n"
#~ "   uint32_t in_mask;\n"
#~ "   uint32_t in_cookie;\n"
#~ "   char *in_name;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_inotify_event {\n"
#~ "   int64_t in_wd;\n"
#~ "   uint32_t in_mask;\n"
#~ "   uint32_t in_cookie;\n"
#~ "   char *in_name;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_partition"
#~ msgstr "guestfs_partition"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_partition {\n"
#~ "   int32_t part_num;\n"
#~ "   uint64_t part_start;\n"
#~ "   uint64_t part_end;\n"
#~ "   uint64_t part_size;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_partition {\n"
#~ "   int32_t part_num;\n"
#~ "   uint64_t part_start;\n"
#~ "   uint64_t part_end;\n"
#~ "   uint64_t part_size;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_application"
#~ msgstr "guestfs_application"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application {\n"
#~ "   char *app_name;\n"
#~ "   char *app_display_name;\n"
#~ "   int32_t app_epoch;\n"
#~ "   char *app_version;\n"
#~ "   char *app_release;\n"
#~ "   char *app_install_path;\n"
#~ "   char *app_trans_path;\n"
#~ "   char *app_publisher;\n"
#~ "   char *app_url;\n"
#~ "   char *app_source_package;\n"
#~ "   char *app_summary;\n"
#~ "   char *app_description;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_application {\n"
#~ "   char *app_name;\n"
#~ "   char *app_display_name;\n"
#~ "   int32_t app_epoch;\n"
#~ "   char *app_version;\n"
#~ "   char *app_release;\n"
#~ "   char *app_install_path;\n"
#~ "   char *app_trans_path;\n"
#~ "   char *app_publisher;\n"
#~ "   char *app_url;\n"
#~ "   char *app_source_package;\n"
#~ "   char *app_summary;\n"
#~ "   char *app_description;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_application2"
#~ msgstr "guestfs_application2"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application2 {\n"
#~ "   char *app2_name;\n"
#~ "   char *app2_display_name;\n"
#~ "   int32_t app2_epoch;\n"
#~ "   char *app2_version;\n"
#~ "   char *app2_release;\n"
#~ "   char *app2_arch;\n"
#~ "   char *app2_install_path;\n"
#~ "   char *app2_trans_path;\n"
#~ "   char *app2_publisher;\n"
#~ "   char *app2_url;\n"
#~ "   char *app2_source_package;\n"
#~ "   char *app2_summary;\n"
#~ "   char *app2_description;\n"
#~ "   char *app2_spare1;\n"
#~ "   char *app2_spare2;\n"
#~ "   char *app2_spare3;\n"
#~ "   char *app2_spare4;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_application2 {\n"
#~ "   char *app2_name;\n"
#~ "   char *app2_display_name;\n"
#~ "   int32_t app2_epoch;\n"
#~ "   char *app2_version;\n"
#~ "   char *app2_release;\n"
#~ "   char *app2_arch;\n"
#~ "   char *app2_install_path;\n"
#~ "   char *app2_trans_path;\n"
#~ "   char *app2_publisher;\n"
#~ "   char *app2_url;\n"
#~ "   char *app2_source_package;\n"
#~ "   char *app2_summary;\n"
#~ "   char *app2_description;\n"
#~ "   char *app2_spare1;\n"
#~ "   char *app2_spare2;\n"
#~ "   char *app2_spare3;\n"
#~ "   char *app2_spare4;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_isoinfo {\n"
#~ "   char *iso_system_id;\n"
#~ "   char *iso_volume_id;\n"
#~ "   uint32_t iso_volume_space_size;\n"
#~ "   uint32_t iso_volume_set_size;\n"
#~ "   uint32_t iso_volume_sequence_number;\n"
#~ "   uint32_t iso_logical_block_size;\n"
#~ "   char *iso_volume_set_id;\n"
#~ "   char *iso_publisher_id;\n"
#~ "   char *iso_data_preparer_id;\n"
#~ "   char *iso_application_id;\n"
#~ "   char *iso_copyright_file_id;\n"
#~ "   char *iso_abstract_file_id;\n"
#~ "   char *iso_bibliographic_file_id;\n"
#~ "   int64_t iso_volume_creation_t;\n"
#~ "   int64_t iso_volume_modification_t;\n"
#~ "   int64_t iso_volume_expiration_t;\n"
#~ "   int64_t iso_volume_effective_t;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_isoinfo {\n"
#~ "   char *iso_system_id;\n"
#~ "   char *iso_volume_id;\n"
#~ "   uint32_t iso_volume_space_size;\n"
#~ "   uint32_t iso_volume_set_size;\n"
#~ "   uint32_t iso_volume_sequence_number;\n"
#~ "   uint32_t iso_logical_block_size;\n"
#~ "   char *iso_volume_set_id;\n"
#~ "   char *iso_publisher_id;\n"
#~ "   char *iso_data_preparer_id;\n"
#~ "   char *iso_application_id;\n"
#~ "   char *iso_copyright_file_id;\n"
#~ "   char *iso_abstract_file_id;\n"
#~ "   char *iso_bibliographic_file_id;\n"
#~ "   int64_t iso_volume_creation_t;\n"
#~ "   int64_t iso_volume_modification_t;\n"
#~ "   int64_t iso_volume_expiration_t;\n"
#~ "   int64_t iso_volume_effective_t;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_mdstat"
#~ msgstr "guestfs_mdstat"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_mdstat {\n"
#~ "   char *mdstat_device;\n"
#~ "   int32_t mdstat_index;\n"
#~ "   char *mdstat_flags;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_mdstat {\n"
#~ "   char *mdstat_device;\n"
#~ "   int32_t mdstat_index;\n"
#~ "   char *mdstat_flags;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_btrfssubvolume"
#~ msgstr "guestfs_btrfssubvolume"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfssubvolume {\n"
#~ "   uint64_t btrfssubvolume_id;\n"
#~ "   uint64_t btrfssubvolume_top_level_id;\n"
#~ "   char *btrfssubvolume_path;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume {\n"
#~ "   uint64_t btrfssubvolume_id;\n"
#~ "   uint64_t btrfssubvolume_top_level_id;\n"
#~ "   char *btrfssubvolume_path;\n"
#~ " };\n"
#~ " \n"

#, fuzzy
#~ msgid "guestfs_btrfsqgroup"
#~ msgstr "guestfs_get_pgroup"

#, fuzzy, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfsqgroup {\n"
#~ "   char *btrfsqgroup_id;\n"
#~ "   uint64_t btrfsqgroup_rfer;\n"
#~ "   uint64_t btrfsqgroup_excl;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume {\n"
#~ "   uint64_t btrfssubvolume_id;\n"
#~ "   uint64_t btrfssubvolume_top_level_id;\n"
#~ "   char *btrfssubvolume_path;\n"
#~ " };\n"
#~ " \n"

#, fuzzy
#~ msgid "guestfs_btrfsbalance"
#~ msgstr "guestfs_btrfs_filesystem_balance"

#, fuzzy
#~ msgid "guestfs_btrfsscrub"
#~ msgstr "guestfs_btrfs_fsck_argv"

#~ msgid "guestfs_xfsinfo"
#~ msgstr "guestfs_xfsinfo"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xfsinfo {\n"
#~ "   char *xfs_mntpoint;\n"
#~ "   uint32_t xfs_inodesize;\n"
#~ "   uint32_t xfs_agcount;\n"
#~ "   uint32_t xfs_agsize;\n"
#~ "   uint32_t xfs_sectsize;\n"
#~ "   uint32_t xfs_attr;\n"
#~ "   uint32_t xfs_blocksize;\n"
#~ "   uint64_t xfs_datablocks;\n"
#~ "   uint32_t xfs_imaxpct;\n"
#~ "   uint32_t xfs_sunit;\n"
#~ "   uint32_t xfs_swidth;\n"
#~ "   uint32_t xfs_dirversion;\n"
#~ "   uint32_t xfs_dirblocksize;\n"
#~ "   uint32_t xfs_cimode;\n"
#~ "   char *xfs_logname;\n"
#~ "   uint32_t xfs_logblocksize;\n"
#~ "   uint32_t xfs_logblocks;\n"
#~ "   uint32_t xfs_logversion;\n"
#~ "   uint32_t xfs_logsectsize;\n"
#~ "   uint32_t xfs_logsunit;\n"
#~ "   uint32_t xfs_lazycount;\n"
#~ "   char *xfs_rtname;\n"
#~ "   uint32_t xfs_rtextsize;\n"
#~ "   uint64_t xfs_rtblocks;\n"
#~ "   uint64_t xfs_rtextents;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_xfsinfo {\n"
#~ "   char *xfs_mntpoint;\n"
#~ "   uint32_t xfs_inodesize;\n"
#~ "   uint32_t xfs_agcount;\n"
#~ "   uint32_t xfs_agsize;\n"
#~ "   uint32_t xfs_sectsize;\n"
#~ "   uint32_t xfs_attr;\n"
#~ "   uint32_t xfs_blocksize;\n"
#~ "   uint64_t xfs_datablocks;\n"
#~ "   uint32_t xfs_imaxpct;\n"
#~ "   uint32_t xfs_sunit;\n"
#~ "   uint32_t xfs_swidth;\n"
#~ "   uint32_t xfs_dirversion;\n"
#~ "   uint32_t xfs_dirblocksize;\n"
#~ "   uint32_t xfs_cimode;\n"
#~ "   char *xfs_logname;\n"
#~ "   uint32_t xfs_logblocksize;\n"
#~ "   uint32_t xfs_logblocks;\n"
#~ "   uint32_t xfs_logversion;\n"
#~ "   uint32_t xfs_logsectsize;\n"
#~ "   uint32_t xfs_logsunit;\n"
#~ "   uint32_t xfs_lazycount;\n"
#~ "   char *xfs_rtname;\n"
#~ "   uint32_t xfs_rtextsize;\n"
#~ "   uint64_t xfs_rtblocks;\n"
#~ "   uint64_t xfs_rtextents;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_utsname {\n"
#~ "   char *uts_sysname;\n"
#~ "   char *uts_release;\n"
#~ "   char *uts_version;\n"
#~ "   char *uts_machine;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_utsname {\n"
#~ "   char *uts_sysname;\n"
#~ "   char *uts_release;\n"
#~ "   char *uts_version;\n"
#~ "   char *uts_machine;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_hivex_node"
#~ msgstr "guestfs_hivex_node"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_node {\n"
#~ "   int64_t hivex_node_h;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_hivex_node {\n"
#~ "   int64_t hivex_node_h;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs_hivex_value"
#~ msgstr "guestfs_hivex_value"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_value {\n"
#~ "   int64_t hivex_value_h;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_hivex_value {\n"
#~ "   int64_t hivex_value_h;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs - Library for accessing and modifying virtual machine images"
#~ msgstr "guestfs - 仮想マシンイメージのアクセスまたは変更のためのライブラリ"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " guestfs_launch (g);\n"
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " guestfs_umount (g, \"/\");\n"
#~ " guestfs_shutdown (g);\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " guestfs_launch (g);\n"
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " guestfs_umount (g, \"/\");\n"
#~ " guestfs_shutdown (g);\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#~ msgid "API OVERVIEW"
#~ msgstr "API 概要"

#~ msgid ""
#~ "This section provides a gentler overview of the libguestfs API.  We also "
#~ "try to group API calls together, where that may not be obvious from "
#~ "reading about the individual calls in the main section of this manual."
#~ msgstr ""
#~ "このセクションは libguestfs API の簡単な概要を示します。  一緒に呼ばれるグ"
#~ "ループ API を試みます。これは、このマニュアルのメインセクションにおいて"
#~ "個々の呼び出しに関して読む必要が無くなります。"

#~ msgid "HANDLES"
#~ msgstr "ハンドル"

#~ msgid ""
#~ "Before you can use libguestfs calls, you have to create a handle.  Then "
#~ "you must add at least one disk image to the handle, followed by launching "
#~ "the handle, then performing whatever operations you want, and finally "
#~ "closing the handle.  By convention we use the single letter C<g> for the "
#~ "name of the handle variable, although of course you can use any name you "
#~ "want."
#~ msgstr ""
#~ "libguestfs 呼び出しを使用する前に、ハンドルを作成する必要があります。そし"
#~ "て、少なくとも 1 つのディスクイメージをハンドルを追加する必要があります。"
#~ "続けて、ハンドルを開始して、好きな操作を実行します。最後に、ハンドルを閉じ"
#~ "ます。利便性のため、ハンドル変数の名前を 1 文字の C<g> を使用します。もち"
#~ "ろん、好きな名前を使うことができます。"

#~ msgid ""
#~ "The general structure of all libguestfs-using programs looks like this:"
#~ msgstr ""
#~ "libguestfs を使用しているすべてのプログラムの一般的な構造はこのようなもの"
#~ "です:"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " \n"
#~ msgstr ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Call guestfs_add_drive additional times if there are\n"
#~ "  * multiple disk images.\n"
#~ "  */\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " \n"
#~ msgstr ""
#~ " /* 複数のディスクイメージがあれば、その回数だけ\n"
#~ "  * guestfs_add_drive を呼び出します。\n"
#~ "  */\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Most manipulation calls won't work until you've launched\n"
#~ "  * the handle 'g'.  You have to do this _after_ adding drives\n"
#~ "  * and _before_ other commands.\n"
#~ "  */\n"
#~ " guestfs_launch (g);\n"
#~ " \n"
#~ msgstr ""
#~ " /* 大抵の操作呼び出しはハンドル 'g' を開始するまでうまく\n"
#~ "  * 機能しません。ドライブを追加した「後」、他のコマンド\n"
#~ "  * を実行する「前」にこれを行う必要があります。\n"
#~ "  */\n"
#~ " guestfs_launch (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Now you can perform filesystem actions on the guest\n"
#~ "  * disk image.\n"
#~ "  */\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " \n"
#~ msgstr ""
#~ " /* これで、仮想マシンのイメージにおいて、ファイルシステムの\n"
#~ "  * アクションを実行できます。\n"
#~ "  */\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Synchronize the disk.  This is the opposite of guestfs_launch. */\n"
#~ " guestfs_shutdown (g);\n"
#~ " \n"
#~ msgstr ""
#~ " /* ディスクを同期します。これは guestfs_launch の反対です。 */\n"
#~ " guestfs_shutdown (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Close and free the handle 'g'. */\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " /* ハンドル 'g' を閉じて開放します。 */\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#~ msgid "DISK IMAGES"
#~ msgstr "ディスクイメージ"

#~ msgid ""
#~ "The image filename (C<\"guest.img\"> in the example above) could be a "
#~ "disk image from a virtual machine, a L<dd(1)> copy of a physical hard "
#~ "disk, an actual block device, or simply an empty file of zeroes that you "
#~ "have created through L<posix_fallocate(3)>.  Libguestfs lets you do "
#~ "useful things to all of these."
#~ msgstr ""
#~ "イメージファイル名 (上の例では C<\"guest.img\">) は、仮想マシンのディスク"
#~ "イメージ、物理ハードディスクの L<dd(1)> コピー、実際のブロックデバイス、単"
#~ "に L<posix_fallocate(3)> から作成した 0 の空ファイルがありえます。"
#~ "libguestfs はこれらすべてに役に立つことをさせます。"

#~ msgid ""
#~ "The call you should use in modern code for adding drives is L</"
#~ "guestfs_add_drive_opts>.  To add a disk image, allowing writes, and "
#~ "specifying that the format is raw, do:"
#~ msgstr ""
#~ "近代的なコードにおいてドライブを追加するために使用する呼び出しは L</"
#~ "guestfs_add_drive_opts> です。書き込み許可、raw 形式指定にて、ディスクイ"
#~ "メージを追加するには、次を実行します:"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         -1);\n"
#~ "\n"

#~ msgid "You can add a disk read-only using:"
#~ msgstr "以下を使用して、読み込み専用のディスクを追加できます:"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"

#~ msgid ""
#~ "Be extremely cautious if the disk image is in use, eg. if it is being "
#~ "used by a virtual machine.  Adding it read-write will almost certainly "
#~ "cause disk corruption, but adding it read-only is safe."
#~ msgstr ""
#~ "ディスクイメージが使用中ならば、たとえば仮想マシンにより使用されているなら"
#~ "ば、特に注意してください。読み書き可能で追加することにより、ほぼ確実にディ"
#~ "スク破損を引き起こします。一方、読み込み専用で追加することは安全です。"

#~ msgid ""
#~ "Once L</guestfs_launch> has been called you cannot add any more images.  "
#~ "You can call L</guestfs_list_devices> to get a list of the device names, "
#~ "in the order that you added them.  See also L</BLOCK DEVICE NAMING> below."
#~ msgstr ""
#~ "一度 L</guestfs_launch> が呼び出されると、これ以上イメージを追加することは"
#~ "できません。それらを追加するためには、デバイス名の一覧を取得するために L</"
#~ "guestfs_list_devices> を呼び出せます。以下の L</ブロックデバイス命名法> を"
#~ "参照してください。"

#~ msgid "MOUNTING"
#~ msgstr "マウント"

#~ msgid ""
#~ "To mount a filesystem read-only, use L</guestfs_mount_ro>.  There are "
#~ "several other variations of the C<guestfs_mount_*> call."
#~ msgstr ""
#~ "ファイルシステムを読み込み専用でマウントするには L</guestfs_mount_ro> を使"
#~ "用します。いくつかの他の変種 C<guestfs_mount_*> 呼び出しがあります。"

#~ msgid "FILESYSTEM ACCESS AND MODIFICATION"
#~ msgstr "ファイルシステムのアクセスおよび変更"

#~ msgid ""
#~ "The majority of the libguestfs API consists of fairly low-level calls for "
#~ "accessing and modifying the files, directories, symlinks etc on mounted "
#~ "filesystems.  There are over a hundred such calls which you can find "
#~ "listed in detail below in this man page, and we don't even pretend to "
#~ "cover them all in this overview."
#~ msgstr ""
#~ "libguestfs API の大半は、マウントされたファイルシステムにあるファイル、"
#~ "ディレクトリー、シンボリックリンクなどを参照および変更するためのかなり低レ"
#~ "ベルな関数呼び出しから構成されます。このマニュアルページにおいて以下に詳細"
#~ "に一覧化されている、そのような呼び出しは 100 以上あります。この概要におい"
#~ "てすべてを取り扱うことは考えていません。"

#~ msgid ""
#~ "Specify filenames as full paths, starting with C<\"/\"> and including the "
#~ "mount point."
#~ msgstr ""
#~ "C<\"/\"> から始まり、マウントポイントを含む完全パスとしてファイル名を指定"
#~ "します。"

#~ msgid ""
#~ "For example, if you mounted a filesystem at C<\"/\"> and you want to read "
#~ "the file called C<\"etc/passwd\"> then you could do:"
#~ msgstr ""
#~ "たとえば、C<\"/\"> にファイルシステムをマウントして、C<\"etc/passwd\"> と"
#~ "いうファイルを読み込みたければ、次のようにできます:"

#, no-wrap
#~ msgid ""
#~ " char *data = guestfs_cat (g, \"/etc/passwd\");\n"
#~ "\n"
#~ msgstr ""
#~ " char *data = guestfs_cat (g, \"/etc/passwd\");\n"
#~ "\n"

#~ msgid ""
#~ "This would return C<data> as a newly allocated buffer containing the full "
#~ "content of that file (with some conditions: see also L</DOWNLOADING> "
#~ "below), or C<NULL> if there was an error."
#~ msgstr ""
#~ "これは、ファイルの完全な内容を含む（いくつかの条件とともに: 以下の L</ダウ"
#~ "ンロード> 参照）新しく割り当てられたバッファーとして C<data> を返します。"
#~ "もしくは、エラーがあれば C<NULL> を返します。"

#~ msgid ""
#~ "As another example, to create a top-level directory on that filesystem "
#~ "called C<\"var\"> you would do:"
#~ msgstr ""
#~ "もう 1 つの例として、ファイルシステムに C<\"var\"> という名前の最上位ディ"
#~ "レクトリーを作成するには、次のようにします:"

#, no-wrap
#~ msgid ""
#~ " guestfs_mkdir (g, \"/var\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_mkdir (g, \"/var\");\n"
#~ "\n"

#~ msgid "To create a symlink you could do:"
#~ msgstr "シンボリックリンクを作成するには次のようにできます:"

#, no-wrap
#~ msgid ""
#~ " guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
#~ "               \"/etc/rc3.d/S30portmap\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
#~ "               \"/etc/rc3.d/S30portmap\");\n"
#~ "\n"

#~ msgid ""
#~ "Libguestfs will reject attempts to use relative paths and there is no "
#~ "concept of a current working directory."
#~ msgstr ""
#~ "libguestfs は相対パスの使用を拒否します。現在の作業ディレクトリーという概"
#~ "念がありません。"

#~ msgid ""
#~ "Libguestfs can return errors in many situations: for example if the "
#~ "filesystem isn't writable, or if a file or directory that you requested "
#~ "doesn't exist.  If you are using the C API (documented here)  you have to "
#~ "check for those error conditions after each call.  (Other language "
#~ "bindings turn these errors into exceptions)."
#~ msgstr ""
#~ "libguestfs は多くの状況においてエラーを返します。たとえば、ファイルシステ"
#~ "ムが書き込みできない場合です。または、要求したファイルやディレクトリーが存"
#~ "在しない場合です。 C API (ここにドキュメント化されています) を使用している"
#~ "ならば、各呼び出しの後でそれらのエラー条件を確認する必要があります。（他の"
#~ "言語バインドは、これらのエラーを例外の中に含めてください。）"

#~ msgid ""
#~ "File writes are affected by the per-handle umask, set by calling L</"
#~ "guestfs_umask> and defaulting to 022.  See L</UMASK>."
#~ msgstr ""
#~ "ファイルの書き込みはハンドルごとの umask により影響されます。L</"
#~ "guestfs_umask> を呼び出すことにより設定され、初期値は 022 です。 L</"
#~ "UMASK> 参照。"

#~ msgid "PARTITIONING"
#~ msgstr "パーティション"

#~ msgid ""
#~ "Libguestfs contains API calls to read, create and modify partition tables "
#~ "on disk images."
#~ msgstr ""
#~ "libguestfs はディスクイメージにあるパーティションテーブルを読み込み、作"
#~ "成、変更するための API 呼び出しがあります。"

#~ msgid ""
#~ "In the common case where you want to create a single partition covering "
#~ "the whole disk, you should use the L</guestfs_part_disk> call:"
#~ msgstr ""
#~ "ディスク全体に単一のパーティションを作成したいという一般的な場合、 L</"
#~ "guestfs_part_disk> 呼び出しを使用できます:"

#, no-wrap
#~ msgid ""
#~ " const char *parttype = \"mbr\";\n"
#~ " if (disk_is_larger_than_2TB)\n"
#~ "   parttype = \"gpt\";\n"
#~ " guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *parttype = \"mbr\";\n"
#~ " if (disk_is_larger_than_2TB)\n"
#~ "   parttype = \"gpt\";\n"
#~ " guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
#~ "\n"

#~ msgid ""
#~ "Obviously this effectively wipes anything that was on that disk image "
#~ "before."
#~ msgstr ""
#~ "以前ディスクイメージにあったものを明示的にすべて効果的に完全消去します。"

#~ msgid "LVM2"
#~ msgstr "LVM2"

#~ msgid ""
#~ "Libguestfs provides access to a large part of the LVM2 API, such as L</"
#~ "guestfs_lvcreate> and L</guestfs_vgremove>.  It won't make much sense "
#~ "unless you familiarize yourself with the concepts of physical volumes, "
#~ "volume groups and logical volumes."
#~ msgstr ""
#~ "libguestfs は L</guestfs_lvcreate> および L</guestfs_vgremove> のような、"
#~ "大部分の LVM2 API にアクセスできます。物理ボリューム、ボリュームグループ、"
#~ "論理ボリュームの概念になじみがなければ、役に立たないかもしれません。"

#~ msgid ""
#~ "This author strongly recommends reading the LVM HOWTO, online at L<http://"
#~ "tldp.org/HOWTO/LVM-HOWTO/>."
#~ msgstr ""
#~ "この著者はオンラインで L<http://tldp.org/HOWTO/LVM-HOWTO/> にある  LVM "
#~ "HOWTO を読むことを強く推奨します。"

#~ msgid "DOWNLOADING"
#~ msgstr "ダウンロード"

#~ msgid ""
#~ "To download multiple files, see L</guestfs_tar_out> and L</"
#~ "guestfs_tgz_out>."
#~ msgstr ""
#~ "複数のファイルをダウンロードするには L</guestfs_tar_out> および L</"
#~ "guestfs_tgz_out> を参照してください。"

#~ msgid "UPLOADING"
#~ msgstr "アップロード方法"

#~ msgid ""
#~ "To write a small file with fixed content, use L</guestfs_write>.  To "
#~ "create a file of all zeroes, use L</guestfs_truncate_size> (sparse) or L</"
#~ "guestfs_fallocate64> (with all disk blocks allocated).  There are a "
#~ "variety of other functions for creating test files, for example L</"
#~ "guestfs_fill> and L</guestfs_fill_pattern>."
#~ msgstr ""
#~ "固定的な内容を持つ小さなファイルを書き込むには、L</guestfs_write> を使用し"
#~ "ます。すべて 0 のファイルを作成するには、L</guestfs_truncate_size> (スパー"
#~ "ス) または L</guestfs_fallocate64> (すべてのブロックを割り当て済み) を使用"
#~ "します。テストファイルを作成するためのさまざまな他の関数があります。たとえ"
#~ "ば、 L</guestfs_fill> や L</guestfs_fill_pattern> があります。"

#~ msgid ""
#~ "To upload multiple files, see L</guestfs_tar_in> and L</guestfs_tgz_in>."
#~ msgstr ""
#~ "複数のファイルをアップロードするには、L</guestfs_tar_in> および L</"
#~ "guestfs_tgz_in> を参照してください。"

#~ msgid "COPYING"
#~ msgstr "コピー方法"

#~ msgid ""
#~ "There are various different commands for copying between files and "
#~ "devices and in and out of the guest filesystem.  These are summarised in "
#~ "the table below."
#~ msgstr ""
#~ "ファイルとデバイスの間でコピーして、仮想マシンのファイルシステムと入出力す"
#~ "るための、さまざまなコマンドがあります。以下の表はその概要です。"

#~ msgid "B<file> to B<file>"
#~ msgstr "B<ファイル>からB<ファイル>"

#~ msgid ""
#~ "Use L</guestfs_cp> to copy a single file, or L</guestfs_cp_a> to copy "
#~ "directories recursively."
#~ msgstr ""
#~ "単一のファイルをコピーするには L</guestfs_cp> を使用します、またはディレク"
#~ "トリーを再帰的にコピーするには L</guestfs_cp_a> を使用します。"

#~ msgid "B<file> to B<device>"
#~ msgstr "B<ファイル>からB<デバイス>"

#~ msgid "B<device> to B<file>"
#~ msgstr "B<デバイス>からB<ファイル>"

#~ msgid "B<device> to B<device>"
#~ msgstr "B<デバイス>からB<デバイス>"

#~ msgid ""
#~ "Use L</guestfs_copy_file_to_device>, L</guestfs_copy_device_to_file>, or "
#~ "L</guestfs_copy_device_to_device>."
#~ msgstr ""
#~ "L</guestfs_copy_file_to_device>, L</guestfs_copy_device_to_file>, または "
#~ "L</guestfs_copy_device_to_device> を使用してください。"

#~ msgid "Example: duplicate the contents of an LV:"
#~ msgstr "例: 論理ボリュームの内容の複製:"

#, no-wrap
#~ msgid ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         /* -1 marks the end of the list of optional parameters */\n"
#~ "         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         /* -1 marks the end of the list of optional parameters */\n"
#~ "         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
#~ "         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
#~ "         -1);\n"
#~ "\n"

#~ msgid "B<file on the host> to B<file or device>"
#~ msgstr "B<ホストのファイル>からB<ファイルまたはデバイス>"

#~ msgid "Use L</guestfs_upload>.  See L</UPLOADING> above."
#~ msgstr "L</guestfs_upload> を使用します。上の L</アップロード方法> 参照。"

#~ msgid "B<file or device> to B<file on the host>"
#~ msgstr "B<ファイルまたはデバイス>からB<ホストのファイル>"

#~ msgid "Use L</guestfs_download>.  See L</DOWNLOADING> above."
#~ msgstr "L</guestfs_download> を使用します。上の L</ダウンロード方法> 参照。"

#~ msgid "For example, L<virt-cat(1)> writes its output to stdout by doing:"
#~ msgstr ""
#~ "たとえば、L<virt-cat(1)> は次のようにすることにより、出力を標準出力に書き"
#~ "込みます:"

#, no-wrap
#~ msgid ""
#~ " guestfs_download (g, filename, \"/dev/stdout\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_download (g, filename, \"/dev/stdout\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char devfd[64];\n"
#~ " snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
#~ " guestfs_tar_out (g, \"/\", devfd);\n"
#~ "\n"
#~ msgstr ""
#~ " char devfd[64];\n"
#~ " snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
#~ " guestfs_tar_out (g, \"/\", devfd);\n"
#~ "\n"

#~ msgid "LISTING FILES"
#~ msgstr "ファイルの一覧表示方法"

#~ msgid ""
#~ "L</guestfs_ll> is just designed for humans to read (mainly when using the "
#~ "L<guestfish(1)>-equivalent command C<ll>)."
#~ msgstr ""
#~ "L</guestfs_ll> は人間が読みやすいよう設計されています（おもに "
#~ "L<guestfish(1)> の同等なコマンド C<ll> を使用するとき）。"

#~ msgid ""
#~ "L</guestfs_ls> is a quick way to get a list of files in a directory from "
#~ "programs, as a flat list of strings."
#~ msgstr ""
#~ "L</guestfs_ls> は文字列の平らな一覧のように、ディレクトリーにあるファイル"
#~ "の一覧をプログラムから取得する素早い方法です。"

#~ msgid ""
#~ "L</guestfs_readdir> is a programmatic way to get a list of files in a "
#~ "directory, plus additional information about each one.  It is more "
#~ "equivalent to using the L<readdir(3)> call on a local filesystem."
#~ msgstr ""
#~ "L</guestfs_readdir> はディレクトリーにあるファイルの一覧、さらにそれぞれに"
#~ "関する追加の情報を取得するためのプログラム的な方法です。ローカルシステムに"
#~ "おける L<readdir(3)> 呼び出しを使用することとほぼ同様です。"

#~ msgid ""
#~ "L</guestfs_find> and L</guestfs_find0> can be used to recursively list "
#~ "files."
#~ msgstr ""
#~ "L</guestfs_find> と L</guestfs_find0> は再帰的にファイルを一覧表示するため"
#~ "に使用できます。"

#~ msgid "RUNNING COMMANDS"
#~ msgstr "コマンドの実行法"

#~ msgid ""
#~ "Although libguestfs is primarily an API for manipulating files inside "
#~ "guest images, we also provide some limited facilities for running "
#~ "commands inside guests."
#~ msgstr ""
#~ "libguestfs はおもに仮想マシンの中にあるファイルを操作するための API です。"
#~ "さらに、仮想マシンの中にあるコマンドを実行するために、限定された機能がいく"
#~ "つかあります。"

#~ msgid "There are many limitations to this:"
#~ msgstr "これには多くの制限があります:"

#~ msgid ""
#~ "The kernel version that the command runs under will be different from "
#~ "what it expects."
#~ msgstr ""
#~ "コマンドを実行するカーネルのバージョンは、期待するものにより異なります。"

#~ msgid ""
#~ "If the command needs to communicate with daemons, then most likely they "
#~ "won't be running."
#~ msgstr ""
#~ "コマンドがデーモンと通信する必要があれば、ほとんど動作しないでしょう。"

#~ msgid "The command will be running in limited memory."
#~ msgstr "コマンドは制限されたメモリーにおいて実行されます。"

#~ msgid ""
#~ "The network may not be available unless you enable it (see L</"
#~ "guestfs_set_network>)."
#~ msgstr ""
#~ "ネットワークは有効にしなければ利用できません（L</guestfs_set_network> 参"
#~ "照）。"

#~ msgid "Only supports Linux guests (not Windows, BSD, etc)."
#~ msgstr "Linux ゲストのみがサポートされます（Windows, BSD など）。"

#~ msgid "CONFIGURATION FILES"
#~ msgstr "設定ファイル"

#~ msgid "UMASK"
#~ msgstr "umask"

#~ msgid ""
#~ "The default umask is C<022>, so files are created with modes such as "
#~ "C<0644> and directories with C<0755>."
#~ msgstr ""
#~ "umask の初期値は C<022> です、そのためファイルは C<0644> のようなモードで"
#~ "作成され、ディレクトリーは C<0755> です。"

#~ msgid ""
#~ "There are two ways to avoid being affected by umask.  Either set umask to "
#~ "0 (call C<guestfs_umask (g, 0)> early after launching).  Or call L</"
#~ "guestfs_chmod> after creating each file or directory."
#~ msgstr ""
#~ "umask による影響を避けるには 2 つの方法があります。1 つは umask を 0 に設"
#~ "定することです（開始後の早いうちに C<guestfs_umask (g, 0)> を呼び出しま"
#~ "す）。もう 1 つは各ファイルまたはディレクトリーを作成した後に L</"
#~ "guestfs_chmod> を呼び出すことです。"

#~ msgid "For more information about umask, see L<umask(2)>."
#~ msgstr "umask に関する詳細は L<umask(2)> を参照してください。"

#~ msgid ""
#~ "Use L</guestfs_vfs_type> to identify LUKS-encrypted block devices (it "
#~ "returns the string C<crypto_LUKS>)."
#~ msgstr ""
#~ "LUKS 暗号化ブロックデバイス（それは文字列 C<crypto_LUKS> を返します）を識"
#~ "別するには L</guestfs_vfs_type> を使用します。"

#~ msgid ""
#~ "Then open these devices by calling L</guestfs_luks_open>.  Obviously you "
#~ "will require the passphrase!"
#~ msgstr ""
#~ "そして L</guestfs_luks_open> を呼び出すことにより、これらのデバイスを開き"
#~ "ます。明示的にパスフレーズが必要です。"

#, no-wrap
#~ msgid ""
#~ " /boot => /dev/sda1\n"
#~ " /     => /dev/vg_guest/lv_root\n"
#~ " /usr  => /dev/vg_guest/lv_usr\n"
#~ "\n"
#~ msgstr ""
#~ " /boot => /dev/sda1\n"
#~ " /     => /dev/vg_guest/lv_root\n"
#~ " /usr  => /dev/vg_guest/lv_usr\n"
#~ "\n"

#~ msgid ""
#~ "Encrypted disks must be opened before inspection.  See L</ENCRYPTED "
#~ "DISKS> for more details.  The L</guestfs_inspect_os> function just "
#~ "ignores any encrypted devices."
#~ msgstr ""
#~ "暗号化ディスクは検査の前に開く必要があります。詳細はL</暗号化ディスク>を参"
#~ "照してください。L</guestfs_inspect_os> 関数はすべての暗号化デバイスを単に"
#~ "無視します。"

#~ msgid "INSPECTING INSTALL DISKS"
#~ msgstr "インストールディスクの検査方法"

#~ msgid ""
#~ "Libguestfs (since 1.9.4) can detect some install disks, install CDs, live "
#~ "CDs and more."
#~ msgstr ""
#~ "libguestfs (1.9.4以降) は、いくつかのインストールディスク、インストール "
#~ "CD、live CD などを検知できます。"

#~ msgid ""
#~ "Libguestfs can mount NTFS partitions.  It does this using the L<http://"
#~ "www.ntfs-3g.org/> driver."
#~ msgstr ""
#~ "libguestfs は NTFS パーティションをマウントできます。そのためには "
#~ "L<http://www.ntfs-3g.org/> ドライバーを使用します。"

#~ msgid "DRIVE LETTERS AND PATHS"
#~ msgstr "ドライブレターとパス"

#~ msgid "ACCESSING THE WINDOWS REGISTRY"
#~ msgstr "Windows レジストリのアクセス方法"

#~ msgid "See also L<virt-win-reg(1)>."
#~ msgstr "L<virt-win-reg(1)> 参照。"

#~ msgid "SYMLINKS ON NTFS-3G FILESYSTEMS"
#~ msgstr "NTFS-3G ファイルシステムにおけるシンボリックリンク"

#~ msgid ""
#~ "L<http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-"
#~ "symbolic-links/>"
#~ msgstr ""
#~ "L<http://www.tuxera.com/community/ntfs-3g-advanced/junction-points-and-"
#~ "symbolic-links/>"

#~ msgid ""
#~ "L<http://www.tuxera.com/community/ntfs-3g-advanced/extended-attributes/>"
#~ msgstr ""
#~ "L<http://www.tuxera.com/community/ntfs-3g-advanced/extended-attributes/>"

#~ msgid ""
#~ "In Windows 8, the shutdown button does not shut down the guest at all.  "
#~ "Instead it usually hibernates the guest.  This is known as \"fast startup"
#~ "\"."
#~ msgstr ""
#~ "Windows 8 では、シャットダウンボタンを押しても仮想マシンがシャットダウンし"
#~ "ません。代わりに、仮想マシンが休止状態になります。これは \"高速スタート"
#~ "アップ\" として知られています。"

#~ msgid "Some suggested workarounds are:"
#~ msgstr "いくつかの推奨される回避策があります:"

#~ msgid "Mount read-only (eg. L</guestfs_mount_ro>)."
#~ msgstr "読み込み専用でマウントします (例: L</guestfs_mount_ro>)。"

#, no-wrap
#~ msgid ""
#~ " Please run 'e2fsck -fy <device>' to fix the filesystem\n"
#~ " after the aborted resize operation.\n"
#~ "\n"
#~ msgstr ""
#~ " 容量変更の操作を中断した後、ファイルシステムを\n"
#~ " 修復するために 'e2fsck -fy <device>' を実行してください。\n"
#~ "\n"

#~ msgid "B<C++>"
#~ msgstr "B<C++>"

#~ msgid ""
#~ "You can use the I<guestfs.h> header file from C++ programs.  The C++ API "
#~ "is identical to the C API.  C++ classes and exceptions are not used."
#~ msgstr ""
#~ "C++ プログラムから I<guestfs.h> ヘッダーファイルを使用できます。 C++ API "
#~ "は C API と同一です。 C++ のクラスと例外は使用されません。"

#~ msgid "B<C#>"
#~ msgstr "B<C#>"

#~ msgid "B<Erlang>"
#~ msgstr "B<Erlang>"

#~ msgid "See L<guestfs-erlang(3)>."
#~ msgstr "L<guestfs-erlang(3)> 参照。"

#~ msgid "B<GObject>"
#~ msgstr "B<GObject>"

#~ msgid "B<Haskell>"
#~ msgstr "B<Haskell>"

#~ msgid "B<Java>"
#~ msgstr "B<Java>"

#~ msgid "B<Lua>"
#~ msgstr "B<Lua>"

#~ msgid "See L<guestfs-lua(3)>."
#~ msgstr "L<guestfs-lua(3)> 参照。"

#~ msgid "B<OCaml>"
#~ msgstr "B<OCaml>"

#~ msgid "See L<guestfs-ocaml(3)>."
#~ msgstr "L<guestfs-ocaml(3)> 参照。"

#~ msgid "B<Perl>"
#~ msgstr "B<Perl>"

#~ msgid "See L<guestfs-perl(3)> and L<Sys::Guestfs(3)>."
#~ msgstr "L<guestfs-perl(3)> および L<Sys::Guestfs(3)> 参照。"

#~ msgid "B<PHP>"
#~ msgstr "B<PHP>"

#~ msgid "The PHP binding only works correctly on 64 bit machines."
#~ msgstr "PHP バインドは 64 ビットマシンにおいてのみ正しく動作します。"

#~ msgid "B<Python>"
#~ msgstr "B<Python>"

#~ msgid "See L<guestfs-python(3)>."
#~ msgstr "L<guestfs-python(3)> 参照。"

#~ msgid "B<Ruby>"
#~ msgstr "B<Ruby>"

#~ msgid "See L<guestfs-ruby(3)>."
#~ msgstr "L<guestfs-ruby(3)> 参照。"

#~ msgid "For JRuby, use the Java bindings."
#~ msgstr "JRuby に対しては Java バインドを使用します。"

#~ msgid "B<shell scripts>"
#~ msgstr "B<シェルスクリプト>"

#~ msgid "See L<guestfish(1)>."
#~ msgstr "L<guestfish(1)> 参照。"

#~ msgid "Read-only should be the default."
#~ msgstr "初期値は読み込み専用です。"

#~ msgid ""
#~ "In L<guestfish(3)>, I<--ro> should be the default, and you should have to "
#~ "specify I<--rw> if you want to make changes to the image."
#~ msgstr ""
#~ "L<guestfish(3)> では、 I<--ro> が初期値です。イメージを変更したいならば "
#~ "I<--rw> を指定する必要があります。"

#~ msgid "This would reduce the potential to corrupt live VM images."
#~ msgstr ""
#~ "これにより、動作中の仮想マシンのイメージを破壊する可能性を減らします。"

#~ msgid "guestfish command line is hard to use."
#~ msgstr "guestfish コマンドラインは使うのが難しいです。"

#~ msgid "The most common is L</guestfs_lvcreate>.  The guestfish command:"
#~ msgstr "最も一般的な L</guestfs_lvcreate> です。 guestfish コマンド:"

#, no-wrap
#~ msgid ""
#~ " lvcreate LV VG 100M\n"
#~ "\n"
#~ msgstr ""
#~ " lvcreate LV VG 100M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " type path = Path of string | Device of int | Partition of int * int\n"
#~ "\n"
#~ msgstr ""
#~ " type path = Path of string | Device of int | Partition of int * int\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " Path \"/foo/bar\"\n"
#~ " Device 1            (* /dev/sdb, or perhaps /dev/sda *)\n"
#~ " Partition (1, 2)    (* /dev/sdb2 (or is it /dev/sda2 or /dev/sdb3?) *)\n"
#~ " Path \"/dev/sdb2\"    (* not a device *)\n"
#~ "\n"
#~ msgstr ""
#~ " Path \"/foo/bar\"\n"
#~ " Device 1            (* /dev/sdb, または場合によると /dev/sda *)\n"
#~ " Partition (1, 2)    (* /dev/sdb2 (または /dev/sda2 や /dev/sdb3?) *)\n"
#~ " Path \"/dev/sdb2\"    (* デバイスではありません *)\n"
#~ "\n"

#~ msgid "KEYS AND PASSPHRASES"
#~ msgstr "キーとパスフレーズ"

#~ msgid ""
#~ "Certain libguestfs calls take a parameter that contains sensitive key "
#~ "material, passed in as a C string."
#~ msgstr ""
#~ "特定の libguestfs 呼び出しは、C 文字列のように渡される、秘密を扱うキーの材"
#~ "料を含むパラメーターをとります。"

#~ msgid "QEMU WRAPPERS"
#~ msgstr "QEMU ラッパー"

#~ msgid ""
#~ "If you want to compile your own qemu, run qemu from a non-standard "
#~ "location, or pass extra arguments to qemu, then you can write a shell-"
#~ "script wrapper around qemu."
#~ msgstr ""
#~ "自身の QEMU をコンパイルしたい、非標準の場所から QEMU を実行したい、または"
#~ "追加の引数を QEMU に渡したいならば、QEMU のシェルスクリプト・ラッパーを書"
#~ "けます。"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " qemudir=/home/rjones/d/qemu\n"
#~ " exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios \"$@\"\n"
#~ "\n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " qemudir=/home/rjones/d/qemu\n"
#~ " exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios \"$@\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " i=0\n"
#~ " while [ $# -gt 0 ]; do\n"
#~ "     case \"$1\" in\n"
#~ "     -machine)\n"
#~ "         shift 2;;\n"
#~ "     *)\n"
#~ "         args[i]=\"$1\"\n"
#~ "         (( i++ ))\n"
#~ "         shift ;;\n"
#~ "     esac\n"
#~ " done\n"
#~ " \n"
#~ msgstr ""
#~ " i=0\n"
#~ " while [ $# -gt 0 ]; do\n"
#~ "     case \"$1\" in\n"
#~ "     -machine)\n"
#~ "         shift 2;;\n"
#~ "     *)\n"
#~ "         args[i]=\"$1\"\n"
#~ "         (( i++ ))\n"
#~ "         shift ;;\n"
#~ "     esac\n"
#~ " done\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
#~ "\n"
#~ msgstr ""
#~ " exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
#~ "\n"

#~ msgid "C<appliance>"
#~ msgstr "C<appliance>"

#~ msgid "C<libvirt>"
#~ msgstr "C<libvirt>"

#~ msgid "C<libvirt:I<URI>>"
#~ msgstr "C<libvirt:I<URI>>"

#~ msgid "C<unix:I<path>>"
#~ msgstr "C<unix:I<path>>"

#~ msgid "Connect to the Unix domain socket I<path>."
#~ msgstr "Unix ドメイン・ソケット I<path> に接続します。"

#~ msgid "Using guestfs_add_domain with live flag"
#~ msgstr "live フラグを用いた guestfs_add_domain の使用方法"

#, no-wrap
#~ msgid ""
#~ " <domain>\n"
#~ "   ...\n"
#~ "   <devices>\n"
#~ "     ...\n"
#~ "     <channel type='unix'>\n"
#~ "       <source mode='bind' path='/path/to/socket'/>\n"
#~ "       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
#~ "     </channel>\n"
#~ "     ...\n"
#~ "   </devices>\n"
#~ " </domain>\n"
#~ "\n"
#~ msgstr ""
#~ " <domain>\n"
#~ "   ...\n"
#~ "   <devices>\n"
#~ "     ...\n"
#~ "     <channel type='unix'>\n"
#~ "       <source mode='bind' path='/path/to/socket'/>\n"
#~ "       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
#~ "     </channel>\n"
#~ "     ...\n"
#~ "   </devices>\n"
#~ " </domain>\n"
#~ "\n"

#~ msgid "ABI GUARANTEE"
#~ msgstr "ABI 保証"

#~ msgid "BLOCK DEVICE NAMING"
#~ msgstr "ブロックデバイスの命名法"

#~ msgid "DISK LABELS"
#~ msgstr "ディスクラベル"

#~ msgid "For example, to test if a feature is available, use code like this:"
#~ msgstr ""
#~ "たとえば、機能が利用可能であるかを確認するために、このようなコードを使用し"
#~ "ます:"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g;\n"
#~ " char **groups = [ \"btrfs\", NULL ];\n"
#~ " \n"
#~ msgstr ""
#~ " guestfs_h *g;\n"
#~ " char **groups = [ \"btrfs\", NULL ];\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"/dev/null\");\n"
#~ " guestfs_launch (g);\n"
#~ " if (guestfs_available (g, groups) == 0) {\n"
#~ "   // group(s) are available\n"
#~ " } else {\n"
#~ "   // group(s) are not available\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"/dev/null\");\n"
#~ " guestfs_launch (g);\n"
#~ " if (guestfs_available (g, groups) == 0) {\n"
#~ "   // group(s) are available\n"
#~ " } else {\n"
#~ "   // group(s) are not available\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#~ msgid "I<qcow2>"
#~ msgstr "I<qcow2>"

#~ msgid "I<vmdk>"
#~ msgstr "I<vmdk>"

#~ msgid "I<vdi>"
#~ msgstr "I<vdi>"

#~ msgid "I<vpc>"
#~ msgstr "I<vpc>"

#~ msgid "I<vhd>"
#~ msgstr "I<vhd>"

#~ msgid ""
#~ "VPC (old) and VHD (modern) are the native disk image format of Microsoft "
#~ "(and previously, Connectix) Virtual PC and Hyper-V."
#~ msgstr ""
#~ "VPC (旧) と VHD (新) は Microsoft (および、以前の Connectix) Virtual PC お"
#~ "よび Hyper-V のネイティブなディスクイメージ形式です。"

#~ msgid "Obsolete formats"
#~ msgstr "推奨されない形式"

#~ msgid "guestfs_h *"
#~ msgstr "guestfs_h *"

#~ msgid "guestfs_create"
#~ msgstr "guestfs_create"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *guestfs_create (void);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *guestfs_create (void);\n"
#~ "\n"

#~ msgid "Create a connection handle."
#~ msgstr "接続ハンドルを作成します。"

#~ msgid "After configuring the handle, you have to call L</guestfs_launch>."
#~ msgstr "ハンドルを設定後、 L</guestfs_launch> を呼び出す必要があります。"

#~ msgid "guestfs_create_flags"
#~ msgstr "guestfs_create_flags"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *guestfs_create_flags (unsigned flags [, ...]);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *guestfs_create_flags (unsigned flags [, ...]);\n"
#~ "\n"

#~ msgid "USING C<GUESTFS_CREATE_NO_ENVIRONMENT>"
#~ msgstr "C<GUESTFS_CREATE_NO_ENVIRONMENT> の使用法"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g;\n"
#~ " int r;\n"
#~ " \n"
#~ msgstr ""
#~ " guestfs_h *g;\n"
#~ " int r;\n"
#~ " \n"

#~ msgid "guestfs_close"
#~ msgstr "guestfs_close"

#, no-wrap
#~ msgid ""
#~ " void guestfs_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_close (guestfs_h *g);\n"
#~ "\n"

#~ msgid "The correct way to close the handle is:"
#~ msgstr "ハンドルを閉じる正しい方法は次のとおりです:"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_shutdown (g) == -1) {\n"
#~ "   /* handle write errors here */\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " if (guestfs_shutdown (g) == -1) {\n"
#~ "   /* ここで書き込みエラーを処理する */\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#~ msgid ""
#~ "L</guestfs_shutdown> is only needed if B<all> of the following are true:"
#~ msgstr "L</guestfs_shutdown> は以下の B<すべて> が成り立つ場合のみ必要です:"

#~ msgid "one or more disks were added in read-write mode, I<and>"
#~ msgstr "一つ以上のディスクを読み書きモードで追加した、I<かつ>"

#~ msgid "guestfs_launch was called, I<and>"
#~ msgstr "guestfs_launch が呼び出された、I<かつ>"

#~ msgid "you made some changes, I<and>"
#~ msgstr "何か変更を実施した、I<かつ>"

#~ msgid "4"
#~ msgstr "4"

#~ msgid "ERROR HANDLING"
#~ msgstr "エラー処理"

#~ msgid ""
#~ "API functions can return errors.  For example, almost all functions that "
#~ "return C<int> will return C<-1> to indicate an error."
#~ msgstr ""
#~ "API 関数はエラーを返します。たとえば、ほとんどすべての C<int> を返す関数は"
#~ "エラーを意味するために C<-1> を返します。"

#~ msgid ""
#~ "Additional information is available for errors: an error message string "
#~ "and optionally an error number (errno) if the thing that failed was a "
#~ "system call."
#~ msgstr ""
#~ "エラーに関する追加の情報が利用可能です: 失敗したものがシステムコールなら"
#~ "ば、エラーメッセージ文字列およびオプションのエラー番号（errno）です。"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_launch (g) == -1)\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ "\n"
#~ msgstr ""
#~ " if (guestfs_launch (g) == -1)\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *msg;\n"
#~ " int errnum;\n"
#~ " \n"
#~ msgstr ""
#~ " const char *msg;\n"
#~ " int errnum;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* This disables the default behaviour of printing errors\n"
#~ "    on stderr. */\n"
#~ " guestfs_set_error_handler (g, NULL, NULL);\n"
#~ " \n"
#~ msgstr ""
#~ " /* これは標準エラーにエラーを表示するときの\n"
#~ "    デフォルトの動作を無効化します。 */\n"
#~ " guestfs_set_error_handler (g, NULL, NULL);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_launch (g) == -1) {\n"
#~ "   /* Examine the error message and print it, throw it,\n"
#~ "      etc. */\n"
#~ "   msg = guestfs_last_error (g);\n"
#~ "   errnum = guestfs_last_errno (g);\n"
#~ " \n"
#~ msgstr ""
#~ " if (guestfs_launch (g) == -1) {\n"
#~ "   /* エラーメッセージを検査する、表示する、例外を投げるなど */\n"
#~ "   msg = guestfs_last_error (g);\n"
#~ "   errnum = guestfs_last_errno (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   fprintf (stderr, \"%s\", msg);\n"
#~ "   if (errnum != 0)\n"
#~ "     fprintf (stderr, \": %s\", strerror (errnum));\n"
#~ "   fprintf (stderr, \"\\n\");\n"
#~ " \n"
#~ msgstr ""
#~ "   fprintf (stderr, \"%s\", msg);\n"
#~ "   if (errnum != 0)\n"
#~ "     fprintf (stderr, \": %s\", strerror (errnum));\n"
#~ "   fprintf (stderr, \"\\n\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* ... */\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ "   /* ... */\n"
#~ " }\n"
#~ "\n"

#~ msgid "guestfs_last_error"
#~ msgstr "guestfs_last_error"

#, no-wrap
#~ msgid ""
#~ " const char *guestfs_last_error (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *guestfs_last_error (guestfs_h *g);\n"
#~ "\n"

#~ msgid "guestfs_last_errno"
#~ msgstr "guestfs_last_errno"

#, no-wrap
#~ msgid ""
#~ " int guestfs_last_errno (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_last_errno (guestfs_h *g);\n"
#~ "\n"

#~ msgid "This returns the last error number (errno) that happened on C<g>."
#~ msgstr "これは C<g> において発生した最後のエラー番号（errno）を返します。"

#~ msgid "If successful, an errno integer not equal to zero is returned."
#~ msgstr "もし成功すると、0 以外のエラー番号の整数が返されます。"

#~ msgid "There has not been any error on the handle."
#~ msgstr "ハンドルにおいて何もエラーがありませんでした。"

#~ msgid ""
#~ "There has been an error but the errno was meaningless.  This corresponds "
#~ "to the case where the error did not come from a failed system call, but "
#~ "for some other reason."
#~ msgstr ""
#~ "エラーがありましたが、エラー番号に意味がありませんでした。エラーがシステム"
#~ "コールの失敗により発生しましたが、何か他の理由による場合に対応します。"

#~ msgid ""
#~ "There was an error from a failed system call, but for some reason the "
#~ "errno was not captured and returned.  This usually indicates a bug in "
#~ "libguestfs."
#~ msgstr ""
#~ "エラーがシステムコールの失敗により発生しましたが、エラー番号が何らかの理由"
#~ "により捕捉されず返されました。これは通常 libguestfs のバグを意味します。"

#~ msgid "guestfs_set_error_handler"
#~ msgstr "guestfs_set_error_handler"

#, no-wrap
#~ msgid ""
#~ " typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
#~ "                                           void *opaque,\n"
#~ "                                           const char *msg);\n"
#~ " void guestfs_set_error_handler (guestfs_h *g,\n"
#~ "                                 guestfs_error_handler_cb cb,\n"
#~ "                                 void *opaque);\n"
#~ "\n"
#~ msgstr ""
#~ " typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
#~ "                                           void *opaque,\n"
#~ "                                           const char *msg);\n"
#~ " void guestfs_set_error_handler (guestfs_h *g,\n"
#~ "                                 guestfs_error_handler_cb cb,\n"
#~ "                                 void *opaque);\n"
#~ "\n"

#~ msgid "The default handler prints messages on C<stderr>."
#~ msgstr "標準のハンドラーは C<stderr> にメッセージを表示します。"

#~ msgid "If you set C<cb> to C<NULL> then I<no> handler is called."
#~ msgstr "C<cb> を C<NULL> に設定すると、 I<no> ハンドラーが呼び出されます。"

#~ msgid "guestfs_get_error_handler"
#~ msgstr "guestfs_get_error_handler"

#, no-wrap
#~ msgid ""
#~ " guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
#~ "                                                     void **opaque_rtn);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
#~ "                                                     void **opaque_rtn);\n"
#~ "\n"

#~ msgid "Returns the current error handler callback."
#~ msgstr "現在のエラーハンドラのコールバックを返します。"

#~ msgid "guestfs_set_out_of_memory_handler"
#~ msgstr "guestfs_set_out_of_memory_handler"

#, no-wrap
#~ msgid ""
#~ " typedef void (*guestfs_abort_cb) (void);\n"
#~ " void guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
#~ "                                         guestfs_abort_cb);\n"
#~ "\n"
#~ msgstr ""
#~ " typedef void (*guestfs_abort_cb) (void);\n"
#~ " void guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
#~ "                                         guestfs_abort_cb);\n"
#~ "\n"

#~ msgid ""
#~ "The callback C<cb> will be called if there is an out of memory "
#~ "situation.  I<Note this callback must not return>."
#~ msgstr ""
#~ "メモリー不足になると、コールバック C<cb> が呼び出されます。 I<このコール"
#~ "バックは戻ってこない可能性があることに注意してください>。"

#~ msgid "The default is to call L<abort(3)>."
#~ msgstr "デフォルトでは L<abort(3)> を呼び出します。"

#~ msgid "guestfs_get_out_of_memory_handler"
#~ msgstr "guestfs_get_out_of_memory_handler"

#, no-wrap
#~ msgid ""
#~ " guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
#~ "\n"

#~ msgid "This returns the current out of memory handler."
#~ msgstr "アウトオブメモリーハンドラーを返します。"

#~ msgid "API CALLS"
#~ msgstr "API 呼び出し"

#~ msgid "STRUCTURES"
#~ msgstr "構造"

#~ msgid "AVAILABILITY"
#~ msgstr "可用性"

#~ msgid "GROUPS OF FUNCTIONALITY IN THE APPLIANCE"
#~ msgstr "アプライアンスの機能のグループ"

#~ msgid ""
#~ "Using L</guestfs_available> you can test availability of the following "
#~ "groups of functions.  This test queries the appliance to see if the "
#~ "appliance you are currently using supports the functionality."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</part_add> を使"
#~ "用してください。"

#~ msgid "FILESYSTEM AVAILABLE"
#~ msgstr "利用可能なファイルシステム"

#~ msgid "GUESTFISH supported COMMAND"
#~ msgstr "guestfish がサポートするコマンド"

#~ msgid ""
#~ "Since version 1.5.8, C<E<lt>guestfs.hE<gt>> defines symbols for each C "
#~ "API function, such as:"
#~ msgstr ""
#~ "バージョン 1.5.8 から C<E<lt>guestfs.hE<gt>> に定義されたシンボルの C API "
#~ "関数があります。次のようなものがあります:"

#~ msgid "if L</guestfs_dd> is available."
#~ msgstr "L</guestfs_dd> が利用可能な場合。"

#, no-wrap
#~ msgid ""
#~ " AC_CHECK_LIB([guestfs],[guestfs_create])\n"
#~ " AC_CHECK_FUNCS([guestfs_dd])\n"
#~ "\n"
#~ msgstr ""
#~ " AC_CHECK_LIB([guestfs],[guestfs_create])\n"
#~ " AC_CHECK_FUNCS([guestfs_dd])\n"
#~ "\n"

#~ msgid ""
#~ "Testing at compile time doesn't guarantee that a function really exists "
#~ "in the library.  The reason is that you might be dynamically linked "
#~ "against a previous I<libguestfs.so> (dynamic library)  which doesn't have "
#~ "the call.  This situation unfortunately results in a segmentation fault, "
#~ "which is a shortcoming of the C dynamic linking system itself."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</part_list> を"
#~ "使用してください。"

#~ msgid ""
#~ "You can use L<dlopen(3)> to test if a function is available at run time, "
#~ "as in this example program (note that you still need the compile time "
#~ "check as well):"
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</write> を使用"
#~ "してください。"

#, no-wrap
#~ msgid ""
#~ " #include <stdio.h>\n"
#~ " #include <stdlib.h>\n"
#~ " #include <unistd.h>\n"
#~ " #include <dlfcn.h>\n"
#~ " #include <guestfs.h>\n"
#~ " \n"
#~ msgstr ""
#~ " #include <stdio.h>\n"
#~ " #include <stdlib.h>\n"
#~ " #include <unistd.h>\n"
#~ " #include <dlfcn.h>\n"
#~ " #include <guestfs.h>\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* Test if the function guestfs_dd is really available. */\n"
#~ "   dl = dlopen (NULL, RTLD_LAZY);\n"
#~ "   if (!dl) {\n"
#~ "     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ "   }\n"
#~ "   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
#~ "   dlclose (dl);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* guestfs_dd 関数が本当に利用可能かを確認します。 */\n"
#~ "   dl = dlopen (NULL, RTLD_LAZY);\n"
#~ "   if (!dl) {\n"
#~ "     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ "   }\n"
#~ "   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
#~ "   dlclose (dl);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   if (!has_function)\n"
#~ "     printf (\"this libguestfs.so does NOT have guestfs_dd function\\n\");\n"
#~ "   else {\n"
#~ "     printf (\"this libguestfs.so has guestfs_dd function\\n\");\n"
#~ "     /* Now it's safe to call\n"
#~ "     guestfs_dd (g, \"foo\", \"bar\");\n"
#~ "     */\n"
#~ "   }\n"
#~ " #else\n"
#~ "   printf (\"guestfs_dd function was not found at compile time\\n\");\n"
#~ " #endif\n"
#~ "  }\n"
#~ "\n"
#~ msgstr ""
#~ "   if (!has_function)\n"
#~ "     printf (\"この libguestfs.so は guestfs_dd 関数がありません\\n\");\n"
#~ "   else {\n"
#~ "     printf (\"この libguestfs.so は guestfs_dd 関数があります\\n\");\n"
#~ "     /* Now it's safe to call\n"
#~ "     guestfs_dd (g, \"foo\", \"bar\");\n"
#~ "     */\n"
#~ "   }\n"
#~ " #else\n"
#~ "   printf (\"guestfs_dd 関数がコンパイル時に見つかりませんでした\\n\");\n"
#~ " #endif\n"
#~ "  }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " Requires: libguestfs >= 1.0.80\n"
#~ "\n"
#~ msgstr ""
#~ " Requires: libguestfs >= 1.0.80\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename, -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename, -1);\n"
#~ "\n"

#~ msgid "With a single optional argument:"
#~ msgstr "単一の引数の場合:"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         -1);\n"
#~ "\n"

#~ msgid "With two:"
#~ msgstr "2つの引数の場合:"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"

#~ msgid ""
#~ "The second variant has the same name with the suffix C<_va>, which works "
#~ "the same way but takes a C<va_list>.  See the C manual for details.  For "
#~ "the example function, this is declared:"
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_add_drive_opts> を使用してください。"

#, no-wrap
#~ msgid ""
#~ " int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
#~ "                                va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
#~ "                                va_list args);\n"
#~ "\n"

#~ msgid "CONSTRUCTING OPTIONAL ARGUMENTS"
#~ msgstr "オプション引数の構築"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_add_drive_opts_argv {\n"
#~ "   uint64_t bitmask;\n"
#~ "   int readonly;\n"
#~ "   const char *format;\n"
#~ "   /* ... */\n"
#~ " };\n"
#~ " int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
#~ "              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_add_drive_opts_argv {\n"
#~ "   uint64_t bitmask;\n"
#~ "   int readonly;\n"
#~ "   const char *format;\n"
#~ "   /* ... */\n"
#~ " };\n"
#~ " int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
#~ "              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"

#~ msgid "You could call it like this:"
#~ msgstr "次のように呼び出すことができます。"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_add_drive_opts_argv optargs = {\n"
#~ "   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
#~ "              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
#~ "   .readonly = 1,\n"
#~ "   .format = \"qcow2\"\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_add_drive_opts_argv optargs = {\n"
#~ "   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
#~ "              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
#~ "   .readonly = 1,\n"
#~ "   .format = \"qcow2\"\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
#~ "\n"

#~ msgid "For guestfish, see L<guestfish(1)/OPTIONAL ARGUMENTS>."
#~ msgstr ""
#~ "guestfish は L<guestfish(1)/OPTIONAL ARGUMENTS> を参照してください。"

#~ msgid "CLASSES OF EVENTS"
#~ msgstr "イベントのクラス"

#~ msgid "GUESTFS_EVENT_CLOSE (payload type: void)"
#~ msgstr "GUESTFS_EVENT_CLOSE (ペイロード形式: void)"

#~ msgid ""
#~ "Note that libguestfs installs an L<atexit(3)> handler to try to clean up "
#~ "handles that are open when the program exits.  This means that this "
#~ "callback might be called indirectly from L<exit(3)>, which can cause "
#~ "unexpected problems in higher-level languages (eg. if your HLL "
#~ "interpreter has already been cleaned up by the time this is called, and "
#~ "if your callback then jumps into some HLL function)."
#~ msgstr ""
#~ "I<この関数は推奨されません。> 新しいコードでは、代わりに L</"
#~ "guestfs_fallocate64> を使用してください。"

#~ msgid "GUESTFS_EVENT_SUBPROCESS_QUIT (payload type: void)"
#~ msgstr "GUESTFS_EVENT_SUBPROCESS_QUIT (ペイロード形式: void)"

#~ msgid "GUESTFS_EVENT_LAUNCH_DONE (payload type: void)"
#~ msgstr "GUESTFS_EVENT_LAUNCH_DONE (ペイロード形式: void)"

#~ msgid "GUESTFS_EVENT_PROGRESS (payload type: array of 4 x uint64_t)"
#~ msgstr "GUESTFS_EVENT_PROGRESS (ペイロード形式: 4 x uint64_t の配列)"

#~ msgid "0 E<lt>= C<position> E<lt>= C<total>"
#~ msgstr "0 E<lt>= C<position> E<lt>= C<total>"

#~ msgid "GUESTFS_EVENT_APPLIANCE (payload type: message buffer)"
#~ msgstr "GUESTFS_EVENT_APPLIANCE (ペイロード形式: メッセージバッファー)"

#~ msgid "GUESTFS_EVENT_TRACE (payload type: message buffer)"
#~ msgstr "GUESTFS_EVENT_TRACE (ペイロード形式: メッセージバッファー)"

#~ msgid "GUESTFS_EVENT_ENTER (payload type: function name)"
#~ msgstr "GUESTFS_EVENT_ENTER (payload type: function name)"

#~ msgid "EVENT API"
#~ msgstr "イベント API"

#~ msgid "guestfs_set_event_callback"
#~ msgstr "guestfs_set_event_callback"

#, no-wrap
#~ msgid ""
#~ " int guestfs_set_event_callback (guestfs_h *g,\n"
#~ "                                 guestfs_event_callback cb,\n"
#~ "                                 uint64_t event_bitmask,\n"
#~ "                                 int flags,\n"
#~ "                                 void *opaque);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_set_event_callback (guestfs_h *g,\n"
#~ "                                 guestfs_event_callback cb,\n"
#~ "                                 uint64_t event_bitmask,\n"
#~ "                                 int flags,\n"
#~ "                                 void *opaque);\n"
#~ "\n"

#~ msgid "guestfs_delete_event_callback"
#~ msgstr "guestfs_delete_event_callback"

#, no-wrap
#~ msgid ""
#~ " void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
#~ "\n"

#~ msgid "guestfs_event_callback"
#~ msgstr "guestfs_event_callback"

#, no-wrap
#~ msgid ""
#~ " typedef void (*guestfs_event_callback) (\n"
#~ "                  guestfs_h *g,\n"
#~ "                  void *opaque,\n"
#~ "                  uint64_t event,\n"
#~ "                  int event_handle,\n"
#~ "                  int flags,\n"
#~ "                  const char *buf, size_t buf_len,\n"
#~ "                  const uint64_t *array, size_t array_len);\n"
#~ "\n"
#~ msgstr ""
#~ " typedef void (*guestfs_event_callback) (\n"
#~ "                  guestfs_h *g,\n"
#~ "                  void *opaque,\n"
#~ "                  uint64_t event,\n"
#~ "                  int event_handle,\n"
#~ "                  int flags,\n"
#~ "                  const char *buf, size_t buf_len,\n"
#~ "                  const uint64_t *array, size_t array_len);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " static void\n"
#~ " message_callback (\n"
#~ "         guestfs_h *g,\n"
#~ "         void *opaque,\n"
#~ "         uint64_t event,\n"
#~ "         int event_handle,\n"
#~ "         int flags,\n"
#~ "         const char *buf, size_t buf_len,\n"
#~ "         const uint64_t *array, size_t array_len)\n"
#~ " {\n"
#~ "   const int priority = LOG_USER|LOG_INFO;\n"
#~ "   if (buf_len > 0)\n"
#~ "     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " static void\n"
#~ " message_callback (\n"
#~ "         guestfs_h *g,\n"
#~ "         void *opaque,\n"
#~ "         uint64_t event,\n"
#~ "         int event_handle,\n"
#~ "         int flags,\n"
#~ "         const char *buf, size_t buf_len,\n"
#~ "         const uint64_t *array, size_t array_len)\n"
#~ " {\n"
#~ "   const int priority = LOG_USER|LOG_INFO;\n"
#~ "   if (buf_len > 0)\n"
#~ "     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
#~ " }\n"
#~ "\n"

#~ msgid "LIBVIRT AUTHENTICATION"
#~ msgstr "libvirt 認証"

#, no-wrap
#~ msgid ""
#~ " main ()\n"
#~ " {\n"
#~ "   guestfs_h *g;\n"
#~ "   char *creds[] = { \"authname\", \"passphrase\", NULL };\n"
#~ "   int r, eh;\n"
#~ " \n"
#~ msgstr ""
#~ " main ()\n"
#~ " {\n"
#~ "   guestfs_h *g;\n"
#~ "   char *creds[] = { \"authname\", \"passphrase\", NULL };\n"
#~ "   int r, eh;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   g = guestfs_create ();\n"
#~ "   if (!g) exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   g = guestfs_create ();\n"
#~ "   if (!g) exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* Tell libvirt what credentials the program supports. */\n"
#~ "   r = guestfs_set_libvirt_supported_credentials (g, creds);\n"
#~ "   if (r == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* プログラムがサポートするクレデンシャルを libvirt に伝える。 */\n"
#~ "   r = guestfs_set_libvirt_supported_credentials (g, creds);\n"
#~ "   if (r == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* Set up the event handler. */\n"
#~ "   eh = guestfs_set_event_callback (\n"
#~ "       g, do_auth,\n"
#~ "       GUESTFS_EVENT_LIBVIRT_AUTH, 0, NULL);\n"
#~ "   if (eh == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* イベントハンドラーをセットアップする。 */\n"
#~ "   eh = guestfs_set_event_callback (\n"
#~ "       g, do_auth,\n"
#~ "       GUESTFS_EVENT_LIBVIRT_AUTH, 0, NULL);\n"
#~ "   if (eh == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "      r = guestfs_set_libvirt_requested_credential (g, i,\n"
#~ "          reply, replylen);\n"
#~ "      if (r == -1)\n"
#~ "        exit (EXIT_FAILURE);\n"
#~ "     }\n"
#~ " \n"
#~ msgstr ""
#~ "      r = guestfs_set_libvirt_requested_credential (g, i,\n"
#~ "          reply, replylen);\n"
#~ "      if (r == -1)\n"
#~ "        exit (EXIT_FAILURE);\n"
#~ "     }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "     free (creds[i]);\n"
#~ "   }\n"
#~ " \n"
#~ msgstr ""
#~ "     free (creds[i]);\n"
#~ "   }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   free (creds);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ "   free (creds);\n"
#~ " }\n"
#~ "\n"

#~ msgid "PRIVATE DATA AREA"
#~ msgstr "プライベートデータ領域"

#~ msgid "To attach a named piece of data, use the following call:"
#~ msgstr "データの名前付き部分を接続するには、以下の呼び出しを使用します:"

#, no-wrap
#~ msgid ""
#~ " void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
#~ "\n"

#~ msgid "To retrieve the pointer, use:"
#~ msgstr "ポインターを取り出すには、次を使用します:"

#, no-wrap
#~ msgid ""
#~ " void *guestfs_get_private (guestfs_h *g, const char *key);\n"
#~ "\n"
#~ msgstr ""
#~ " void *guestfs_get_private (guestfs_h *g, const char *key);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"
#~ msgstr ""
#~ " void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"
#~ msgstr ""
#~ " void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_set_private (g, key, NULL);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_set_private (g, key, NULL);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"
#~ msgstr ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "       printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"
#~ msgstr ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "       printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  const char *key;\n"
#~ "  void *data;\n"
#~ " again:\n"
#~ "  data = guestfs_first_private (g, &key);\n"
#~ "  while (data != NULL)\n"
#~ "    {\n"
#~ "      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "        {\n"
#~ "          guestfs_set_private (g, key, NULL);\n"
#~ "          /* note that 'key' pointer is now invalid, and so is\n"
#~ "             the internal iterator */\n"
#~ "          goto again;\n"
#~ "        }\n"
#~ "      data = guestfs_next_private (g, &key);\n"
#~ "    }\n"
#~ "\n"
#~ msgstr ""
#~ "  const char *key;\n"
#~ "  void *data;\n"
#~ " again:\n"
#~ "  data = guestfs_first_private (g, &key);\n"
#~ "  while (data != NULL)\n"
#~ "    {\n"
#~ "      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "        {\n"
#~ "          guestfs_set_private (g, key, NULL);\n"
#~ "          /* note that 'key' pointer is now invalid, and so is\n"
#~ "             the internal iterator */\n"
#~ "          goto again;\n"
#~ "        }\n"
#~ "      data = guestfs_next_private (g, &key);\n"
#~ "    }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "              .provider(\"guestfs\").mark(\"*\")'\n"
#~ "\n"
#~ msgstr ""
#~ " stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "              .provider(\"guestfs\").mark(\"*\")'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /* Display all calls to guestfs_mkfs* functions. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_mkfs*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " /* guestfs_mkfs* 関数へのすべての呼び出しを一覧表示します。 */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_mkfs*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # stap /tmp/test.stap\n"
#~ " ready\n"
#~ "\n"
#~ msgstr ""
#~ " # stap /tmp/test.stap\n"
#~ " ready\n"
#~ "\n"

#~ msgid "In another terminal, run a guestfish command such as this:"
#~ msgstr "他の端末において、このように guestfish コマンドを実行します:"

#, no-wrap
#~ msgid ""
#~ " 1318248056692655 (+0):\tlaunch_start\n"
#~ " 1318248056692850 (+195):       launch_build_appliance_start\n"
#~ " 1318248056818285 (+125435):    launch_build_appliance_end\n"
#~ " 1318248056838059 (+19774):     launch_run_qemu\n"
#~ " 1318248061071167 (+4233108):   launch_end\n"
#~ " 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f device=0x1024e60\n"
#~ "\n"
#~ msgstr ""
#~ " 1318248056692655 (+0):\tlaunch_start\n"
#~ " 1318248056692850 (+195):       launch_build_appliance_start\n"
#~ " 1318248056818285 (+125435):    launch_build_appliance_end\n"
#~ " 1318248056838059 (+19774):     launch_run_qemu\n"
#~ " 1318248061071167 (+4233108):   launch_end\n"
#~ " 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f device=0x1024e60\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                 even numbers for stable: 1.2.x, 1.4.x, ...\n"
#~ "       .-------- odd numbers for development: 1.3.x, 1.5.x, ...\n"
#~ "       |\n"
#~ "       v\n"
#~ " 1  .  3  .  5\n"
#~ " ^           ^\n"
#~ " |           |\n"
#~ " |           `-------- sub-version\n"
#~ " |\n"
#~ " `------ always '1' because we don't change the ABI\n"
#~ "\n"
#~ msgstr ""
#~ "                 偶数は安定版: 1.2.x, 1.4.x, ...\n"
#~ "       .-------- 奇数は開発版: 1.3.x, 1.5.x, ...\n"
#~ "       |\n"
#~ "       v\n"
#~ " 1  .  3  .  5\n"
#~ " ^           ^\n"
#~ " |           |\n"
#~ " |           `-------- サブバージョン\n"
#~ " |\n"
#~ " `------ ABI を変更しないので、必ず '1' です\n"
#~ "\n"

#~ msgid "Thus \"1.3.5\" is the 5th update to the development branch \"1.3\"."
#~ msgstr ""
#~ "このように \"1.3.5\" は開発ブランチ \"1.3\" の 5 番目のアップデートです。"

#~ msgid "Our criteria for backporting changes are:"
#~ msgstr "バックポートする変更に対する私たちの基準は次のとおりです:"

#~ msgid ""
#~ "Bug fixes which are not controversial, fix obvious problems, and have "
#~ "been well tested are backported."
#~ msgstr ""
#~ "議論の余地がなく、明らかな問題を修正する、十分にテストされたバグ修正はバッ"
#~ "クポートされます。"

#~ msgid "LIMITS"
#~ msgstr "制限"

#~ msgid "PROTOCOL LIMITS"
#~ msgstr "プロトコル制限"

#~ msgid ""
#~ "L</guestfs_cat>, L</guestfs_find>, L</guestfs_read_file>, L</"
#~ "guestfs_read_lines>, L</guestfs_write>, L</guestfs_write_append>, L</"
#~ "guestfs_lstatlist>, L</guestfs_lxattrlist>, L</guestfs_readlinklist>, L</"
#~ "guestfs_ls>."
#~ msgstr ""
#~ "L</guestfs_cat>, L</guestfs_find>, L</guestfs_read_file>, L</"
#~ "guestfs_read_lines>, L</guestfs_write>, L</guestfs_write_append>, L</"
#~ "guestfs_lstatlist>, L</guestfs_lxattrlist>, L</guestfs_readlinklist>, L</"
#~ "guestfs_ls>."

#~ msgid "MAXIMUM NUMBER OF DISKS"
#~ msgstr "ディスクの最大数"

#~ msgid ""
#~ "When using virtio-scsi disks (the default if available in qemu) the "
#~ "current limit is B<255> disks.  When using virtio-blk (the old default) "
#~ "the limit is around B<27> disks, but may vary according to implementation "
#~ "details and whether the network is enabled."
#~ msgstr ""
#~ "virtio-scsi ディスク (QEMU において利用可能ならば初期値) を使用していると"
#~ "き、現在の制限は B<255> 個のディスクです。virtio-blk (古い初期値) を使用し"
#~ "ているとき、約 B<27> 個のディスクです。しかし、実装の詳細やネットワークが"
#~ "有効化されているかどうかにより、変化する可能性があります。"

#~ msgid ""
#~ "Virtio-scsi as used by libguestfs is configured to use one target per "
#~ "disk, and 256 targets are available."
#~ msgstr ""
#~ "libguestfs により使用される virtio-scsi はディスクあたり一つのターゲットを"
#~ "使用するよう設定されます。256 個のターゲットが利用可能です。"

#~ msgid ""
#~ "Virtio-blk consumes 1 virtual PCI slot per disk, and PCI is limited to 31 "
#~ "slots, but some of these are used for other purposes."
#~ msgstr ""
#~ "virtio-blk はディスクあたり 1 仮想 PCI を消費します。PCI は 31 スロットに"
#~ "制限されます。これらのいくつかは他の目的のために使用されます。"

#~ msgid "One virtual disk is used by libguestfs internally."
#~ msgstr "一つの仮想ディスクが libguestfs により内部的に使用されます。"

#~ msgid ""
#~ "In libguestfs E<ge> 1.20 it is possible to hot plug disks.  See L</"
#~ "HOTPLUGGING>."
#~ msgstr ""
#~ "libguestfs E<ge> 1.20 はディスクの活性挿入をできます。 L</HOTPLUGGING> 参"
#~ "照。"

#~ msgid "MAXIMUM NUMBER OF PARTITIONS PER DISK"
#~ msgstr "ディスクあたりの最大パーティション数"

#~ msgid "Virtio limits the maximum number of partitions per disk to B<15>."
#~ msgstr ""
#~ "virtio はディスクあたりの最大パーティション数を B<15> に制限します。"

#~ msgid ""
#~ "If you attach a disk with more than 15 partitions, the extra partitions "
#~ "are ignored by libguestfs."
#~ msgstr ""
#~ "15 よりも多くのパーティションを持つディスクを接続すると、追加のパーティ"
#~ "ションは libguestfs により無視されます。"

#~ msgid "MAXIMUM SIZE OF A DISK"
#~ msgstr "ディスクの最大容量"

#~ msgid "Probably the limit is between 2**63-1 and 2**64-1 bytes."
#~ msgstr "制限はおそらく 2**63-1 から 2**64-1 バイトの間です。"

#~ msgid "MAXIMUM SIZE OF A PARTITION"
#~ msgstr "パーティションの最大容量"

#~ msgid "MAXIMUM SIZE OF A FILESYSTEM, FILES, DIRECTORIES"
#~ msgstr "ファイルシステム、ファイル、ディレクトリーの最大容量"

#~ msgid "MAXIMUM UPLOAD AND DOWNLOAD"
#~ msgstr "最大アップロード数およびダウンロード数"

#~ msgid ""
#~ "The API functions L</guestfs_upload>, L</guestfs_download>, L</"
#~ "guestfs_tar_in>, L</guestfs_tar_out> and the like allow unlimited sized "
#~ "uploads and downloads."
#~ msgstr ""
#~ "API 関数 L</guestfs_upload>, L</guestfs_download>, L</guestfs_tar_in>, L</"
#~ "guestfs_tar_out> および類似のものは、アップロードとダウンロードの数量に制"
#~ "限がありません。"

#~ msgid "INSPECTION LIMITS"
#~ msgstr "検査の制限"

#~ msgid "See also L</QEMU WRAPPERS> above."
#~ msgstr "上の L</QEMU WRAPPERS> 参照。"

#~ msgid ""
#~ "Set C<LIBGUESTFS_TRACE=1> to enable command traces.  This has the same "
#~ "effect as calling C<guestfs_set_trace (g, 1)>."
#~ msgstr ""
#~ "コマンドトレースを有効にするには C<LIBGUESTFS_TRACE=1> を設定します。これ"
#~ "は C<guestfs_set_trace (g, 1)> の呼び出しと同じ効果があります。"

#~ msgid ""
#~ "Tools with a similar purpose: L<fdisk(8)>, L<parted(8)>, L<kpartx(8)>, "
#~ "L<lvm(8)>, L<disktype(1)>."
#~ msgstr ""
#~ "同じ目的を持つツール: L<fdisk(8)>, L<parted(8)>, L<kpartx(8)>, L<lvm(8)>, "
#~ "L<disktype(1)>."

#, no-wrap
#~ msgid ""
#~ " g:close ()\n"
#~ "\n"
#~ msgstr ""
#~ " g:close ()\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:set_verbose (true)\n"
#~ "\n"
#~ msgstr ""
#~ " g:set_verbose (true)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:add_drive (\"test.img\")\n"
#~ "\n"
#~ msgstr ""
#~ " g:add_drive (\"test.img\")\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
#~ "\n"
#~ msgstr ""
#~ " g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eh = g:set_event_callback (cb, \"close\")\n"
#~ "\n"
#~ msgstr ""
#~ " eh = g:set_event_callback (cb, \"close\")\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:delete_event_callback (eh)\n"
#~ "\n"
#~ msgstr ""
#~ " g:delete_event_callback (eh)\n"
#~ "\n"

#~ msgid "virt-make-fs - Make a filesystem from a tar archive or files"
#~ msgstr ""
#~ "virt-make-fs - tar アーカイブまたはファイルからファイルシステムの作成"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs [--options] input.tar output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs [--options] input.tar output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs [--options] input.tar.gz output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs [--options] input.tar.gz output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs [--options] directory output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs [--options] directory output.img\n"
#~ "\n"

#~ msgid "Basic usage is:"
#~ msgstr "基本的な使用法は次のとおりです:"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs input output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs input output.img\n"
#~ "\n"

#~ msgid "FILESYSTEM TYPE"
#~ msgstr "ファイルシステム形式"

#~ msgid "I<ext3>"
#~ msgstr "I<ext3>"

#~ msgid "I<ntfs> or I<vfat>"
#~ msgstr "I<ntfs> または I<vfat>"

#~ msgid "I<minix>"
#~ msgstr "I<minix>"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --type=minix input minixfs.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --type=minix input minixfs.img\n"
#~ "\n"

#~ msgid "Add an MBR partition:"
#~ msgstr "MBR パーティションを追加します:"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --partition -- input disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --partition -- input disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --format=qcow2 --size=+200M input output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --format=qcow2 --size=+200M input output.img\n"
#~ "\n"

#~ msgid "B<--floppy>"
#~ msgstr "B<--floppy>"

#~ msgid "Create a virtual floppy disk."
#~ msgstr "仮想フロッピーディスクを作成します。"

#~ msgid ""
#~ "Currently this preselects the size (1440K), partition type (MBR) and "
#~ "filesystem type (VFAT).  In future it may also choose the geometry."
#~ msgstr ""
#~ "今のところ、容量 (1440K)、パーティション形式 (MBR) およびファイルシステム"
#~ "形式 (VFAT) が事前に選択されています。将来的に、ジオメトリーを選択できるよ"
#~ "うになる可能性があります。"

#~ msgid "Choose the output disk image format."
#~ msgstr "出力するディスクイメージ形式を選択します。"

#~ msgid "The default is C<raw> (raw sparse disk image)."
#~ msgstr "デフォルトは C<raw> です (スパースな raw 形式のディスクイメージ)。"

#~ msgid "Choose the output filesystem type."
#~ msgstr "出力ファイルシステム形式を選択します。"

#~ msgid "The default is C<ext2>."
#~ msgstr "デフォルトは C<ext2> です。"

#~ msgid ""
#~ "If specified, this flag adds an MBR partition table to the output disk "
#~ "image."
#~ msgstr ""
#~ "このフラグが指定されていると、出力ディスクイメージに MBR パーティション"
#~ "テーブルを追加します。"

#~ msgid "Enable debugging information."
#~ msgstr "デバッグ情報を有効にします。"

#~ msgid "guestfs-ocaml - How to use libguestfs from OCaml"
#~ msgstr "guestfs-ocaml - OCaml から libguestfs を使用する方法"

#~ msgid "Module style:"
#~ msgstr "モジュール形式:"

#, no-wrap
#~ msgid ""
#~ " let g = Guestfs.create () in\n"
#~ " Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " Guestfs.launch g;\n"
#~ "\n"
#~ msgstr ""
#~ " let g = Guestfs.create () in\n"
#~ " Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " Guestfs.launch g;\n"
#~ "\n"

#~ msgid "Object-oriented style:"
#~ msgstr "オブジェクト指向スタイル:"

#, no-wrap
#~ msgid ""
#~ " let g = new Guestfs.guestfs () in\n"
#~ " g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " g#launch ();\n"
#~ "\n"
#~ msgstr ""
#~ " let g = new Guestfs.guestfs () in\n"
#~ " g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " g#launch ();\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
#~ "or:\n"
#~ " ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
#~ "\n"
#~ msgstr ""
#~ " ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
#~ "or:\n"
#~ " ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
#~ "\n"

#~ msgid "PROGRAMMING STYLES"
#~ msgstr "プログラミング形式"

#, no-wrap
#~ msgid ""
#~ " int guestfs_set_verbose (guestfs_h *g, int flag);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_set_verbose (guestfs_h *g, int flag);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
#~ "\n"
#~ msgstr ""
#~ " val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " method set_verbose : bool -> unit\n"
#~ "\n"
#~ msgstr ""
#~ " method set_verbose : bool -> unit\n"
#~ "\n"

#~ msgid "guestfs-perl - How to use libguestfs from Perl"
#~ msgstr "guestfs-perl - Perl から libguestfs を使用する方法"

#, no-wrap
#~ msgid ""
#~ " use Sys::Guestfs;\n"
#~ " \n"
#~ msgstr ""
#~ " use Sys::Guestfs;\n"
#~ " \n"

#~ msgid "guestfs-python - How to use libguestfs from Python"
#~ msgstr "guestfs-python - Python から libguestfs を使用する方法"

#~ msgid "virt-rescue - Run a rescue shell on a virtual machine"
#~ msgstr "virt-rescue - 仮想マシンにおいてレスキューシェルを実行します"

#, no-wrap
#~ msgid ""
#~ " virt-rescue [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue [--options] disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -a /dev/sdc\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -a /dev/sdc\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> lvs\n"
#~ " LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert\n"
#~ " lv_root vg_f15x32 -wi-a-   8.83G\n"
#~ " lv_swap vg_f15x32 -wi-a- 992.00M\n"
#~ " ><rescue> mount /dev/vg_f15x32/lv_root /sysroot\n"
#~ " ><rescue> mount /dev/vda1 /sysroot/boot\n"
#~ " ><rescue> ls /sysroot\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> lvs\n"
#~ " LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert\n"
#~ " lv_root vg_f15x32 -wi-a-   8.83G\n"
#~ " lv_swap vg_f15x32 -wi-a- 992.00M\n"
#~ " ><rescue> mount /dev/vg_f15x32/lv_root /sysroot\n"
#~ " ><rescue> mount /dev/vda1 /sysroot/boot\n"
#~ " ><rescue> ls /sysroot\n"
#~ "\n"

#~ msgid ""
#~ "Another command to list available filesystems is L<virt-filesystems(1)>."
#~ msgstr ""
#~ "利用可能なファイルシステムを一覧表示するためのもう 1 つのコマンドは "
#~ "L<virt-filesystems(1)> です。"

#~ msgid ""
#~ "To run commands in a Linux guest (for example, grub), you should chroot "
#~ "into the /sysroot directory first:"
#~ msgstr ""
#~ "Linux 仮想マシンにおいてコマンド（たとえば、grub）を実行するには、まず /"
#~ "sysroot ディレクトリーの中に chroot する必要があります:"

#, no-wrap
#~ msgid ""
#~ " ><rescue> chroot /sysroot\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> chroot /sysroot\n"
#~ "\n"

#~ msgid "Pass additional options to the rescue kernel."
#~ msgstr "レスキューカーネルに追加オプションを渡します。"

#, no-wrap
#~ msgid ""
#~ " virt-rescue --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#~ msgid "Enable QEMU user networking in the guest.  See L</NETWORK>."
#~ msgstr ""
#~ "仮想マシンにおいて QEMU のユーザーモードのネットワークを有効にします。 L</"
#~ "NETWORK> 参照。"

#~ msgid "Open the image read-only."
#~ msgstr "イメージを読み込み専用で開きます。"

#~ msgid "B<--scratch>"
#~ msgstr "B<--scratch>"

#~ msgid "B<--scratch=N>"
#~ msgstr "B<--scratch=N>"

#~ msgid ""
#~ "The I<--scratch> option adds a large scratch disk to the rescue "
#~ "appliance.  I<--scratch=N> adds C<N> scratch disks.  The scratch disk(s) "
#~ "are deleted automatically when virt-rescue exits."
#~ msgstr ""
#~ "I<--scratch> オプションにより、大きなスクラッチディスクをレスキュー・アプ"
#~ "ライアンスに追加できます。I<--scratch=N> により、C<N> 個のスクラッチディス"
#~ "クを追加できます。virt-rescue が終了するとき、スクラッチディスクは自動的に"
#~ "削除されます。"

#~ msgid ""
#~ "You can also mix I<-a>, I<-d> and I<--scratch> options.  The scratch "
#~ "disk(s) are added to the appliance in the order they appear on the "
#~ "command line."
#~ msgstr ""
#~ "I<-a>, I<-d> および I<--scratch> オプションは混在できます。スクラッチディ"
#~ "スクは、これらがコマンドラインに現れる順番で、アプライアンスに追加されま"
#~ "す。"

#~ msgid "Enable N E<ge> 2 virtual CPUs in the rescue appliance."
#~ msgstr ""
#~ "レスキューアプライアンスにおいて N E<ge> 2 仮想 CPU を有効にします。"

#~ msgid "B<--suggest>"
#~ msgstr "B<--suggest>"

#~ msgid ""
#~ "This option implies I<--ro> and is safe to use even if the guest is up or "
#~ "if another virt-rescue is running."
#~ msgstr ""
#~ "このオプションは I<--ro> を意味します。仮想マシンが起動していたり、他の "
#~ "virt-rescue を実行しているときでも安全です。"

#, no-wrap
#~ msgid ""
#~ " virt-rescue disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue guestname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue guestname\n"
#~ "\n"

#~ msgid "NETWORK"
#~ msgstr "ネットワーク"

#~ msgid "making TCP connections"
#~ msgstr "TCP 接続の作成法"

#, no-wrap
#~ msgid ""
#~ " exec 3<>/dev/tcp/redhat.com/80\n"
#~ " echo \"GET /\" >&3\n"
#~ " cat <&3\n"
#~ "\n"
#~ msgstr ""
#~ " exec 3<>/dev/tcp/redhat.com/80\n"
#~ " echo \"GET /\" >&3\n"
#~ " cat <&3\n"
#~ "\n"

#~ msgid "See L<bash(1)> for more details."
#~ msgstr "詳細は L<bash(1)> 参照。"

#~ msgid "virt-resize - Resize a virtual machine disk"
#~ msgstr "virt-resize - 仮想マシンのディスクの容量変更"

#, no-wrap
#~ msgid ""
#~ " virt-resize [--resize /dev/sdaN=[+/-]<size>[%]]\n"
#~ "   [--expand /dev/sdaN] [--shrink /dev/sdaN]\n"
#~ "   [--ignore /dev/sdaN] [--delete /dev/sdaN] [...] indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize [--resize /dev/sdaN=[+/-]<size>[%]]\n"
#~ "   [--expand /dev/sdaN] [--shrink /dev/sdaN]\n"
#~ "   [--ignore /dev/sdaN] [--delete /dev/sdaN] [...] indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems --long -h --all -a olddisk\n"
#~ " \n"
#~ msgstr ""
#~ " virt-filesystems --long -h --all -a olddisk\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " truncate -r olddisk newdisk\n"
#~ " truncate -s +5G newdisk\n"
#~ " \n"
#~ msgstr ""
#~ " truncate -r olddisk newdisk\n"
#~ " truncate -s +5G newdisk\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Note \"/dev/sda2\" is a partition inside the \"olddisk\" file.\n"
#~ " virt-resize --expand /dev/sda2 olddisk newdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # \"/dev/sda2\" は \"olddisk\" ファイルの中にあるパーティションであることに注意してください。\n"
#~ " virt-resize --expand /dev/sda2 olddisk newdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"

#~ msgid "DETAILED USAGE"
#~ msgstr "詳細な使用法"

#~ msgid "EXPANDING A VIRTUAL MACHINE DISK"
#~ msgstr "仮想マシンのディスクの拡張方法"

#~ msgid "1. Shut down the virtual machine"
#~ msgstr "1. 仮想マシンをシャットダウンします"

#~ msgid "2. Locate input disk image"
#~ msgstr "2. 入力ディスクイメージの位置を探します"

#, no-wrap
#~ msgid ""
#~ " # virsh dumpxml guestname | xpath /domain/devices/disk/source\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <source dev=\"/dev/vg/lv_guest\" />\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh dumpxml guestname | xpath /domain/devices/disk/source\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <source dev=\"/dev/vg/lv_guest\" />\n"
#~ "\n"

#~ msgid "3. Look at current sizing"
#~ msgstr "3. 現在の容量を確認します"

#~ msgid ""
#~ "Use L<virt-filesystems(1)> to display the current partitions and sizes:"
#~ msgstr ""
#~ "現在のパーティションおよび容量を表示するには L<virt-filesystems(1)> を使用"
#~ "します:"

#, no-wrap
#~ msgid ""
#~ " # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
#~ " Name       Type       Size  Parent\n"
#~ " /dev/sda1  partition  101M  /dev/sda\n"
#~ " /dev/sda2  partition  7.9G  /dev/sda\n"
#~ " /dev/sda   device     8.0G  -\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
#~ " Name       Type       Size  Parent\n"
#~ " /dev/sda1  partition  101M  /dev/sda\n"
#~ " /dev/sda2  partition  7.9G  /dev/sda\n"
#~ " /dev/sda   device     8.0G  -\n"
#~ "\n"

#~ msgid "4. Create output disk"
#~ msgstr "4. 出力ディスクを作成します"

#, no-wrap
#~ msgid ""
#~ " # rm -f outdisk\n"
#~ " # truncate -s 10G outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # rm -f outdisk\n"
#~ " # truncate -s 10G outdisk\n"
#~ "\n"

#~ msgid "Or use L<lvcreate(1)> to create a logical volume:"
#~ msgstr "または、論理ボリュームを作成するために L<lvcreate(1)> を使用します:"

#, no-wrap
#~ msgid ""
#~ " # lvcreate -L 10G -n lv_name vg_name\n"
#~ "\n"
#~ msgstr ""
#~ " # lvcreate -L 10G -n lv_name vg_name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virsh pool-list\n"
#~ " # virsh vol-create-as poolname newvol 10G\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh pool-list\n"
#~ " # virsh vol-create-as poolname newvol 10G\n"
#~ "\n"

#~ msgid "5. Resize"
#~ msgstr "5. 容量を変更します"

#, no-wrap
#~ msgid ""
#~ " # virt-resize indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-resize --expand /dev/sda2 indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize --expand /dev/sda2 indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "     indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "     indisk outdisk\n"
#~ "\n"

#~ msgid "Other options are covered below."
#~ msgstr "他のオプションは以下に記載しています。"

#~ msgid "6. Test"
#~ msgstr "6. テストします"

#~ msgid "If you are using libvirt, edit the XML to point at the new disk:"
#~ msgstr ""
#~ "libvirt を使用しているならば、新しいディスクを指し示すよう XML を編集しま"
#~ "す:"

#, no-wrap
#~ msgid ""
#~ " # virsh edit guestname\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh edit guestname\n"
#~ "\n"

#~ msgid ""
#~ "Change E<lt>source ...E<gt>, see L<http://libvirt.org/formatdomain."
#~ "html#elementsDisks>"
#~ msgstr ""
#~ "E<lt>source ...E<gt> を変更します、L<http://libvirt.org/formatdomain."
#~ "html#elementsDisks> を参照してください。"

#, no-wrap
#~ msgid ""
#~ " # virsh start guestname\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh start guestname\n"
#~ "\n"

#~ msgid "SHRINKING A VIRTUAL MACHINE DISK"
#~ msgstr "仮想マシンのディスクの縮小"

#~ msgid ""
#~ "Shrinking is somewhat more complex than expanding, and only an overview "
#~ "is given here."
#~ msgstr "縮小は拡張よりもいくらか複雑です。ここでは概要のみを示します。"

#, no-wrap
#~ msgid ""
#~ " fallocate -l size outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " fallocate -l size outdisk\n"
#~ "\n"

#~ msgid "LOGICAL PARTITIONS"
#~ msgstr "論理パーティション"

#~ msgid "I<--alignment 1> (512 bytes)"
#~ msgstr "I<--alignment 1> (512 バイト)"

#~ msgid "I<--alignment 8> (4K)"
#~ msgstr "I<--alignment 8> (4K)"

#~ msgid "I<--alignment 128> (64K)"
#~ msgstr "I<--alignment 128> (64K)"

#~ msgid "I<--alignment 2048> (1M)"
#~ msgstr "I<--alignment 2048> (1M)"

#~ msgid "B<-d>"
#~ msgstr "B<-d>"

#~ msgid "B<--debug>"
#~ msgstr "B<--debug>"

#~ msgid "You can give this option multiple times."
#~ msgstr "このオプションは複数回指定できます。"

#~ msgid "ext2, ext3 and ext4 filesystems."
#~ msgstr "ext2, ext3, ext4 ファイルシステム。"

#, no-wrap
#~ msgid ""
#~ " virt-resize indisk outdisk \\\n"
#~ "   --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize indisk outdisk \\\n"
#~ "   --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root\n"
#~ "\n"

#~ msgid "Use L<virt-filesystems(1)> to list the filesystems in the guest."
#~ msgstr ""
#~ "仮想マシンにあるファイルシステムを一覧表示するには L<virt-filesystems(1)> "
#~ "を使用します。"

#~ msgid "B<--no-copy-boot-loader>"
#~ msgstr "B<--no-copy-boot-loader>"

#~ msgid "B<--no-extra-partition>"
#~ msgstr "B<--no-extra-partition>"

#~ msgid "B<--no-expand-content>"
#~ msgstr "B<--no-expand-content>"

#~ msgid ""
#~ "If you give the I<--no-expand-content> option then virt-resize will not "
#~ "attempt this."
#~ msgstr ""
#~ "I<--no-expand-content> オプションを指定すると、virt-resize はこれを試行し"
#~ "ません。"

#~ msgid "B<--ntfsresize-force>"
#~ msgstr "B<--ntfsresize-force>"

#~ msgid ""
#~ "Pass the I<--force> option to L<ntfsresize(8)>, allowing resizing even if "
#~ "the NTFS disk is marked as needing a consistency check.  You have to use "
#~ "this option if you want to resize a Windows guest multiple times without "
#~ "booting into Windows between each resize."
#~ msgstr ""
#~ "L<ntfsresize(8)> に I<--force> オプションを渡します。これにより、NTFS ディ"
#~ "スクが整合性の確認が必要であるという印をつけたときでも、容量の変更を許可し"
#~ "ます。Windows 仮想マシンを各容量において起動することなく、何回も容量変更し"
#~ "たいならば、このオプションを使用する必要があります。"

#~ msgid ""
#~ "Resize the named partition (expanding or shrinking it) so that it has the "
#~ "given size."
#~ msgstr ""
#~ "Resize the named partition (expanding or shrinking it) so that it has the "
#~ "given size."

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda2=10G\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda2=10G\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda4=90%\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda4=90%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda2=+1G\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda2=+1G\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda2=-200M\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda2=-200M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda1=+128K\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda1=+128K\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda1=+10%\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda1=+10%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda1=-10%\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda1=-10%\n"
#~ "\n"

#~ msgid "See also the I<--ignore> option."
#~ msgstr "I<--ignore> オプション参照。"

#~ msgid ""
#~ "The I<--machine-readable> option can be used to make the output more "
#~ "machine friendly, which is useful when calling virt-resize from other "
#~ "programs, GUIs etc."
#~ msgstr ""
#~ "I<--machine-readable> オプションはよりマシンに易しい出力を作成するために使"
#~ "用できます。これは他のプログラムや GUI などから virt-resize を呼び出すとき"
#~ "に有用です。"

#, no-wrap
#~ msgid ""
#~ " $ virt-resize --machine-readable\n"
#~ " virt-resize\n"
#~ " ntfsresize-force\n"
#~ " 32bitok\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-resize --machine-readable\n"
#~ " virt-resize\n"
#~ " ntfsresize-force\n"
#~ " 32bitok\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -i -a newdisk\n"
#~ " ><fs> cat /boot/grub/device.map\n"
#~ " # check the contents of this file are sensible or\n"
#~ " # edit the file if necessary\n"
#~ " ><fs> grub-install / /dev/vda\n"
#~ " ><fs> exit\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -i -a newdisk\n"
#~ " ><fs> cat /boot/grub/device.map\n"
#~ " # check the contents of this file are sensible or\n"
#~ " # edit the file if necessary\n"
#~ " ><fs> grub-install / /dev/vda\n"
#~ " ><fs> exit\n"
#~ "\n"

#~ msgid "WINDOWS UNMOUNTABLE_BOOT_VOLUME BSOD"
#~ msgstr "Windows UNMOUNTABLE_BOOT_VOLUME BSOD"

#~ msgid ""
#~ "After sysprepping a Windows guest and then resizing it with virt-resize, "
#~ "you may see the guest fail to boot with an C<UNMOUNTABLE_BOOT_VOLUME> "
#~ "BSOD.  This error is caused by having C<ExtendOemPartition=1> in the "
#~ "sysprep.inf file.  Removing this line before sysprepping should fix the "
#~ "problem."
#~ msgstr ""
#~ "Windows 仮想マシンを sysprep して、virt-resize を用いて容量を変更した後、"
#~ "仮想マシンが C<UNMOUNTABLE_BOOT_VOLUME> BSOD で起動に失敗するかもしれませ"
#~ "ん。このエラーは sysprep.inf ファイルに C<ExtendOemPartition=1> があること"
#~ "により引き起こされます。sysprep する前にこの行を削除することにより、この問"
#~ "題を解決できます。"

#~ msgid "ALTERNATIVE TOOLS"
#~ msgstr "代替ツール"

#~ msgid "guestfs-ruby - How to use libguestfs from Ruby"
#~ msgstr "guestfs-ruby - Ruby から libguestfs を使用する方法"

#, no-wrap
#~ msgid ""
#~ " require 'guestfs'\n"
#~ " g = Guestfs::Guestfs.new()\n"
#~ " g.add_drive_opts(\"disk.img\",\n"
#~ "                  :readonly => 1, :format => \"raw\")\n"
#~ " g.launch()\n"
#~ "\n"
#~ msgstr ""
#~ " require 'guestfs'\n"
#~ " g = Guestfs::Guestfs.new()\n"
#~ " g.add_drive_opts(\"disk.img\",\n"
#~ "                  :readonly => 1, :format => \"raw\")\n"
#~ " g.launch()\n"
#~ "\n"

#~ msgid "virt-sparsify - Make a virtual machine disk sparse"
#~ msgstr "virt-sparsify - 仮想マシンのディスクをスパースにします"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify [--options] indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify [--options] indisk outdisk\n"
#~ "\n"

#~ msgid ""
#~ "Virt-sparsify can also convert between some disk formats, for example "
#~ "converting a raw disk image to a thin-provisioned qcow2 image."
#~ msgstr ""
#~ "Virt-sparsify はさまざまなディスクフォーマットを変換することができます。例"
#~ "えば、raw ディスクイメージをシンプロビジョニングされた qcow2 イメージに変"
#~ "換することができます。"

#~ msgid ""
#~ "Virt-sparsify cannot handle encrypted disks.  Libguestfs supports "
#~ "encrypted disks, but encrypted disks themselves cannot be sparsified."
#~ msgstr ""
#~ "virt-sparsify は暗号化されたディスクを処理できません。 libguestfs は暗号化"
#~ "されたディスクをサポートしますが、暗号化されたディスク自体はスパース化でき"
#~ "ません。"

#~ msgid "Typical usage is:"
#~ msgstr "一般的な使用法は次のとおりです:"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify indisk outdisk\n"
#~ "\n"

#~ msgid "To convert between formats, use the I<--convert> option:"
#~ msgstr "形式を変換するには I<--convert> オプションを使用します:"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify disk.raw --convert qcow2 disk.qcow2\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify disk.raw --convert qcow2 disk.qcow2\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify --ignore /dev/sda1 indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify --ignore /dev/sda1 indisk outdisk\n"
#~ "\n"

#~ msgid ""
#~ "See L<virt-filesystems(1)> to get a list of filesystems within a disk "
#~ "image."
#~ msgstr ""
#~ "ディスクイメージにあるファイルシステムの一覧を取得するには L<virt-"
#~ "filesystems(1)> を参照してください。"

#~ msgid "B<--compress>"
#~ msgstr "B<--compress>"

#~ msgid ""
#~ "Compress the output file.  This I<only> works if the output format is "
#~ "C<qcow2>."
#~ msgstr ""
#~ "出力ファイルを圧縮します。これは 出力形式が C<qcow2> の場合 I<のみ> 機能し"
#~ "ます。"

#~ msgid "B<--convert> raw"
#~ msgstr "B<--convert> raw"

#~ msgid "B<--convert> qcow2"
#~ msgstr "B<--convert> qcow2"

#~ msgid "B<--convert> [other formats]"
#~ msgstr "B<--convert> [other formats]"

#~ msgid ""
#~ "Supported and known-working output formats are: C<raw>, C<qcow2>, C<vdi>."
#~ msgstr ""
#~ "サポートされる既知の動作済み出力形式は次のとおりです: C<raw>, C<qcow2>, "
#~ "C<vdi>。"

#~ msgid ""
#~ "You can also use any format supported by the L<qemu-img(1)> program, eg. "
#~ "C<vmdk>, but support for other formats is reliant on qemu."
#~ msgstr ""
#~ "L<qemu-img(1)> プログラムによりサポートされるすべての形式を使用できます。"
#~ "たとえば、C<vmdk> ですが、他の形式のサポートは QEMU に依存します。"

#~ msgid "For fine-tuning the output format, see: I<--compress>, I<-o>."
#~ msgstr "出力形式を詳細に調整します。関連項目: I<--compress>, I<-o>."

#~ msgid "B<--ignore> filesystem"
#~ msgstr "B<--ignore> filesystem"

#~ msgid "B<--ignore> volgroup"
#~ msgstr "B<--ignore> volgroup"

#~ msgid "B<-o> option[,option,...]"
#~ msgstr "B<-o> option[,option,...]"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify --convert qcow2 \\\n"
#~ "   -o cluster_size=512,preallocation=metadata ...\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify --convert qcow2 \\\n"
#~ "   -o cluster_size=512,preallocation=metadata ...\n"
#~ "\n"

#~ msgid "B<--zero> partition"
#~ msgstr "B<--zero> パーティション"

#~ msgid "B<--zero> logvol"
#~ msgstr "B<--zero> 論理ボリューム"

#~ msgid ""
#~ "Zero the contents of the named partition or logical volume in the guest.  "
#~ "All data on the device is lost, but sparsification is excellent! You can "
#~ "give this option multiple times."
#~ msgstr ""
#~ "仮想マシンにある名前付きパーティションまたは論理ボリュームの内容をゼロ上書"
#~ "きします。デバイスにあるすべてのデータは失われます。しかし、スパース化は素"
#~ "晴らしいことです！このオプションを複数回指定できます。"

#, no-wrap
#~ msgid ""
#~ " $ virt-sparsify --machine-readable\n"
#~ " virt-sparsify\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-sparsify --machine-readable\n"
#~ " virt-sparsify\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mount -o remount,size=10G /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " mount -o remount,size=10G /tmp\n"
#~ "\n"

#~ msgid "B<abrt-data> *"
#~ msgstr "B<abrt-data> *"

#~ msgid "Remove the crash data generated by ABRT."
#~ msgstr "ABRT により生成されたクラッシュデータを削除します。"

#~ msgid ""
#~ "Remove the automatically generated ABRT crash data in C</var/spool/abrt/>."
#~ msgstr ""
#~ "C</var/spool/abrt/> に自動的に生成された ABRT クラッシュデータを削除しま"
#~ "す。"

#~ msgid "B<bash-history> *"
#~ msgstr "B<bash-history> *"

#~ msgid "Remove the bash history in the guest."
#~ msgstr "仮想マシンにおいて bash 履歴を削除します。"

#~ msgid ""
#~ "Remove the bash history of user \"root\" and any other users who have a "
#~ "C<.bash_history> file in their home directory."
#~ msgstr ""
#~ "ユーザー \"root\" および他のあらゆるユーザーのホームディレクトリーに C<."
#~ "bash_history> ファイルを持つユーザーの bash 履歴を削除します。"

#~ msgid "B<blkid-tab> *"
#~ msgstr "B<blkid-tab> *"

#~ msgid "Remove blkid tab in the guest."
#~ msgstr "ゲストにある blkid テーブルを削除します。"

#~ msgid "B<ca-certificates>"
#~ msgstr "B<ca-certificates>"

#~ msgid "Remove CA certificates in the guest."
#~ msgstr "仮想マシンにおいて CA 証明書を削除します。"

#~ msgid "B<crash-data> *"
#~ msgstr "B<crash-data> *"

#~ msgid "Remove the crash data generated by kexec-tools."
#~ msgstr "kexec-tools により生成されたクラッシュデータを削除します。"

#~ msgid "Remove the automatically generated kdump kernel crash data."
#~ msgstr "自動的に生成された kdump カーネルクラッシュデータを削除します。"

#~ msgid "B<cron-spool> *"
#~ msgstr "B<cron-spool> *"

#~ msgid "Remove user at-jobs and cron-jobs."
#~ msgstr "ユーザーの at ジョブおよび cron ジョブを削除します。"

#~ msgid "B<dhcp-client-state> *"
#~ msgstr "B<dhcp-client-state> *"

#~ msgid "Remove DHCP client leases."
#~ msgstr "DHCP クライアントのリースを削除します。"

#~ msgid "B<dhcp-server-state> *"
#~ msgstr "B<dhcp-server-state> *"

#~ msgid "Remove DHCP server leases."
#~ msgstr "DHCP サーバーのリースを削除します。"

#~ msgid "B<dovecot-data> *"
#~ msgstr "B<dovecot-data> *"

#~ msgid "Remove Dovecot (mail server) data."
#~ msgstr "Dovecot (メールサーバー) のデータを削除します。"

#~ msgid "B<firewall-rules>"
#~ msgstr "B<firewall-rules>"

#~ msgid "Remove the firewall rules."
#~ msgstr "ファイアウォールルールを削除します。"

#~ msgid "B<flag-reconfiguration>"
#~ msgstr "B<flag-reconfiguration>"

#~ msgid "See: L<https://bugzilla.redhat.com/show_bug.cgi?id=991641>"
#~ msgstr "参照: L<https://bugzilla.redhat.com/show_bug.cgi?id=991641>"

#~ msgid "B<kerberos-data>"
#~ msgstr "B<kerberos-data>"

#~ msgid "Remove Kerberos data in the guest."
#~ msgstr "仮想マシンにおいて Kerberos のデータを削除します。"

#~ msgid "B<logfiles> *"
#~ msgstr "B<logfiles> *"

#~ msgid "Remove many log files from the guest."
#~ msgstr "仮想マシンから多くのログファイルを削除します。"

#~ msgid "On Linux the following files are removed:"
#~ msgstr "Linux においては以下のファイルが削除されます:"

#~ msgid "B<lvm-uuids> *"
#~ msgstr "B<lvm-uuids> *"

#~ msgid "Change LVM2 PV and VG UUIDs."
#~ msgstr "LVM2 の PV および VG の UUID を変更します。"

#~ msgid ""
#~ "On Linux guests that have LVM2 physical volumes (PVs) or volume groups "
#~ "(VGs), new random UUIDs are generated and assigned to those PVs and VGs."
#~ msgstr ""
#~ "LVM2 物理ボリューム (PV) またはボリュームグループ (VG) を持つ Linux 仮想マ"
#~ "シンにおいて、新しいランダムな UUID が生成され、これらの PV や VG に割り当"
#~ "てられます。"

#~ msgid "B<machine-id> *"
#~ msgstr "B<machine-id> *"

#~ msgid "Remove the local machine ID."
#~ msgstr "ローカルマシン ID を削除します。"

#~ msgid "B<mail-spool> *"
#~ msgstr "B<mail-spool> *"

#~ msgid "Remove email from the local mail spool directory."
#~ msgstr "ローカルのメールスプールのディレクトリから電子メールを削除します。"

#~ msgid "B<net-hostname> *"
#~ msgstr "B<net-hostname> *"

#~ msgid ""
#~ "For Fedora and Red Hat Enterprise Linux, this is removed from C<ifcfg-*> "
#~ "files."
#~ msgstr ""
#~ "Fedora および Red Hat Enterprise Linux に対して、これは C<ifcfg-*> ファイ"
#~ "ルから削除されます。"

#~ msgid "B<net-hwaddr> *"
#~ msgstr "B<net-hwaddr> *"

#~ msgid "Remove HWADDR (hard-coded MAC address) configuration."
#~ msgstr "HWADDR (ハードコードされた MAC アドレス) 設定を削除します。"

#~ msgid "B<pacct-log> *"
#~ msgstr "B<pacct-log> *"

#~ msgid "Remove the process accounting log files."
#~ msgstr "プロセス・アカウンティングのログファイルを削除します。"

#~ msgid ""
#~ "The system wide process accounting will store to the pacct log files if "
#~ "the process accounting is on."
#~ msgstr ""
#~ "プロセス・アカウンティングが有効になっていると、システム全体のプロセス・ア"
#~ "カウンティングが pacct ログファイルに保存されます。"

#~ msgid "B<package-manager-cache> *"
#~ msgstr "B<package-manager-cache> *"

#~ msgid "Remove package manager cache."
#~ msgstr "パッケージマネージャーのキャッシュを削除します。"

#~ msgid "B<pam-data> *"
#~ msgstr "B<pam-data> *"

#~ msgid "Remove the PAM data in the guest."
#~ msgstr "ゲストにある PAM データを削除します。"

#~ msgid "B<puppet-data-log> *"
#~ msgstr "B<puppet-data-log> *"

#~ msgid "Remove the data and log files of puppet."
#~ msgstr "Puppet のデータおよびログファイルを削除します。"

#~ msgid "B<rhn-systemid> *"
#~ msgstr "B<rhn-systemid> *"

#~ msgid "Remove the RHN system ID."
#~ msgstr "RHN システム ID を削除します。"

#~ msgid "B<samba-db-log> *"
#~ msgstr "B<samba-db-log> *"

#~ msgid "Remove the database and log files of Samba."
#~ msgstr "Samba のデータベースおよびログファイルを削除します。"

#~ msgid "B<script> *"
#~ msgstr "B<script> *"

#~ msgid "Run arbitrary scripts against the guest."
#~ msgstr "仮想マシンに対して任意のスクリプトを実行します。"

#~ msgid "B<smolt-uuid> *"
#~ msgstr "B<smolt-uuid> *"

#~ msgid "Remove the Smolt hardware UUID."
#~ msgstr "Smolt ハードウェア UUID を削除します。"

#~ msgid "B<ssh-hostkeys> *"
#~ msgstr "B<ssh-hostkeys> *"

#~ msgid "Remove the SSH host keys in the guest."
#~ msgstr "仮想マシンの SSH ホストキーを削除します。"

#~ msgid ""
#~ "The SSH host keys are regenerated (differently) next time the guest is "
#~ "booted."
#~ msgstr "仮想マシンの次回起動時に（異なる） SSH ホストキーが再生成されます。"

#~ msgid ""
#~ "If, after cloning, the guest gets the same IP address, ssh will give you "
#~ "a stark warning about the host key changing:"
#~ msgstr ""
#~ "クローン後、仮想マシンが同じ IP アドレスを取得すると、ホストキーが変更され"
#~ "たという警告が ssh により表示されます:"

#, no-wrap
#~ msgid ""
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
#~ "\n"
#~ msgstr ""
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
#~ "\n"

#~ msgid "B<ssh-userdir> *"
#~ msgstr "B<ssh-userdir> *"

#~ msgid "Remove \".ssh\" directories in the guest."
#~ msgstr "仮想マシンにある \".ssh\" ディレクトリーを削除します。"

#~ msgid ""
#~ "Remove the C<.ssh> directory of user \"root\" and any other users who "
#~ "have a C<.ssh> directory in their home directory."
#~ msgstr ""
#~ "ユーザー \"root\" 、およびホームディレクトリーに C<.ssh> ディレクトリーが"
#~ "ある他のすべてのユーザーの、C<.ssh> ディレクトリーを削除します。"

#~ msgid "B<sssd-db-log> *"
#~ msgstr "B<sssd-db-log> *"

#~ msgid "Remove the database and log files of sssd."
#~ msgstr "SSSD のデータベースとログファイルを削除します。"

#~ msgid "B<tmp-files> *"
#~ msgstr "B<tmp-files> *"

#~ msgid "Remove temporary files."
#~ msgstr "一時ファイルを削除します。"

#~ msgid "This removes temporary files under C</tmp> and C</var/tmp>."
#~ msgstr "これは C</tmp> と C</var/tmp> の中にある一時ファイルを削除します。"

#~ msgid "B<udev-persistent-net> *"
#~ msgstr "B<udev-persistent-net> *"

#~ msgid "Remove udev persistent net rules."
#~ msgstr "udev persistent net ルールを削除します。"

#~ msgid ""
#~ "After a guest is cloned, the MAC address usually changes.  Since the old "
#~ "MAC address occupies the old name (eg. eth0), this means the fresh MAC "
#~ "address is assigned to a new name (eg. eth1) and this is usually "
#~ "undesirable.  Erasing the udev persistent net rules avoids this."
#~ msgstr ""
#~ "仮想マシンをクローンした後、通常 MAC アドレスは変わります。古い MAC アドレ"
#~ "スは古い名前（たとえば eth0）を占有するため、このことは新しい MAC アドレス"
#~ "が新しい名前（たとえば eth1）に割り当てられることを意味します。それは、一"
#~ "般的に好ましくありません。 udev の永続的な net ルールを削除することによ"
#~ "り、これを避けます。"

#~ msgid "B<user-account>"
#~ msgstr "B<user-account>"

#~ msgid "Remove the user accounts in the guest."
#~ msgstr "仮想マシンにあるユーザーアカウントを削除します。"

#~ msgid "B<utmp> *"
#~ msgstr "B<utmp> *"

#~ msgid "Remove the utmp file."
#~ msgstr "utmp ファイルを削除します。"

#~ msgid "B<yum-uuid> *"
#~ msgstr "B<yum-uuid> *"

#~ msgid "Remove the yum UUID."
#~ msgstr "yum UUID を削除します。"

#~ msgid ""
#~ "Yum creates a fresh UUID the next time it runs when it notices that the "
#~ "original UUID has been erased."
#~ msgstr ""
#~ "yum は元々の UUID が削除されたことを通知するとき、次の実行時に新しい UUID "
#~ "を作成します。"

#~ msgid ""
#~ "virt-sysprep - Reset, unconfigure or customize a virtual machine so "
#~ "clones can be made"
#~ msgstr ""
#~ "virt-sysprep - 仮想マシンをクローンできるよう、再設定、設定解除またはカス"
#~ "タマイズします"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#~ msgid ""
#~ "Use I<--list-operations> to list operations supported by a particular "
#~ "version of virt-sysprep."
#~ msgstr ""
#~ "特定のバージョンの virt-sysprep によりサポートされる操作の一覧を表示するに"
#~ "は I<--list-operations> を使用します。"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep --format raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep --format raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
#~ "\n"

#~ msgid "B<--list-operations>"
#~ msgstr "B<--list-operations>"

#~ msgid "List the operations supported by the virt-sysprep program."
#~ msgstr "virt-sysprep プログラムによりサポートされる操作を一覧表示します。"

#~ msgid "B<--mount-options> mp:opts[;mp:opts;...]"
#~ msgstr "B<--mount-options> mp:opts[;mp:opts;...]"

#, no-wrap
#~ msgid ""
#~ " --mount-options \"/:noatime\"\n"
#~ "\n"
#~ msgstr ""
#~ " --mount-options \"/:noatime\"\n"
#~ "\n"

#~ msgid "will mount the root directory with C<notime>.  This example:"
#~ msgstr "これはルートディレクトリを C<notime> でマウントします。 この例:"

#, no-wrap
#~ msgid ""
#~ " --mount-options \"/:noatime;/var:rw,nodiratime\"\n"
#~ "\n"
#~ msgstr ""
#~ " --mount-options \"/:noatime;/var:rw,nodiratime\"\n"
#~ "\n"

#~ msgid "COPYING AND CLONING"
#~ msgstr "コピー方法およびクローン方法"

#~ msgid ""
#~ "Virt-sysprep can be used as part of a process of cloning guests, or to "
#~ "prepare a template from which guests can be cloned.  There are many "
#~ "different ways to achieve this using the virt tools, and this section is "
#~ "just an introduction."
#~ msgstr ""
#~ "virt-sysprep は仮想マシンをクローンするプロセスの一部として使用できます。"
#~ "もしくは、クローンされた仮想マシンからテンプレートを準備するために使用でき"
#~ "ます。仮想化ツールを使用してこれを実現する他の方法がいろいろとあります。こ"
#~ "のセクションは単に概要を説明します。"

#~ msgid "A virtual machine (when switched off) consists of two parts:"
#~ msgstr "仮想マシン（停止状態の場合）は 2 つの部分からなります:"

#~ msgid "I<configuration>"
#~ msgstr "I<configuration>"

#~ msgid ""
#~ "The configuration or description of the guest.  eg. The libvirt XML (see "
#~ "C<virsh dumpxml>), the running configuration of the guest, or another "
#~ "external format like OVF."
#~ msgstr ""
#~ "仮想マシンの設定または説明。  例: libvirt XML (C<virsh dumpxml> 参照) 、仮"
#~ "想マシンの実行中の設定、または OVF のような他の外部形式。"

#~ msgid "Some configuration items that might need to be changed:"
#~ msgstr "いくつかの設定項目は変更する必要があるかもしれません:"

#~ msgid "name"
#~ msgstr "名前"

#~ msgid "UUID"
#~ msgstr "UUID"

#~ msgid "path to block device(s)"
#~ msgstr "ブロックデバイスへのパス"

#~ msgid "network card MAC address"
#~ msgstr "ネットワークカードの MAC アドレス"

#~ msgid "I<block device(s)>"
#~ msgstr "I<ブロックデバイス>"

#~ msgid "hostname and other net configuration"
#~ msgstr "ホスト名および他のネットワーク設定"

#~ msgid "SSH host keys"
#~ msgstr "SSH ホストキー"

#~ msgid "Windows unique security ID (SID)"
#~ msgstr "Windows の一意なセキュリティ ID (SID)"

#~ msgid "Puppet registration"
#~ msgstr "Puppet の登録"

#~ msgid "COPYING THE BLOCK DEVICE"
#~ msgstr "ブロックデバイスのコピー法"

#, no-wrap
#~ msgid ""
#~ "                        virt-sysprep\n"
#~ "                             |\n"
#~ "                             v\n"
#~ " original guest --------> template ---------->\n"
#~ "                                      \\------> cloned\n"
#~ "                                       \\-----> guests\n"
#~ "                                        \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                        virt-sysprep\n"
#~ "                             |\n"
#~ "                             v\n"
#~ " 元のゲスト --------> テンプレート ---------->\n"
#~ "                                      \\------> クローン\n"
#~ "                                       \\-----> 済みゲスト\n"
#~ "                                        \\---->\n"
#~ "\n"

#~ msgid ""
#~ "You can, of course, just copy the block device on the host using L<cp(1)> "
#~ "or L<dd(1)>."
#~ msgstr ""
#~ "もちろん、ホストにおいて L<cp(1)> または L<dd(1)> を使用してブロックデバイ"
#~ "スをコピーできます。"

#, no-wrap
#~ msgid ""
#~ "                   dd                 dd\n"
#~ " original guest --------> template ---------->\n"
#~ "                                      \\------> cloned\n"
#~ "                                       \\-----> guests\n"
#~ "                                        \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "               dd                      dd\n"
#~ " 元のゲスト --------> テンプレート ---------->\n"
#~ "                                      \\------> クローン\n"
#~ "                                       \\-----> 済みゲスト\n"
#~ "                                        \\---->\n"
#~ "\n"

#~ msgid "There are some smarter (and faster) ways too:"
#~ msgstr "よりスマート（かつ高速）な方法もあります:"

#, no-wrap
#~ msgid ""
#~ "                          snapshot\n"
#~ "                template ---------->\n"
#~ "                            \\------> cloned\n"
#~ "                             \\-----> guests\n"
#~ "                              \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                          snapshot\n"
#~ "            テンプレート ---------->\n"
#~ "                            \\------> クローン\n"
#~ "                             \\-----> 済みゲスト\n"
#~ "                              \\---->\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                    virt-sysprep        virt-sysprep\n"
#~ "                      (reset)      (add user, keys, logos)\n"
#~ "                         |                   |\n"
#~ "                 dd      v          dd       v\n"
#~ " original guest ----> template ---------> copied ------> custom\n"
#~ "                                          template       guest\n"
#~ "\n"
#~ msgstr ""
#~ "                    virt-sysprep        virt-sysprep\n"
#~ "                     (リセット)   (ユーザー、キー、ロゴの追加)\n"
#~ "                         |                   |\n"
#~ "                 dd      v          dd       v\n"
#~ " 元の仮想マシン ----> テンプレート ----> コピー済み ------> カスタム\n"
#~ "                                        テンプレート       仮想マシン\n"
#~ "\n"

#~ msgid "Create a snapshot using C<lvcreate --snapshot>."
#~ msgstr "C<lvcreate --snapshot> を使用してスナップショットを作成します。"

#~ msgid "Prepare your template using L<virt-sparsify(1)>.  See below."
#~ msgstr ""
#~ "L<virt-sparsify(1)> を使用してテンプレートを準備します。以下を参照してくだ"
#~ "さい。"

#~ msgid "VIRT-CLONE"
#~ msgstr "virt-clone"

#~ msgid "SPARSIFY"
#~ msgstr "スパース化"

#, no-wrap
#~ msgid ""
#~ "              virt-sparsify\n"
#~ " original guest --------> template\n"
#~ "\n"
#~ msgstr ""
#~ "          virt-sparsify\n"
#~ " 元のゲスト --------> テンプレート\n"
#~ "\n"

#~ msgid "RESIZE"
#~ msgstr "容量変更"

#, no-wrap
#~ msgid ""
#~ "                         virt-resize\n"
#~ "                template ---------->\n"
#~ "                            \\------> cloned\n"
#~ "                             \\-----> guests\n"
#~ "                              \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                         virt-resize\n"
#~ "            テンプレート ---------->\n"
#~ "                            \\------> クローン\n"
#~ "                             \\-----> 済みゲスト\n"
#~ "                              \\---->\n"
#~ "\n"

#~ msgid "RANDOM SEED"
#~ msgstr "乱数の種"

#~ msgid "I<(This section applies to Linux guests only)>"
#~ msgstr "I<(このセクションは Linux 仮想マシンのみに適用します)>"

#~ msgid "Wanlong Gao, Fujitsu Ltd."
#~ msgstr "Wanlong Gao, Fujitsu Ltd."

#~ msgid "Copyright (C) 2012 Fujitsu Ltd."
#~ msgstr "Copyright (C) 2012 Fujitsu Ltd."

#~ msgid "libguestfs-test-tool - Diagnostics for libguestfs"
#~ msgstr "libguestfs-test-tool - libguestfs の診断"

#, no-wrap
#~ msgid ""
#~ " libguestfs-test-tool [--options]\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-test-tool [--options]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ===== TEST FINISHED OK =====\n"
#~ "\n"
#~ msgstr ""
#~ " ===== TEST FINISHED OK =====\n"
#~ "\n"

#~ msgid "Display the libguestfs version number and exit."
#~ msgstr "libguestfs のバージョン番号を表示して、終了します。"

#~ msgid "SELF-DIAGNOSIS"
#~ msgstr "自己診断"

#~ msgid ""
#~ "Refer to L<guestfs(3)/APPLIANCE BOOT PROCESS> to understand the messages "
#~ "produced by libguestfs-test-tool and/or possible errors."
#~ msgstr ""
#~ "libguestfs-test-tool および/または起こりうるエラーにより生成されるメッセー"
#~ "ジを理解するには L<guestfs(3)/アプライアンス起動プロセス> を参照してくださ"
#~ "い。"

#~ msgid "L<guestfs(3)>, L<http://libguestfs.org/>, L<http://qemu.org/>."
#~ msgstr "L<guestfs(3)>, L<http://libguestfs.org/>, L<http://qemu.org/>."

#~ msgid ""
#~ "virt-list-filesystems - List filesystems in a virtual machine or disk "
#~ "image"
#~ msgstr ""
#~ "virt-list-filesystems - 仮想マシンまたはディスクイメージのファイルシステム"
#~ "の一覧表示"

#, no-wrap
#~ msgid ""
#~ " virt-list-filesystems [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-filesystems [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-list-filesystems [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-filesystems [--options] disk.img [disk.img ...]\n"
#~ "\n"

#~ msgid "OBSOLETE"
#~ msgstr "非推奨"

#~ msgid "B<-c URI>"
#~ msgstr "B<-c URI>"

#~ msgid "B<--connect URI>"
#~ msgstr "B<--connect URI>"

#~ msgid "B<-a>"
#~ msgstr "B<-a>"

#~ msgid "Copyright (C) 2009 Red Hat Inc."
#~ msgstr "Copyright (C) 2009 Red Hat Inc."

#~ msgid ""
#~ "virt-list-partitions - List partitions in a virtual machine or disk image"
#~ msgstr ""
#~ "virt-list-partitions - 仮想マシンまたはディスクイメージのパーティションの"
#~ "一覧表示"

#, no-wrap
#~ msgid ""
#~ " virt-list-partitions [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-partitions [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-list-partitions [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-partitions [--options] disk.img [disk.img ...]\n"
#~ "\n"

#~ msgid ""
#~ "C<virt-list-partitions> is a command line tool to list the partitions "
#~ "that are contained in a virtual machine or disk image.  It is mainly "
#~ "useful as a first step to using L<virt-resize(1)>."
#~ msgstr ""
#~ "C<virt-list-partitions> は、仮想マシンまたはディスクイメージに含まれるパー"
#~ "ティションを一覧表示するためのコマンドラインツールです。おもに L<virt-"
#~ "resize(1)> を使用するための最初の手順として有用です。"

#~ msgid ""
#~ "C<virt-list-partitions> is just a simple wrapper around L<libguestfs(3)> "
#~ "functionality.  For more complex cases you should look at the "
#~ "L<guestfish(1)> tool."
#~ msgstr ""
#~ "C<virt-list-partitions> は L<libguestfs(3)> の機能の簡単なラッパーです。よ"
#~ "り複雑な場合に対しては L<guestfish(1)> ツールを参照してください。"

#~ msgid "Show sizes in human-readable form (eg. \"1G\")."
#~ msgstr "容量を読みやすい形式で表示します（例: \"1G\"）。"

#~ msgid ""
#~ "With this option, C<virt-list-partitions> displays the type and size of "
#~ "each partition too (where \"type\" means C<ext3>, C<pv> etc.)"
#~ msgstr ""
#~ "このオプションを用いると、 C<virt-list-partitions> は各パーティションの形"
#~ "式と容量も表示します（ここで \"形式\" は C<ext3>, C<pv> などを意味しま"
#~ "す）。"

#~ msgid "B<-t>"
#~ msgstr "B<-t>"

#~ msgid "B<--total>"
#~ msgstr "B<--total>"

#~ msgid ""
#~ "Display the total size of each block device (as a separate row or rows)."
#~ msgstr "各ブロックデバイスの合計容量を（別の列として）表示します。"

#~ msgid "virt-tar - Extract or upload files to a virtual machine"
#~ msgstr "virt-tar - 仮想マシンへのファイルの展開またはアップロード"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] -x domname directory tarball\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] -x domname directory tarball\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] -u domname tarball directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] -u domname tarball directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
#~ "\n"

#~ msgid ""
#~ "This tool is obsolete.  Use L<virt-copy-in(1)>, L<virt-copy-out(1)>, "
#~ "L<virt-tar-in(1)>, L<virt-tar-out(1)> as replacements."
#~ msgstr ""
#~ "このツールは推奨されません。  代わりに L<virt-copy-in(1)>, L<virt-copy-"
#~ "out(1)>, L<virt-tar-in(1)>, L<virt-tar-out(1)> を使用してください。"

#~ msgid "Download C</home> from the VM into a local tarball:"
#~ msgstr ""
#~ "仮想マシンから C</home> をローカルの tar ファイルにダウンロードします:"

#, no-wrap
#~ msgid ""
#~ " virt-tar -x domname /home home.tar\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -x domname /home home.tar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar -zx domname /home home.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -zx domname /home home.tar.gz\n"
#~ "\n"

#~ msgid "Upload a local tarball and unpack it inside C</tmp> in the VM:"
#~ msgstr ""
#~ "ローカルの tar ファイルをアップロードして、仮想マシンの C</tmp> に展開しま"
#~ "す:"

#, no-wrap
#~ msgid ""
#~ " virt-tar -u domname uploadstuff.tar /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -u domname uploadstuff.tar /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
#~ "\n"

#~ msgid "WARNING"
#~ msgstr "警告"

#~ msgid "B<--extract>"
#~ msgstr "B<--extract>"

#~ msgid "B<--download>"
#~ msgstr "B<--download>"

#~ msgid "B<--upload>"
#~ msgstr "B<--upload>"

#~ msgid ""
#~ "Use I<-x> to extract (download) a directory from a virtual machine to a "
#~ "local tarball."
#~ msgstr ""
#~ "仮想マシンからローカル tar ファイルにディレクトリを展開 (ダウンロード) す"
#~ "るには I<-x> を使用します。"

#~ msgid ""
#~ "Use I<-u> to upload and unpack from a local tarball into a virtual "
#~ "machine.  Please read the L</WARNING> section above before using this "
#~ "option."
#~ msgstr ""
#~ "ローカル tar ファイルから仮想マシンの中にアップロードおよび展開するには "
#~ "I<-u> を使用します。このオプションを使用する前に L</警告> セクションを参照"
#~ "してください。"

#~ msgid "You must specify exactly one of these options."
#~ msgstr "これらのオプションのいずれかを正確に指定する必要があります。"

#~ msgid "B<-z>"
#~ msgstr "B<-z>"

#~ msgid "B<--gzip>"
#~ msgstr "B<--gzip>"

#~ msgid "Specify that the input or output tarball is gzip-compressed."
#~ msgstr "入力または出力 tar ファイルを gzip 圧縮するよう指定します。"

#~ msgid ""
#~ "virt-win-reg - Export and merge Windows Registry entries from a Windows "
#~ "guest"
#~ msgstr ""
#~ "virt-win-reg - Windows 仮想マシンからの Windows レジストリエントリーのエク"
#~ "スポートおよびマージ"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --merge domname [input.reg ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --merge domname [input.reg ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg [--options] disk.img ... # instead of domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg [--options] disk.img ... # 仮想マシン名の代わり\n"
#~ "\n"

#~ msgid ""
#~ "This program can export and merge Windows Registry entries from a Windows "
#~ "guest."
#~ msgstr ""
#~ "このプログラムは Windows 仮想マシンから Windows レジストリのエントリーをエ"
#~ "クスポートおよびマージできます。"

#~ msgid ""
#~ "The first parameter is the libvirt guest name or the raw disk image of a "
#~ "Windows guest."
#~ msgstr ""
#~ "第一パラメーターは Windows 仮想マシンの libvirt 仮想マシン名または生のディ"
#~ "スクイメージです。"

#, no-wrap
#~ msgid ""
#~ " $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
#~ " $ virt-win-reg Windows7 $cvkey ProductName\n"
#~ " Windows 7 Enterprise\n"
#~ "\n"
#~ msgstr ""
#~ " $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
#~ " $ virt-win-reg Windows7 $cvkey ProductName\n"
#~ " Windows 7 Enterprise\n"
#~ "\n"

#~ msgid ""
#~ "With I<--merge>, you can merge a textual regedit file into the Windows "
#~ "Registry:"
#~ msgstr ""
#~ "I<--merge> を用いると、テキストの regedit ファイルを Windows レジストリー"
#~ "の中に結合できます:"

#, no-wrap
#~ msgid ""
#~ " $ virt-win-reg --merge Windows7 changes.reg\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-win-reg --merge Windows7 changes.reg\n"
#~ "\n"

#~ msgid "NOTE"
#~ msgstr "注記"

#~ msgid "B<--merge>"
#~ msgstr "B<--merge>"

#~ msgid "B<--encoding> UTF-16LE|ASCII"
#~ msgstr "B<--encoding> UTF-16LE|ASCII"

#~ msgid "B<--unsafe-printable-strings>"
#~ msgstr "B<--unsafe-printable-strings>"

#~ msgid "SUPPORTED SYSTEMS"
#~ msgstr "サポートされるシステム"

#~ msgid "The following Registry keys are supported:"
#~ msgstr "以下のレジストリキーがサポートされます:"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SAM>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SAM>"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SECURITY>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SECURITY>"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SYSTEM>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SYSTEM>"

#~ msgid "C<HKEY_USERS\\.DEFAULT>"
#~ msgstr "C<HKEY_USERS\\.DEFAULT>"

#~ msgid "C<HKEY_USERS\\I<SID>>"
#~ msgstr "C<HKEY_USERS\\I<SID>>"

#~ msgid "where I<SID> is a Windows User SID (eg. C<S-1-5-18>)."
#~ msgstr "ここで I<SID> は Windows User SID です (例: C<S-1-5-18>)。"

#~ msgid "C<HKEY_USERS\\I<username>>"
#~ msgstr "C<HKEY_USERS\\I<username>>"

#~ msgid ""
#~ "where I<username> is a local user name (this is a libguestfs extension)."
#~ msgstr ""
#~ "ここで I<username> はローカルユーザー名です (これは libguestfs の拡張で"
#~ "す)。"

#~ msgid "ENCODING"
#~ msgstr "エンコーディング"

#, no-wrap
#~ msgid ""
#~ " iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
#~ "\n"
#~ msgstr ""
#~ " iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
#~ "\n"
#~ msgstr ""
#~ " unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
#~ "\n"

#~ msgid "For more information about encoding, see L<Win::Hivex::Regedit(3)>."
#~ msgstr ""
#~ "エンコーディングの詳細は L<Win::Hivex::Regedit(3)> を参照してください。"

#, no-wrap
#~ msgid ""
#~ " $ file software.reg\n"
#~ " software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
#~ " with CRLF line terminators\n"
#~ "\n"
#~ msgstr ""
#~ " $ file software.reg\n"
#~ " software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
#~ " with CRLF line terminators\n"
#~ "\n"

#~ msgid "CurrentControlSet etc."
#~ msgstr "CurrentControlSet など。"

#, no-wrap
#~ msgid ""
#~ " # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
#~ " [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
#~ " \"Current\"=dword:00000001\n"
#~ " \"Default\"=dword:00000001\n"
#~ " \"Failed\"=dword:00000000\n"
#~ " \"LastKnownGood\"=dword:00000002\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
#~ " [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
#~ " \"Current\"=dword:00000001\n"
#~ " \"Default\"=dword:00000001\n"
#~ " \"Failed\"=dword:00000000\n"
#~ " \"LastKnownGood\"=dword:00000002\n"
#~ "\n"

#~ msgid "DELETING REGISTRY KEYS AND VALUES"
#~ msgstr "レジストリーキーおよび値の削除方法"

#~ msgid "To delete a whole registry key, use the syntax:"
#~ msgstr "レジストリキー全体を削除するには、この構文を使用します:"

#, no-wrap
#~ msgid ""
#~ " [-HKEY_LOCAL_MACHINE\\Foo]\n"
#~ "\n"
#~ msgstr ""
#~ " [-HKEY_LOCAL_MACHINE\\Foo]\n"
#~ "\n"

#~ msgid "To delete a single value within a key, use the syntax:"
#~ msgstr "キーにある単一の値を削除するには、この構文を使用します:"

#, no-wrap
#~ msgid ""
#~ " [HKEY_LOCAL_MACHINE\\Foo]\n"
#~ " \"Value\"=-\n"
#~ "\n"
#~ msgstr ""
#~ " [HKEY_LOCAL_MACHINE\\Foo]\n"
#~ " \"Value\"=-\n"
#~ "\n"

#~ msgid "WINDOWS TIPS"
#~ msgstr "Windows のヒント"

#, no-wrap
#~ msgid ""
#~ " guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat > test.reg <<'EOF'\n"
#~ " [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
#~ " \"Test\"=\"c:\\\\test.bat\"\n"
#~ " EOF\n"
#~ "\n"
#~ msgstr ""
#~ " cat > test.reg <<'EOF'\n"
#~ " [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
#~ " \"Test\"=\"c:\\\\test.bat\"\n"
#~ " EOF\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --merge WindowsGuest test.reg\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --merge WindowsGuest test.reg\n"
#~ "\n"

#~ msgid "INSTALLING A SERVICE"
#~ msgstr "サービスのインストール方法"

#, no-wrap
#~ msgid ""
#~ " guestfish -i -d WindowsGuest <<EOF\n"
#~ "   upload rhsrvany.exe /rhsrvany.exe\n"
#~ "   upload test.exe /test.exe\n"
#~ " EOF\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -i -d WindowsGuest <<EOF\n"
#~ "   upload rhsrvany.exe /rhsrvany.exe\n"
#~ "   upload test.exe /test.exe\n"
#~ " EOF\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat > service.reg <<'EOF'\n"
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
#~ " \"Type\"=dword:00000010\n"
#~ " \"Start\"=dword:00000002\n"
#~ " \"ErrorControl\"=dword:00000001\n"
#~ " \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
#~ " \"DisplayName\"=\"RHSrvAny\"\n"
#~ " \"ObjectName\"=\"NetworkService\"\n"
#~ " \n"
#~ msgstr ""
#~ " cat > service.reg <<'EOF'\n"
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
#~ " \"Type\"=dword:00000010\n"
#~ " \"Start\"=dword:00000002\n"
#~ " \"ErrorControl\"=dword:00000001\n"
#~ " \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
#~ " \"DisplayName\"=\"RHSrvAny\"\n"
#~ " \"ObjectName\"=\"NetworkService\"\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
#~ " \"CommandLine\"=\"c:\\\\test.exe\"\n"
#~ " \"PWD\"=\"c:\\\\Temp\"\n"
#~ " EOF\n"
#~ "\n"
#~ msgstr ""
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
#~ " \"CommandLine\"=\"c:\\\\test.exe\"\n"
#~ " \"PWD\"=\"c:\\\\Temp\"\n"
#~ " EOF\n"
#~ "\n"

#~ msgid ""
#~ "For the meaning of the magic numbers, see this Microsoft KB article: "
#~ "L<http://support.microsoft.com/kb/103000>."
#~ msgstr ""
#~ "マジックナンバーの意味は次の Microsoft KB 記事を参照してください: "
#~ "L<http://support.microsoft.com/kb/103000>."

#~ msgid "Update the registry:"
#~ msgstr "レジストリを更新します:"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --merge WindowsGuest service.reg\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --merge WindowsGuest service.reg\n"
#~ "\n"

#~ msgid ""
#~ "Be careful when passing parameters containing C<\\> (backslash) in the "
#~ "shell.  Usually you will have to use 'single quotes' or double "
#~ "backslashes (but not both) to protect them from the shell."
#~ msgstr ""
#~ "シェルにおいて C<\\> (backslash) を含むパラメーターを渡すとき、注意する必"
#~ "要があります。通常シェルからそれらを保護するには、'単一引用符' または二つ"
#~ "のバックスラッシュ (しかし、両方ではない) を使用する必要があります。"

#~ msgid "Paths and value names are case-insensitive."
#~ msgstr "パスおよび値の名前は大文字小文字を区別します。"

#~ msgid "Copyright (C) 2010 Red Hat Inc."
#~ msgstr "Copyright (C) 2010 Red Hat Inc."
