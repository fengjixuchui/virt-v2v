# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Red Hat Inc.
# This file is distributed under the same license as the libguestfs package.
#
# Translators:
# Jérôme Fenal <jfenal@gmail.com>, 2013
# Kévin Raymond <shaiton@fedoraproject.org>, 2012
msgid ""
msgstr ""
"Project-Id-Version: libguestfs 1.39.12\n"
"Report-Msgid-Bugs-To: libguestfs@redhat.com\n"
"POT-Creation-Date: 2020-04-16 10:40+0100\n"
"PO-Revision-Date: 2015-02-21 10:19+0000\n"
"Last-Translator: Copied by Zanata <copied-by-zanata@zanata.org>\n"
"Language-Team: French (http://www.transifex.com/projects/p/libguestfs/"
"language/fr/)\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Zanata 4.6.2\n"

#. type: =end
#: ../common/mlcustomize/customize-options.pod:1
#: ../common/mlcustomize/customize-options.pod:25
#: ../docs/virt-v2v-release-notes-1.42.pod:141
#: ../docs/virt-v2v-release-notes-1.42.pod:145
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:1
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:25
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:141
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:145
msgid "comment"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:3
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:3
#, no-wrap
msgid ""
"libguestfs generated file\n"
" WARNING: THIS FILE IS GENERATED FROM THE FOLLOWING FILES:\n"
"          generator/customize.ml\n"
"          and from the code in the generator/ subdirectory.\n"
" ANY CHANGES YOU MAKE TO THIS FILE WILL BE LOST.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:9
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:9
#, no-wrap
msgid ""
" Copyright (C) 2009-2020 Red Hat Inc.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:11
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:11
#, no-wrap
msgid ""
" This program is free software; you can redistribute it and/or modify\n"
" it under the terms of the GNU General Public License as published by\n"
" the Free Software Foundation; either version 2 of the License, or\n"
" (at your option) any later version.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:16
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:16
#, no-wrap
msgid ""
" This program is distributed in the hope that it will be useful,\n"
" but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
" GNU General Public License for more details.\n"
"\n"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:21
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:21
#, no-wrap
msgid ""
" You should have received a copy of the GNU General Public License along\n"
" with this program; if not, write to the Free Software Foundation, Inc.,\n"
" 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n"
"\n"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:29
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:29
msgid "B<--append-line> FILE:LINE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:31
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:31
msgid ""
"Append a single line of text to the C<FILE>.  If the file does not already "
"end with a newline, then one is added before the appended line.  Also a "
"newline is added to the end of the C<LINE> string automatically."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:36
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:36
msgid "For example (assuming ordinary shell quoting) this command:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:38
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:38
#, no-wrap
msgid ""
" --append-line '/etc/hosts:10.0.0.1 foo'\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:40
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:40
msgid ""
"will add either C<10.0.0.1 foo⏎> or C<⏎10.0.0.1 foo⏎> to the file, the "
"latter only if the existing file does not already end with a newline."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:44
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:44
msgid ""
"C<⏎> represents a newline character, which is guessed by looking at the "
"existing content of the file, so this command does the right thing for files "
"using Unix or Windows line endings.  It also works for empty or non-existent "
"files."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:49
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:49
msgid "To insert several lines, use the same option several times:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:51
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:51
#, no-wrap
msgid ""
" --append-line '/etc/hosts:10.0.0.1 foo'\n"
" --append-line '/etc/hosts:10.0.0.2 bar'\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:54
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:54
msgid "To insert a blank line before the appended line, do:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:56
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:56
#, no-wrap
msgid ""
" --append-line '/etc/hosts:'\n"
" --append-line '/etc/hosts:10.0.0.1 foo'\n"
"\n"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:59
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:59
msgid "B<--chmod> PERMISSIONS:FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:61
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:61
msgid "Change the permissions of C<FILE> to C<PERMISSIONS>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:63
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:63
msgid ""
"I<Note>: C<PERMISSIONS> by default would be decimal, unless you prefix it "
"with C<0> to get octal, ie. use C<0700> not C<700>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:66
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:66
msgid "B<--commands-from-file> FILENAME"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:68
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:68
msgid ""
"Read the customize commands from a file, one (and its arguments)  each line."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:71
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:71
msgid ""
"Each line contains a single customization command and its arguments, for "
"example:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:74
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:74
#, no-wrap
msgid ""
" delete /some/file\n"
" install some-package\n"
" password some-user:password:its-new-password\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:78
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:78
msgid ""
"Empty lines are ignored, and lines starting with C<#> are comments and are "
"ignored as well.  Furthermore, arguments can be spread across multiple "
"lines, by adding a C<\\> (continuation character) at the of a line, for "
"example"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:83
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:83
#, no-wrap
msgid ""
" edit /some/file:\\\n"
"   s/^OPT=.*/OPT=ok/\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:86
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:86
msgid ""
"The commands are handled in the same order as they are in the file, as if "
"they were specified as I<--delete /some/file> on the command line."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:90
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:90
msgid "B<--copy> SOURCE:DEST"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:92
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:92
msgid "Copy files or directories recursively inside the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:94
#: ../common/mlcustomize/customize-options.pod:101
#: ../common/mlcustomize/customize-options.pod:199
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:94
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:101
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:199
msgid "Wildcards cannot be used."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:96
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:96
msgid "B<--copy-in> LOCALPATH:REMOTEDIR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:98
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:98
msgid ""
"Copy local files or directories recursively into the disk image, placing "
"them in the directory C<REMOTEDIR> (which must exist)."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:103
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:103
msgid "B<--delete> PATH"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:105
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:105
msgid ""
"Delete a file from the guest.  Or delete a directory (and all its contents, "
"recursively)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:108
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:108
msgid ""
"You can use shell glob characters in the specified path.  Be careful to "
"escape glob characters from the host shell, if that is required.  For "
"example:"
msgstr ""

#. type: verbatim
#: ../common/mlcustomize/customize-options.pod:112
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:112
#, no-wrap
msgid ""
" virt-customize --delete '/var/log/*.log'.\n"
"\n"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:114
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:114
msgid "See also: I<--upload>, I<--scrub>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:116
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:116
msgid "B<--edit> FILE:EXPR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:118
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:118
msgid "Edit C<FILE> using the Perl expression C<EXPR>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:120
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:120
msgid ""
"Be careful to properly quote the expression to prevent it from being altered "
"by the shell."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:123
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:123
msgid "Note that this option is only available when Perl 5 is installed."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:125
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:125
msgid "See L<virt-edit(1)/NON-INTERACTIVE EDITING>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:127
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:127
msgid "B<--firstboot> SCRIPT"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:129
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:129
msgid ""
"Install C<SCRIPT> inside the guest, so that when the guest first boots up, "
"the script runs (as root, late in the boot process)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:132
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:132
msgid "The script is automatically chmod +x after installation in the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:134
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:134
msgid ""
"The alternative version I<--firstboot-command> is the same, but it "
"conveniently wraps the command up in a single line script for you."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:137
#: ../common/mlcustomize/customize-options.pod:150
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:137
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:150
msgid ""
"You can have multiple I<--firstboot> options.  They run in the same order "
"that they appear on the command line."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:140
#: ../common/mlcustomize/customize-options.pod:153
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:140
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:153
msgid ""
"Please take a look at L<virt-builder(1)/FIRST BOOT SCRIPTS> for more "
"information and caveats about the first boot scripts."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:143
#: ../common/mlcustomize/customize-options.pod:156
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:143
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:156
msgid "See also I<--run>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:145
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:145
msgid "B<--firstboot-command> 'CMD+ARGS'"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:147
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:147
msgid ""
"Run command (and arguments) inside the guest when the guest first boots up "
"(as root, late in the boot process)."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:158
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:158
msgid "B<--firstboot-install> PKG,PKG.."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:160
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:160
msgid ""
"Install the named packages (a comma-separated list).  These are installed "
"when the guest first boots using the guest’s package manager (eg. apt, yum, "
"etc.) and the guest’s network connection."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:164
#: ../common/mlcustomize/customize-options.pod:178
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:164
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:178
msgid ""
"For an overview on the different ways to install packages, see L<virt-"
"builder(1)/INSTALLING PACKAGES>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:167
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:167
msgid "B<--hostname> HOSTNAME"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:169
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:169
msgid ""
"Set the hostname of the guest to C<HOSTNAME>.  You can use a dotted hostname."
"domainname (FQDN) if you want."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:172
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:172
msgid "B<--install> PKG,PKG.."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:174
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:174
msgid ""
"Install the named packages (a comma-separated list).  These are installed "
"during the image build using the guest’s package manager (eg. apt, yum, "
"etc.) and the host’s network connection."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:181
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:181
msgid "See also I<--update>, I<--uninstall>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:183
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:183
msgid "B<--link> TARGET:LINK[:LINK..]"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:185
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:185
msgid ""
"Create symbolic link(s) in the guest, starting at C<LINK> and pointing at "
"C<TARGET>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:188
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:188
msgid "B<--mkdir> DIR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:190
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:190
msgid "Create a directory in the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:192
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:192
msgid ""
"This uses S<C<mkdir -p>> so any intermediate directories are created, and it "
"also works if the directory already exists."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:195
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:195
msgid "B<--move> SOURCE:DEST"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:197
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:197
msgid "Move files or directories inside the guest."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:201
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:201
msgid "B<--no-logfile>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:203
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:203
msgid ""
"Scrub C<builder.log> (log file from build commands) from the image after "
"building is complete.  If you don't want to reveal precisely how the image "
"was built, use this option."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:207
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:207
msgid "See also: L</LOG FILE>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:209
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:209
msgid "B<--password> USER:SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:211
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:211
msgid ""
"Set the password for C<USER>.  (Note this option does I<not> create the user "
"account)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:214
#: ../common/mlcustomize/customize-options.pod:243
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:214
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:243
msgid ""
"See L<virt-builder(1)/USERS AND PASSWORDS> for the format of the C<SELECTOR> "
"field, and also how to set up user accounts."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:217
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:217
msgid "B<--password-crypto> md5|sha256|sha512"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:219
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:219
msgid ""
"When the virt tools change or set a password in the guest, this option sets "
"the password encryption of that password to C<md5>, C<sha256> or C<sha512>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:223
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:223
msgid ""
"C<sha256> and C<sha512> require glibc E<ge> 2.7 (check crypt(3) inside the "
"guest)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:226
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:226
msgid ""
"C<md5> will work with relatively old Linux guests (eg. RHEL 3), but is not "
"secure against modern attacks."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:229
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:229
msgid ""
"The default is C<sha512> unless libguestfs detects an old guest that didn't "
"have support for SHA-512, in which case it will use C<md5>.  You can "
"override libguestfs by specifying this option."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:233
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:233
msgid ""
"Note this does not change the default password encryption used by the guest "
"when you create new user accounts inside the guest.  If you want to do that, "
"then you should use the I<--edit> option to modify C</etc/sysconfig/"
"authconfig> (Fedora, RHEL) or C</etc/pam.d/common-password> (Debian, Ubuntu)."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:239
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:239
msgid "B<--root-password> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:241
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:241
msgid "Set the root password."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:246
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:246
msgid ""
"Note: In virt-builder, if you I<don't> set I<--root-password> then the guest "
"is given a I<random> root password."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:249
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:249
msgid "B<--run> SCRIPT"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:251
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:251
msgid ""
"Run the shell script (or any program) called C<SCRIPT> on the disk image.  "
"The script runs virtualized inside a small appliance, chrooted into the "
"guest filesystem."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:255
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:255
msgid "The script is automatically chmod +x."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:257
#: ../common/mlcustomize/customize-options.pod:273
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:257
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:273
msgid ""
"If libguestfs supports it then a limited network connection is available but "
"it only allows outgoing network connections.  You can also attach data disks "
"(eg. ISO files) as another way to provide data (eg. software packages) to "
"the script without needing a network connection (I<--attach>).  You can also "
"upload data files (I<--upload>)."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:263
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:263
msgid ""
"You can have multiple I<--run> options.  They run in the same order that "
"they appear on the command line."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:266
#: ../common/mlcustomize/customize-options.pod:282
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:266
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:282
msgid "See also: I<--firstboot>, I<--attach>, I<--upload>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:268
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:268
msgid "B<--run-command> 'CMD+ARGS'"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:270
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:270
msgid ""
"Run the command and arguments on the disk image.  The command runs "
"virtualized inside a small appliance, chrooted into the guest filesystem."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:279
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:279
msgid ""
"You can have multiple I<--run-command> options.  They run in the same order "
"that they appear on the command line."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:284
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:284
msgid "B<--scrub> FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:286
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:286
msgid "Scrub a file from the guest.  This is like I<--delete> except that:"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:290
#: ../common/mlcustomize/customize-options.pod:294
#: ../docs/virt-v2v-copy-to-local.pod:29 ../docs/virt-v2v-hacking.pod:23
#: ../docs/virt-v2v-hacking.pod:27 ../docs/virt-v2v-input-vmware.pod:410
#: ../docs/virt-v2v-input-vmware.pod:414 ../docs/virt-v2v-input-vmware.pod:418
#: ../docs/virt-v2v-input-vmware.pod:422 ../docs/virt-v2v-input-vmware.pod:426
#: ../docs/virt-v2v-output-local.pod:81 ../docs/virt-v2v-output-local.pod:86
#: ../docs/virt-v2v-output-local.pod:91 ../docs/virt-v2v-output-rhv.pod:121
#: ../docs/virt-v2v-output-rhv.pod:126 ../docs/virt-v2v.pod:179
#: ../docs/virt-v2v.pod:183 ../docs/virt-v2v.pod:188 ../docs/virt-v2v.pod:192
#: ../docs/virt-v2v.pod:196 ../docs/virt-v2v.pod:700 ../docs/virt-v2v.pod:705
#: ../docs/virt-v2v.pod:710 ../docs/virt-v2v.pod:714 ../docs/virt-v2v.pod:1053
#: ../docs/virt-v2v.pod:1058 ../docs/virt-v2v.pod:1069
#: ../docs/virt-v2v.pod:1081 ../docs/virt-v2v.pod:1087
#: ../docs/virt-v2v.pod:1092 ../docs/virt-v2v.pod:1110
#: ../docs/virt-v2v.pod:1114 ../test-harness/virt-v2v-test-harness.pod:175
#: ../test-harness/virt-v2v-test-harness.pod:179
#: ../test-harness/virt-v2v-test-harness.pod:183
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:290
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:294
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:29
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:23
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:27
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:410
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:414
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:418
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:422
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:426
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:81
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:86
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:91
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:121
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:126
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:179
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:183
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:188
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:192
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:196
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:700
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:705
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:710
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:714
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1053
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1058
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1069
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1081
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1087
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1092
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1110
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1114
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:175
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:179
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:183
msgid "*"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:292
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:292
msgid "It scrubs the data so a guest could not recover it."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:296
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:296
msgid "It cannot delete directories, only regular files."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:300
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:300
msgid "B<--selinux-relabel>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:302
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:302
msgid "Relabel files in the guest so that they have the correct SELinux label."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:304
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:304
msgid ""
"This will attempt to relabel files immediately, but if the operation fails "
"this will instead touch F</.autorelabel> on the image to schedule a relabel "
"operation for the next time the image boots."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:308
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:308
msgid "You should only use this option for guests which support SELinux."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:310
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:310
msgid "B<--sm-attach> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:312
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:312
msgid "Attach to a pool using C<subscription-manager>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:314
#: ../common/mlcustomize/customize-options.pod:321
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:314
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:321
msgid ""
"See L<virt-builder(1)/SUBSCRIPTION-MANAGER> for the format of the "
"C<SELECTOR> field."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:317
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:317
msgid "B<--sm-credentials> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:319
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:319
msgid "Set the credentials for C<subscription-manager>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:324
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:324
msgid "B<--sm-register>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:326
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:326
msgid "Register the guest using C<subscription-manager>."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:328
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:328
msgid "This requires credentials being set using I<--sm-credentials>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:330
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:330
msgid "B<--sm-remove>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:332
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:332
msgid ""
"Remove all the subscriptions from the guest using C<subscription-manager>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:335
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:335
msgid "B<--sm-unregister>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:337
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:337
msgid "Unregister the guest using C<subscription-manager>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:339
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:339
msgid "B<--ssh-inject> USER[:SELECTOR]"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:341
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:341
msgid ""
"Inject an ssh key so the given C<USER> will be able to log in over ssh "
"without supplying a password.  The C<USER> must exist already in the guest."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:345
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:345
msgid ""
"See L<virt-builder(1)/SSH KEYS> for the format of the C<SELECTOR> field."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:348
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:348
msgid ""
"You can have multiple I<--ssh-inject> options, for different users and also "
"for more keys for each user."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:351
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:351
msgid "B<--timezone> TIMEZONE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:353
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:353
msgid ""
"Set the default timezone of the guest to C<TIMEZONE>.  Use a location string "
"like C<Europe/London>"
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:356
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:356
msgid "B<--touch> FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:358
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:358
msgid "This command performs a L<touch(1)>-like operation on C<FILE>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:360
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:360
msgid "B<--truncate> FILE"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:362
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:362
msgid ""
"This command truncates C<FILE> to a zero-length file. The file must exist "
"already."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:365
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:365
msgid "B<--truncate-recursive> PATH"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:367
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:367
msgid ""
"This command recursively truncates all files under C<PATH> to zero-length."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:369
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:369
msgid "B<--uninstall> PKG,PKG.."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:371
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:371
msgid ""
"Uninstall the named packages (a comma-separated list).  These are removed "
"during the image build using the guest’s package manager (eg. apt, yum, "
"etc.).  Dependent packages may also need to be uninstalled to satisfy the "
"request."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:376
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:376
msgid "See also I<--install>, I<--update>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:378
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:378
msgid "B<--update>"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:380
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:380
msgid ""
"Do the equivalent of C<yum update>, C<apt-get upgrade>, or whatever command "
"is required to update the packages already installed in the template to "
"their latest versions."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:384
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:384
msgid "See also I<--install>, I<--uninstall>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:386
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:386
msgid "B<--upload> FILE:DEST"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:388
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:388
msgid ""
"Upload local file C<FILE> to destination C<DEST> in the disk image.  File "
"owner and permissions from the original are preserved, so you should set "
"them to what you want them to be in the disk image."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:392
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:392
msgid ""
"C<DEST> could be the final filename.  This can be used to rename the file on "
"upload."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:395
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:395
msgid ""
"If C<DEST> is a directory name (which must already exist in the guest)  then "
"the file is uploaded into that directory, and it keeps the same name as on "
"the local filesystem."
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:399
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:399
msgid "See also: I<--mkdir>, I<--delete>, I<--scrub>."
msgstr ""

#. type: =item
#: ../common/mlcustomize/customize-options.pod:401
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:401
msgid "B<--write> FILE:CONTENT"
msgstr ""

#. type: textblock
#: ../common/mlcustomize/customize-options.pod:403
#: ../virt-v2v-1.42.0/common/mlcustomize/customize-options.pod:403
msgid "Write C<CONTENT> to C<FILE>."
msgstr ""

#. type: =item
#: ../common/options/blocksize-option.pod:1
#: ../virt-v2v-1.42.0/common/options/blocksize-option.pod:1
#, fuzzy
#| msgid "C<blocksize>"
msgid "B<--blocksize=512>"
msgstr "C<blocksize>"

#. type: =item
#: ../common/options/blocksize-option.pod:3
#: ../virt-v2v-1.42.0/common/options/blocksize-option.pod:3
#, fuzzy
#| msgid "C<blocksize>"
msgid "B<--blocksize=4096>"
msgstr "C<blocksize>"

#. type: =item
#: ../common/options/blocksize-option.pod:5
#: ../virt-v2v-1.42.0/common/options/blocksize-option.pod:5
#, fuzzy
#| msgid "C<blocksize>"
msgid "B<--blocksize>"
msgstr "C<blocksize>"

#. type: textblock
#: ../common/options/blocksize-option.pod:7
#: ../virt-v2v-1.42.0/common/options/blocksize-option.pod:7
msgid ""
"This parameter sets the sector size of the disk image.  It affects all "
"explicitly added subsequent disks after this parameter.  Using I<--"
"blocksize> with no argument switches the disk sector size to the default "
"value which is usually 512 bytes.  See also L<guestfs(3)/"
"guestfs_add_drive_opts>."
msgstr ""

#. type: =item
#: ../common/options/key-option.pod:1
#: ../virt-v2v-1.42.0/common/options/key-option.pod:1
msgid "B<--key> SELECTOR"
msgstr ""

#. type: textblock
#: ../common/options/key-option.pod:3
#: ../virt-v2v-1.42.0/common/options/key-option.pod:3
msgid ""
"Specify a key for LUKS, to automatically open a LUKS device when using the "
"inspection.  C<ID> can be either the libguestfs device name, or the UUID of "
"the LUKS device."
msgstr ""

#. type: =item
#: ../common/options/key-option.pod:9
#: ../virt-v2v-1.42.0/common/options/key-option.pod:9
msgid "B<--key> C<ID>:key:KEY_STRING"
msgstr ""

#. type: textblock
#: ../common/options/key-option.pod:11
#: ../virt-v2v-1.42.0/common/options/key-option.pod:11
msgid "Use the specified C<KEY_STRING> as passphrase."
msgstr ""

#. type: =item
#: ../common/options/key-option.pod:13
#: ../virt-v2v-1.42.0/common/options/key-option.pod:13
msgid "B<--key> C<ID>:file:FILENAME"
msgstr ""

#. type: textblock
#: ../common/options/key-option.pod:15
#: ../virt-v2v-1.42.0/common/options/key-option.pod:15
msgid "Read the passphrase from F<FILENAME>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:1 ../docs/virt-v2v-hacking.pod:1
#: ../docs/virt-v2v-input-vmware.pod:1 ../docs/virt-v2v-input-xen.pod:1
#: ../docs/virt-v2v-output-local.pod:1 ../docs/virt-v2v-output-openstack.pod:1
#: ../docs/virt-v2v-output-rhv.pod:1 ../docs/virt-v2v-release-notes-1.42.pod:1
#: ../docs/virt-v2v-support.pod:1 ../docs/virt-v2v.pod:1
#: ../test-harness/virt-v2v-test-harness.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:1
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:1
msgid "NAME"
msgstr "NOM"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:3
msgid "virt-v2v-copy-to-local - Copy a remote guest to the local machine"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:5 ../docs/virt-v2v-input-vmware.pod:5
#: ../docs/virt-v2v-input-xen.pod:5 ../docs/virt-v2v-output-local.pod:6
#: ../docs/virt-v2v-output-openstack.pod:5 ../docs/virt-v2v-output-rhv.pod:5
#: ../docs/virt-v2v.pod:5 ../test-harness/virt-v2v-test-harness.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:6
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:5
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:5
msgid "SYNOPSIS"
msgstr "SYNOPSIS"

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:7
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic LIBVIRT_URI GUEST\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:9
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:9
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com xen_guest\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:11 ../docs/virt-v2v-hacking.pod:5
#: ../docs/virt-v2v-input-vmware.pod:29 ../docs/virt-v2v-input-xen.pod:12
#: ../docs/virt-v2v-output-local.pod:19
#: ../docs/virt-v2v-output-openstack.pod:15 ../docs/virt-v2v-output-rhv.pod:23
#: ../docs/virt-v2v-release-notes-1.42.pod:5 ../docs/virt-v2v-support.pod:6
#: ../docs/virt-v2v.pod:15 ../test-harness/virt-v2v-test-harness.pod:17
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:11
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:29
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:12
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:19
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:15
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:23
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:5
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:6
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:15
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:17
msgid "DESCRIPTION"
msgstr "DESCRIPTION"

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:13
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:13
msgid ""
"C<virt-v2v-copy-to-local> copies a guest from a remote hypervisor to the "
"local machine, in preparation for conversion by L<virt-v2v(1)>.  Note this "
"tool alone B<does not> do the virt-v2v conversion."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-copy-to-local.pod:17
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:17
msgid "When to use this tool"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:19
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:19
msgid ""
"This tool is not usually necessary, but there are a few special cases (see "
"list below) where you might need it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:22
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:22
msgid ""
"If your case does not fit one of these special cases, then ignore this tool "
"and read L<virt-v2v(1)> instead.  The virt-v2v-copy-to-local process is "
"slower than using virt-v2v directly, because it has to copy unused parts of "
"the guest disk."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:31
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:31
msgid ""
"You have a Xen guest using host block devices.  Virt-v2v cannot convert such "
"guests directly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:34
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:34
msgid "See L<virt-v2v-input-xen(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-copy-to-local.pod:38
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:38
msgid "How this tool works"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:40
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:40
msgid ""
"This tool uses libvirt to get the libvirt XML (metadata) of the remote "
"guest, essentially equivalent to running C<virsh dumpxml guest>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:43
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:43
msgid ""
"It then uses the XML to locate the remote guest disks, which are copied over "
"using a hypervisor-specific method.  It uses ssh for remote Xen hypervisors."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:47
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:47
msgid ""
"It then modifies the libvirt XML so that it points at the local copies of "
"the guest disks."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:50
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:50
msgid ""
"The libvirt XML is output to a file called F<guest.xml> (where I<guest> is "
"the name of the guest).  The disk(s) are output to file(s)  called F<guest-"
"disk1>, F<guest-disk2> and so on."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:54
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:54
msgid "After copying the guest locally, you can convert it using:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:56
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:56
#, no-wrap
msgid ""
" virt-v2v -i libvirtxml guest.xml [-o options ...]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:58
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:58
msgid "Virt-v2v finds the local copies of the disks by looking in the XML."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:60 ../docs/virt-v2v.pod:66
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:60
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:66
msgid "EXAMPLES"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-copy-to-local.pod:62
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:62
msgid "Copy and convert from Xen hypervisor that uses host block devices"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:64
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:64
msgid "For full instructions, see L<virt-v2v-input-xen(1)>."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-copy-to-local.pod:66
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:66
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com xen_guest\n"
" virt-v2v -i libvirtxml xen_guest.xml -o local -os /var/tmp\n"
" rm xen_guest.xml xen_guest-disk*\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:70 ../docs/virt-v2v.pod:152
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:70
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:152
msgid "OPTIONS"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:74 ../docs/virt-v2v.pod:156
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:74
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:156
msgid "B<--help>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:76 ../docs/virt-v2v.pod:158
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:76
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:158
msgid "Display help."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:78 ../docs/virt-v2v.pod:291
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:78
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:291
msgid "B<-ic> libvirtURI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:80
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:80
msgid "Specify a libvirt connection URI"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:82
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:82
msgid "B<-ip> file"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:84
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:84
msgid ""
"Instead of asking for password(s) interactively, pass the password through a "
"file.  Note the file should contain the whole password, B<without any "
"trailing newline>, and for security the file should have mode C<0600> so "
"that others cannot read it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:89
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:89
msgid ""
"Currently this option does not have any effect on xen+ssh transfers, but "
"that is a bug."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:92 ../docs/virt-v2v.pod:826
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:92
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:826
msgid "B<-q>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:94 ../docs/virt-v2v.pod:828
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:94
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:828
msgid "B<--quiet>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:96 ../docs/virt-v2v.pod:830
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:96
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:830
msgid "This disables progress bars and other unnecessary output."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:98 ../docs/virt-v2v.pod:875
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:98
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:875
msgid "B<-v>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:100 ../docs/virt-v2v.pod:877
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:100
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:877
msgid "B<--verbose>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:102 ../docs/virt-v2v.pod:879
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:102
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:879
msgid "Enable verbose messages for debugging."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:104 ../docs/virt-v2v.pod:881
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:104
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:881
msgid "B<-V>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-copy-to-local.pod:106 ../docs/virt-v2v.pod:883
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:106
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:883
msgid "B<--version>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:108 ../docs/virt-v2v.pod:885
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:108
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:885
msgid "Display version number and exit."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:112 ../docs/virt-v2v-hacking.pod:48
#: ../docs/virt-v2v-input-vmware.pod:582 ../docs/virt-v2v-input-xen.pod:117
#: ../docs/virt-v2v-output-local.pod:198
#: ../docs/virt-v2v-output-openstack.pod:210
#: ../docs/virt-v2v-output-rhv.pod:228
#: ../docs/virt-v2v-release-notes-1.42.pod:211 ../docs/virt-v2v-support.pod:143
#: ../docs/virt-v2v.pod:1668 ../test-harness/virt-v2v-test-harness.pod:263
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:112
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:48
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:582
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:117
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:198
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:210
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:228
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:211
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:143
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1668
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:263
msgid "SEE ALSO"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:114
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:114
msgid ""
"L<virt-v2v(1)>, L<virsh(1)>, L<http://libguestfs.org/>, L<https://libvirt."
"org/uri.html>, L<https://libvirt.org/remote.html>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:120 ../docs/virt-v2v-hacking.pod:53
#: ../docs/virt-v2v-release-notes-1.42.pod:218 ../docs/virt-v2v.pod:1687
#: ../test-harness/virt-v2v-test-harness.pod:273
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:120
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:53
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:218
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1687
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:273
msgid "AUTHORS"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:122
#: ../test-harness/virt-v2v-test-harness.pod:275
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:122
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:275
msgid "Richard W.M. Jones L<http://people.redhat.com/~rjones/>"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-copy-to-local.pod:124 ../docs/virt-v2v-hacking.pod:57
#: ../docs/virt-v2v-input-vmware.pod:590 ../docs/virt-v2v-input-xen.pod:125
#: ../docs/virt-v2v-output-local.pod:206
#: ../docs/virt-v2v-output-openstack.pod:220
#: ../docs/virt-v2v-output-rhv.pod:236
#: ../docs/virt-v2v-release-notes-1.42.pod:236 ../docs/virt-v2v-support.pod:152
#: ../docs/virt-v2v.pod:1709 ../test-harness/virt-v2v-test-harness.pod:277
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:124
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:57
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:590
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:125
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:206
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:220
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:236
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:236
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:152
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1709
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:277
msgid "COPYRIGHT"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-copy-to-local.pod:126 ../docs/virt-v2v-hacking.pod:59
#: ../docs/virt-v2v-input-vmware.pod:592 ../docs/virt-v2v-input-xen.pod:127
#: ../docs/virt-v2v-output-local.pod:208
#: ../docs/virt-v2v-output-openstack.pod:222
#: ../docs/virt-v2v-output-rhv.pod:238
#: ../docs/virt-v2v-release-notes-1.42.pod:238 ../docs/virt-v2v-support.pod:154
#: ../docs/virt-v2v.pod:1711
#: ../virt-v2v-1.42.0/docs/virt-v2v-copy-to-local.pod:126
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:59
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:592
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:127
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:208
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:222
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:238
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:238
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:154
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1711
msgid "Copyright (C) 2009-2020 Red Hat Inc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:3
msgid "virt-v2v-hacking -"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:7
msgid ""
"First a little history.  Virt-v2v has been through at least two complete "
"rewrites, so this is probably about the third version (but we don't intend "
"to rewrite it again).  The previous version was written in Perl and can be "
"found here: L<https://git.fedorahosted.org/git/virt-v2v.git>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:13
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:13
msgid ""
"The current version started out as almost a line-for-line rewrite of the "
"Perl code in OCaml + C, and it still has a fairly similar structure.  "
"Therefore if there are details of this code that you don't understand "
"(especially in the details of guest conversion), checking the Perl code may "
"help."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:19
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:19
msgid "The files to start with when reading this code are:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:25
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:25
msgid "F<types.mli>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:29
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:29
msgid "F<v2v.ml>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:33
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:33
msgid ""
"F<types.mli> defines all the structures used and passed around when "
"communicating between different bits of the program.  F<v2v.ml> controls how "
"the program runs in stages."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:37
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:37
msgid ""
"After studying those files, you may want to branch out into the input "
"modules (F<input_*>), the output modules (F<output_*>) or the conversion "
"modules (F<convert_*>).  The input and output modules define I<-i> and I<-o> "
"options (see the manual).  The conversion modules define what guest types we "
"can handle and the detailed steps involved in converting them."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:44
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:44
msgid ""
"Every other file in this directory is a support module / library of some "
"sort.  Some code is written in C, especially where we want to use an "
"external C library such as libxml2."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:50
#: ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:50
msgid "L<virt-p2v(1)>, L<virt-v2v(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-hacking.pod:55 ../docs/virt-v2v-input-vmware.pod:588
#: ../docs/virt-v2v-input-xen.pod:123 ../docs/virt-v2v-output-local.pod:204
#: ../docs/virt-v2v-output-openstack.pod:218
#: ../docs/virt-v2v-output-rhv.pod:234
#: ../docs/virt-v2v-release-notes-1.42.pod:222 ../docs/virt-v2v-support.pod:150
#: ../docs/virt-v2v.pod:1703 ../virt-v2v-1.42.0/docs/virt-v2v-hacking.pod:55
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:588
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:123
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:204
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:218
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:234
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:222
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:150
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1703
msgid "Richard W.M. Jones"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:3
msgid "virt-v2v-input-vmware - Using virt-v2v to convert guests from VMware"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:7
#, no-wrap
msgid ""
" virt-v2v -i vmx GUEST.vmx [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:9
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:9
#, no-wrap
msgid ""
" virt-v2v -i vmx\n"
"    -it ssh\n"
"    -ip passwordfile\n"
"    'ssh://root@esxi.example.com/vmfs/volumes/datastore1/guest/guest.vmx'\n"
"    [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:15
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:15
#, no-wrap
msgid ""
" virt-v2v\n"
"    -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1'\n"
"    -it vddk\n"
"    -io vddk-libdir=/path/to/vmware-vix-disklib-distrib\n"
"    -io vddk-thumbprint=xx:xx:xx:...\n"
"    \"GUEST NAME\"\n"
"    [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:23
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:23
#, no-wrap
msgid ""
" virt-v2v -i ova DISK.ova [-o* options]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:25
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:25
#, no-wrap
msgid ""
" virt-v2v\n"
"    -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1'\n"
"    \"GUEST NAME\" [-o* options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:31
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:31
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests from "
"VMware.  There are currently five different methods to access VMware:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:36
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:36
msgid "B<-i vmx> GUESTB<.vmx>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:38 ../docs/virt-v2v-input-vmware.pod:46
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:38
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:46
msgid "Full documentation: L</INPUT FROM VMWARE VMX>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:40
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:40
msgid ""
"If you either have a F<GUEST.vmx> file and one or more F<GUEST.vmdk> disk "
"image files, or if you are able to NFS-mount the VMware storage, then you "
"can use the I<-i vmx> method to read the source guest."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:44
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:44
msgid "B<-i vmx> B<-it ssh> ssh://..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:48
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:48
msgid ""
"This is similar to the method above, except it uses an SSH connection to "
"ESXi to read the F<GUEST.vmx> file and associated disks.  This requires that "
"you have enabled SSH access to the VMware ESXi hypervisor - in the default "
"ESXi configuration this is turned off."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:53
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:53
msgid "B<-ic vpx://...> B<-it vddk>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:55
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:55
msgid "B<-ic esx://...> B<-it vddk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:57
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:57
msgid "Full documentation: L</INPUT FROM VDDK>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:59
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:59
msgid ""
"This method uses the proprietary VDDK library (a.k.a. VixDiskLib) to access "
"the VMware vCenter server or VMware ESXi hypervisor."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:62
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:62
msgid ""
"If you have the proprietary library then this method is usually the fastest "
"and most flexible.  If you don't have or don't want to use non-free software "
"then the VMX or SSH methods above will be best."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:66
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:66
msgid "B<-i ova> DISKB<.ova>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:68
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:68
msgid "Full documentation: L</INPUT FROM VMWARE OVA>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:70
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:70
msgid ""
"With this method you must first export the guest (eg. from vSphere) as an F<."
"ova> file, which virt-v2v can then read directly.  Note this method only "
"works with files exported from VMware, not OVA files that come from other "
"hypervisors or management systems, since OVA is only a pretend standard and "
"is not compatible or interoperable between vendors."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:77
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:77
msgid "B<-ic vpx://...> \"GUEST NAME\""
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:79
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:79
msgid "Full documentation: L</INPUT FROM VMWARE VCENTER SERVER>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:81
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:81
msgid ""
"If none of the above methods is available, then use this method to import a "
"guest from VMware vCenter.  This is the slowest method."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:86
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:86
msgid "INPUT FROM VMWARE VMX"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:88
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:88
msgid "Virt-v2v is able to import guests from VMware’s vmx files."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:90
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:90
msgid "This is useful in two cases:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:94 ../docs/virt-v2v-input-vmware.pod:180
#: ../docs/virt-v2v-input-vmware.pod:494 ../docs/virt-v2v-output-local.pod:102
#: ../docs/virt-v2v.pod:1516
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:94
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:180
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:494
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:102
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1516
msgid "1."
msgstr "1."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:96
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:96
msgid ""
"VMware virtual machines are stored on a separate NFS server and you are able "
"to mount the NFS storage directly."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:99 ../docs/virt-v2v-input-vmware.pod:187
#: ../docs/virt-v2v-input-vmware.pod:498 ../docs/virt-v2v-output-local.pod:116
#: ../docs/virt-v2v.pod:1523
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:99
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:187
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:498
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:116
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1523
msgid "2."
msgstr "2."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:101
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:101
msgid ""
"You have enabled SSH access to the VMware ESXi hypervisor and there is a C</"
"vmfs/volumes> folder containing the virtual machines."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:106
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:106
msgid ""
"If you find a folder of files called F<I<guest>.vmx>, F<I<guest>.vmxf>, "
"F<I<guest>.nvram> and one or more F<.vmdk> disk images, then you can use "
"this method."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:110
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:110
msgid "VMX: Guest must be shut down"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:112
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:112
msgid ""
"B<The guest must be shut down before conversion starts>.  If you don't shut "
"it down, you will end up with a corrupted VM disk on the target.  With other "
"methods, virt-v2v tries to prevent concurrent access, but because the I<-i "
"vmx> method works directly against the storage, checking for concurrent "
"access is not possible."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:118
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:118
msgid "VMX: Access to the storage containing the VMX and VMDK files"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:120
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:120
msgid ""
"If the vmx and vmdk files aren't available locally then you must I<either> "
"mount the NFS storage on the conversion server I<or> enable passwordless SSH "
"on the ESXi hypervisor."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:124
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:124
msgid "VMX: SSH authentication"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:126 ../docs/virt-v2v-input-xen.pod:21
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:126
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:21
msgid ""
"You can use SSH password authentication, by supplying the name of a file "
"containing the password to the I<-ip> option (note this option does I<not> "
"take the password directly)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:130
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:130
msgid ""
"If you are not using password authentication, an alternative is to use ssh-"
"agent, and add your ssh public key to F</etc/ssh/keys-root/authorized_keys> "
"(on the ESXi hypervisor).  After doing this, you should check that "
"passwordless access works from the virt-v2v server to the ESXi hypervisor.  "
"For example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:136
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:136
#, no-wrap
msgid ""
" $ ssh root@esxi.example.com\n"
" [ logs straight into the shell, no password is requested ]\n"
"\n"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:139
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:139
msgid "VMX: Construct the SSH URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:141
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:141
msgid ""
"When using the SSH input transport you must specify a remote C<ssh://...> "
"URI pointing to the VMX file.  A typical URI looks like:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:144
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:144
#, no-wrap
msgid ""
" ssh://root@esxi.example.com/vmfs/volumes/datastore1/my%20guest/my%20guest.vmx\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:146
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:146
msgid ""
"Any space must be escaped with C<%20> and other non-ASCII characters may "
"also need to be URI-escaped."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:149
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:149
msgid "The username is not required if it is the same as your local username."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:151
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:151
msgid ""
"You may optionally supply a port number after the hostname if the SSH server "
"is not listening on the default port (22)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:154
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:154
msgid "VMX: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:156
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:156
msgid "To import a vmx file from a local file or NFS, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:158
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:158
#, no-wrap
msgid ""
" $ virt-v2v -i vmx guest.vmx -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:160
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:160
msgid ""
"To import a vmx file over SSH, add I<-it ssh> to select the SSH transport "
"and supply a remote SSH URI:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:163
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:163
#, no-wrap
msgid ""
" $ virt-v2v \\\n"
"     -i vmx -it ssh \\\n"
"     \"ssh://root@esxi.example.com/vmfs/volumes/datastore1/guest/guest.vmx\" \\\n"
"     -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:168
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:168
msgid ""
"Virt-v2v processes the vmx file and uses it to find the location of any vmdk "
"disks."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:171
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:171
msgid "INPUT FROM VDDK"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:173
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:173
msgid ""
"Virt-v2v is able to import guests using VMware’s proprietary VDDK library (a."
"k.a. VixDiskLib)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:176
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:176
msgid "VDDK: Prerequisites"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:182
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:182
msgid ""
"As the VDDK library is not open source, and the license of this library does "
"not permit redistribution or commercial use, you must obtain VDDK yourself "
"and satisfy yourself that your usage of the library is permitted by the "
"license."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:189
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:189
msgid ""
"nbdkit E<ge> 1.6 is recommended, as it ships with the VDDK plugin enabled "
"unconditionally."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:192 ../docs/virt-v2v-output-local.pod:124
#: ../docs/virt-v2v.pod:1529
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:192
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:124
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1529
msgid "3."
msgstr "3."

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:194
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:194
msgid ""
"You must find the SSL \"thumbprint\" of your VMware server.  How to do this "
"is explained in L<nbdkit-vddk-plugin(1)>, also available at the link above."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:198 ../docs/virt-v2v-output-local.pod:145
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:198
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:145
msgid "4."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:200
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:200
msgid "VDDK imports require a feature added in libvirt E<ge> 3.7."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:204
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:204
msgid "VDDK: ESXi NFC service memory limits"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:206
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:206
msgid "In the verbose log you may see errors like:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:208
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:208
#, no-wrap
msgid ""
" nbdkit: vddk[3]: error: [NFC ERROR] NfcFssrvrProcessErrorMsg:\n"
" received NFC error 5 from server: Failed to allocate the\n"
" requested 2097176 bytes\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:212
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:212
msgid ""
"This seems especially common when there are multiple parallel connections "
"open to the VMware server."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:215
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:215
msgid ""
"These can be caused by resource limits set on the VMware server.  You can "
"increase the limit for the NFC service by editing F</etc/vmware/hostd/config."
"xml> and adjusting the C<E<lt>maxMemoryE<gt>> setting:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:220
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:220
#, no-wrap
msgid ""
" <nfcsvc>\n"
"   <path>libnfcsvc.so</path>\n"
"   <enabled>true</enabled>\n"
"   <maxMemory>50331648</maxMemory>\n"
"   <maxStreamMemory>10485760</maxStreamMemory>\n"
" </nfcsvc>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:227
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:227
msgid "and restarting the C<hostd> service:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:229
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:229
#, no-wrap
msgid ""
" # /etc/init.d/hostd restart\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:231
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:231
msgid "For more information see L<https://bugzilla.redhat.com/1614276>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:233
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:233
msgid "VDDK: URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:235
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:235
msgid ""
"Construct the correct C<vpx://> (for vCenter) or C<esx://> (for ESXi)  URL.  "
"It will look something like these:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:238
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:238
#, no-wrap
msgid ""
" vpx://root@vcenter.example.com/Datacenter/esxi\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:240
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:240
#, no-wrap
msgid ""
" esx://root@esxi.example.com\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:242
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:242
msgid ""
"To verify that you have the correct URL, use the L<virsh(1)> command to list "
"the guests on the server:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:245 ../docs/virt-v2v-input-vmware.pod:437
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:245
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:437
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' list --all\n"
" Enter root's password for vcenter.example.com: ***\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:248 ../docs/virt-v2v-input-vmware.pod:440
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:248
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:440
#, no-wrap
msgid ""
"  Id    Name                           State\n"
" ----------------------------------------------------\n"
"  -     Fedora 20                      shut off\n"
"  -     Windows 2003                   shut off\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:253 ../docs/virt-v2v-input-vmware.pod:445
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:253
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:445
msgid ""
"If you get an error \"Peer certificate cannot be authenticated with given CA "
"certificates\" or similar, then you can either import the vCenter host’s "
"certificate, or bypass signature verification by adding the C<?no_verify=1> "
"flag:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:258 ../docs/virt-v2v-input-vmware.pod:450
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:258
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:450
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' list --all\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:260 ../docs/virt-v2v-input-vmware.pod:452
#: ../docs/virt-v2v-input-xen.pod:51
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:260
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:452
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:51
msgid ""
"You should also try dumping the metadata from any guest on your server, like "
"this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:263
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:263
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' dumpxml \"Windows 2003\"\n"
" <domain type='vmware'>\n"
"   <name>Windows 2003</name>\n"
"   [...]\n"
"   <vmware:moref>vm-123</vmware:moref>\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:270
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:270
msgid ""
"If C<E<lt>vmware:morefE<gt>> does not appear in the metadata, then you need "
"to upgrade libvirt."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:273
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:273
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your URI and/or your VMware server before continuing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:277
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:277
msgid "VDDK: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:279
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:279
msgid ""
"The I<-it vddk> parameter selects VDDK as the input transport for disks."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:281
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:281
msgid ""
"To import a particular guest from vCenter server or ESXi hypervisor, use a "
"command like the following, substituting the URI, guest name and SSL "
"thumbprint:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:285
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:285
#, no-wrap
msgid ""
" $ virt-v2v \\\n"
"     -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' \\\n"
"     -it vddk \\\n"
"     -io vddk-libdir=/path/to/vmware-vix-disklib-distrib \\\n"
"     -io vddk-thumbprint=xx:xx:xx:... \\\n"
"     \"Windows 2003\" \\\n"
"     -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:293
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:293
msgid ""
"Other options that you might need to add in rare circumstances include I<-io "
"vddk-config>, I<-io vddk-cookie>, I<-io vddk-nfchostport>, I<-io vddk-port>, "
"I<-io vddk-snapshot>, and I<-io vddk-transports>, which are all explained in "
"the L<nbdkit-vddk-plugin(1)> documentation.  Do not use these options unless "
"you know what you are doing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:299
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:299
msgid "VDDK: Debugging VDDK failures"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:301
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:301
msgid ""
"The VDDK library can be operated in a verbose mode where it gives (very) "
"verbose messages.  Use ‘virt-v2v -v -x’ as usual to enable verbose messages."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:305
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:305
msgid "INPUT FROM VMWARE OVA"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:307
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:307
msgid ""
"Virt-v2v is able to import guests from VMware’s OVA (Open Virtualization "
"Appliance) files.  Only OVAs exported from VMware vSphere will work."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:311
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:311
msgid "OVA: Create OVA"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:313
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:313
msgid ""
"To create an OVA in vSphere, use the \"Export OVF Template\" option (from "
"the VM context menu, or from the File menu).  Either \"Folder of files"
"\" (OVF) or \"Single file\" (OVA) will work, but OVA is probably easier to "
"deal with.  OVA files are really just uncompressed tar files, so you can use "
"commands like C<tar tf VM.ova> to view their contents."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:320
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:320
msgid "Create OVA with ovftool"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:322
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:322
msgid "You can also use VMware’s proprietary C<ovftool>:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:324
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:324
#, no-wrap
msgid ""
" ovftool --noSSLVerify \\\n"
"   vi://USER:PASSWORD@esxi.example.com/VM \\\n"
"   VM.ova\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:328
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:328
msgid "To connect to vCenter:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:330
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:330
#, no-wrap
msgid ""
" ovftool  --noSSLVerify \\\n"
"   vi://USER:PASSWORD@vcenter.example.com/DATACENTER-NAME/vm/VM \\\n"
"   VM.ova\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:334
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:334
msgid ""
"For Active Directory-aware authentication, you have to express the C<@> "
"character in the form of its ascii hex-code (C<%5c>):"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:337
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:337
#, no-wrap
msgid ""
" vi://DOMAIN%5cUSER:PASSWORD@...\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:339
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:339
msgid "OVA: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:341
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:341
msgid "To import an OVA file called F<VM.ova>, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:343
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:343
#, no-wrap
msgid ""
" $ virt-v2v -i ova VM.ova -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:345
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:345
msgid ""
"If you exported the guest as a \"Folder of files\", I<or> if you unpacked "
"the OVA tarball yourself, then you can point virt-v2v at the directory "
"containing the files:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:349
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:349
#, no-wrap
msgid ""
" $ virt-v2v -i ova /path/to/files -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:351
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:351
msgid "INPUT FROM VMWARE VCENTER SERVER"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:353
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:353
msgid "Virt-v2v is able to import guests from VMware vCenter Server."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:355
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:355
msgid ""
"vCenter E<ge> 5.0 is required.  If you don’t have vCenter, using OVA or VMX "
"is recommended instead (see L</INPUT FROM VMWARE OVA> and/or L</INPUT FROM "
"VMWARE VMX>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:359
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:359
msgid ""
"Virt-v2v uses libvirt for access to vCenter, and therefore the input mode "
"should be I<-i libvirt>.  As this is the default, you don't need to specify "
"it on the command line."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:363
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:363
msgid "vCenter: URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:365
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:365
msgid "The libvirt URI of a vCenter server looks something like this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:367
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:367
#, no-wrap
msgid ""
" vpx://user@server/Datacenter/esxi\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:369
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:369
msgid "where:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:373
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:373
msgid "C<user@>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:375
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:375
msgid "is the (optional, but recommended) user to connect as."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:377
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:377
msgid ""
"If the username contains a backslash (eg. C<DOMAIN\\USER>) then you will "
"need to URI-escape that character using C<%5c>: C<DOMAIN%5cUSER> (5c is the "
"hexadecimal ASCII code for backslash.)  Other punctuation may also have to "
"be escaped."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:382
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:382
msgid "C<server>"
msgstr "C<server>"

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:384
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:384
msgid "is the vCenter Server (I<not> hypervisor)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:386
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:386
msgid "C<Datacenter>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:388
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:388
msgid "is the name of the datacenter."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:390
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:390
msgid ""
"If the name contains a space, replace it with the URI-escape code C<%20>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-input-vmware.pod:393
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:393
msgid "C<esxi>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:395
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:395
msgid "is the name of the ESXi hypervisor running the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:399
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:399
msgid ""
"If the VMware deployment is using folders, then these may need to be added "
"to the URI, eg:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:402
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:402
#, no-wrap
msgid ""
" vpx://user@server/Folder/Datacenter/esxi\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:404
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:404
msgid ""
"For full details of libvirt URIs, see: L<http://libvirt.org/drvesx.html>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:406
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:406
msgid "Typical errors from libvirt / virsh when the URI is wrong include:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:412
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:412
msgid "Could not find datacenter specified in [...]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:416
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:416
msgid "Could not find compute resource specified in [...]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:420
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:420
msgid "Path [...] does not specify a compute resource"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:424
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:424
msgid "Path [...] does not specify a host system"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:428
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:428
msgid "Could not find host system specified in [...]"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:432
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:432
msgid "vCenter: Test libvirt connection to vCenter"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:434
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:434
msgid ""
"Use the L<virsh(1)> command to list the guests on the vCenter Server like "
"this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:455
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:455
#, no-wrap
msgid ""
" $ virsh -c 'vpx://root@vcenter.example.com/Datacenter/esxi' dumpxml \"Windows 2003\"\n"
" <domain type='vmware'>\n"
"   <name>Windows 2003</name>\n"
"   [...]\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:461
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:461
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your libvirt configuration and/or your VMware vCenter Server "
"before continuing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:465
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:465
msgid "vCenter: Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:467
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:467
msgid "To import a particular guest from vCenter Server, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:469
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:469
#, no-wrap
msgid ""
" $ virt-v2v -ic 'vpx://root@vcenter.example.com/Datacenter/esxi?no_verify=1' \\\n"
"   \"Windows 2003\" \\\n"
"   -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:473
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:473
msgid ""
"where C<Windows 2003> is the name of the guest (which must be shut down)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:476
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:476
msgid ""
"Note that you may be asked for the vCenter password I<twice>.  This happens "
"once because libvirt needs it, and a second time because virt-v2v itself "
"connects directly to the server.  Use I<-ip> F<filename> to supply a "
"password via a file."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:481 ../docs/virt-v2v-input-xen.pod:80
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:481
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:80
msgid ""
"In this case the output flags are set to write the converted guest to a "
"temporary directory as this is just an example, but you can also write to "
"libvirt or any other supported target."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:485
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:485
msgid "vCenter: Non-administrator role"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:487
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:487
msgid ""
"Instead of using the vCenter Administrator role, you can create a custom non-"
"administrator role to perform the conversion.  You will however need to give "
"it a minimum set of permissions as follows (using VMware vCenter 6.5):"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:496
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:496
msgid "Create a custom role in vCenter."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:500
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:500
msgid "Enable (check) the following objects:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:502
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:502
#, no-wrap
msgid ""
" Datastore:\n"
"  - Browse datastore\n"
"  - Low level file operations\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:506
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:506
#, no-wrap
msgid ""
" Sessions:\n"
"  - Validate session\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:509
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:509
#, no-wrap
msgid ""
" Virtual Machine:\n"
"   Interaction:\n"
"     - Guest operating system management by VIX API\n"
"   Provisioning:\n"
"     - Allow disk access\n"
"     - Allow read-only disk access\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:518
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:518
msgid "vCenter: Firewall and proxy settings"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v-input-vmware.pod:520
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:520
msgid "vCenter: Ports"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:522
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:522
msgid ""
"If there is a firewall between the virt-v2v conversion server and the "
"vCenter server, then you will need to open port 443 (https) and port 5480."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:526
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:526
msgid ""
"Port 443 is used to copy the guest disk image(s).  Port 5480 is used to "
"query vCenter for guest metadata."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:529
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:529
msgid ""
"These port numbers are only the defaults.  It is possible to reconfigure "
"vCenter to use other port numbers.  In that case you would need to specify "
"those ports in the C<vpx://> URI.  See L</vCenter: URI> above."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:534
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:534
msgid ""
"These ports only apply to virt-v2v conversions.  You may have to open other "
"ports for other vCenter functionality, for example the web user interface.  "
"VMware documents the required ports for vCenter in their online "
"documentation."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:539
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:539
#, no-wrap
msgid ""
" ┌────────────┐   port 443 ┌────────────┐        ┌────────────┐\n"
" │ virt-v2v   │────────────▶ vCenter    │────────▶ ESXi       │\n"
" │ conversion │────────────▶ server     │        │ hypervisor │\n"
" │ server     │  port 5480 │            │        │   ┌─────┐  │\n"
" └────────────┘            └────────────┘        │   │guest│  │\n"
"                                                 └───┴─────┴──┘\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:546
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:546
msgid ""
"(In the diagram above the arrows show the direction in which the TCP "
"connection is initiated, I<not> necessarily the direction of data transfer.)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:550
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:550
msgid ""
"Virt-v2v itself does not connect directly to the ESXi hypervisor containing "
"the guest.  However vCenter connects to the hypervisor and forwards the "
"information, so if you have a firewall between vCenter and its hypervisors "
"you may need to open additional ports (consult VMware documentation)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:556
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:556
msgid ""
"The proxy environment variables (C<https_proxy>, C<all_proxy>, C<no_proxy>, "
"C<HTTPS_PROXY>, C<ALL_PROXY> and C<NO_PROXY>) are B<ignored> when doing "
"vCenter conversions."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-vmware.pod:560
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:560
msgid "vCenter: SSL/TLS certificate problems"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:562
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:562
msgid "You may see this error:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-vmware.pod:564
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:564
#, no-wrap
msgid ""
"  CURL: Error opening file: SSL: no alternative certificate subject\n"
"  name matches target host name\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:567
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:567
msgid ""
"(You may need to enable debugging with ‘virt-v2v -v -x’ to see this message)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:570
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:570
msgid ""
"This can be caused by using an IP address instead of the fully-qualified DNS "
"domain name of the vCenter server, ie.  use C<vpx://vcenter.example.com/...> "
"instead of C<vpx://11.22.33.44/...>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:574
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:574
msgid ""
"Another certificate problem can be caused by the vCenter server having a "
"mismatching FQDN and IP address, for example if the server acquired a new IP "
"address from DHCP.  To fix this you need to change your DHCP server or "
"network configuration so that the vCenter server always gets a stable IP "
"address.  After that log in to the vCenter server’s admin console at "
"C<https://vcenter:5480/>.  Under the C<Admin> tab, select C<Certificate "
"regeneration enabled> and then reboot it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-vmware.pod:584 ../docs/virt-v2v-input-xen.pod:119
#: ../docs/virt-v2v-output-local.pod:200 ../docs/virt-v2v-output-rhv.pod:230
#: ../docs/virt-v2v-release-notes-1.42.pod:213
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:584
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:119
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:200
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:230
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:213
msgid "L<virt-v2v(1)>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-vmware.pod:586 ../docs/virt-v2v-input-xen.pod:121
#: ../docs/virt-v2v-output-local.pod:202
#: ../docs/virt-v2v-output-openstack.pod:216
#: ../docs/virt-v2v-output-rhv.pod:232 ../docs/virt-v2v-support.pod:148
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-vmware.pod:586
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:121
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:202
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:216
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:232
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:148
msgid "AUTHOR"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:3
msgid "virt-v2v-input-xen - Using virt-v2v to convert guests from Xen"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:7
#, no-wrap
msgid ""
" export LIBGUESTFS_BACKEND=direct\n"
" virt-v2v -ic 'xen+ssh://root@xen.example.com'\n"
"          -ip passwordfile\n"
"          GUEST_NAME [-o* options]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:14
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:14
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests from RHEL 5 "
"Xen, or SLES and OpenSUSE Xen hosts."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-input-xen.pod:17
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:17
msgid "INPUT FROM XEN"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:19
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:19
msgid "SSH authentication"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:25
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:25
msgid ""
"If you are not using password authentication, an alternative is to use ssh-"
"agent, and add your ssh public key to F</root/.ssh/authorized_keys> (on the "
"Xen host).  After doing this, you should check that passwordless access "
"works from the virt-v2v server to the Xen host.  For example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:31
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:31
#, no-wrap
msgid ""
" $ ssh root@xen.example.com\n"
" [ logs straight into the shell, no password is requested ]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:34
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:34
msgid ""
"With some modern ssh implementations, legacy crypto policies required to "
"interoperate with RHEL 5 sshd are disabled.  To enable them you may need to "
"run this command on the conversion server (ie. ssh client), but read "
"L<update-crypto-policies(8)> first:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:39
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:39
#, no-wrap
msgid ""
" # update-crypto-policies --set LEGACY\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:41
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:41
msgid "Test libvirt connection to remote Xen host"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:43
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:43
msgid "Use the L<virsh(1)> command to list the guests on the remote Xen host:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:45
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:45
#, no-wrap
msgid ""
" $ virsh -c xen+ssh://root@xen.example.com list --all\n"
"  Id    Name                           State\n"
" ----------------------------------------------------\n"
"  0     Domain-0                       running\n"
"  -     rhel49-x86_64-pv               shut off\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:54
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:54
#, no-wrap
msgid ""
" $ virsh -c xen+ssh://root@xen.example.com dumpxml rhel49-x86_64-pv\n"
" <domain type='xen'>\n"
"   <name>rhel49-x86_64-pv</name>\n"
"   [...]\n"
" </domain>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:60
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:60
msgid ""
"B<If the above commands do not work, then virt-v2v is not going to work "
"either>.  Fix your libvirt configuration or the remote server before "
"continuing."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:64
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:64
msgid ""
"B<If the guest disks are located on a host block device>, then the "
"conversion will fail.  See L</Xen or ssh conversions from block devices> "
"below for a workaround."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:68
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:68
msgid "Importing a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:70
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:70
msgid "To import a particular guest from a Xen server, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:72
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:72
#, no-wrap
msgid ""
" $ LIBGUESTFS_BACKEND=direct \\\n"
"       virt-v2v -ic 'xen+ssh://root@xen.example.com' \\\n"
"           rhel49-x86_64-pv \\\n"
"           -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:77
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:77
msgid ""
"where C<rhel49-x86_64-pv> is the name of the guest (which must be shut down)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:84
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:84
msgid ""
"Setting the L<backend|guestfs(3)/BACKEND> to C<direct> is a temporary "
"workaround until L<libvirt bug 1140166|https://bugzilla.redhat.com/1140166> "
"is fixed."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-input-xen.pod:88
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:88
msgid "Xen or ssh conversions from block devices"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:90
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:90
msgid ""
"Currently virt-v2v cannot directly access a Xen guest (or any guest located "
"remotely over ssh) if that guest’s disks are located on host block devices."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:94
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:94
msgid ""
"To tell if a Xen guest uses host block devices, look at the guest XML.  You "
"will see:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:97
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:97
#, no-wrap
msgid ""
"  <disk type='block' device='disk'>\n"
"    ...\n"
"    <source dev='/dev/VG/guest'/>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:101
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:101
msgid ""
"where C<type='block'>, C<source dev=> and C</dev/...> are all indications "
"that the disk is located on a host block device."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:104
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:104
msgid ""
"This happens because the qemu ssh block driver that we use to access remote "
"disks uses the ssh sftp protocol, and this protocol cannot correctly detect "
"the size of host block devices."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-input-xen.pod:108
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:108
msgid ""
"The workaround is to copy the guest over to the conversion server, using the "
"separate L<virt-v2v-copy-to-local(1)> tool, followed by running virt-v2v.  "
"You will need sufficient space on the conversion server to store a full copy "
"of the guest."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-input-xen.pod:113
#: ../virt-v2v-1.42.0/docs/virt-v2v-input-xen.pod:113
#, no-wrap
msgid ""
" virt-v2v-copy-to-local -ic xen+ssh://root@xen.example.com guest\n"
" virt-v2v -i libvirtxml guest.xml -o local -os /var/tmp\n"
" rm guest.xml guest-disk*\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:3
msgid ""
"virt-v2v-output-local - Using virt-v2v to convert guests to local files or "
"libvirt"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:8
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:8
#, no-wrap
msgid ""
" virt-v2v [-i* options] [-o libvirt] -os POOL\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:10
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:10
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o local -os DIRECTORY\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:12
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:12
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o qemu -os DIRECTORY [--qemu-boot]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:14
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:14
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o json -os DIRECTORY\n"
"                        [-oo json-disks-pattern=PATTERN]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:17
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:17
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o null\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:21
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:21
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests to local "
"files or to a locally running libvirt instance.  There are four output modes "
"you can select on the virt-v2v command line:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:27
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:27
msgid "B<-o libvirt -os> C<POOL>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:29
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:29
msgid "B<-os> C<POOL>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:31
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:31
msgid ""
"This converts the guest to a libvirt directory pool call C<POOL>, and "
"instantiates the guest in libvirt (but does not start it running).  See L</"
"OUTPUT TO LIBVIRT> below."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:35
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:35
msgid ""
"I<-o libvirt> is the default if no I<-o> option is given, so you can omit it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:38
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:38
msgid "B<-o local -os> C<DIRECTORY>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:40
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:40
msgid ""
"This converts the guest to files in C<DIRECTORY>.  A libvirt XML file is "
"also created, but unlike I<-o libvirt> the guest is not instantiated in "
"libvirt, only files are created."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:44
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:44
msgid "The files will be called:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:46
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:46
#, no-wrap
msgid ""
" NAME-sda, NAME-sdb, etc.      Guest disk(s).\n"
" NAME.xml                      Libvirt XML.\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:49 ../docs/virt-v2v-output-local.pod:160
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:49
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:160
msgid "where C<NAME> is the guest name."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:51
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:51
msgid "B<-o qemu -os> C<DIRECTORY>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:53
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:53
msgid "B<-o qemu -os> C<DIRECTORY> B<--qemu-boot>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:55
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:55
msgid ""
"This converts the guest to files in C<DIRECTORY>.  Unlike I<-o local> above, "
"a shell script is created which contains the raw qemu command you would need "
"to boot the guest.  However the shell script is not run, I<unless> you also "
"add the I<--qemu-boot> option."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:60
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:60
msgid "B<-o json -os> C<DIRECTORY>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:62
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:62
msgid ""
"This converts the guest to files in C<DIRECTORY>.  The metadata produced is "
"a JSON file containing the majority of the data virt-v2v gathers during the "
"conversion.  See L</OUTPUT TO JSON> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:67
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:67
msgid "B<-o null>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:69
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:69
msgid ""
"The guest is converted, but the final result is thrown away and no metadata "
"is created.  This is mainly useful for testing."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-local.pod:74
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:74
msgid "OUTPUT TO LIBVIRT"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:76
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:76
msgid ""
"The I<-o libvirt> option lets you upload the converted guest to a libvirt-"
"managed host.  There are several limitations:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:83
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:83
msgid ""
"You can only use a local libvirt connection [see below for how to workaround "
"this]."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:88
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:88
msgid ""
"The I<-os pool> option must specify a directory pool, not anything more "
"exotic such as iSCSI [but see below]."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:93
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:93
msgid "You can only upload to a KVM hypervisor."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-local.pod:97
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:97
msgid ""
"Workaround for output to a remote libvirt instance and/or a non-directory "
"storage pool"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:104
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:104
msgid ""
"Use virt-v2v in I<-o local> mode to convert the guest disks and metadata "
"into a local temporary directory:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:107
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:107
#, no-wrap
msgid ""
" virt-v2v [...] -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:109
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:109
msgid "This creates two (or more) files in F</var/tmp> called:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:111
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:111
#, no-wrap
msgid ""
" /var/tmp/NAME.xml     # the libvirt XML (metadata)\n"
" /var/tmp/NAME-sda     # the guest’s first disk\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:114
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:114
msgid "(for C<NAME> substitute the guest’s name)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:118
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:118
msgid "Upload the converted disk(s) into the storage pool called C<POOL>:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:120
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:120
#, no-wrap
msgid ""
" size=$(stat -c%s /var/tmp/NAME-sda)\n"
" virsh vol-create-as POOL NAME-sda $size --format raw\n"
" virsh vol-upload --pool POOL NAME-sda /var/tmp/NAME-sda\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:126
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:126
msgid ""
"Edit F</var/tmp/NAME.xml> to change F</var/tmp/NAME-sda> to the pool name.  "
"In other words, locate the following bit of XML:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:129
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:129
#, no-wrap
msgid ""
" <disk type='file' device='disk'>\n"
"   <driver name='qemu' type='raw' cache='none' />\n"
"   <source file='/var/tmp/NAME-sda' />\n"
"   <target dev='hda' bus='ide' />\n"
" </disk>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:135
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:135
msgid ""
"and change two things: The C<type='file'> attribute must be changed to "
"C<type='volume'>, and the C<E<lt>sourceE<gt>> element must be changed to "
"include C<pool> and C<volume> attributes:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:139
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:139
#, no-wrap
msgid ""
" <disk type='volume' device='disk'>\n"
"   ...\n"
"   <source pool='POOL' volume='NAME-sda' />\n"
"   ...\n"
" </disk>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:147
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:147
msgid "Define the final guest in libvirt:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:149
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:149
#, no-wrap
msgid ""
" virsh define /var/tmp/NAME.xml\n"
"\n"
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-local.pod:153
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:153
msgid "OUTPUT TO JSON"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:155
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:155
msgid "The I<-o json> option produces the following files by default:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:157
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:157
#, no-wrap
msgid ""
" NAME.json                     JSON metadata.\n"
" NAME-sda, NAME-sdb, etc.      Guest disk(s).\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:162
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:162
msgid ""
"It is possible to change the pattern of the disks using the I<-oo json-disks-"
"pattern=...> option: it allows parameters in form of C<%{...}> variables, "
"for example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:166
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:166
#, no-wrap
msgid ""
" -oo json-disks-pattern=disk%{DiskNo}.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:168
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:168
msgid "Recognized variables are:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:172
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:172
msgid "C<%{DiskNo}>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:174
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:174
msgid "The index of the disk, starting from 1."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:176
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:176
msgid "C<%{DiskDeviceName}>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:178
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:178
msgid "The destination device of the disk, e.g. C<sda>, C<sdb>, etc."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-local.pod:180
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:180
msgid "C<%{GuestName}>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:182
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:182
msgid "The name of the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:186
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:186
msgid ""
"Using a pattern it is possible use subdirectories for the disks, even with "
"names depending on variables; for example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-local.pod:189
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:189
#, no-wrap
msgid ""
" -oo json-disks-pattern=%{GuestName}-%{DiskNo}/disk.img\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:191
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:191
msgid "The default pattern is C<%{GuestName}-%{DiskDeviceName}>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-local.pod:193
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-local.pod:193
msgid ""
"If the literal C<%{...}> text is needed, it is possible to avoid the escape "
"it with a leading C<%>; for example, C<%%{GuestName}-%{DiskNo}.img> will "
"create file names for the disks like C<%%{GuestName}-1.img>, C<%"
"%{GuestName}-2.img>, etc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:3
msgid ""
"virt-v2v-output-openstack - Using virt-v2v to convert guests to OpenStack"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:7
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o openstack\n"
"                        -oo server-id=SERVER\n"
"                        [-oo guest-id=GUEST]\n"
"                        [-oo verify-server-certificate=false]\n"
"                        [-oo os-username=admin] [-oo os-*=*]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:13
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:13
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o glance\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:17
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:17
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests to run on "
"OpenStack.  There are two output modes you can select, but only I<-o "
"openstack> should be used normally."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-openstack.pod:23
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:23
msgid "B<-o openstack> B<-oo server-id=>SERVER [...]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:25
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:25
msgid "Full description: L</OUTPUT TO OPENSTACK>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:27
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:27
msgid ""
"This is the modern method for uploading to OpenStack via the REST API.  "
"Guests can be directly converted into Cinder volumes."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-openstack.pod:30
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:30
msgid "B<-o glance>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:32
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:32
msgid "Full description: L</OUTPUT TO GLANCE>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:34
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:34
msgid ""
"This is the old method for uploading to Glance.  Unfortunately Glance is not "
"well suited to storing converted guests (since virt-v2v deals with \"pets\" "
"not templated \"cattle\"), so this method is not recommended unless you "
"really know what you are doing."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-openstack.pod:41
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:41
msgid "OUTPUT TO OPENSTACK"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:43
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:43
msgid "To output to OpenStack, use the I<-o openstack> option."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:45
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:45
msgid "OpenStack: Setting up a conversion appliance"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:47
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:47
msgid ""
"When virt-v2v is converting to OpenStack, it is unusual in that virt-v2v "
"B<must> be running inside a virtual machine running on top of the OpenStack "
"overcloud.  This virtual machine is called the \"conversion appliance\".  "
"Note this virtual machine is unrelated to the guest which is being converted."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:53
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:53
msgid ""
"The reason for this is because to create Cinder volumes that will contain "
"the guest data (for the converted guest) we must attach those Cinder volumes "
"to an OpenStack virtual machine."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:57
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:57
msgid ""
"The C<openstack> command must be installed in the appliance.  We use it for "
"communicating with OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:60
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:60
msgid ""
"When virt-v2v is running in the conversion appliance, you must supply the "
"name or UUID of the conversion appliance to virt-v2v, eg:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:63
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:63
#, no-wrap
msgid ""
" $ openstack server list\n"
" +--------------------------------------+-----------+--------+\n"
" | ID                                   | Name      | Status |\n"
" +--------------------------------------+-----------+--------+\n"
" | bbb0147a-44b9-4d19-9a9d-10ca9a984744 | test1     | ACTIVE |\n"
" +--------------------------------------+-----------+--------+\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:70
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:70
#, no-wrap
msgid ""
" # virt-v2v [...] \\\n"
"       -o openstack -oo server-id=bbb0147a-44b9-4d19-9a9d-10ca9a984744\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:73
#: ../docs/virt-v2v-output-openstack.pod:99
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:73
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:99
msgid "or:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:75
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:75
#, no-wrap
msgid ""
" # virt-v2v [...] -o openstack -oo server-id=test1\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:77
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:77
msgid ""
"You can run many parallel conversions inside a single conversion appliance "
"if you want, subject to having enough resources available.  However "
"OpenStack itself imposes a limit that you should be aware of: OpenStack "
"cannot attach more than around 25 disks [the exact number varies with "
"configuration] to a single appliance, and that limits the number of guests "
"which can be converted in parallel, because each guest's disk must be "
"attached to the appliance while being copied."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:85
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:85
msgid "OpenStack: Authentication"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:87
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:87
msgid ""
"Converting to OpenStack requires access to the tenant (non-admin) API "
"endpoints.  You will need to either set up your C<$OS_*> environment "
"variables or use output options on the virt-v2v command line to authenticate "
"with OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:92
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:92
msgid ""
"Normally there is a file called something like C<stackrc>, C<overcloudrc> "
"etc which you can simply C<source> to set everything up."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:95
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:95
msgid "For example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:97
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:97
#, no-wrap
msgid ""
" export OS_USERNAME=admin\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:101
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:101
#, no-wrap
msgid ""
" virt-v2v [...] -o openstack -oo os-username=admin\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:103
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:103
msgid ""
"are equivalent, and have the same effect as using I<--os-username> on the "
"command line of OpenStack tools."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:106
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:106
msgid "OpenStack: Running as root"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:108
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:108
msgid ""
"Because virt-v2v must access Cinder volumes which are presented as F</dev> "
"devices to the conversion appliance, virt-v2v must usually run as root in I<-"
"o openstack> mode."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:112
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:112
msgid ""
"If you use C<sudo> to start virt-v2v and you are using environment variables "
"for authentication, remember to use the C<sudo -E> option to preserve the "
"environment."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:116
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:116
msgid "OpenStack: Guest ID"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:118
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:118
#, no-wrap
msgid ""
" virt-v2v [...] -o openstack -oo guest-id=123-456-7890\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:120
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:120
msgid ""
"You may optionally specify I<-oo guest-id=...> on the command line.  The ID "
"(which can be any string) is saved on each Cinder volume in the "
"C<virt_v2v_guest_id> volume property."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:124
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:124
msgid ""
"This can be used to find disks associated with a guest, or to associate "
"which disks are related to which guests when converting many guests."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:128
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:128
msgid "OpenStack: Ignore server certificate"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:130
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:130
msgid ""
"Using I<-oo verify-server-certificate=false> you can tell the openstack "
"client to ignore the server certificate when connecting to the OpenStack API "
"endpoints.  This has the same effect as passing the I<--insecure> option to "
"the C<openstack> command."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:135
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:135
msgid "OpenStack: Converting a guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:137
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:137
msgid "The final command to convert the guest, running as root, will be:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:139
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:139
#, no-wrap
msgid ""
" # virt-v2v [-i options ...] \\\n"
"       -o openstack -oo server-id=NAME|UUID [-oo guest-id=ID]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:142
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:142
msgid "If you include authentication options on the command line then:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:144
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:144
#, no-wrap
msgid ""
" # virt-v2v [-i options ...] \\\n"
"       -o openstack -oo server-id=NAME|UUID -oo os-username=admin [etc]\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:147
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:147
msgid "OpenStack: Booting the guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:149
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:149
msgid ""
"Guests are converted as Cinder volume(s) (one volume per disk in the "
"original guest).  To boot them use the C<openstack server create --volume> "
"option:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-openstack.pod:153
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:153
#, no-wrap
msgid ""
" $ openstack volume list\n"
" +--------------------------------------+---------------+-----------+\n"
" | ID                                   | Name          | Status    |\n"
" +--------------------------------------+---------------+-----------+\n"
" | c4d06d15-22ef-462e-9eff-ab54ab285a1f | fedora-27-sda | available |\n"
" +--------------------------------------+---------------+-----------+\n"
" $ openstack server create \\\n"
"       --flavor x1.small \\\n"
"       --volume c4d06d15-22ef-462e-9eff-ab54ab285a1f \\\n"
"       myguest\n"
" $ openstack console url show myguest\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:165
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:165
msgid "OpenStack: Other conversion options"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:167
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:167
msgid ""
"To specify the Cinder volume type, use I<-os>.  If not specified then no "
"Cinder volume type is used."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:170
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:170
msgid ""
"The following options are B<not> supported with OpenStack: I<-oa>, I<-of>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-openstack.pod:173
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:173
msgid "OUTPUT TO GLANCE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:175
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:175
msgid ""
"Note this is a legacy option.  In most cases you should use L</OUTPUT TO "
"OPENSTACK> instead."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:178
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:178
msgid "To output to OpenStack Glance, use the I<-o glance> option."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:180
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:180
msgid ""
"This runs the L<glance(1)> CLI program which must be installed on the virt-"
"v2v conversion host.  For authentication to work, you will need to set "
"C<OS_*> environment variables.  In most cases you can do this by sourcing a "
"file called something like F<keystonerc_admin>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:185
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:185
msgid ""
"Virt-v2v adds metadata for the guest to Glance, describing such things as "
"the guest operating system and what drivers it requires.  The command "
"C<glance image-show> will display the metadata as \"Property\" fields such "
"as C<os_type> and C<hw_disk_bus>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:190
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:190
msgid "Glance and sparseness"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:192
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:192
msgid ""
"Glance image upload doesn't appear to correctly handle sparseness.  For this "
"reason, using qcow2 will be faster and use less space on the Glance server.  "
"Use the virt-v2v S<I<-of qcow2>> option."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-openstack.pod:196
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:196
msgid "Glance and multiple disks"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:198
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:198
msgid ""
"If the guest has a single disk, then the name of the disk in Glance will be "
"the name of the guest.  You can control this using the I<-on> option."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:202
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:202
msgid ""
"Glance doesn't have a concept of associating multiple disks with a single "
"guest, and Nova doesn't allow you to boot a guest from multiple Glance disks "
"either.  If the guest has multiple disks, then the first (assumed to be the "
"system disk) will have the name of the guest, and the second and subsequent "
"data disks will be called C<I<guestname>-disk2>, C<I<guestname>-disk3> etc.  "
"It may be best to leave the system disk in Glance, and import the data disks "
"to Cinder."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-openstack.pod:212
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-openstack.pod:212
msgid ""
"L<virt-v2v(1)>, L<https://docs.openstack.org/python-openstackclient/latest/"
"cli/man/openstack.html>, L<glance(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:3
msgid "virt-v2v-output-rhv - Using virt-v2v to convert guests to oVirt or RHV"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:7
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o rhv-upload [-oc ENGINE_URL] -os STORAGE\n"
"                        [-op PASSWORD] [-of raw]\n"
"                        [-oo rhv-cafile=FILE]\n"
"                        [-oo rhv-cluster=CLUSTER]\n"
"                        [-oo rhv-direct]\n"
"                        [-oo rhv-disk-uuid=UUID ...]\n"
"                        [-oo rhv-verifypeer]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:15
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:15
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o rhv -os [esd:/path|/path]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:17
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:17
#, no-wrap
msgid ""
" virt-v2v [-i* options] -o vdsm\n"
"                        [-oo vdsm-image-uuid=UUID]\n"
"                        [-oo vdsm-vol-uuid=UUID]\n"
"                        [-oo vdsm-vm-uuid=UUID]\n"
"                        [-oo vdsm-ovf-output=DIR]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:25
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:25
msgid ""
"This page documents how to use L<virt-v2v(1)> to convert guests to an oVirt "
"or RHV management instance.  There are three output modes that you can "
"select, but only I<-o rhv-upload> should be used normally, the other two are "
"deprecated:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:32
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:32
msgid "B<-o rhv-upload> B<-os> STORAGE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:34
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:34
msgid "Full description: L</OUTPUT TO RHV>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:36
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:36
msgid ""
"This is the modern method for uploading to oVirt/RHV via the REST API.  It "
"requires oVirt/RHV E<ge> 4.2."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:39
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:39
msgid "B<-o rhv> B<-os> esd:/path"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:41
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:41
msgid "B<-o rhv> B<-os> /path"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:43
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:43
msgid "Full description: L</OUTPUT TO EXPORT STORAGE DOMAIN>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:45
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:45
msgid ""
"This is the old method for uploading to oVirt/RHV via the Export Storage "
"Domain (ESD).  The ESD can either be accessed over NFS (using the I<-os esd:/"
"path> form) or if you have already NFS-mounted it somewhere specify the path "
"to the mountpoint as I<-os /path>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:51
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:51
msgid ""
"The Export Storage Domain was deprecated in oVirt 4, and so we expect that "
"this method will stop working at some point in the future."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:54
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:54
msgid "B<-o vdsm>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:56
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:56
msgid ""
"This is the old method used internally by the RHV-M user interface.  It is "
"never intended to be used directly by end users."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-rhv.pod:61
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:61
msgid "OUTPUT TO RHV"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:63
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:63
msgid ""
"This new method to upload guests to oVirt or RHV directly via the REST API "
"requires oVirt/RHV E<ge> 4.2."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:66
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:66
msgid ""
"You need to specify I<-o rhv-upload> as well as the following extra "
"parameters:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:71
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:71
msgid "I<-oc> C<https://ovirt-engine.example.com/ovirt-engine/api>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:73
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:73
msgid ""
"The URL of the REST API which is usually the server name with C</ovirt-"
"engine/api> appended, but might be different if you installed oVirt Engine "
"on a different path."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:77
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:77
msgid ""
"You can optionally add a username and port number to the URL.  If the "
"username is not specified then virt-v2v defaults to using C<admin@internal> "
"which is the typical superuser account for oVirt instances."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:82
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:82
msgid "I<-of raw>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:84
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:84
msgid ""
"Currently you must use I<-of raw> and you cannot use I<-oa preallocated>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:86
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:86
msgid "These restrictions will be loosened in a future version."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:88
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:88
msgid "I<-op> F<password-file>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:90
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:90
msgid ""
"A file containing a password to be used when connecting to the oVirt "
"engine.  Note the file should contain the whole password, B<without any "
"trailing newline>, and for security the file should have mode C<0600> so "
"that others cannot read it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:95
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:95
msgid "I<-os> C<ovirt-data>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:97
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:97
msgid "The storage domain."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:99
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:99
msgid "I<-oo rhv-cafile=>F<ca.pem>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:101
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:101
msgid ""
"The F<ca.pem> file (Certificate Authority), copied from F</etc/pki/ovirt-"
"engine/ca.pem> on the oVirt engine."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:104
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:104
msgid ""
"If I<-oo rhv-verifypeer> is enabled then this option can be used to control "
"which CA is used to verify the client’s identity.  If this option is not "
"used then the system’s global trust store is used."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:109
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:109
msgid "I<-oo rhv-cluster=>C<CLUSTERNAME>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:111
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:111
msgid "Set the RHV Cluster Name.  If not given it uses C<Default>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:113
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:113
msgid "I<-oo rhv-disk-uuid=>C<UUID>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:115
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:115
msgid ""
"This option can used to manually specify UUIDs for the disks when creating "
"the virtual machine.  If not specified, the oVirt engine will generate "
"random UUIDs for the disks.  Please note that:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:123
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:123
msgid ""
"you B<must> pass as many I<-oo rhv-disk-uuid=UUID> options as the amount of "
"disks in the guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:128
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:128
msgid ""
"the specified UUIDs are used as they are, without checking whether they are "
"already used by other disks"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:133
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:133
msgid ""
"This option is considered advanced, and to be used mostly in combination "
"with I<--no-copy>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:136
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:136
msgid "I<-oo rhv-direct>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:138
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:138
msgid ""
"If this option is given then virt-v2v will attempt to directly upload the "
"disk to the oVirt node, otherwise it will proxy the upload through the oVirt "
"engine.  Direct upload requires that you have network access to the oVirt "
"nodes.  Non-direct upload is slightly slower but should work in all "
"situations."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:144
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:144
msgid "I<-oo rhv-verifypeer>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:146
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:146
msgid ""
"Verify the oVirt/RHV server’s identity by checking the server‘s certificate "
"against the Certificate Authority."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v-output-rhv.pod:151
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:151
msgid "OUTPUT TO EXPORT STORAGE DOMAIN"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:153
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:153
msgid ""
"This section only applies to the I<-o rhv> output mode.  If you use virt-v2v "
"from the RHV-M user interface, then behind the scenes the import is managed "
"by VDSM using the I<-o vdsm> output mode (which end users should not try to "
"use directly)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:158
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:158
msgid ""
"You have to specify I<-o rhv> and an I<-os> option that points to the RHV-M "
"Export Storage Domain.  You can either specify the NFS server and "
"mountpoint, eg. S<C<-os rhv-storage:/rhv/export>>, or you can mount that "
"first and point to the directory where it is mounted, eg. S<C<-os /tmp/"
"mnt>>.  Be careful not to point to the Data Storage Domain by accident as "
"that will not work."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:165
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:165
msgid ""
"On successful completion virt-v2v will have written the new guest to the "
"Export Storage Domain, but it will not yet be ready to run.  It must be "
"imported into RHV using the UI before it can be used."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:169
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:169
msgid ""
"In RHV E<ge> 2.2 this is done from the Storage tab.  Select the export "
"domain the guest was written to.  A pane will appear underneath the storage "
"domain list displaying several tabs, one of which is \"VM Import\".  The "
"converted guest will be listed here.  Select the appropriate guest an click "
"\"Import\".  See the RHV documentation for additional details."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:176
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:176
msgid ""
"If you export several guests, then you can import them all at the same time "
"through the UI."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-rhv.pod:179
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:179
msgid "Testing RHV conversions"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:181
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:181
msgid ""
"If you do not have an oVirt or RHV instance to test against, then you can "
"test conversions by creating a directory structure which looks enough like a "
"RHV-M Export Storage Domain to trick virt-v2v:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v-output-rhv.pod:185
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:185
#, no-wrap
msgid ""
" uuid=`uuidgen`\n"
" mkdir /tmp/rhv\n"
" mkdir /tmp/rhv/$uuid\n"
" mkdir /tmp/rhv/$uuid/images\n"
" mkdir /tmp/rhv/$uuid/master\n"
" mkdir /tmp/rhv/$uuid/master/vms\n"
" touch /tmp/rhv/$uuid/dom_md\n"
" virt-v2v [...] -o rhv -os /tmp/rhv\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-output-rhv.pod:194
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:194
msgid "Debugging RHV-M import failures"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:196
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:196
msgid ""
"When you export to the RHV-M Export Storage Domain, and then import that "
"guest through the RHV-M UI, you may encounter an import failure.  Diagnosing "
"these failures is infuriatingly difficult as the UI generally hides the true "
"reason for the failure."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:201
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:201
msgid "There are several log files of interest:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:205
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:205
msgid "F</var/log/vdsm/import/>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:207
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:207
msgid ""
"In oVirt E<ge> 4.1.0, VDSM preserves the virt-v2v log file for 30 days in "
"this directory."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:210
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:210
msgid ""
"This directory is found on the host which performed the conversion.  The "
"host can be selected in the import dialog, or can be found under the "
"C<Events> tab in oVirt administration."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:214
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:214
msgid "F</var/log/vdsm/vdsm.log>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:216
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:216
msgid ""
"As above, this file is present on the host which performed the conversion.  "
"It contains detailed error messages from low-level operations executed by "
"VDSM, and is useful if the error was not caused by virt-v2v, but by VDSM."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-output-rhv.pod:221
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:221
msgid "F</var/log/ovirt-engine/engine.log>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-output-rhv.pod:223
#: ../virt-v2v-1.42.0/docs/virt-v2v-output-rhv.pod:223
msgid ""
"This log file is stored on the RHV-M server.  It contains more detail for "
"any errors caused by the oVirt GUI."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:3
msgid "virt-v2v-release-notes - virt-v2v Release Notes"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:7
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:7
msgid ""
"These are the release notes for S<B<virt-v2v 1.42>>, released on S<B<16th "
"April 2020>>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:10
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:10
#, fuzzy
#| msgid "C<features>"
msgid "New features"
msgstr "C<features>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:12
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:12
msgid ""
"This is the first release where virt-v2v lives in a separate repository from "
"libguestfs.  The two projects are now broadly decoupled from one another."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:16
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:16
msgid ""
"Add a new I<-o json> output mode.  Primarily this is used to do conversions "
"to KubeVirt (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:19
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:19
msgid ""
"Use new libvirt C<E<lt>firmwareE<gt>> feature to get the source guest "
"firmware (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:22
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:22
msgid ""
"virt-v2v I<-o rhv-upload> new option I<-oo rhv-disk-uuid> allows disk UUIDs "
"to be specified.  Also I<-oo rhv-cafile> is now optional (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:26
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:26
msgid ""
"Conversions over ssh now use L<nbdkit-ssh-plugin(1)> instead of the QEMU ssh "
"driver.  Similarly L<nbdkit-curl-plugin(1)> is used instead of the QEMU curl "
"driver.  This allowed us to add more flexible features such as password "
"authentication, bandwidth throttling (new I<--bandwidth> option), readahead, "
"and automatic retry on network failures."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:33
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:33
msgid ""
"For Windows guests, QEMU Guest Agent MSI may now be installed (Tomáš "
"Golembiovský)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:36
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:36
msgid "Other fixes"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:38
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:38
msgid "In I<-o libvirt> mode, support Windows Server 2019 (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:40
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:40
msgid "Fix Ubuntu Server conversions (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:42
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:42
msgid ""
"Fix installation of qemu-ga by only installing arch-specific files in the "
"guest (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:45
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:45
msgid ""
"Delay installation of qemu-ga until after virtio-win drivers have been "
"installed and rebooted (Tomáš Golembiovský)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:48
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:48
msgid ""
"Save the log from running RHEV-APT installer to allow debugging (Tomáš "
"Golembiovský)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:51
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:51
msgid ""
"Check RHV cluster exists before trying to convert when using I<-o rhv-"
"upload> mode.  Also allows us to detect and reject various other conditions "
"early.  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:55
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:55
msgid "Label nbdkit sockets correctly for SELinux/sVirt (Martin Kletzander)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:58
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:58
msgid "You can use a block device as the Windows virtio driver ISO."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:60
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:60
msgid ""
"Multiple fixes to RHV uploads: Set C<DISKTYPE> field correctly when "
"converting to RHV and VDSM.  Properly clean up on failure.  Display disk ID "
"in error messages, and log script parameters, to help with debugging.  "
"Multiple code cleanups.  (Nir Soffer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:65
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:65
msgid "Support conversions to RHV in qcow2 format (Nir Soffer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:67
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:67
msgid ""
"Fix detection of disk status and failures after conversion to RHV (Daniel "
"Erez)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:70
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:70
msgid ""
"Cancel disk transfer and remove uploaded disks on failure of conversion to "
"RHV (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:73
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:73
msgid ""
"Images containing small holes (sparse regions) should now convert faster "
"(Nir Soffer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:76
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:76
msgid ""
"The L<nbdkit-cacheextents-filter(1)> is used to accelerate sources which "
"have slow sparseness detection, primarily this means VMware sources using "
"VDDK (Martin Kletzander)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:80
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:80
msgid ""
"Require at least 100 free inodes on each guest filesystem before doing "
"conversion, since lack of inodes could cause conversion failures (Pino "
"Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:84
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:84
msgid "Fix osinfo output for CentOS 8 conversions (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:86
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:86
msgid ""
"VMware tools are now removed from Windows guests automatically in most cases "
"(Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:89
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:89
msgid ""
"I<-i ova> mode no longer reads the whole input OVF into memory, but parses "
"it off disk (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:92
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:92
msgid ""
"When converting to OpenStack, we now wait up to 5 minutes (instead of 60 "
"seconds) for the Cinder volume to get attached to the conversion appliance, "
"since in some cases it was taking a long time."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:96
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:96
msgid ""
"If using a new enough version of nbdkit, virt-v2v logs should be much less "
"verbose."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:99
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:99
msgid "Security"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:101
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:101
#, fuzzy
#| msgid ""
#| "  (no security problems were found or fixed in this release)\n"
#| "\n"
msgid "There were no security-related bugs found in this release."
msgstr ""
"  (no security problems were found or fixed in this release)\n"
"\n"

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:103
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:103
msgid "Build changes"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:105
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:105
msgid ""
"Libguestfs E<ge> 1.40 is required, it is now packaged and distributed "
"separately from virt-v2v.  For developers you can use a locally built (and "
"not installed) copy of libguestfs."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:109
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:109
msgid ""
"Libvirt is now required to build virt-v2v.  Additionally you will require "
"the OCaml bindings to libvirt (L<https://libvirt.org/ocaml/>), although a "
"copy is bundled for now (it will be removed later).  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:114
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:114
msgid ""
"Libosinfo is required to build virt-v2v.  It is used to query information "
"about guest drivers.  (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:117
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:117
msgid ""
"Fixes for OCaml E<ge> 4.10.  The minimum version of OCaml required is still "
"4.01, but may be increased to 4.05 in future."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:120
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:120
msgid "Test conversions of Debian 9 and Fedora 29 (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:122
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:122
msgid "Various fixes to srcdir != builddir (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:124
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:124
msgid "Remove gnulib modules not used by virt-v2v (Pino Toscano)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:126
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:126
#, fuzzy
#| msgid "C<external>"
msgid "Internals"
msgstr "C<external>"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:128
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:128
msgid ""
"When converting SUSE guests, always try to install QXL driver (Mike Latimer)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:131
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:131
msgid ""
"Two new modules (Nbdkit and Nbdkit_sources) factor out generic nbdkit "
"operations and nbdkit source operations respectively."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:134
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:134
msgid "Format Python code to comply with PEP 8 / pycodestyle (Pino Toscano)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:136
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:136
msgid ""
"Tests have been moved to the F<tests/> subdirectory, and manuals to the "
"F<docs/> subdirectory."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-release-notes-1.42.pod:139
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:139
msgid "Bugs fixed"
msgstr "Anomalies corrigées"

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:143
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:143
msgid "https_proxy= ./bugs-in-changelog.sh v1.40.0.."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:149
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:149
msgid "L<https://bugzilla.redhat.com/1791802>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:151
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:151
msgid "virt-v2v does not install qemu-ga on EL8 guest"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:153
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:153
msgid "L<https://bugzilla.redhat.com/1791257>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:155
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:155
msgid ""
"update-crypto-policies command example is incorrect in virt-v2v-input-xen"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:157
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:157
msgid "L<https://bugzilla.redhat.com/1791240>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:159
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:159
msgid "[RFE] Make the rhv-cafile optional"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:161
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:161
msgid "L<https://bugzilla.redhat.com/1785528>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:163
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:163
msgid ""
"Should remove info about \"Remove VMware tools from Windows guests\" in virt-"
"v2v-input-vmware man page"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:165
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:165
msgid "L<https://bugzilla.redhat.com/1746699>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:167
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:167
msgid ""
"Can't import guest from export domain to data domain on rhv4.3 due to error "
"\"Invalid parameter: 'DiskType=1'\""
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:169
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:169
msgid "L<https://bugzilla.redhat.com/1733168>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:171
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:171
msgid "virt-v2v: Use scp -T in -i vmx -it ssh mode"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:173
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:173
msgid "L<https://bugzilla.redhat.com/1723305>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:175
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:175
msgid ""
"Delete info \"export PATH=/path/to/nbdkit-1.1.x:$PATH\" in virt-v2v-input-"
"vmware manual page"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:177
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:177
msgid "L<https://bugzilla.redhat.com/1691659>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:179
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:179
msgid ""
"virt-v2v should show a message when qemu-guest-agent is installed in guest "
"successfully during conversion"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:181
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:181
msgid "L<https://bugzilla.redhat.com/1690574>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:183
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:183
msgid ""
"virt-v2v fails to import a guest while cannot find `file_architecture` for a "
"file"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:185
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:185
msgid "L<https://bugzilla.redhat.com/1680361>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:187
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:187
msgid ""
"[v2v][RHV][Scale] v2v Migration to RHV failed on timed out waiting for "
"transfer to finalize"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:189
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:189
msgid "L<https://bugzilla.redhat.com/1626503>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:191
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:191
msgid "Unable to maintain static IP address configuration post VM migration"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:193
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:193
msgid "L<https://bugzilla.redhat.com/1612653>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:195
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:195
msgid ""
"Guest has no disk after rhv-upload converting if target data domain has "
"similar name with other data domain on rhv4.2"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:197
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:197
msgid "L<https://bugzilla.redhat.com/1605242>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:199
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:199
msgid "Update nbdkit info for vddk in v2v man page"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:201
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:201
msgid "L<https://bugzilla.redhat.com/1584678>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:203
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:203
msgid ""
"On W2K12r2 rhev-apt does not run non-interactively, causing race when "
"starting rhev-apt service from the command line"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-release-notes-1.42.pod:205
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:205
msgid "L<https://bugzilla.redhat.com/1518539>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:207
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:207
msgid "Macvtap network will be lost during v2v conversion"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:215
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:215
msgid ""
"Previous release notes covering virt-v2v can be found in the libguestfs "
"project: L<guestfs-release-notes-1.40(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:220
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:220
msgid "Daniel Erez"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:224 ../docs/virt-v2v.pod:1693
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:224
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1693
msgid "Tomáš Golembiovský"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:226
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:226
msgid "Martin Kletzander"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:228 ../docs/virt-v2v.pod:1699
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:228
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1699
msgid "Mike Latimer"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:230 ../docs/virt-v2v.pod:1701
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:230
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1701
msgid "Nir Soffer"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:232 ../docs/virt-v2v.pod:1705
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:232
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1705
msgid "Pino Toscano"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-release-notes-1.42.pod:234
#: ../virt-v2v-1.42.0/docs/virt-v2v-release-notes-1.42.pod:234
msgid "Ming Xie"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:3
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:3
msgid ""
"virt-v2v-support - Supported hypervisors, virtualization management systems "
"and guests in virt-v2v"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:8
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:8
msgid ""
"This page documents which foreign hypervisors, virtualization management "
"systems and guest types that L<virt-v2v(1)> can support."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:11
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:11
msgid ""
"Note this page applies to upstream virt-v2v from L<http://libguestfs.org> "
"and in downstream distributions of virt-v2v sometimes features are "
"intentionally removed, or are present but not supported."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:16
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:16
msgid "Hypervisors (Input)"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:20
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:20
msgid "VMware ESXi"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:22
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:22
msgid "Must be managed by VMware vCenter E<ge> 5.0 unless VDDK is available."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:24
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:24
msgid "OVA exported from VMware"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:26
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:26
msgid "OVAs from other hypervisors will not work."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:28
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:28
msgid "VMX from VMware"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:30
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:30
msgid "VMX files generated by other hypervisors will not work."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:32
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:32
msgid "RHEL 5 Xen"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:34
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:34
msgid "SUSE Xen"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:36
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:36
msgid "Citrix Xen"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:38
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:38
msgid "Citrix Xen has not been recently tested."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:40
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:40
msgid "Hyper-V"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:42
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:42
msgid ""
"Not recently tested.  Requires that you export the disk or use L<virt-"
"p2v(1)> on Hyper-V."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:45
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:45
msgid "Direct from disk images"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:47
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:47
msgid ""
"Only disk images exported from supported hypervisors, and using container "
"formats supported by qemu."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:50
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:50
msgid "Physical machines"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:52
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:52
msgid "Using the L<virt-p2v(1)> tool."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:56
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:56
msgid "Hypervisors (Output)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:58
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:58
msgid "QEMU and KVM only."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:60
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:60
msgid "Virtualization management systems (Output)"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:64
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:64
msgid "OpenStack"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:66
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:66
msgid "Red Hat Virtualization (RHV) 4.1 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:68
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:68
msgid "Local libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:70
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:70
msgid "And hence L<virsh(1)>, L<virt-manager(1)>, and similar tools."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:72
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:72
msgid "Local disk"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:76
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:76
msgid "Guests"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:80
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:80
msgid "Red Hat Enterprise Linux 3, 4, 5, 6, 7"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:82
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:82
msgid "CentOS 3, 4, 5, 6, 7"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:84
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:84
msgid "Scientific Linux 3, 4, 5, 6, 7"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:86
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:86
msgid "Oracle Linux"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:88
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:88
msgid "Fedora"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:90
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:90
msgid "SLES 10 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:92
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:92
msgid "OpenSUSE 10 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:94
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:94
msgid "Debian 6 and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:96
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:96
msgid "Ubuntu 10.04, 12.04, 14.04, 16.04, and up"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:98
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:98
msgid "Windows XP to Windows 10 / Windows Server 2016"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:100
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:100
msgid ""
"We use Windows internal version numbers, see L<https://en.wikipedia.org/wiki/"
"List_of_Microsoft_Windows_versions>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:103
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:103
msgid "Currently NT 5.2 to NT 6.3 are supported."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:105
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:105
msgid ""
"See L</WINDOWS> below for additional notes on converting Windows guests."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v-support.pod:110
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:110
msgid "Guest firmware"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:112
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:112
msgid "BIOS is supported for all guest types and hypervisors."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:114
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:114
msgid ""
"VMware allows you to present UEFI firmware to guests (instead of the "
"ordinary PC BIOS).  Virt-v2v can convert these guests, but requires that "
"UEFI is supported by the target hypervisor."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:118
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:118
msgid ""
"Currently KVM supports OVMF, an open source UEFI firmware, and can run these "
"guests."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:121
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:121
msgid ""
"Since OVMF support was only recently added to KVM (in 2014/2015), not all "
"target environments support UEFI guests yet:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:126
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:126
msgid "UEFI on libvirt, qemu"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:128
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:128
msgid ""
"Supported.  Virt-v2v will generate the correct libvirt XML (metadata)  "
"automatically, but note that the same version of OVMF must be installed on "
"the conversion host as is installed on the target hypervisor, else you will "
"have to adjust paths in the metadata."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:133
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:133
msgid "UEFI on OpenStack"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:135
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:135
msgid "Not supported."
msgstr ""

#. type: =item
#: ../docs/virt-v2v-support.pod:137
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:137
msgid "UEFI on oVirt or RHV"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:139
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:139
msgid "Supported since oVirt/RHV E<ge> 4.2 and virt-v2v E<ge> 1.39.12."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v-support.pod:145
#: ../virt-v2v-1.42.0/docs/virt-v2v-support.pod:145
msgid "L<virt-v2v(1)>, L<http://libguestfs.org>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:3 ../virt-v2v-1.42.0/docs/virt-v2v.pod:3
msgid "virt-v2v - Convert a guest to use KVM"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:7 ../virt-v2v-1.42.0/docs/virt-v2v.pod:7
#, no-wrap
msgid ""
" virt-v2v [-i mode] [other -i* options]\n"
"          [-o mode] [other -o* options]\n"
"          [guest|filename]\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:11 ../virt-v2v-1.42.0/docs/virt-v2v.pod:11
#, no-wrap
msgid ""
" virt-v2v --in-place\n"
"          [-i mode] [other -i* options]\n"
"          [guest|filename]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:17 ../virt-v2v-1.42.0/docs/virt-v2v.pod:17
msgid ""
"Virt-v2v converts a single guest from a foreign hypervisor to run on KVM.  "
"It can read Linux and Windows guests running on VMware, Xen, Hyper-V and "
"some other hypervisors, and convert them to KVM managed by libvirt, "
"OpenStack, oVirt, Red Hat Virtualisation (RHV) or several other targets.  It "
"can modify the guest to make it bootable on KVM and install virtio drivers "
"so it will run quickly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:24 ../virt-v2v-1.42.0/docs/virt-v2v.pod:24
msgid ""
"There is also a companion front-end called L<virt-p2v(1)> which comes as an "
"ISO, CD or PXE image that can be booted on physical machines to virtualize "
"those machines (physical to virtual, or p2v)."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:28 ../virt-v2v-1.42.0/docs/virt-v2v.pod:28
msgid "Input and Output"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:30 ../virt-v2v-1.42.0/docs/virt-v2v.pod:30
msgid ""
"You normally run virt-v2v with several I<-i*> options controlling the input "
"mode and also several I<-o*> options controlling the output mode.  In this "
"sense, \"input\" refers to the source foreign hypervisor such as VMware, and "
"\"output\" refers to the target KVM-based management system such as oVirt or "
"OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:36 ../virt-v2v-1.42.0/docs/virt-v2v.pod:36
msgid ""
"The input and output sides of virt-v2v are separate and unrelated.  Virt-v2v "
"can read from any input and write to any output.  Therefore these sides of "
"virt-v2v are documented separately in this manual."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:40 ../virt-v2v-1.42.0/docs/virt-v2v.pod:40
msgid ""
"Virt-v2v normally copies from the input to the output, called \"copying mode"
"\".  In this case the source guest is always left unchanged.  In-place "
"conversion (I<--in-place>) only uses the I<-i*> options and modifies the "
"source guest in-place.  (See L</In-place conversion> below.)"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:46 ../virt-v2v-1.42.0/docs/virt-v2v.pod:46
msgid "Other virt-v2v topics"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:48 ../virt-v2v-1.42.0/docs/virt-v2v.pod:48
msgid ""
"L<virt-v2v-support(1)> — Supported hypervisors, virtualization management "
"systems, guests."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:51 ../virt-v2v-1.42.0/docs/virt-v2v.pod:51
msgid "L<virt-v2v-input-vmware(1)> — Input from VMware."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:53 ../virt-v2v-1.42.0/docs/virt-v2v.pod:53
msgid "L<virt-v2v-input-xen(1)> — Input from Xen."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:55 ../virt-v2v-1.42.0/docs/virt-v2v.pod:55
msgid "L<virt-v2v-output-local(1)> — Output to local files or local libvirt."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:57 ../virt-v2v-1.42.0/docs/virt-v2v.pod:57
msgid "L<virt-v2v-output-rhv(1)> — Output to oVirt or RHV."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:59 ../virt-v2v-1.42.0/docs/virt-v2v.pod:59
msgid "L<virt-v2v-output-openstack(1)> — Output to OpenStack."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:61 ../virt-v2v-1.42.0/docs/virt-v2v.pod:61
msgid "L<virt-v2v-release-notes-1.42(1)> — Release notes for this release."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:63 ../virt-v2v-1.42.0/docs/virt-v2v.pod:63
msgid ""
"L<virt-v2v-copy-to-local(1)> — Deprecated tool to handle Xen guests using "
"host block device storage."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:68 ../virt-v2v-1.42.0/docs/virt-v2v.pod:68
msgid "Convert from VMware vCenter server to local libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:70 ../virt-v2v-1.42.0/docs/virt-v2v.pod:70
msgid ""
"You have a VMware vCenter server called C<vcenter.example.com>, a datacenter "
"called C<Datacenter>, and an ESXi hypervisor called C<esxi>.  You want to "
"convert a guest called C<vmware_guest> to run locally under libvirt."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:75 ../virt-v2v-1.42.0/docs/virt-v2v.pod:75
#, no-wrap
msgid ""
" virt-v2v -ic vpx://vcenter.example.com/Datacenter/esxi vmware_guest\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:77 ../virt-v2v-1.42.0/docs/virt-v2v.pod:77
msgid ""
"In this case you will most likely have to run virt-v2v as C<root>, since it "
"needs to talk to the system libvirt daemon and copy the guest disks to F</"
"var/lib/libvirt/images>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:81 ../virt-v2v-1.42.0/docs/virt-v2v.pod:81
msgid "For more information see L<virt-v2v-input-vmware(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:83 ../virt-v2v-1.42.0/docs/virt-v2v.pod:83
msgid "Convert from VMware to RHV/oVirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:85 ../virt-v2v-1.42.0/docs/virt-v2v.pod:85
msgid ""
"This is the same as the previous example, except you want to send the guest "
"to a RHV Data Domain using the RHV REST API.  Guest network interface(s) are "
"connected to the target network called C<ovirtmgmt>."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:89 ../virt-v2v-1.42.0/docs/virt-v2v.pod:89
#, no-wrap
msgid ""
" virt-v2v -ic vpx://vcenter.example.com/Datacenter/esxi vmware_guest \\\n"
"   -o rhv-upload -oc https://ovirt-engine.example.com/ovirt-engine/api \\\n"
"   -os ovirt-data -op /tmp/ovirt-admin-password -of raw \\\n"
"   -oo rhv-cafile=/tmp/ca.pem -oo rhv-direct \\\n"
"   --bridge ovirtmgmt\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:95 ../virt-v2v-1.42.0/docs/virt-v2v.pod:95
msgid "In this case the host running virt-v2v acts as a B<conversion server>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:97 ../virt-v2v-1.42.0/docs/virt-v2v.pod:97
msgid "For more information see L<virt-v2v-output-rhv(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:99 ../virt-v2v-1.42.0/docs/virt-v2v.pod:99
msgid "Convert from ESXi hypervisor over SSH to local libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:101 ../virt-v2v-1.42.0/docs/virt-v2v.pod:101
msgid ""
"You have an ESXi hypervisor called C<esxi.example.com> with SSH access "
"enabled.  You want to convert from VMFS storage on that server to a local "
"file."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:105 ../virt-v2v-1.42.0/docs/virt-v2v.pod:105
#, no-wrap
msgid ""
" virt-v2v \\\n"
"   -i vmx -it ssh \\\n"
"   \"ssh://root@esxi.example.com/vmfs/volumes/datastore1/guest/guest.vmx\" \\\n"
"   -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:110 ../virt-v2v-1.42.0/docs/virt-v2v.pod:110
msgid ""
"The guest must not be running.  Virt-v2v would I<not> need to be run as root "
"in this case."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:113 ../virt-v2v-1.42.0/docs/virt-v2v.pod:113
msgid ""
"For more information about converting from VMX files see L<virt-v2v-input-"
"vmware(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:116 ../virt-v2v-1.42.0/docs/virt-v2v.pod:116
msgid "Convert disk image to OpenStack"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:118 ../virt-v2v-1.42.0/docs/virt-v2v.pod:118
msgid ""
"Given a disk image from another hypervisor that you want to convert to run "
"on OpenStack (only KVM-based OpenStack is supported), you can run virt-v2v "
"inside an OpenStack VM (called C<v2v-vm> below), and do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:122 ../virt-v2v-1.42.0/docs/virt-v2v.pod:122
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o openstack -oo server-id=v2v-vm\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:124 ../virt-v2v-1.42.0/docs/virt-v2v.pod:124
msgid "See L<virt-v2v-output-openstack(1)>."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:126 ../virt-v2v-1.42.0/docs/virt-v2v.pod:126
msgid "Convert disk image to disk image"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:128 ../virt-v2v-1.42.0/docs/virt-v2v.pod:128
msgid ""
"Given a disk image from another hypervisor that you want to convert to run "
"on KVM, you have two options.  The simplest way is to try:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:131 ../virt-v2v-1.42.0/docs/virt-v2v.pod:131
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:133 ../virt-v2v-1.42.0/docs/virt-v2v.pod:133
msgid ""
"where virt-v2v guesses everything about the input F<disk.img> and (in this "
"case) writes the converted result to F</var/tmp>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:136 ../virt-v2v-1.42.0/docs/virt-v2v.pod:136
msgid ""
"A more complex method is to write some L<libvirt XML|http://libvirt.org/"
"formatdomain.html> describing the input guest (if you can get the source "
"hypervisor to provide you with libvirt XML, then so much the better).  You "
"can then do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:141 ../virt-v2v-1.42.0/docs/virt-v2v.pod:141
#, no-wrap
msgid ""
" virt-v2v -i libvirtxml guest-domain.xml -o local -os /var/tmp\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:143 ../virt-v2v-1.42.0/docs/virt-v2v.pod:143
msgid ""
"Since F<guest-domain.xml> contains the path(s) to the guest disk image(s) "
"you do not need to specify the name of the disk image on the command line."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:147 ../virt-v2v-1.42.0/docs/virt-v2v.pod:147
msgid ""
"To convert a local disk image and immediately boot it in local qemu, do:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:150 ../virt-v2v-1.42.0/docs/virt-v2v.pod:150
#, no-wrap
msgid ""
" virt-v2v -i disk disk.img -o qemu -os /var/tmp --qemu-boot\n"
"\n"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:160 ../virt-v2v-1.42.0/docs/virt-v2v.pod:160
msgid "B<--bandwidth> bps"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:162 ../virt-v2v-1.42.0/docs/virt-v2v.pod:162
#, fuzzy
#| msgid ""
#| " disk-has-backing-file filename\n"
#| "\n"
msgid "B<--bandwidth-file> filename"
msgstr ""
" disk-has-backing-file filename\n"
"\n"

#. type: textblock
#: ../docs/virt-v2v.pod:164 ../virt-v2v-1.42.0/docs/virt-v2v.pod:164
msgid ""
"Some input methods are able to limit the network bandwidth they will use "
"statically or dynamically.  In the first variant this sets the bandwidth "
"limit statically in bits per second.  Formats like C<10M> may be used "
"(meaning 10 megabits per second)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:169 ../virt-v2v-1.42.0/docs/virt-v2v.pod:169
msgid ""
"In the second variant the bandwidth is limited dynamically from the content "
"of the file (also in bits per second, in the same formats supported by the "
"first variant).  You may use both parameters together, meaning: first limit "
"to a static rate, then you can create the file while virt-v2v is running to "
"adjust the rate dynamically."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:175 ../virt-v2v-1.42.0/docs/virt-v2v.pod:175
msgid "This is only supported for:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:181 ../virt-v2v-1.42.0/docs/virt-v2v.pod:181
msgid "L<input from Xen|virt-v2v-input-xen(1)>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:185 ../virt-v2v-1.42.0/docs/virt-v2v.pod:185
msgid ""
"L<input from VMware VMX|virt-v2v-input-vmware(1)/INPUT FROM VMWARE VMX> when "
"using the SSH transport method"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:190 ../virt-v2v-1.42.0/docs/virt-v2v.pod:190
msgid "L<input from VDDK|virt-v2v-input-vmware(1)/INPUT FROM VDDK>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:194 ../virt-v2v-1.42.0/docs/virt-v2v.pod:194
msgid "I<-i libvirtxml> when using HTTP or HTTPS disks"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:198 ../virt-v2v-1.42.0/docs/virt-v2v.pod:198
msgid ""
"L<input from VMware vCenter server|virt-v2v-input-vmware(1)/INPUT FROM "
"VMWARE VCENTER SERVER>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:202 ../virt-v2v-1.42.0/docs/virt-v2v.pod:202
msgid "The options are silently ignored for other input methods."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:204 ../virt-v2v-1.42.0/docs/virt-v2v.pod:204
msgid "B<-b> ..."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:206 ../virt-v2v-1.42.0/docs/virt-v2v.pod:206
msgid "B<--bridge> ..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:208 ../virt-v2v-1.42.0/docs/virt-v2v.pod:208
msgid "See I<--network> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:210 ../virt-v2v-1.42.0/docs/virt-v2v.pod:210
msgid "B<--colors>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:212 ../virt-v2v-1.42.0/docs/virt-v2v.pod:212
msgid "B<--colours>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:214 ../virt-v2v-1.42.0/docs/virt-v2v.pod:214
msgid ""
"Use ANSI colour sequences to colourize messages.  This is the default when "
"the output is a tty.  If the output of the program is redirected to a file, "
"ANSI colour sequences are disabled unless you use this option."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:219 ../virt-v2v-1.42.0/docs/virt-v2v.pod:219
msgid "B<--compressed>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:221 ../virt-v2v-1.42.0/docs/virt-v2v.pod:221
msgid ""
"Write a compressed output file.  This is only allowed if the output format "
"is qcow2 (see I<-of> below), and is equivalent to the I<-c> option of L<qemu-"
"img(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:225 ../virt-v2v-1.42.0/docs/virt-v2v.pod:225
msgid "B<--debug-overlays>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:227 ../virt-v2v-1.42.0/docs/virt-v2v.pod:227
msgid ""
"Save the overlay file(s) created during conversion.  This option is only "
"used for debugging virt-v2v and may be removed in a future version."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:231 ../virt-v2v-1.42.0/docs/virt-v2v.pod:231
msgid "B<--echo-keys>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:233 ../virt-v2v-1.42.0/docs/virt-v2v.pod:233
msgid ""
"When prompting for keys and passphrases, virt-v2v normally turns echoing off "
"so you cannot see what you are typing.  If you are not worried about Tempest "
"attacks and there is no one else in the room you can specify this flag to "
"see what you are typing."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:238 ../docs/virt-v2v.pod:390
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:238
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:390
msgid ""
"Note this options only applies to keys and passphrases for encrypted devices "
"and partitions, not for passwords used to connect to remote servers."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:242 ../virt-v2v-1.42.0/docs/virt-v2v.pod:242
msgid "B<-i> B<disk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:244 ../virt-v2v-1.42.0/docs/virt-v2v.pod:244
msgid "Set the input method to I<disk>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:246 ../virt-v2v-1.42.0/docs/virt-v2v.pod:246
msgid ""
"In this mode you can read a virtual machine disk image with no metadata.  "
"virt-v2v tries to guess the best default metadata.  This is usually adequate "
"but you can get finer control (eg. of memory and vCPUs) by using I<-i "
"libvirtxml> instead.  Only guests that use a single disk can be imported "
"this way."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:252 ../virt-v2v-1.42.0/docs/virt-v2v.pod:252
msgid "B<-i> B<libvirt>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:254 ../virt-v2v-1.42.0/docs/virt-v2v.pod:254
msgid "Set the input method to I<libvirt>.  This is the default."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:256 ../virt-v2v-1.42.0/docs/virt-v2v.pod:256
msgid ""
"In this mode you have to specify a libvirt guest name or UUID on the command "
"line.  You may also specify a libvirt connection URI (see I<-ic>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:260 ../virt-v2v-1.42.0/docs/virt-v2v.pod:260
msgid "B<-i> B<libvirtxml>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:262 ../virt-v2v-1.42.0/docs/virt-v2v.pod:262
msgid "Set the input method to I<libvirtxml>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:264 ../virt-v2v-1.42.0/docs/virt-v2v.pod:264
msgid ""
"In this mode you have to pass a libvirt XML file on the command line.  This "
"file is read in order to get metadata about the source guest (such as its "
"name, amount of memory), and also to locate the input disks.  See L</Minimal "
"XML for -i libvirtxml option> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:269 ../virt-v2v-1.42.0/docs/virt-v2v.pod:269
msgid "B<-i> B<local>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:271 ../virt-v2v-1.42.0/docs/virt-v2v.pod:271
msgid "This is the same as I<-i disk>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:273 ../virt-v2v-1.42.0/docs/virt-v2v.pod:273
msgid "B<-i> B<ova>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:275 ../virt-v2v-1.42.0/docs/virt-v2v.pod:275
msgid "Set the input method to I<ova>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:277 ../virt-v2v-1.42.0/docs/virt-v2v.pod:277
msgid ""
"In this mode you can read a VMware ova file.  Virt-v2v will read the ova "
"manifest file and check the vmdk volumes for validity (checksums)  as well "
"as analyzing the ovf file, and then convert the guest.  See L<virt-v2v-input-"
"vmware(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:282 ../virt-v2v-1.42.0/docs/virt-v2v.pod:282
msgid "B<-i> B<vmx>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:284 ../virt-v2v-1.42.0/docs/virt-v2v.pod:284
msgid "Set the input method to I<vmx>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:286 ../virt-v2v-1.42.0/docs/virt-v2v.pod:286
msgid ""
"In this mode you can read a VMware vmx file directly or over SSH.  This is "
"useful when VMware VMs are stored on an NFS server which you can mount "
"directly, or where you have access by SSH to an ESXi hypervisor.  See L<virt-"
"v2v-input-vmware(1)>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:293 ../virt-v2v-1.42.0/docs/virt-v2v.pod:293
msgid ""
"Specify a libvirt connection URI to use when reading the guest.  This is "
"only used when S<I<-i libvirt>>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:296 ../virt-v2v-1.42.0/docs/virt-v2v.pod:296
msgid ""
"Only local libvirt connections, VMware vCenter connections, or RHEL 5 Xen "
"remote connections can be used.  Other remote libvirt connections will not "
"work in general."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:300 ../virt-v2v-1.42.0/docs/virt-v2v.pod:300
msgid "See also L<virt-v2v-input-vmware(1)>, L<virt-v2v-input-xen(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:303 ../virt-v2v-1.42.0/docs/virt-v2v.pod:303
msgid "B<-if> format"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:305 ../virt-v2v-1.42.0/docs/virt-v2v.pod:305
msgid ""
"For I<-i disk> only, this specifies the format of the input disk image.  For "
"other input methods you should specify the input format in the metadata."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:309 ../virt-v2v-1.42.0/docs/virt-v2v.pod:309
msgid "B<--in-place>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:311 ../virt-v2v-1.42.0/docs/virt-v2v.pod:311
msgid ""
"Do not create an output virtual machine in the target hypervisor.  Instead, "
"adjust the guest OS in the source VM to run in the input hypervisor."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:315 ../virt-v2v-1.42.0/docs/virt-v2v.pod:315
msgid ""
"This mode is meant for integration with other toolsets, which take the "
"responsibility of converting the VM configuration, providing for rollback in "
"case of errors, transforming the storage, etc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:319 ../virt-v2v-1.42.0/docs/virt-v2v.pod:319
msgid "See L</In-place conversion> below."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:321 ../virt-v2v-1.42.0/docs/virt-v2v.pod:321
msgid "Conflicts with all I<-o *> options."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:323 ../virt-v2v-1.42.0/docs/virt-v2v.pod:323
msgid "B<-io> OPTION=VALUE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:325 ../virt-v2v-1.42.0/docs/virt-v2v.pod:325
msgid ""
"Set input option(s) related to the current input mode or transport.  To "
"display short help on what options are available you can use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:328 ../virt-v2v-1.42.0/docs/virt-v2v.pod:328
#, no-wrap
msgid ""
" virt-v2v -it vddk -io \"?\"\n"
"\n"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:330 ../virt-v2v-1.42.0/docs/virt-v2v.pod:330
msgid "B<-io vddk-libdir=>LIBDIR"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:332 ../virt-v2v-1.42.0/docs/virt-v2v.pod:332
msgid ""
"Set the VDDK library directory.  This directory should I<contain> "
"subdirectories called F<include>, F<lib64> etc., but do not include F<lib64> "
"actually in the parameter."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:336 ../virt-v2v-1.42.0/docs/virt-v2v.pod:336
msgid ""
"In most cases this parameter is required when using the I<-it vddk> (VDDK) "
"transport.  See L<virt-v2v-input-vmware(1)> for details."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:339 ../virt-v2v-1.42.0/docs/virt-v2v.pod:339
msgid "B<-io vddk-thumbprint=>xx:xx:xx:..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:341 ../virt-v2v-1.42.0/docs/virt-v2v.pod:341
msgid "Set the thumbprint of the remote VMware server."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:343 ../virt-v2v-1.42.0/docs/virt-v2v.pod:343
msgid ""
"This parameter is required when using the I<-it vddk> (VDDK) transport.  See "
"L<virt-v2v-input-vmware(1)> for details."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:346 ../virt-v2v-1.42.0/docs/virt-v2v.pod:346
msgid "B<-io vddk-config=>FILENAME"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:348 ../virt-v2v-1.42.0/docs/virt-v2v.pod:348
msgid "B<-io vddk-cookie=>COOKIE"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:350 ../virt-v2v-1.42.0/docs/virt-v2v.pod:350
msgid "B<-io vddk-nfchostport=>PORT"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:352 ../virt-v2v-1.42.0/docs/virt-v2v.pod:352
msgid "B<-io vddk-port=>PORT"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:354 ../virt-v2v-1.42.0/docs/virt-v2v.pod:354
msgid "B<-io vddk-snapshot=>SNAPSHOT-MOREF"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:356 ../virt-v2v-1.42.0/docs/virt-v2v.pod:356
msgid "B<-io vddk-transports=>MODE:MODE:..."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:358 ../virt-v2v-1.42.0/docs/virt-v2v.pod:358
msgid ""
"When using VDDK mode, these options are passed unmodified to the "
"L<nbdkit(1)> VDDK plugin.  Please refer to L<nbdkit-vddk-plugin(1)>.  Do not "
"use these options unless you know what you are doing.  These are all "
"optional."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:363 ../virt-v2v-1.42.0/docs/virt-v2v.pod:363
msgid "B<-ip> filename"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:365 ../virt-v2v-1.42.0/docs/virt-v2v.pod:365
msgid ""
"Supply a file containing a password to be used when connecting to the target "
"hypervisor.  If this is omitted then the input hypervisor may ask for the "
"password interactively.  Note the file should contain the whole password, "
"B<without any trailing newline>, and for security the file should have mode "
"C<0600> so that others cannot read it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:371 ../virt-v2v-1.42.0/docs/virt-v2v.pod:371
msgid "B<-it> B<ssh>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:373 ../virt-v2v-1.42.0/docs/virt-v2v.pod:373
msgid ""
"When using I<-i vmx>, this enables the ssh transport.  See L<virt-v2v-input-"
"vmware(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:376 ../virt-v2v-1.42.0/docs/virt-v2v.pod:376
msgid "B<-it> B<vddk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:378 ../virt-v2v-1.42.0/docs/virt-v2v.pod:378
msgid ""
"Use VMware VDDK as a transport to copy the input disks.  See L<virt-v2v-"
"input-vmware(1)>.  If you use this parameter then you may need to use other "
"I<-io vddk*> options to specify how to connect through VDDK."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:383 ../virt-v2v-1.42.0/docs/virt-v2v.pod:383
msgid "__INCLUDE:key-option.pod__"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:385 ../virt-v2v-1.42.0/docs/virt-v2v.pod:385
msgid "B<--keys-from-stdin>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:387 ../virt-v2v-1.42.0/docs/virt-v2v.pod:387
msgid ""
"Read key or passphrase parameters from stdin.  The default is to try to read "
"passphrases from the user by opening F</dev/tty>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:394 ../virt-v2v-1.42.0/docs/virt-v2v.pod:394
msgid "B<--mac> aa:bb:cc:dd:ee:ffB<:network:>out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:396 ../virt-v2v-1.42.0/docs/virt-v2v.pod:396
msgid "B<--mac> aa:bb:cc:dd:ee:ffB<:bridge:>out"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:398 ../virt-v2v-1.42.0/docs/virt-v2v.pod:398
msgid "Map source NIC MAC address to a network or bridge."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:400 ../docs/virt-v2v.pod:448
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:400
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:448
msgid "See L</Networks and bridges> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:402 ../virt-v2v-1.42.0/docs/virt-v2v.pod:402
msgid "B<--mac> aa:bb:cc:dd:ee:ffB<:ip:>ipaddr[,gw[,len[,ns,ns,...]]]"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:404 ../virt-v2v-1.42.0/docs/virt-v2v.pod:404
msgid ""
"Force a particular interface (controlled by its MAC address) to have a "
"static IP address after boot."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:407 ../virt-v2v-1.42.0/docs/virt-v2v.pod:407
msgid ""
"The fields in the parameter are: C<ipaddr> is the IP address.  C<gw> is the "
"optional gateway IP address.  C<len> is the subnet mask length (an "
"integer).  The final parameters are zero or more nameserver IP addresses."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:412 ../virt-v2v-1.42.0/docs/virt-v2v.pod:412
msgid "This option can be supplied zero or more times."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:414 ../virt-v2v-1.42.0/docs/virt-v2v.pod:414
msgid ""
"You only need to use this option for certain broken guests such as Windows "
"which are unable to preserve MAC to static IP address mappings "
"automatically.  You don't need to use it if Windows is using DHCP.  It is "
"currently ignored for Linux guests since they do not have this problem."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:420 ../virt-v2v-1.42.0/docs/virt-v2v.pod:420
msgid "B<--machine-readable>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:422 ../virt-v2v-1.42.0/docs/virt-v2v.pod:422
msgid "B<--machine-readable>=format"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:424 ../virt-v2v-1.42.0/docs/virt-v2v.pod:424
msgid ""
"This option is used to make the output more machine friendly when being "
"parsed by other programs.  See L</Machine readable output> below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:428 ../virt-v2v-1.42.0/docs/virt-v2v.pod:428
msgid "B<-n> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:430 ../virt-v2v-1.42.0/docs/virt-v2v.pod:430
msgid "B<-n> out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:432 ../virt-v2v-1.42.0/docs/virt-v2v.pod:432
msgid "B<--network> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:434 ../virt-v2v-1.42.0/docs/virt-v2v.pod:434
msgid "B<--network> out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:436 ../virt-v2v-1.42.0/docs/virt-v2v.pod:436
msgid "B<-b> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:438 ../virt-v2v-1.42.0/docs/virt-v2v.pod:438
msgid "B<-b> out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:440 ../virt-v2v-1.42.0/docs/virt-v2v.pod:440
msgid "B<--bridge> in:out"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:442 ../virt-v2v-1.42.0/docs/virt-v2v.pod:442
msgid "B<--bridge> out"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:444 ../virt-v2v-1.42.0/docs/virt-v2v.pod:444
msgid ""
"Map network (or bridge) called C<in> to network (or bridge) called C<out>.  "
"If no C<in:> prefix is given, all other networks (or bridges)  are mapped to "
"C<out>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:450 ../virt-v2v-1.42.0/docs/virt-v2v.pod:450
msgid "B<--no-copy>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:452 ../virt-v2v-1.42.0/docs/virt-v2v.pod:452
msgid ""
"Don’t copy the disks.  Instead, conversion is performed (and thrown away), "
"and metadata is written, but no disks are created.  See also discussion of "
"S<I<-o null>> below."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:456 ../virt-v2v-1.42.0/docs/virt-v2v.pod:456
msgid ""
"This is useful in two cases: Either you want to test if conversion is likely "
"to succeed, without the long copying process.  Or you are only interested in "
"looking at the metadata."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:460 ../virt-v2v-1.42.0/docs/virt-v2v.pod:460
msgid ""
"This option is not compatible with I<-o libvirt> since it would create a "
"faulty guest (one with no disks)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:463 ../virt-v2v-1.42.0/docs/virt-v2v.pod:463
msgid "This option is not compatible with I<-o glance> for technical reasons."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:465 ../virt-v2v-1.42.0/docs/virt-v2v.pod:465
msgid "B<-o> B<disk>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:467 ../virt-v2v-1.42.0/docs/virt-v2v.pod:467
msgid "This is the same as I<-o local>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:469 ../virt-v2v-1.42.0/docs/virt-v2v.pod:469
msgid "B<-o> B<glance>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:471 ../virt-v2v-1.42.0/docs/virt-v2v.pod:471
msgid ""
"This is a legacy option.  You should probably use I<-o openstack> instead."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:474 ../virt-v2v-1.42.0/docs/virt-v2v.pod:474
msgid ""
"Set the output method to OpenStack Glance.  In this mode the converted guest "
"is uploaded to Glance.  See L<virt-v2v-output-openstack(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:477 ../virt-v2v-1.42.0/docs/virt-v2v.pod:477
msgid "B<-o> B<json>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:479 ../virt-v2v-1.42.0/docs/virt-v2v.pod:479
msgid "Set the output method to I<json>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:481 ../virt-v2v-1.42.0/docs/virt-v2v.pod:481
msgid ""
"In this mode, the converted guest is written to a local directory specified "
"by I<-os /dir> (the directory must exist), with a JSON file containing the "
"majority of the metadata that virt-v2v gathered during the conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:486 ../docs/virt-v2v.pod:495
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:486
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:495
msgid "See L<virt-v2v-output-local(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:488 ../virt-v2v-1.42.0/docs/virt-v2v.pod:488
msgid "B<-o> B<libvirt>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:490 ../virt-v2v-1.42.0/docs/virt-v2v.pod:490
msgid "Set the output method to I<libvirt>.  This is the default."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:492 ../virt-v2v-1.42.0/docs/virt-v2v.pod:492
msgid ""
"In this mode, the converted guest is created as a libvirt guest.  You may "
"also specify a libvirt connection URI (see I<-oc>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:497 ../virt-v2v-1.42.0/docs/virt-v2v.pod:497
msgid "B<-o> B<local>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:499 ../virt-v2v-1.42.0/docs/virt-v2v.pod:499
msgid "Set the output method to I<local>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:501 ../virt-v2v-1.42.0/docs/virt-v2v.pod:501
msgid ""
"In this mode, the converted guest is written to a local directory specified "
"by I<-os /dir> (the directory must exist).  The converted guest’s disks are "
"written as:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:505 ../virt-v2v-1.42.0/docs/virt-v2v.pod:505
#, no-wrap
msgid ""
" /dir/name-sda\n"
" /dir/name-sdb\n"
" [etc]\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:509 ../virt-v2v-1.42.0/docs/virt-v2v.pod:509
msgid "and a libvirt XML file is created containing guest metadata:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:511 ../virt-v2v-1.42.0/docs/virt-v2v.pod:511
#, no-wrap
msgid ""
" /dir/name.xml\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:513 ../virt-v2v-1.42.0/docs/virt-v2v.pod:513
msgid "where C<name> is the guest name."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:515 ../virt-v2v-1.42.0/docs/virt-v2v.pod:515
msgid "B<-o> B<null>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:517 ../virt-v2v-1.42.0/docs/virt-v2v.pod:517
msgid "Set the output method to I<null>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:519 ../virt-v2v-1.42.0/docs/virt-v2v.pod:519
msgid ""
"The guest is converted and copied (unless you also specify I<--no-copy>), "
"but the results are thrown away and no metadata is written."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:523 ../virt-v2v-1.42.0/docs/virt-v2v.pod:523
msgid "B<-o> B<openstack>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:525 ../virt-v2v-1.42.0/docs/virt-v2v.pod:525
msgid ""
"Set the output method to OpenStack.  See L<virt-v2v-output-openstack(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:527 ../virt-v2v-1.42.0/docs/virt-v2v.pod:527
msgid "B<-o> B<ovirt>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:529 ../docs/virt-v2v.pod:548
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:529
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:548
msgid "This is the same as I<-o rhv>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:531 ../virt-v2v-1.42.0/docs/virt-v2v.pod:531
msgid "B<-o> B<ovirt-upload>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:533 ../virt-v2v-1.42.0/docs/virt-v2v.pod:533
msgid "This is the same as I<-o rhv-upload>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:535 ../virt-v2v-1.42.0/docs/virt-v2v.pod:535
msgid "B<-o> B<qemu>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:537 ../virt-v2v-1.42.0/docs/virt-v2v.pod:537
msgid "Set the output method to I<qemu>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:539 ../virt-v2v-1.42.0/docs/virt-v2v.pod:539
msgid ""
"This is similar to I<-o local>, except that a shell script is written which "
"you can use to boot the guest in qemu.  The converted disks and shell script "
"are written to the directory specified by I<-os>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:543 ../virt-v2v-1.42.0/docs/virt-v2v.pod:543
msgid ""
"When using this output mode, you can also specify the I<--qemu-boot> option "
"which boots the guest under qemu immediately."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:546 ../virt-v2v-1.42.0/docs/virt-v2v.pod:546
msgid "B<-o> B<rhev>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:550 ../virt-v2v-1.42.0/docs/virt-v2v.pod:550
msgid "B<-o> B<rhv>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:552 ../virt-v2v-1.42.0/docs/virt-v2v.pod:552
msgid "Set the output method to I<rhv>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:554 ../virt-v2v-1.42.0/docs/virt-v2v.pod:554
msgid ""
"The converted guest is written to a RHV Export Storage Domain.  The I<-os> "
"parameter must also be used to specify the location of the Export Storage "
"Domain.  Note this does not actually import the guest into RHV.  You have to "
"do that manually later using the UI."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:559 ../docs/virt-v2v.pod:569
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:559
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:569
msgid "See L<virt-v2v-output-rhv(1)>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:561 ../virt-v2v-1.42.0/docs/virt-v2v.pod:561
msgid "B<-o> B<rhv-upload>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:563 ../virt-v2v-1.42.0/docs/virt-v2v.pod:563
msgid "Set the output method to I<rhv-upload>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:565 ../virt-v2v-1.42.0/docs/virt-v2v.pod:565
msgid ""
"The converted guest is written directly to a RHV Data Domain.  This is a "
"faster method than I<-o rhv>, but requires oVirt or RHV E<ge> 4.2."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:571 ../virt-v2v-1.42.0/docs/virt-v2v.pod:571
msgid "B<-o> B<vdsm>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:573 ../virt-v2v-1.42.0/docs/virt-v2v.pod:573
msgid "Set the output method to I<vdsm>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:575 ../virt-v2v-1.42.0/docs/virt-v2v.pod:575
msgid ""
"This mode is similar to I<-o rhv>, but the full path to the data domain must "
"be given: F</rhv/data-center/E<lt>data-center-uuidE<gt>/E<lt>data-domain-"
"uuidE<gt>>.  This mode is only used when virt-v2v runs under VDSM control."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:580 ../virt-v2v-1.42.0/docs/virt-v2v.pod:580
msgid "B<-oa> B<sparse>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:582 ../virt-v2v-1.42.0/docs/virt-v2v.pod:582
msgid "B<-oa> B<preallocated>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:584 ../virt-v2v-1.42.0/docs/virt-v2v.pod:584
msgid "Set the output file allocation mode.  The default is C<sparse>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:586 ../virt-v2v-1.42.0/docs/virt-v2v.pod:586
msgid "B<-oc> URI"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:588 ../virt-v2v-1.42.0/docs/virt-v2v.pod:588
msgid "Specify a connection URI to use when writing the converted guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:590 ../virt-v2v-1.42.0/docs/virt-v2v.pod:590
msgid ""
"For S<I<-o libvirt>> this is the libvirt URI.  Only local libvirt "
"connections can be used.  Remote libvirt connections will not work.  See "
"L<virt-v2v-output-local(1)> for further information."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:594 ../virt-v2v-1.42.0/docs/virt-v2v.pod:594
msgid "B<-of> format"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:596 ../virt-v2v-1.42.0/docs/virt-v2v.pod:596
msgid "When converting the guest, convert the disks to the given format."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:598 ../virt-v2v-1.42.0/docs/virt-v2v.pod:598
msgid "If not specified, then the input format is used."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:600 ../virt-v2v-1.42.0/docs/virt-v2v.pod:600
msgid "B<-on> name"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:602 ../virt-v2v-1.42.0/docs/virt-v2v.pod:602
msgid ""
"Rename the guest when converting it.  If this option is not used then the "
"output name is the same as the input name."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:605 ../virt-v2v-1.42.0/docs/virt-v2v.pod:605
msgid "B<-oo> OPTION=VALUE"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:607 ../virt-v2v-1.42.0/docs/virt-v2v.pod:607
msgid ""
"Set output option(s) related to the current output mode.  To display short "
"help on what options are available you can use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:610 ../virt-v2v-1.42.0/docs/virt-v2v.pod:610
#, no-wrap
msgid ""
" virt-v2v -o rhv-upload -oo \"?\"\n"
"\n"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:612 ../virt-v2v-1.42.0/docs/virt-v2v.pod:612
msgid "B<-oo guest-id=>C<ID>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:614 ../virt-v2v-1.42.0/docs/virt-v2v.pod:614
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, set a guest ID "
"which is saved on each Cinder volume in the C<virt_v2v_guest_id> volume "
"property."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:618 ../virt-v2v-1.42.0/docs/virt-v2v.pod:618
msgid "B<-oo verify-server-certificate>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:620 ../virt-v2v-1.42.0/docs/virt-v2v.pod:620
msgid "B<-oo verify-server-certificate=>C<true|false>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:622 ../virt-v2v-1.42.0/docs/virt-v2v.pod:622
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, this can be used "
"to disable SSL certification validation when connecting to OpenStack by "
"specifying I<-oo verify-server-certificate=false>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:626 ../virt-v2v-1.42.0/docs/virt-v2v.pod:626
msgid "B<-oo os->*B<=>*"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:628 ../virt-v2v-1.42.0/docs/virt-v2v.pod:628
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, set optional "
"OpenStack authentication.  For example I<-oo os-username=>NAME is equivalent "
"to C<openstack --os-username=NAME>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:632 ../virt-v2v-1.42.0/docs/virt-v2v.pod:632
msgid "B<-oo rhv-cafile=>F<ca.pem>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:634 ../virt-v2v-1.42.0/docs/virt-v2v.pod:634
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, the F<ca.pem> file "
"(Certificate Authority), copied from F</etc/pki/ovirt-engine/ca.pem> on the "
"oVirt engine."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:638 ../virt-v2v-1.42.0/docs/virt-v2v.pod:638
msgid "B<-oo rhv-cluster=>C<CLUSTERNAME>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:640 ../virt-v2v-1.42.0/docs/virt-v2v.pod:640
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, set the RHV Cluster "
"Name.  If not given it uses C<Default>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:643 ../virt-v2v-1.42.0/docs/virt-v2v.pod:643
msgid "B<-oo rhv-direct>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:645 ../virt-v2v-1.42.0/docs/virt-v2v.pod:645
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, if this option is "
"given then virt-v2v will attempt to directly upload the disk to the oVirt "
"node, otherwise it will proxy the upload through the oVirt engine.  Direct "
"upload requires that you have network access to the oVirt nodes.  Non-direct "
"upload is slightly slower but should work in all situations."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:652 ../virt-v2v-1.42.0/docs/virt-v2v.pod:652
msgid "B<-oo rhv-verifypeer>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:654 ../virt-v2v-1.42.0/docs/virt-v2v.pod:654
msgid ""
"For I<-o rhv-upload> (L<virt-v2v-output-rhv(1)>) only, verify the oVirt/RHV "
"server’s identity by checking the server‘s certificate against the "
"Certificate Authority."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:658 ../virt-v2v-1.42.0/docs/virt-v2v.pod:658
msgid "B<-oo server-id=>C<NAME|UUID>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:660 ../virt-v2v-1.42.0/docs/virt-v2v.pod:660
msgid ""
"For I<-o openstack> (L<virt-v2v-output-openstack(1)>) only, set the name of "
"the conversion appliance where virt-v2v is running."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:663 ../virt-v2v-1.42.0/docs/virt-v2v.pod:663
msgid "B<-oo vdsm-compat=0.10>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:665 ../virt-v2v-1.42.0/docs/virt-v2v.pod:665
msgid "B<-oo vdsm-compat=1.1>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:667 ../virt-v2v-1.42.0/docs/virt-v2v.pod:667
msgid ""
"If I<-o vdsm> and the output format is qcow2, then we add the qcow2 "
"I<compat=0.10> option to the output file for compatibility with RHEL 6 (see "
"L<https://bugzilla.redhat.com/1145582>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:671 ../virt-v2v-1.42.0/docs/virt-v2v.pod:671
msgid ""
"If I<-oo vdsm-compat=1.1> is used then modern qcow2 (I<compat=1.1>)  files "
"are generated instead."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:674 ../virt-v2v-1.42.0/docs/virt-v2v.pod:674
msgid ""
"Currently I<-oo vdsm-compat=0.10> is the default, but this will change to I<-"
"oo vdsm-compat=1.1> in a future version of virt-v2v (when we can assume that "
"everyone is using a modern version of qemu)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:678 ../virt-v2v-1.42.0/docs/virt-v2v.pod:678
msgid ""
"B<Note this option only affects I<-o vdsm> output>.  All other output modes "
"(including I<-o rhv>) generate modern qcow2 I<compat=1.1> files, always."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:682 ../virt-v2v-1.42.0/docs/virt-v2v.pod:682
msgid ""
"If this option is available, then C<vdsm-compat-option> will appear in the "
"I<--machine-readable> output."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:685 ../virt-v2v-1.42.0/docs/virt-v2v.pod:685
msgid "B<-oo vdsm-image-uuid=>UUID"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:687 ../virt-v2v-1.42.0/docs/virt-v2v.pod:687
msgid "B<-oo vdsm-vol-uuid=>UUID"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:689 ../virt-v2v-1.42.0/docs/virt-v2v.pod:689
msgid "B<-oo vdsm-vm-uuid=>UUID"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:691 ../virt-v2v-1.42.0/docs/virt-v2v.pod:691
msgid "B<-oo vdsm-ovf-output=>DIR"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:693 ../virt-v2v-1.42.0/docs/virt-v2v.pod:693
msgid ""
"Normally the RHV output mode chooses random UUIDs for the target guest.  "
"However VDSM needs to control the UUIDs and passes these parameters when "
"virt-v2v runs under VDSM control.  The parameters control:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:702 ../virt-v2v-1.42.0/docs/virt-v2v.pod:702
msgid ""
"the image directory of each guest disk (I<-oo vdsm-image-uuid>) (this option "
"is passed once for each guest disk)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:707 ../virt-v2v-1.42.0/docs/virt-v2v.pod:707
msgid ""
"UUIDs for each guest disk (I<-oo vdsm-vol-uuid>) (this option is passed once "
"for each guest disk)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:712 ../virt-v2v-1.42.0/docs/virt-v2v.pod:712
msgid "the OVF file name (I<-oo vdsm-vm-uuid>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:716 ../virt-v2v-1.42.0/docs/virt-v2v.pod:716
msgid ""
"the OVF output directory (default current directory) (I<-oo vdsm-ovf-"
"output>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:720 ../virt-v2v-1.42.0/docs/virt-v2v.pod:720
msgid ""
"The format of UUIDs is: C<12345678-1234-1234-1234-123456789abc> (each hex "
"digit can be C<0-9> or C<a-f>), conforming to S<OSF DCE 1.1>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:723 ../virt-v2v-1.42.0/docs/virt-v2v.pod:723
msgid "These options can only be used with I<-o vdsm>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:725 ../virt-v2v-1.42.0/docs/virt-v2v.pod:725
msgid "B<-oo vdsm-ovf-flavour=>flavour"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:727 ../virt-v2v-1.42.0/docs/virt-v2v.pod:727
msgid ""
"This option controls the format of the OVF generated at the end of "
"conversion.  Currently there are two possible flavours:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:732 ../virt-v2v-1.42.0/docs/virt-v2v.pod:732
msgid "rhvexp"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:734 ../virt-v2v-1.42.0/docs/virt-v2v.pod:734
msgid "The OVF format used in RHV export storage domain."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:736 ../virt-v2v-1.42.0/docs/virt-v2v.pod:736
msgid "ovirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:738 ../virt-v2v-1.42.0/docs/virt-v2v.pod:738
msgid "The OVF format understood by oVirt REST API."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:742 ../virt-v2v-1.42.0/docs/virt-v2v.pod:742
msgid ""
"For backward compatibility the default is I<rhvexp>, but this may change in "
"the future."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:745 ../virt-v2v-1.42.0/docs/virt-v2v.pod:745
msgid "B<-op> file"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:747 ../virt-v2v-1.42.0/docs/virt-v2v.pod:747
msgid ""
"Supply a file containing a password to be used when connecting to the target "
"hypervisor.  Note the file should contain the whole password, B<without any "
"trailing newline>, and for security the file should have mode C<0600> so "
"that others cannot read it."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:752 ../virt-v2v-1.42.0/docs/virt-v2v.pod:752
msgid "B<-os> storage"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:754 ../virt-v2v-1.42.0/docs/virt-v2v.pod:754
msgid "The location of the storage for the converted guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:756 ../virt-v2v-1.42.0/docs/virt-v2v.pod:756
msgid ""
"For I<-o libvirt>, this is a libvirt directory pool (see S<C<virsh pool-"
"list>>) or pool UUID."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:759 ../virt-v2v-1.42.0/docs/virt-v2v.pod:759
msgid ""
"For I<-o json>, I<-o local> and I<-o qemu>, this is a directory name.  The "
"directory must exist."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:762 ../virt-v2v-1.42.0/docs/virt-v2v.pod:762
msgid ""
"For I<-o rhv-upload>, this is the name of the destination Storage Domain."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:765 ../virt-v2v-1.42.0/docs/virt-v2v.pod:765
msgid "For I<-o openstack>, this is the optional Cinder volume type."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:767 ../virt-v2v-1.42.0/docs/virt-v2v.pod:767
msgid ""
"For I<-o rhv>, this can be an NFS path of the Export Storage Domain of the "
"form C<E<lt>hostE<gt>:E<lt>pathE<gt>>, eg:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:770 ../virt-v2v-1.42.0/docs/virt-v2v.pod:770
#, no-wrap
msgid ""
" rhv-storage.example.com:/rhv/export\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:772 ../virt-v2v-1.42.0/docs/virt-v2v.pod:772
msgid ""
"The NFS export must be mountable and writable by the user and host running "
"virt-v2v, since the virt-v2v program has to actually mount it when it runs.  "
"So you probably have to run virt-v2v as C<root>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:776 ../virt-v2v-1.42.0/docs/virt-v2v.pod:776
msgid ""
"B<Or:> You can mount the Export Storage Domain yourself, and point I<-os> to "
"the mountpoint.  Note that virt-v2v will still need to write to this remote "
"directory, so virt-v2v will still need to run as C<root>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:781 ../virt-v2v-1.42.0/docs/virt-v2v.pod:781
msgid ""
"You will get an error if virt-v2v is unable to mount/write to the Export "
"Storage Domain."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:784 ../virt-v2v-1.42.0/docs/virt-v2v.pod:784
msgid "B<--print-estimate>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:786 ../virt-v2v-1.42.0/docs/virt-v2v.pod:786
msgid ""
"Print the estimated size of the data which will be copied from the source "
"disk(s) and stop.  One number (the size in bytes) is printed per disk, and a "
"total:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:790 ../virt-v2v-1.42.0/docs/virt-v2v.pod:790
#, no-wrap
msgid ""
" $ virt-v2v --print-estimate\n"
" ...\n"
" disk 1: 100000\n"
" disk 2: 200000\n"
" total: 300000\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:796 ../virt-v2v-1.42.0/docs/virt-v2v.pod:796
msgid ""
"With the I<--machine-readable> option you get JSON output which can be "
"directed into a file or elsewhere:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:799 ../virt-v2v-1.42.0/docs/virt-v2v.pod:799
#, no-wrap
msgid ""
" $ virt-v2v --print-estimate --machine-readable=file:estimates\n"
" ...\n"
" $ cat estimates\n"
" {\n"
"  \"disks\": [ 100000, 200000 ],\n"
"  \"total\": 300000\n"
" }\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:807 ../virt-v2v-1.42.0/docs/virt-v2v.pod:807
msgid ""
"When using this option you must specify an output mode.  This is because "
"virt-v2v has to perform the conversion in order to print the estimate, and "
"the conversion depends on the output mode.  Using I<-o null> should be safe "
"for most purposes."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:812 ../virt-v2v-1.42.0/docs/virt-v2v.pod:812
msgid ""
"When this option is used along with I<--machine-readable> you can direct the "
"output to an alternate file."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:815 ../virt-v2v-1.42.0/docs/virt-v2v.pod:815
msgid "B<--print-source>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:817 ../virt-v2v-1.42.0/docs/virt-v2v.pod:817
msgid ""
"Print information about the source guest and stop.  This option is useful "
"when you are setting up network and bridge maps.  See L</Networks and "
"bridges>."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:821 ../virt-v2v-1.42.0/docs/virt-v2v.pod:821
msgid "B<--qemu-boot>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:823 ../virt-v2v-1.42.0/docs/virt-v2v.pod:823
msgid ""
"When using I<-o qemu> only, this boots the guest immediately after virt-v2v "
"finishes."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:832 ../virt-v2v-1.42.0/docs/virt-v2v.pod:832
msgid "B<--root ask>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:834 ../virt-v2v-1.42.0/docs/virt-v2v.pod:834
msgid "B<--root single>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:836 ../virt-v2v-1.42.0/docs/virt-v2v.pod:836
msgid "B<--root first>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:838 ../virt-v2v-1.42.0/docs/virt-v2v.pod:838
msgid "B<--root> /dev/sdX"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:840 ../virt-v2v-1.42.0/docs/virt-v2v.pod:840
msgid "B<--root> /dev/VG/LV"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:842 ../virt-v2v-1.42.0/docs/virt-v2v.pod:842
msgid "Choose the root filesystem to be converted."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:844 ../virt-v2v-1.42.0/docs/virt-v2v.pod:844
msgid ""
"In the case where the virtual machine is dual-boot or multi-boot, or where "
"the VM has other filesystems that look like operating systems, this option "
"can be used to select the root filesystem (a.k.a. C<C:> drive or F</>) of "
"the operating system that is to be converted.  The Windows Recovery Console, "
"certain attached DVD drives, and bugs in libguestfs inspection heuristics, "
"can make a guest look like a multi-boot operating system."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:852 ../virt-v2v-1.42.0/docs/virt-v2v.pod:852
msgid ""
"The default in virt-v2v E<le> 0.7.1 was S<I<--root single>>, which causes "
"virt-v2v to die if a multi-boot operating system is found."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:855 ../virt-v2v-1.42.0/docs/virt-v2v.pod:855
msgid ""
"Since virt-v2v E<ge> 0.7.2 the default is now S<I<--root ask>>: If the VM is "
"found to be multi-boot, then virt-v2v will stop and list the possible root "
"filesystems and ask the user which to use.  This requires that virt-v2v is "
"run interactively."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:860 ../virt-v2v-1.42.0/docs/virt-v2v.pod:860
msgid ""
"S<I<--root first>> means to choose the first root device in the case of a "
"multi-boot operating system.  Since this is a heuristic, it may sometimes "
"choose the wrong one."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:864 ../virt-v2v-1.42.0/docs/virt-v2v.pod:864
msgid ""
"You can also name a specific root device, eg. S<I<--root /dev/sda2>> would "
"mean to use the second partition on the first hard drive.  If the named root "
"device does not exist or was not detected as a root device, then virt-v2v "
"will fail."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:869 ../virt-v2v-1.42.0/docs/virt-v2v.pod:869
msgid ""
"Note that there is a bug in grub which prevents it from successfully booting "
"a multiboot system if virtio is enabled.  Grub is only able to boot an "
"operating system from the first virtio disk.  Specifically, F</boot> must be "
"on the first virtio disk, and it cannot chainload an OS which is not in the "
"first virtio disk."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:887 ../virt-v2v-1.42.0/docs/virt-v2v.pod:887
msgid "B<-x>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:889 ../virt-v2v-1.42.0/docs/virt-v2v.pod:889
msgid "Enable tracing of libguestfs API calls."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v.pod:893 ../virt-v2v-1.42.0/docs/virt-v2v.pod:893
msgid "NOTES"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:895 ../virt-v2v-1.42.0/docs/virt-v2v.pod:895
msgid "Xen paravirtualized guests"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:897 ../virt-v2v-1.42.0/docs/virt-v2v.pod:897
msgid ""
"Older versions of virt-v2v could turn a Xen paravirtualized (PV) guest into "
"a KVM guest by installing a new kernel.  This version of virt-v2v does "
"I<not> attempt to install any new kernels.  Instead it will give you an "
"error if there are I<only> Xen PV kernels available."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:902 ../virt-v2v-1.42.0/docs/virt-v2v.pod:902
msgid ""
"Therefore before conversion you should check that a regular kernel is "
"installed.  For some older Linux distributions, this means installing a "
"kernel from the table below:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:906 ../virt-v2v-1.42.0/docs/virt-v2v.pod:906
#, no-wrap
msgid ""
" RHEL 3         (Does not apply, as there was no Xen PV kernel)\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:908 ../virt-v2v-1.42.0/docs/virt-v2v.pod:908
#, no-wrap
msgid ""
" RHEL 4         i686 with > 10GB of RAM: install 'kernel-hugemem'\n"
"                i686 SMP: install 'kernel-smp'\n"
"                other i686: install 'kernel'\n"
"                x86-64 SMP with > 8 CPUs: install 'kernel-largesmp'\n"
"                x86-64 SMP: install 'kernel-smp'\n"
"                other x86-64: install 'kernel'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:915 ../virt-v2v-1.42.0/docs/virt-v2v.pod:915
#, no-wrap
msgid ""
" RHEL 5         i686: install 'kernel-PAE'\n"
"                x86-64: install 'kernel'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:918 ../virt-v2v-1.42.0/docs/virt-v2v.pod:918
#, no-wrap
msgid ""
" SLES 10        i586 with > 10GB of RAM: install 'kernel-bigsmp'\n"
"                i586 SMP: install 'kernel-smp'\n"
"                other i586: install 'kernel-default'\n"
"                x86-64 SMP: install 'kernel-smp'\n"
"                other x86-64: install 'kernel-default'\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:924 ../virt-v2v-1.42.0/docs/virt-v2v.pod:924
#, no-wrap
msgid ""
" SLES 11+       i586: install 'kernel-pae'\n"
"                x86-64: install 'kernel-default'\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:927 ../virt-v2v-1.42.0/docs/virt-v2v.pod:927
#, no-wrap
msgid ""
" Windows        (Does not apply, as there is no Xen PV Windows kernel)\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:929 ../virt-v2v-1.42.0/docs/virt-v2v.pod:929
msgid "Enabling virtio"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:931 ../virt-v2v-1.42.0/docs/virt-v2v.pod:931
msgid ""
"\"Virtio\" is the name for a set of drivers which make disk (block device), "
"network and other guest operations work much faster on KVM."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:934 ../virt-v2v-1.42.0/docs/virt-v2v.pod:934
msgid ""
"Older versions of virt-v2v could install these drivers for certain Linux "
"guests.  This version of virt-v2v does I<not> attempt to install new Linux "
"kernels or drivers, but will warn you if they are not installed already."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:939 ../virt-v2v-1.42.0/docs/virt-v2v.pod:939
msgid ""
"In order to enable virtio, and hence improve performance of the guest after "
"conversion, you should ensure that the B<minimum> versions of packages are "
"installed I<before> conversion, by consulting the table below."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:944 ../virt-v2v-1.42.0/docs/virt-v2v.pod:944
#, no-wrap
msgid ""
" RHEL 3         No virtio drivers are available\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:946 ../virt-v2v-1.42.0/docs/virt-v2v.pod:946
#, no-wrap
msgid ""
" RHEL 4         kernel >= 2.5.9-89.EL\n"
"                lvm2 >= 2.02.42-5.el4\n"
"                device-mapper >= 1.02.28-2.el4\n"
"                selinux-policy-targeted >= 1.17.30-2.152.el4\n"
"                policycoreutils >= 1.18.1-4.13\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:952 ../virt-v2v-1.42.0/docs/virt-v2v.pod:952
#, no-wrap
msgid ""
" RHEL 5         kernel >= 2.6.18-128.el5\n"
"                lvm2 >= 2.02.40-6.el5\n"
"                selinux-policy-targeted >= 2.4.6-203.el5\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:956 ../virt-v2v-1.42.0/docs/virt-v2v.pod:956
#, no-wrap
msgid ""
" RHEL 6+        All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:958 ../virt-v2v-1.42.0/docs/virt-v2v.pod:958
#, no-wrap
msgid ""
" Fedora         All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:960 ../virt-v2v-1.42.0/docs/virt-v2v.pod:960
#, no-wrap
msgid ""
" SLES 11+       All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:962 ../virt-v2v-1.42.0/docs/virt-v2v.pod:962
#, no-wrap
msgid ""
" SLES 10        kernel >= 2.6.16.60-0.85.1\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:964 ../virt-v2v-1.42.0/docs/virt-v2v.pod:964
#, no-wrap
msgid ""
" OpenSUSE 11+   All versions support virtio\n"
" \n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:966 ../virt-v2v-1.42.0/docs/virt-v2v.pod:966
#, no-wrap
msgid ""
" OpenSUSE 10    kernel >= 2.6.25.5-1.1\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:968 ../virt-v2v-1.42.0/docs/virt-v2v.pod:968
#, no-wrap
msgid ""
" Debian 6+      All versions support virtio\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:970 ../virt-v2v-1.42.0/docs/virt-v2v.pod:970
#, no-wrap
msgid ""
" Ubuntu 10.04+  All versions support virtio\n"
"\n"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:972 ../virt-v2v-1.42.0/docs/virt-v2v.pod:972
#, no-wrap
msgid ""
" Windows        Drivers are installed from the ISO or directory pointed\n"
"                to by \"VIRTIO_WIN\" environment variable if present\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:975 ../virt-v2v-1.42.0/docs/virt-v2v.pod:975
msgid "RHEL 4: SELinux relabel appears to hang forever"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:977 ../virt-v2v-1.42.0/docs/virt-v2v.pod:977
msgid ""
"In RHEL E<le> 4.7 there was a bug which causes SELinux relabelling to appear "
"to hang forever at:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:980 ../virt-v2v-1.42.0/docs/virt-v2v.pod:980
#, no-wrap
msgid ""
" *** Warning -- SELinux relabel is required. ***\n"
" *** Disabling security enforcement.         ***\n"
" *** Relabeling could take a very long time, ***\n"
" *** depending on file system size.          ***\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:985 ../virt-v2v-1.42.0/docs/virt-v2v.pod:985
msgid ""
"In reality it is waiting for you to press a key (but there is no visual "
"indication of this).  You can either hit the C<[Return]> key, at which point "
"the guest will finish relabelling and reboot, or you can install "
"policycoreutils E<ge> 1.18.1-4.13 before starting the v2v conversion.  See "
"also L<https://bugzilla.redhat.com/show_bug.cgi?id=244636>"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:992 ../virt-v2v-1.42.0/docs/virt-v2v.pod:992
msgid "Debian and Ubuntu"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:994 ../virt-v2v-1.42.0/docs/virt-v2v.pod:994
msgid ""
"\"warning: could not determine a way to update the configuration of Grub2\""
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:996 ../virt-v2v-1.42.0/docs/virt-v2v.pod:996
msgid ""
"Currently, virt-v2v has no way to set the default kernel in Debian and "
"Ubuntu guests using GRUB 2 as bootloader.  This means that virt-v2v will not "
"change the default kernel used for booting, even in case it is not the best "
"kernel available on the guest.  A recommended procedure is, before using "
"virt-v2v, to check that the boot kernel is the best kernel available in the "
"guest (for example by making sure the guest is up-to-date)."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1004 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1004
msgid "\"vsyscall attempted with vsyscall=none\""
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1006 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1006
msgid ""
"When run on a recent Debian host virt-v2v may fail to convert guests which "
"were created before 2013.  In the debugging output you will see a crash "
"message similar to:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1010 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1010
#, no-wrap
msgid ""
" vsyscall attempted with vsyscall=none ip:...\n"
" segfault at ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1013 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1013
msgid ""
"This is caused because Debian removed support for running old binaries which "
"used the legacy vsyscall page to call into the kernel."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1016 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1016
msgid ""
"You can work around this problem by running this command before running virt-"
"v2v:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1019 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1019
#, no-wrap
msgid ""
" export LIBGUESTFS_APPEND=\"vsyscall=emulate\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1021 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1021
msgid "For more information, see L<https://bugzilla.redhat.com/1592061>"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1023 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1023
msgid "Windows"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1025 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1025
msgid "Windows E<ge> 8 Fast Startup is incompatible with virt-v2v"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1027 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1027
msgid ""
"Guests which use the Windows E<ge> 8 \"Fast Startup\" feature (or guests "
"which are hibernated) cannot be converted with virt-v2v.  You will see an "
"error:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1031 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1031
#, no-wrap
msgid ""
" virt-v2v: error: unable to mount the disk image for writing. This has\n"
" probably happened because Windows Hibernation or Fast Restart is being\n"
" used in this guest. You have to disable this (in the guest) in order\n"
" to use virt-v2v.\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1036 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1036
msgid ""
"As the message says, you need to boot the guest and disable the \"Fast "
"Startup\" feature (Control Panel → Power Options → Choose what the power "
"buttons do → Change settings that are currently unavailable → Turn on fast "
"startup), and shut down the guest, and then you will be able to convert it."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1042 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1042
msgid ""
"For more information, see: L<guestfs(3)/WINDOWS HIBERNATION AND WINDOWS 8 "
"FAST STARTUP>."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1045 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1045
msgid "Boot failure: 0x0000007B"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1047 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1047
msgid ""
"This boot failure is caused by Windows being unable to find or load the "
"right disk driver (eg. F<viostor.sys>).  If you experience this error, here "
"are some things to check:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1055 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1055
msgid ""
"First ensure that the guest boots on the source hypervisor before conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1060 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1060
msgid ""
"Check you have the Windows virtio drivers available in F</usr/share/virtio-"
"win>, and that virt-v2v did not print any warning about not being able to "
"install virtio drivers."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1064 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1064
msgid ""
"On S<Red Hat Enterprise Linux 7>, you will need to install the signed "
"drivers available in the C<virtio-win> package.  If you do not have access "
"to the signed drivers, then you will probably need to disable driver signing "
"in the boot menus."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1071 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1071
msgid ""
"Check that you are presenting a virtio-blk interface (B<not> virtio-scsi and "
"B<not> ide) to the guest.  On the qemu/KVM command line you should see "
"something similar to this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1075 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1075
#, no-wrap
msgid ""
" ... -drive file=windows-sda,if=virtio ...\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1077 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1077
msgid "In libvirt XML, you should see:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1079 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1079
#, no-wrap
msgid ""
" <target dev='vda' bus='virtio'/>\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1083 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1083
msgid ""
"Check that Windows Group Policy does not prevent the driver from being "
"installed or used.  Try deleting Windows Group Policy before conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1089 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1089
msgid ""
"Check there is no anti-virus or other software which implements Group Policy-"
"like prohibitions on installing or using new drivers."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1094 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1094
msgid ""
"Enable boot debugging and check the F<viostor.sys> driver is being loaded."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1099 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1099
msgid "OpenStack and Windows reactivation"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1101 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1101
msgid ""
"OpenStack does not offer stable device / PCI addresses to guests.  Every "
"time it creates or starts a guest, it regenerates the libvirt XML for that "
"guest from scratch.  The libvirt XML will have no E<lt>addressE<gt> fields.  "
"Libvirt will then assign addresses to devices, in a predictable manner.  "
"Addresses may change if any of the following are true:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1112 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1112
msgid "A new disk or network device has been added or removed from the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1116 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1116
msgid "The version of OpenStack or (possibly) libvirt has changed."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1120 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1120
msgid ""
"Because Windows does not like \"hardware\" changes of this kind, it may "
"trigger Windows reactivation."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1123 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1123
msgid ""
"This can also prevent booting with a 7B error [see previous section] if the "
"guest has group policy containing C<Device Installation Restrictions>."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1127 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1127
msgid "Support for SHA-2 certificates in Windows 7 and Windows Server 2008 R2"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1129 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1129
msgid ""
"Later versions of the Windows virtio drivers are signed using SHA-2 "
"certificates (instead of SHA-1).  The original shipping Windows 7 and "
"Windows Server 2008 R2 did not understand SHA-2 certificates and so the "
"Windows virtio drivers will not install properly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1134 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1134
msgid ""
"To fix this you must apply SHA-2 Code Signing Support from: L<https://docs."
"microsoft.com/en-us/security-updates/SecurityAdvisories/2015/3033929> before "
"converting the guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1138 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1138
msgid ""
"For further information see: L<https://bugzilla.redhat.com/show_bug.cgi?"
"id=1624878>"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1141 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1141
msgid "Networks and bridges"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1143 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1143
msgid ""
"Guests are usually connected to one or more networks, and when converted to "
"the target hypervisor you usually want to reconnect those networks at the "
"destination.  The options I<--network>, I<--bridge> and I<--mac> allow you "
"to do that."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1148 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1148
msgid ""
"If you are unsure of what networks and bridges are in use on the source "
"hypervisor, then you can examine the source metadata (libvirt XML, vCenter "
"information, etc.).  Or you can run virt-v2v with the I<--print-source> "
"option which causes virt-v2v to print out the information it has about the "
"guest on the source and then exit."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1154 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1154
msgid ""
"In the I<--print-source> output you will see a section showing the guest’s "
"Network Interface Cards (NICs):"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1157 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1157
#, no-wrap
msgid ""
" $ virt-v2v [-i ...] --print-source name\n"
" [...]\n"
" NICs:\n"
"     Network \"default\" mac: 52:54:00:d0:cf:0e\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1162 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1162
msgid ""
"Bridges are special classes of network devices which are attached to a named "
"external network on the source hypervisor, for example:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1165 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1165
#, no-wrap
msgid ""
" $ virt-v2v [-i ...] --print-source name\n"
" [...]\n"
" NICs:\n"
"     Bridge \"br0\"\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1170 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1170
msgid ""
"To map a specific source bridge to a target network, for example C<br0> on "
"the source to C<ovirtmgmt> on the target, use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1173 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1173
#, no-wrap
msgid ""
" virt-v2v [...] --bridge br0:ovirtmgmt\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1175 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1175
msgid "To map every bridge to a target network, use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1177 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1177
#, no-wrap
msgid ""
" virt-v2v [...] --bridge ovirtmgmt\n"
"\n"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1179 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1179
msgid "Fine-grained mapping of guest NICs"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1181 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1181
msgid ""
"The I<--mac> option gives you more control over the mapping, letting you map "
"single NICs to either networks or bridges on the target.  For example a "
"source guest with two NICs could map them individually to two networks "
"called C<mgmt> and C<clientdata> like this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1186 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1186
#, no-wrap
msgid ""
" $ virt-v2v [...] \\\n"
"    --mac 52:54:00:d0:cf:0e:network:mgmt \\\n"
"    --mac 52:54:00:d0:cf:0f:network:clientdata\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1190 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1190
msgid ""
"Note that virt-v2v does not have the ability to change a guest’s MAC "
"address.  The MAC address is part of the guest metadata and must remain the "
"same on source and target hypervisors.  Most guests will use the MAC address "
"to set up persistent associations between NICs and internal names (like "
"C<eth0>), with firewall settings, or even for other purposes like software "
"licensing."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1197 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1197
msgid "Resource requirements"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1199 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1199
msgid "Network"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1201 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1201
msgid ""
"The most important resource for virt-v2v appears to be network bandwidth.  "
"Virt-v2v should be able to copy guest data at gigabit ethernet speeds or "
"greater."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1205 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1205
msgid ""
"Ensure that the network connections between servers (conversion server, NFS "
"server, vCenter, Xen) are as fast and as low latency as possible."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1209 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1209
msgid "Disk space"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1211 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1211
msgid ""
"Virt-v2v places potentially large temporary files in C<$LIBGUESTFS_CACHEDIR> "
"(which is F</var/tmp> if you don't set it).  Using tmpfs is a bad idea."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1215 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1215
msgid ""
"For each guest disk, an overlay is stored temporarily.  This stores the "
"changes made during conversion, and is used as a cache.  The overlays are "
"not particularly large - tens or low hundreds of megabytes per disk is "
"typical.  In addition to the overlay(s), input and output methods may use "
"disk space, as outlined in the table below."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1223 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1223
msgid "I<-i ova>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1225 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1225
msgid ""
"This temporarily places a full copy of the uncompressed source disks in C<"
"$LIBGUESTFS_CACHEDIR> (or F</var/tmp>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1228 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1228
msgid "I<-o glance>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1230 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1230
msgid ""
"This temporarily places a full copy of the output disks in C<"
"$LIBGUESTFS_CACHEDIR> (or F</var/tmp>)."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1233 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1233
msgid "I<-o local>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1235 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1235
msgid "I<-o qemu>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1237 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1237
msgid ""
"You must ensure there is sufficient space in the output directory for the "
"converted guest."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1242 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1242
msgid "See also L</Minimum free space check in the host> below."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1244 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1244
msgid "VMware vCenter resources"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1246 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1246
msgid ""
"Copying from VMware vCenter is currently quite slow, but we believe this to "
"be an issue with VMware.  Ensuring the VMware ESXi hypervisor and vCenter "
"are running on fast hardware with plenty of memory should alleviate this."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1251 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1251
msgid "Compute power and RAM"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1253 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1253
msgid ""
"Virt-v2v is not especially compute or RAM intensive.  If you are running "
"many parallel conversions, then you may consider allocating one CPU core and "
"2 GB of RAM per running instance."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1257 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1257
msgid "Virt-v2v can be run in a virtual machine."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1259 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1259
msgid "Trimming"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1261 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1261
msgid ""
"Virt-v2v attempts to optimize the speed of conversion by ignoring guest "
"filesystem data which is not used.  This would include unused filesystem "
"blocks, blocks containing zeroes, and deleted files."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1265 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1265
msgid ""
"To do this, virt-v2v issues a non-destructive L<fstrim(8)> operation.  As "
"this happens to an overlay placed over the guest data, it does B<not> affect "
"the source in any way."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1269 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1269
msgid ""
"If this fstrim operation fails, you will see a warning, but virt-v2v will "
"continue anyway.  It may run more slowly (in some cases much more slowly), "
"because it is copying the unused parts of the disk."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1273 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1273
msgid ""
"Unfortunately support for fstrim is not universal, and it also depends on "
"specific details of the filesystem, partition alignment, and backing "
"storage.  As an example, NTFS filesystems cannot be fstrimmed if they occupy "
"a partition which is not aligned to the underlying storage.  That was the "
"default on Windows before Vista.  As another example, VFAT filesystems (used "
"by UEFI guests) cannot be trimmed at all."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1281 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1281
msgid ""
"fstrim support in the Linux kernel is improving gradually, so over time some "
"of these restrictions will be lifted and virt-v2v will work faster."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1285 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1285
msgid "Post-conversion tasks"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1287 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1287
msgid "Guest network configuration"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1289 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1289
msgid ""
"Virt-v2v cannot currently reconfigure a guest’s network configuration.  If "
"the converted guest is not connected to the same subnet as the source, its "
"network configuration may have to be updated.  See also L<virt-customize(1)>."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1294 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1294
msgid "Converting a Windows guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1296 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1296
msgid ""
"When converting a Windows guests, the conversion process is split into two "
"stages:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1301 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1301
msgid "1"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1303 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1303
msgid "Offline conversion."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1305 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1305
msgid "2"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1307 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1307
msgid "First boot."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1311 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1311
msgid ""
"The guest will be bootable after the offline conversion stage, but will not "
"yet have all necessary drivers installed to work correctly.  These will be "
"installed automatically the first time the guest boots."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1315 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1315
msgid ""
"B<N.B.> Take care not to interrupt the automatic driver installation process "
"when logging in to the guest for the first time, as this may prevent the "
"guest from subsequently booting correctly."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1319 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1319
msgid "Free space for conversion"
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1321 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1321
msgid "Free space in the guest"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1323 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1323
msgid ""
"Virt-v2v checks there is sufficient free space in the guest filesystem to "
"perform the conversion.  Currently it checks:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1328 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1328
msgid "Linux root filesystem or Windows C<C:> drive"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1330 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1330
msgid "Minimum free space: 20 MB"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1332 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1332
msgid "Linux F</boot>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1334 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1334
msgid "Minimum free space: 50 MB"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1336 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1336
msgid ""
"This is because we need to build a new initramfs for some Enterprise Linux "
"conversions."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1339 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1339
msgid "Any other mountable filesystem"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1341 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1341
msgid "Minimum free space: 10 MB"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1345 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1345
msgid ""
"In addition to the actual free space, each filesystem is required to have at "
"least 100 available inodes."
msgstr ""

#. type: =head3
#: ../docs/virt-v2v.pod:1348 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1348
msgid "Minimum free space check in the host"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1350 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1350
msgid ""
"You must have sufficient free space in the host directory used to store "
"temporary overlays (except in I<--in-place> mode).  To find out which "
"directory this is, use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1354 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1354
#, no-wrap
msgid ""
" $ df -h \"`guestfish get-cachedir`\"\n"
" Filesystem        Size  Used Avail Use% Mounted on\n"
" /dev/mapper/root   50G   40G  6.8G  86% /\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1358 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1358
msgid ""
"and look under the C<Avail> column.  Virt-v2v will refuse to do the "
"conversion at all unless at least 1GB is available there."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1361 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1361
msgid "See also L</Resource requirements> above."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1363 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1363
msgid "Running virt-v2v as root or non-root"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1365 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1365
msgid ""
"Nothing in virt-v2v inherently needs root access, and it will run just fine "
"as a non-root user.  However, certain external features may require either "
"root or a special user:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1371 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1371
msgid "Mounting the Export Storage Domain"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1373 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1373
msgid ""
"When using I<-o rhv -os server:/esd> virt-v2v has to have sufficient "
"privileges to NFS mount the Export Storage Domain from C<server>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1376 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1376
msgid ""
"You can avoid needing root here by mounting it yourself before running virt-"
"v2v, and passing I<-os /mountpoint> instead, but first of all read the next "
"S<section ...>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1380 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1380
msgid "Writing to the Export Storage Domain as 36:36"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1382 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1382
msgid ""
"RHV-M cannot read files and directories from the Export Storage Domain "
"unless they have UID:GID 36:36.  You will see VM import problems if the UID:"
"GID is not correct."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1386 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1386
msgid ""
"When you run virt-v2v I<-o rhv> as root, virt-v2v attempts to create files "
"and directories with the correct ownership.  If you run virt-v2v as non-"
"root, it will probably still work, but you will need to manually change "
"ownership after virt-v2v has finished."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1391 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1391
msgid "Writing to libvirt"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1393 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1393
msgid ""
"When using I<-o libvirt>, you may need to run virt-v2v as root so that it "
"can write to the libvirt system instance (ie. C<qemu:///system>)  and to the "
"default location for disk images (usually F</var/lib/libvirt/images>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1398 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1398
msgid ""
"You can avoid this by setting up libvirt connection authentication, see "
"L<http://libvirt.org/auth.html>.  Alternatively, use I<-oc qemu:///session>, "
"which will write to your per-user libvirt instance."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1403 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1403
msgid "Writing to Openstack"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1405 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1405
msgid ""
"Because of how Cinder volumes are presented as F</dev> block devices, using "
"I<-o openstack> normally requires that virt-v2v is run as root."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1408 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1408
msgid "Writing to Glance"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1410 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1410
msgid ""
"This does I<not> need root (in fact it probably won’t work), but may require "
"either a special user and/or for you to source a script that sets "
"authentication environment variables.  Consult the Glance documentation."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1417 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1417
msgid "Minimal XML for -i libvirtxml option"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1419 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1419
msgid ""
"When using the I<-i libvirtxml> option, you have to supply some libvirt "
"XML.  Writing this from scratch is hard, so the template below is helpful."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1423 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1423
msgid ""
"B<Note this should only be used for testing and/or where you know what "
"you're doing!> If you have libvirt metadata for the guest, always use that "
"instead."
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1427 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1427
#, no-wrap
msgid ""
" <domain type='kvm'>\n"
"   <name> NAME </name>\n"
"   <memory>1048576</memory>\n"
"   <vcpu>2</vcpu>\n"
"   <os>\n"
"     <type>hvm</type>\n"
"     <boot dev='hd'/>\n"
"   </os>\n"
"   <features>\n"
"     <acpi/>\n"
"     <apic/>\n"
"     <pae/>\n"
"   </features>\n"
"   <devices>\n"
"     <disk type='file' device='disk'>\n"
"       <driver name='qemu' type='raw'/>\n"
"       <source file='/path/to/disk/image'/>\n"
"       <target dev='hda' bus='ide'/>\n"
"     </disk>\n"
"     <interface type='network'>\n"
"       <mac address='52:54:00:01:02:03'/>\n"
"       <source network='default'/>\n"
"       <model type='rtl8139'/>\n"
"     </interface>\n"
"   </devices>\n"
" </domain>\n"
"\n"
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1454 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1454
msgid "In-place conversion"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1456 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1456
msgid ""
"It is also possible to use virt-v2v in scenarios where a foreign VM has "
"already been imported into a KVM-based hypervisor, but still needs "
"adjustments in the guest to make it run in the new virtual hardware."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1460 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1460
msgid ""
"In that case it is assumed that a third-party tool has created the target VM "
"in the supported KVM-based hypervisor based on the source VM configuration "
"and contents, but using virtual devices more appropriate for KVM (e.g. "
"virtio storage and network, etc.)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1465 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1465
msgid ""
"Then, to make the guest OS boot and run in the changed environment, one can "
"use:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1468 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1468
#, no-wrap
msgid ""
" virt-v2v -ic qemu:///system converted_vm --in-place\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1470 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1470
msgid ""
"Virt-v2v will analyze the configuration of C<converted_vm> in the C<qemu:///"
"system> libvirt instance, and apply various fixups to the guest OS "
"configuration to make it match the VM configuration.  This may include "
"installing virtio drivers, configuring the bootloader, the mountpoints, the "
"network interfaces, and so on."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1476 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1476
msgid ""
"Should an error occur during the operation, virt-v2v exits with an error "
"code leaving the VM in an undefined state."
msgstr ""

#. type: =head2
#: ../docs/virt-v2v.pod:1479 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1479
msgid "Machine readable output"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1481 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1481
msgid ""
"The I<--machine-readable> option can be used to make the output more machine "
"friendly, which is useful when calling virt-v2v from other programs, GUIs "
"etc."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1485 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1485
msgid "There are two ways to use this option."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1487 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1487
msgid ""
"Firstly use the option on its own to query the capabilities of the virt-v2v "
"binary.  Typical output looks like this:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1490 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1490
#, no-wrap
msgid ""
" $ virt-v2v --machine-readable\n"
" virt-v2v\n"
" libguestfs-rewrite\n"
" colours-option\n"
" vdsm-compat-option\n"
" input:disk\n"
" [...]\n"
" output:local\n"
" [...]\n"
" convert:linux\n"
" convert:windows\n"
"\n"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1502 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1502
msgid ""
"A list of features is printed, one per line, and the program exits with "
"status 0."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1505 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1505
msgid ""
"The C<input:> and C<output:> features refer to I<-i> and I<-o> (input and "
"output mode) options supported by this binary.  The C<convert:> features "
"refer to guest types that this binary knows how to convert."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1509 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1509
msgid ""
"Secondly use the option in conjunction with other options to make the "
"regular program output more machine friendly."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1512 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1512
msgid "At the moment this means:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1518 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1518
msgid ""
"Progress bar messages can be parsed from stdout by looking for this regular "
"expression:"
msgstr ""

#. type: verbatim
#: ../docs/virt-v2v.pod:1521 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1521
#, no-wrap
msgid ""
" ^[0-9]+/[0-9]+$\n"
"\n"
msgstr ""
" ^[0-9]+/[0-9]+$\n"
"\n"

#. type: textblock
#: ../docs/virt-v2v.pod:1525 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1525
msgid ""
"The calling program should treat messages sent to stdout (except for "
"progress bar messages) as status messages.  They can be logged and/or "
"displayed to the user."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1531 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1531
msgid ""
"The calling program should treat messages sent to stderr as error messages.  "
"In addition, virt-v2v exits with a non-zero status code if there was a fatal "
"error."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1537 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1537
msgid ""
"Virt-v2v E<le> 0.9.1 did not support the I<--machine-readable> option at "
"all.  The option was added when virt-v2v was rewritten in 2014."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1540 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1540
msgid ""
"It is possible to specify a format string for controlling the output; see "
"L<guestfs(3)/ADVANCED MACHINE READABLE OUTPUT>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v.pod:1543 ../test-harness/virt-v2v-test-harness.pod:245
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1543
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:245
msgid "FILES"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1547 ../docs/virt-v2v.pod:1625
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1547
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1625
msgid "F</usr/share/virtio-win>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1549 ../docs/virt-v2v.pod:1597
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1549
#: ../virt-v2v-1.42.0/docs/virt-v2v.pod:1597
msgid "(Optional)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1551 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1551
msgid ""
"If this directory is present, then virtio drivers for Windows guests will be "
"found from this directory and installed in the guest during conversion."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v.pod:1557 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1557
msgid "ENVIRONMENT VARIABLES"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1561 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1561
#, fuzzy
#| msgid "C<LIBGUESTFS_TRACE>"
msgid "C<LIBGUESTFS_CACHEDIR>"
msgstr "C<LIBGUESTFS_TRACE>"

#. type: textblock
#: ../docs/virt-v2v.pod:1563 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1563
msgid ""
"Location of the temporary directory used for the potentially large temporary "
"overlay file.  If not set, F</var/tmp> is used."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1566 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1566
msgid "See the L</Disk space> section above."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1568 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1568
msgid "C<VIRT_TOOLS_DATA_DIR>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1570 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1570
msgid ""
"This can point to the directory containing data files used for Windows "
"conversion."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1573 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1573
msgid ""
"Normally you do not need to set this.  If not set, a compiled-in default "
"will be used (something like F</usr/share/virt-tools>)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1576 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1576
msgid "This directory may contain the following files:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1580 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1580
msgid "F<rhsrvany.exe>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1582 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1582
msgid "(Required when doing conversions of Windows guests)"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1584 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1584
msgid ""
"This is the RHSrvAny Windows binary, used to install a \"firstboot\" script "
"in the guest during conversion of Windows guests."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1587 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1587
msgid "See also: C<https://github.com/rwmjones/rhsrvany>"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1589 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1589
msgid "F<pvvxsvc.exe>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1591 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1591
msgid ""
"This is a Windows binary shipped with SUSE VMDP, used to install a "
"\"firstboot\" script in Windows guests.  It is required if you intend to use "
"the I<--firstboot> or I<--firstboot-command> options with Windows guests."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1595 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1595
msgid "F<rhev-apt.exe>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1599 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1599
msgid ""
"The RHV Application Provisioning Tool (RHEV APT).  If this file is present, "
"then RHEV APT will be installed in the Windows guest during conversion.  "
"This tool is a guest agent which ensures that the virtio drivers remain up "
"to date when the guest is running on Red Hat Virtualization (RHV)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1605 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1605
msgid ""
"This file comes from Red Hat Virtualization (RHV), and is not distributed "
"with virt-v2v."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1610 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1610
msgid "C<VIRTIO_WIN>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1612 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1612
msgid ""
"This is where virtio drivers for Windows are searched for.  It can be a "
"directory I<or> point to F<virtio-win.iso> (CD ROM image containing drivers)."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1616 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1616
msgid ""
"If unset, then we look for drivers in whichever of these paths is found "
"first:"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1621 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1621
msgid "F</usr/share/virtio-win/virtio-win.iso>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1623 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1623
msgid "The ISO containing virtio drivers for Windows."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1627 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1627
msgid ""
"The exploded tree of virtio drivers for Windows.  This is usually "
"incomplete, hence the ISO is preferred."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1632 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1632
msgid "See L</Enabling virtio>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1636 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1636
msgid ""
"For other environment variables, see L<guestfs(3)/ENVIRONMENT VARIABLES>."
msgstr ""

#. type: =head1
#: ../docs/virt-v2v.pod:1638 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1638
msgid "OTHER TOOLS"
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1642 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1642
msgid "L<virt-v2v-copy-to-local(1)>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1644 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1644
msgid ""
"There are some special cases where virt-v2v cannot directly access the "
"remote hypervisor.  In that case you have to use L<virt-v2v-copy-to-"
"local(1)> to make a local copy of the guest first, followed by running "
"C<virt-v2v -i libvirtxml> to perform the conversion."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1650 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1650
msgid "L<engine-image-uploader(8)>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1652 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1652
msgid ""
"Variously called C<engine-image-uploader>, C<ovirt-image-uploader> or "
"C<rhevm-image-uploader>, this tool allows you to copy a guest from one oVirt "
"or RHV Export Storage Domain to another.  It only permits importing a guest "
"that was previously exported from another oVirt/RHV instance."
msgstr ""

#. type: =item
#: ../docs/virt-v2v.pod:1658 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1658
msgid "L<import-to-ovirt.pl|http://git.annexia.org/?p=import-to-ovirt.git>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1660 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1660
msgid ""
"This script can be used to import guests that already run on KVM to oVirt or "
"RHV.  For more information, see this blog posting by the author of virt-v2v:"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1664 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1664
msgid ""
"L<https://rwmj.wordpress.com/2015/09/18/importing-kvm-guests-to-ovirt-or-"
"rhev/#content>"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1670 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1670
msgid ""
"L<virt-p2v(1)>, L<virt-customize(1)>, L<virt-df(1)>, L<virt-filesystems(1)>, "
"L<virt-sparsify(1)>, L<virt-sysprep(1)>, L<guestfs(3)>, L<guestfish(1)>, "
"L<qemu-img(1)>, L<virt-v2v-copy-to-local(1)>, L<virt-v2v-test-harness(1)>, "
"L<engine-image-uploader(8)>, L<import-to-ovirt.pl|http://git.annexia.org/?"
"p=import-to-ovirt.git>, L<nbdkit(1)>, L<nbdkit-vddk-plugin(1)>, L<http://"
"libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1689 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1689
msgid "Matthew Booth"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1691 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1691
msgid "Cédric Bosdonnat"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1695 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1695
msgid "Shahar Havivi"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1697 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1697
msgid "Roman Kagan"
msgstr ""

#. type: textblock
#: ../docs/virt-v2v.pod:1707 ../virt-v2v-1.42.0/docs/virt-v2v.pod:1707
msgid "Tingting Zheng"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:3
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:3
msgid "virt-v2v-test-harness - Used to test virt-v2v against real test cases"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:7
#: ../test-harness/virt-v2v-test-harness.pod:165
#: ../test-harness/virt-v2v-test-harness.pod:194
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:7
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:165
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:194
#, no-wrap
msgid ""
" open V2v_test_harness\n"
" \n"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:9
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:9
#, no-wrap
msgid ""
" let test = \"rhel_45_i386_fv\"\n"
" let test_plan = {\n"
"   default_plan with\n"
"     boot_plan = Boot_to_screenshot (test ^ \"-login.ppm\")\n"
" }\n"
" \n"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:15
#: ../test-harness/virt-v2v-test-harness.pod:202
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:15
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:202
#, no-wrap
msgid ""
" let () = run ~test ~test_plan ()\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:19
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:19
msgid ""
"L<virt-v2v(1)> converts guests from a foreign hypervisor to run on KVM, "
"managed by libvirt, OpenStack, oVirt, Red Hat Virtualisation (RHV) or "
"several other targets."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:23
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:23
msgid ""
"Virt-v2v-test-harness is a small library (module name: C<V2v_test_harness>) "
"used to run virt-v2v against a set of test cases consisting of real virtual "
"machines."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:27
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:27
msgid ""
"It acts as a test harness, taking a test case, running virt-v2v on it (non-"
"destructively), then test-booting the result.  It can ensure that the test "
"case converts successfully, boots successfully, and reaches a milestone "
"(such as a particular screenshot).  It can also test that the conversion "
"created, modified or deleted the expected files from within the guest."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:34
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:34
msgid "GETTING THE TEST CASES"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:36
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:36
msgid ""
"Because the test cases are actual virtual machines, we split them into two "
"groups: test cases which are freely redistributable and those which are "
"proprietary.  The former are things like Fedora or CentOS images, which are "
"free software.  The latter are things like Windows or Red Hat Enterprise "
"Linux."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:42
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:42
msgid ""
"The freely redistributable test cases can be downloaded from: L<http://git."
"annexia.org/?p=virt-v2v-test-cases-free.git> I<B<not available yet>>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:46
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:46
msgid ""
"The proprietary test cases are available at L<http://git.annexia.org/?p=virt-"
"v2v-test-cases-nonfree.git> This I<does not> contain the proprietary images "
"themselves, which are not made available to the public for licensing reasons."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:51
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:51
msgid ""
"The test cases consist of disk images which are very large, from 250 MB "
"through to tens of gigabytes I<each>.  This means that distributing test "
"cases can be very time-consuming and expensive.  We use L<git-annex(1)> to "
"distribute the test images."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:56
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:56
msgid "REQUIREMENTS"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:58
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:58
msgid ""
"It’s recommended to use an idle machine for testing.  You will need B<a lot "
"of disk space> to run the tests, in excess of S<100 GB>.  You should also "
"ensure the test machine has plenty of RAM, at least S<16 GB>."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:63
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:63
msgid "GETTING THE TEST HARNESS"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:65
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:65
msgid "To run the test cases you must have the virt-v2v test harness."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:67
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:67
msgid "The OCaml module is C<V2v_test_harness>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:69
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:69
msgid ""
"The easiest way is to compile libguestfs from source (I<note> do not install "
"it).  The test harness will be in C<virt-v2v.git/test-harness>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:73
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:73
msgid "It is also possible to install test harness as an OCaml module."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:75
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:75
msgid "RUNNING THE TEST CASES"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:77
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:77
msgid ""
"Once you have checked out the freely redistributed test cases from the "
"repository, do:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:80
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:80
#, no-wrap
msgid ""
" ./configure [--with-test-harness=/path/to/virt-v2v/test-harness]\n"
" make\n"
" make check -k\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:84
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:84
msgid ""
"Using the I<-k> option is recommended so the test doesn't stop at the first "
"failure."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:87
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:87
msgid "PARALLEL TESTS"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:89
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:89
msgid "You can run test cases in parallel by doing:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:91
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:91
#, no-wrap
msgid ""
" make check -k -j<N>\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:93
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:93
msgid ""
"(eg. I<-j2> for running up to 2 tests in parallel).  Be careful about "
"running too many parallel tests, as it can slow down each test enough to "
"cause false failures."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:97
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:97
msgid "RUNNING TEST CASES AGAINST UPSTREAM VIRT-V2V"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:99
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:99
msgid ""
"Using C<make check> picks up whatever C<virt-v2v> binary is on your C<$PATH>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:102
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:102
msgid ""
"If you have compiled libguestfs from source and want to test that version of "
"virt-v2v, use the libguestfs C<run> script (in the top-level build directory "
"of the libguestfs sources).  eg:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:106
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:106
#, no-wrap
msgid ""
" ../libguestfs/run make check -k\n"
"\n"
msgstr ""

#. type: =head1
#: ../test-harness/virt-v2v-test-harness.pod:108
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:108
msgid "WRITING NEW TEST CASES"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:110
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:110
msgid ""
"If you are interested in writing test cases, it is suggested that you start "
"by downloading the freely redistributable test cases, or at least look at "
"them online."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:114
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:114
msgid ""
"Also you must have the virt-v2v test harness - see L</GETTING THE TEST "
"HARNESS> above."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:117
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:117
msgid "FILES IN EACH TEST CASE"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:119
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:119
msgid "Each test case consists of:"
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:123
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:123
msgid "I<test>.img.xz"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:125
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:125
msgid ""
"The disk image of the virtual machine before conversion.  Usually this "
"should be converted to raw format and xz-compressed."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:128
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:128
msgid "I<test>.ova"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:130
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:130
msgid "Alternatively, an OVA, exported from VMware, may be used."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:132
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:132
msgid "I<test>.xml"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:134
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:134
msgid ""
"The libvirt XML used as input to virt-v2v.  See the discussion of I<-i "
"libvirtxml> in L<virt-v2v(1)>."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:137
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:137
msgid "I<test>.ppm"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:139
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:139
msgid "An optional screenshot or screenshots."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:141
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:141
msgid ""
"You can supply zero or more \"known good\" screenshots which represent "
"intermediate steps where the guest is booting.  This is useful where a guest "
"sits for some time doing something, and lets the test harness know that it "
"should allow the guest to continue to boot."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:146
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:146
msgid ""
"You can supply zero or one \"final\" screenshot.  This is often a screenshot "
"of the login page which indicates that the guest booted successfully."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:150
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:150
msgid ""
"The screenshots are captured using L<virsh(1)>.  Comparison of screenshots "
"against the test images is done using the ImageMagick L<compare(1)> program."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:154
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:154
msgid "I<test>.ml"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:156
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:156
msgid "The test itself - see below."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:160
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:160
msgid "WRITING THE TEST"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:162
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:162
msgid ""
"The test file (F<*.ml>) is used to control the test harness, and minimally "
"it would look something like this:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:167
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:167
#, no-wrap
msgid ""
" let test = \"short_name\"\n"
" \n"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:169
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:169
#, no-wrap
msgid ""
" let () = run ~test ()\n"
"\n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:171
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:171
msgid "That would instruct the test harness to:"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:177
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:177
msgid "Uncompress F<I<short_name>.img.xz>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:181
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:181
msgid "Run C<virt-v2v -i libvirtxml I<short_name>.xml [...]>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:185
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:185
msgid ""
"Boot the resulting guest and check that it writes to its disk and then the "
"disk becomes idle."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:190
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:190
msgid ""
"The above is a rather simplistic test.  A more realistic test is to ensure "
"the guest reaches a final milestone (screenshot), eg. a login page.  To do "
"that you have to supply a C<~test_plan> parameter:"
msgstr ""

#. type: verbatim
#: ../test-harness/virt-v2v-test-harness.pod:196
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:196
#, no-wrap
msgid ""
" let test = \"short_name\"\n"
" let test_plan = {\n"
"   default_plan with\n"
"     boot_plan = Boot_to_screenshot (test ^ \".ppm\")\n"
" }\n"
" \n"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:204
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:204
msgid ""
"For an even better test, you can supply post-conversion and post-boot test "
"cases which examine the disk image (using libguestfs) to verify that files "
"have been created, modified or deleted as expected within the disk image.  "
"See F<V2v_test_harness.mli> for more information on how to do that."
msgstr ""

#. type: =head2
#: ../test-harness/virt-v2v-test-harness.pod:210
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:210
msgid "FILES GENERATED BY RUNNING THE TEST"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:212
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:212
msgid "When you run each test, the following files can be created:"
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:216
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:216
msgid "I<test>-I<yyyymmdd-hhmmss>.scrn"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:218
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:218
msgid ""
"Screenshot(s) of the guest’s graphical console.  These are helpful when "
"writing tests or debugging test failures."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:221
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:221
msgid "The screenshot format is Portable Pixmap (PPM)."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:223
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:223
msgid "I<test>.img"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:225
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:225
msgid "The uncompressed original disk image (before conversion)."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:227
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:227
msgid "I<test>-converted-sda"
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:229
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:229
msgid "I<test>-converted.xml"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:231
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:231
msgid ""
"The result of conversion, ie. after running virt-v2v but before test-booting "
"the guest.  See the L<virt-v2v(1)> manual page description of I<-o local>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:235
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:235
msgid "The disk image format is qcow2."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:237
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:237
msgid "I<test>-booted-sda"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:239
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:239
msgid ""
"The disk image after test-booting.  This is a qcow2 file which uses the "
"I<test>-converted-sda file as a backing disk, in order to save disk space."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:249
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:249
msgid "F<$ocamllibdir/v2v_test_harness/v2v_test_harness.mli>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:251
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:251
msgid ""
"The test library interface.  Read this for detailed programming "
"documentation."
msgstr ""

#. type: =item
#: ../test-harness/virt-v2v-test-harness.pod:254
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:254
msgid "C<$ocamllibdir/v2v_test_harness/META>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:256
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:256
msgid ""
"The findlib META file allowing you to use the library from L<ocamlfind(1)>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:261
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:261
msgid "NB: To find the value of C<$ocamllibdir>, run C<ocamlc -where>"
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:265
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:265
msgid ""
"L<virt-v2v(1)>, L<virt-p2v(1)>, L<guestfs(3)>, L<virsh(1)>, L<compare(1)>, "
"L<git-annex(1)>, L<http://libguestfs.org/>."
msgstr ""

#. type: textblock
#: ../test-harness/virt-v2v-test-harness.pod:279
#: ../virt-v2v-1.42.0/test-harness/virt-v2v-test-harness.pod:279
msgid "Copyright (C) 2014-2020 Red Hat Inc."
msgstr ""

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan [--options]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan [--options]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-alignment-scan -a winxp.img\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-alignment-scan -a winxp.img\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-alignment-scan -a fedora16.img\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2      2097152         2048K   ok\n"
#~ " /dev/sda3    526385152         2048K   ok\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-alignment-scan -a fedora16.img\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2      2097152         2048K   ok\n"
#~ " /dev/sda3    526385152         2048K   ok\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-alignment-scan -d RHEL5\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ " /dev/sda2    106928640          512    bad (alignment < 4K)\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-alignment-scan -d RHEL5\n"
#~ " /dev/sda1        32256          512    bad (alignment < 4K)\n"
#~ " /dev/sda2    106928640          512    bad (alignment < 4K)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2    105906176         1024K   ok\n"
#~ " /dev/sdb1        65536           64K   ok\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-alignment-scan -c qemu:///system -d Win7TwoDisks\n"
#~ " /dev/sda1      1048576         1024K   ok\n"
#~ " /dev/sda2    105906176         1024K   ok\n"
#~ " /dev/sdb1        65536           64K   ok\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-alignment-scan\n"
#~ " F16x64:/dev/sda1      1048576         1024K   ok\n"
#~ " F16x64:/dev/sda2      2097152         2048K   ok\n"
#~ " F16x64:/dev/sda3    526385152         2048K   ok\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-alignment-scan\n"
#~ " F16x64:/dev/sda1      1048576         1024K   ok\n"
#~ " F16x64:/dev/sda2      2097152         2048K   ok\n"
#~ " F16x64:/dev/sda3    526385152         2048K   ok\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"
#~ msgstr ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"
#~ msgstr ""
#~ " $ cat /sys/block/sda/queue/hw_sector_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/physical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/logical_block_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sda/queue/optimal_io_size\n"
#~ " 0\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ cat /sys/block/sdc/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sdc/queue/optimal_io_size\n"
#~ " 65536\n"
#~ "\n"
#~ msgstr ""
#~ " $ cat /sys/block/sdc/queue/logical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/physical_block_size\n"
#~ " 512\n"
#~ " $ cat /sys/block/sdc/queue/minimum_io_size\n"
#~ " 4096\n"
#~ " $ cat /sys/block/sdc/queue/optimal_io_size\n"
#~ " 65536\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance [--options] OUTPUTDIR\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance [--options] OUTPUTDIR\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance [--options] --xz\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance [--options] --xz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <OUTPUTDIR>/kernel\n"
#~ " <OUTPUTDIR>/initrd\n"
#~ " <OUTPUTDIR>/root\n"
#~ " <OUTPUTDIR>/README.fixed\n"
#~ "\n"
#~ msgstr ""
#~ " <OUTPUTDIR>/kernel\n"
#~ " <OUTPUTDIR>/initrd\n"
#~ " <OUTPUTDIR>/root\n"
#~ " <OUTPUTDIR>/README.fixed\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance --xz\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance --xz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " appliance-<VERSION>.tar.xz\n"
#~ "\n"
#~ msgstr ""
#~ " appliance-<VERSION>.tar.xz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " appliance/kernel\n"
#~ " appliance/initrd\n"
#~ " appliance/root\n"
#~ " appliance/README.fixed\n"
#~ "\n"
#~ msgstr ""
#~ " appliance/kernel\n"
#~ " appliance/initrd\n"
#~ " appliance/root\n"
#~ " appliance/README.fixed\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "<img src=\"virt-builder.svg\" width=\"250\"\n"
#~ "  style=\"float: right; clear: right;\" />\n"
#~ "\n"
#~ msgstr ""
#~ "<img src=\"virt-builder.svg\" width=\"250\"\n"
#~ "  style=\"float: right; clear: right;\" />\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --notes os-version\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --notes os-version\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --print-cache\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --print-cache\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --cache-all-templates\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --cache-all-templates\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --delete-cache\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --delete-cache\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --get-kernel DISKIMAGE\n"
#~ "    [--format raw|qcow2] [--output OUTPUTDIR]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --get-kernel DISKIMAGE\n"
#~ "    [--format raw|qcow2] [--output OUTPUTDIR]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --list\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --list\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mkdir /tmp/mount\n"
#~ " mount LABEL=EXTRA /tmp/mount\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir /tmp/mount\n"
#~ " mount LABEL=EXTRA /tmp/mount\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --curl \"curl --insecure\" [...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --curl \"curl --insecure\" [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --gpg \"gpg --homedir /tmp\" [...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --gpg \"gpg --homedir /tmp\" [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat <<'EOF' > /etc/yum.repos.d/extra.repo\n"
#~ " [extra]\n"
#~ " name=extra\n"
#~ " baseurl=file:///tmp/mount\n"
#~ " enabled=1\n"
#~ " EOF\n"
#~ " \n"
#~ msgstr ""
#~ " cat <<'EOF' > /etc/yum.repos.d/extra.repo\n"
#~ " [extra]\n"
#~ " name=extra\n"
#~ " baseurl=file:///tmp/mount\n"
#~ " enabled=1\n"
#~ " EOF\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " apt-cdrom -d=/tmp/mount add\n"
#~ " apt-get -y install famousdatabase\n"
#~ "\n"
#~ msgstr ""
#~ " apt-cdrom -d=/tmp/mount add\n"
#~ " apt-get -y install famousdatabase\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --firstboot-command \\\n"
#~ "    'useradd -m -p \"\" rjones ; chage -d 0 rjones'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --firstboot-command \\\n"
#~ "    'useradd -m -p \"\" rjones ; chage -d 0 rjones'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mkdir /tmp/mp\n"
#~ " guestmount -a disk.img -i /tmp/mp\n"
#~ " cd /tmp/mp\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir /tmp/mp\n"
#~ " guestmount -a disk.img -i /tmp/mp\n"
#~ " cd /tmp/mp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fusermount -u /tmp/mp\n"
#~ "\n"
#~ msgstr ""
#~ " fusermount -u /tmp/mp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " console=tty0 console=ttyS0,115200\n"
#~ "\n"
#~ msgstr ""
#~ " console=tty0 console=ttyS0,115200\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-builder --source https://example.com/builder/index.asc \\\n"
#~ "    --fingerprint 'AAAA BBBB ...' \\\n"
#~ "    --list\n"
#~ "\n"
#~ msgstr ""
#~ " virt-builder --source https://example.com/builder/index.asc \\\n"
#~ "    --fingerprint 'AAAA BBBB ...' \\\n"
#~ "    --list\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " gpg --export -a \"you@example.com\" > pubkey\n"
#~ " \n"
#~ msgstr ""
#~ " gpg --export -a \"you@example.com\" > pubkey\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " xz --best --block-size=16777216 disk\n"
#~ "\n"
#~ msgstr ""
#~ " xz --best --block-size=16777216 disk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " gpg --clearsign --armor index\n"
#~ "\n"
#~ msgstr ""
#~ " gpg --clearsign --armor index\n"
#~ "\n"

#~ msgid "C<name=NAME>"
#~ msgstr "C<name=NAME>"

#~ msgid "C<osinfo=ID>"
#~ msgstr "C<osinfo=ID>"

#~ msgid "C<file=PATH>"
#~ msgstr "C<file=PATH>"

#~ msgid "C<sig=PATH>"
#~ msgstr "C<sig=PATH>"

#, no-wrap
#~ msgid ""
#~ " gpg --detach-sign --armor -o disk.xz.sig disk.xz\n"
#~ "\n"
#~ msgstr ""
#~ " gpg --detach-sign --armor -o disk.xz.sig disk.xz\n"
#~ "\n"

#~ msgid "C<revision=N>"
#~ msgstr "C<revision=N>"

#~ msgid "C<format=raw>"
#~ msgstr "C<format=raw>"

#~ msgid "C<format=qcow2>"
#~ msgstr "C<format=qcow2>"

#~ msgid "C<size=NNN>"
#~ msgstr "C<size=NNN>"

#~ msgid "C<compressed_size=NNN>"
#~ msgstr "C<compressed_size=NNN>"

#~ msgid "C<expand=/dev/sdaX>"
#~ msgstr "C<expand=/dev/sdaX>"

#~ msgid "C<lvexpand=/dev/VolGroup/LogVol>"
#~ msgstr "C<lvexpand=/dev/VolGroup/LogVol>"

#~ msgid "C<notes=NOTES>"
#~ msgstr "C<notes=NOTES>"

#~ msgid "C<hidden=true>"
#~ msgstr "C<hidden=true>"

#~ msgid "SELINUX"
#~ msgstr "SELINUX"

#~ msgid "C<http_proxy>"
#~ msgstr "C<http_proxy>"

#~ msgid "C<https_proxy>"
#~ msgstr "C<https_proxy>"

#~ msgid "C<no_proxy>"
#~ msgstr "C<no_proxy>"

#~ msgid "C<HOME>"
#~ msgstr "C<HOME>"

#~ msgid "C<XDG_CACHE_HOME>"
#~ msgstr "C<XDG_CACHE_HOME>"

#, no-wrap
#~ msgid ""
#~ " virt-cat [--options] -d domname file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat [--options] -d domname file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat domname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat domname file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat disk.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat disk.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /etc/fstab\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /etc/fstab\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /var/log/yum.log | tail\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /var/log/yum.log | tail\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
#~ " who /tmp/utmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /var/run/utmp > /tmp/utmp\n"
#~ " who /tmp/utmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
#~ " last -f /tmp/wtmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat -d mydomain /var/log/wtmp > /tmp/wtmp\n"
#~ " last -f /tmp/wtmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat --format=raw -a disk.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat --format=raw -a disk.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " -m /dev/sda1:/:acl,user_xattr\n"
#~ "\n"
#~ msgstr ""
#~ " -m /dev/sda1:/:acl,user_xattr\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat disk.img [disk.img ...] file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat disk.img [disk.img ...] file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat guestname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat guestname file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -i -d domname download file -\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -i -d domname download file -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -m /dev/sda1 download file -\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -m /dev/sda1 download file -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " for fs in $(virt-filesystems -a disk.img); do\n"
#~ "   # ...\n"
#~ " done\n"
#~ "\n"
#~ msgstr ""
#~ " for fs in $(virt-filesystems -a disk.img); do\n"
#~ "   # ...\n"
#~ " done\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img -l\n"
#~ " Name                   Type         VFS   Label  Size\n"
#~ " /dev/sda1              filesystem   ext4  boot   524288000\n"
#~ " /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img -l\n"
#~ " Name                   Type         VFS   Label  Size\n"
#~ " /dev/sda1              filesystem   ext4  boot   524288000\n"
#~ " /dev/vg_guest/lv_root  filesystem   ext4  root   10212081664\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img --extra\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ " /dev/vg_guest/lv_swap\n"
#~ " /dev/vg_guest/lv_data\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img --extra\n"
#~ " /dev/sda1\n"
#~ " /dev/vg_guest/lv_root\n"
#~ " /dev/vg_guest/lv_swap\n"
#~ " /dev/vg_guest/lv_data\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a disk.img --partitions\n"
#~ " /dev/sda1\n"
#~ " /dev/sda2\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a disk.img --partitions\n"
#~ " /dev/sda1\n"
#~ " /dev/sda2\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-filesystems -a win.img --all --long --uuid -h\n"
#~ " Name      Type       VFS  Label           Size Parent   UUID\n"
#~ " /dev/sda1 filesystem ntfs System Reserved 100M -        F81C92571C92112C\n"
#~ " /dev/sda2 filesystem ntfs -               20G  -        F2E8996AE8992E3B\n"
#~ " /dev/sda1 partition  -    -               100M /dev/sda -\n"
#~ " /dev/sda2 partition  -    -               20G  /dev/sda -\n"
#~ " /dev/sda  device     -    -               20G  -        -\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-filesystems -a win.img --all --long --uuid -h\n"
#~ " Name      Type       VFS  Label           Size Parent   UUID\n"
#~ " /dev/sda1 filesystem ntfs System Reserved 100M -        F81C92571C92112C\n"
#~ " /dev/sda2 filesystem ntfs -               20G  -        F2E8996AE8992E3B\n"
#~ " /dev/sda1 partition  -    -               100M /dev/sda -\n"
#~ " /dev/sda2 partition  -    -               20G  /dev/sda -\n"
#~ " /dev/sda  device     -    -               20G  -        -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " \"foo,bar\",baz\n"
#~ "\n"
#~ msgstr ""
#~ " \"foo,bar\",baz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " \"foo\n"
#~ " bar\",baz\n"
#~ "\n"
#~ msgstr ""
#~ " \"foo\n"
#~ " bar\",baz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] -d domname directory [directory ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] -d domname directory [directory ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] -a disk.img [-a disk.img ...] directory [directory ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] -a disk.img [-a disk.img ...] directory [directory ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] domname directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] domname directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls [--options] disk.img [disk.img ...] directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls [--options] disk.img [disk.img ...] directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -R -d guest /\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -R -d guest /\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep '^- [42]'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep '^- [42]'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep '^d ...7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep '^d ...7'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep '^s'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep '^s'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -d guest /\n"
#~ " bin\n"
#~ " boot\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -d guest /\n"
#~ " bin\n"
#~ " boot\n"
#~ " [etc.]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -l -d guest /\n"
#~ " total 204\n"
#~ " dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
#~ " dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -l -d guest /\n"
#~ " total 204\n"
#~ " dr-xr-xr-x.   2 root root   4096 2009-08-25 19:06 bin\n"
#~ " dr-xr-xr-x.   5 root root   3072 2009-08-25 19:06 boot\n"
#~ " [etc.]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -R -d guest /tmp\n"
#~ " foo\n"
#~ " foo/bar\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -R -d guest /tmp\n"
#~ " foo\n"
#~ " foo/bar\n"
#~ " [etc.]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-ls -lR -d guest /bin\n"
#~ " d 0555       4096 /bin\n"
#~ " - 0755        123 /bin/alsaunmute\n"
#~ " - 0755      28328 /bin/arch\n"
#~ " l 0777          4 /bin/awk -> gawk\n"
#~ " - 0755      27216 /bin/basename\n"
#~ " - 0755     943360 /bin/bash\n"
#~ " [etc.]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-ls -lR -d guest /bin\n"
#~ " d 0555       4096 /bin\n"
#~ " - 0755        123 /bin/alsaunmute\n"
#~ " - 0755      28328 /bin/arch\n"
#~ " l 0777          4 /bin/awk -> gawk\n"
#~ " - 0755      27216 /bin/basename\n"
#~ " - 0755     943360 /bin/bash\n"
#~ " [etc.]\n"
#~ "\n"

#~ msgid "path"
#~ msgstr "path"

#, no-wrap
#~ msgid ""
#~ " virt-ls --format=raw -a disk.img /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls --format=raw -a disk.img /dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls --format=raw -a disk.img --format -a another.img /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls --format=raw -a disk.img --format -a another.img /dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls disk.img [disk.img ...] /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls disk.img [disk.img ...] /dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls guestname /dir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls guestname /dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfsd [-r] [-v|--verbose]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfsd [-r] [-v|--verbose]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df [--options] disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-df -d F14x64 -h\n"
#~ " Filesystem                       Size     Used  Available  Use%\n"
#~ " F14x64:/dev/sda1                 484M      66M       393M   14%\n"
#~ " F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-df -d F14x64 -h\n"
#~ " Filesystem                       Size     Used  Available  Use%\n"
#~ " F14x64:/dev/sda1                 484M      66M       393M   14%\n"
#~ " F14x64:/dev/vg_f13x64/lv_root    7.4G     3.4G       4.0G   46%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-df -a test1.img\n"
#~ " Filesystem                  1K-blocks     Used  Available  Use%\n"
#~ " test1.img:/dev/sda1             99099     1551      92432    2%\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-df -a test1.img\n"
#~ " Filesystem                  1K-blocks     Used  Available  Use%\n"
#~ " test1.img:/dev/sda1             99099     1551      92432    2%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-df -a Win7x32TwoDisks-a -a Win7x32TwoDisks-b \n"
#~ " Filesystem                   1K-blocks    Used  Available  Use%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda1    102396   24712      77684   25%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda2  12478460 7403416    5075044   60%\n"
#~ " Win7x32TwoDisks-a+:/dev/sdb1    521212   55728     465484   11%\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-df -a Win7x32TwoDisks-a -a Win7x32TwoDisks-b \n"
#~ " Filesystem                   1K-blocks    Used  Available  Use%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda1    102396   24712      77684   25%\n"
#~ " Win7x32TwoDisks-a+:/dev/sda2  12478460 7403416    5075044   60%\n"
#~ " Win7x32TwoDisks-a+:/dev/sdb1    521212   55728     465484   11%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d GuestName -i statvfs /\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d GuestName -i statvfs /\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
#~ "\n"
#~ msgstr ""
#~ " python -c 'import os; s = os.statvfs (\"/\"); print s'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ./localconfigure && make\n"
#~ "\n"
#~ msgstr ""
#~ " ./localconfigure && make\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # Use an alternate python binary.\n"
#~ " export PYTHON=python3\n"
#~ " # Skip this test, it is broken.\n"
#~ " export SKIP_TEST_BTRFS_FSCK=1\n"
#~ "\n"
#~ msgstr ""
#~ " # Use an alternate python binary.\n"
#~ " export PYTHON=python3\n"
#~ " # Skip this test, it is broken.\n"
#~ " export SKIP_TEST_BTRFS_FSCK=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_PATH=/usr/local/lib/guestfs/appliance\n"
#~ "\n"

#~ msgid "GETTING HELP AND REPORTING BUGS"
#~ msgstr "OBTENIR DE L'AIDE ET RAPPORTER LES ANOMALIES"

#, no-wrap
#~ msgid ""
#~ " guestfish --version\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --version\n"
#~ "\n"

#~ msgid "How do I report bugs?"
#~ msgstr "Comment puis-je rapporter les anomalies ?"

#, no-wrap
#~ msgid ""
#~ " setsebool -P virt_use_execmem=on\n"
#~ "\n"
#~ msgstr ""
#~ " setsebool -P virt_use_execmem=on\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-test-tool\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-test-tool\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " sudo update-guestfs-appliance\n"
#~ "\n"
#~ msgstr ""
#~ " sudo update-guestfs-appliance\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_BACKEND=direct\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_BACKEND=direct\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " yum install '*guestf*'\n"
#~ "\n"
#~ msgstr ""
#~ " yum install '*guestf*'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " sudo chmod 0644 /boot/vmlinuz*\n"
#~ "\n"
#~ msgstr ""
#~ " sudo chmod 0644 /boot/vmlinuz*\n"
#~ "\n"

#~ msgid ""
#~ "Canonical decided to change the permissions on the kernel so that it's "
#~ "not readable except by root.  This is completely stupid, but they won't "
#~ "change it (L<https://bugs.launchpad.net/ubuntu/+source/linux/"
#~ "+bug/759725>).  So every user should do this:"
#~ msgstr ""
#~ "Canonical a décidé de modifier les permissions sur le noyau de façon à ce "
#~ "rien ne soit accessible en lecture hormis root. C'est complètement "
#~ "stupide, mais il ne veulent rien entendre (L<https://bugs.launchpad.net/"
#~ "ubuntu/+source/linux/+bug/759725>).  Donc chaque utilisateur doit faire "
#~ "ce qui suit :"

#, no-wrap
#~ msgid ""
#~ " emerge libguestfs\n"
#~ "\n"
#~ msgstr ""
#~ " emerge libguestfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-default-backend=libvirt       # libguestfs >= 1.22\n"
#~ " ./configure --with-default-attach-method=libvirt # libguestfs <= 1.20\n"
#~ " make\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-default-backend=libvirt       # libguestfs >= 1.22\n"
#~ " ./configure --with-default-attach-method=libvirt # libguestfs <= 1.20\n"
#~ " make\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "    upstream          Fedora 18+\n"
#~ "    non-Fedora         RHEL 7+\n"
#~ "    non-RHEL\n"
#~ "\n"
#~ msgstr ""
#~ "    upstream          Fedora 18+\n"
#~ "    non-Fedora         RHEL 7+\n"
#~ "    non-RHEL\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mkdir -p /usr/local/lib/guestfs/appliance\n"
#~ " libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
#~ " ls -l /usr/local/lib/guestfs/appliance\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir -p /usr/local/lib/guestfs/appliance\n"
#~ " libguestfs-make-fixed-appliance /usr/local/lib/guestfs/appliance\n"
#~ " ls -l /usr/local/lib/guestfs/appliance\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /var/tmp/.guestfs-<UID>\n"
#~ "\n"
#~ msgstr ""
#~ " /var/tmp/.guestfs-<UID>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ ls -lh test1.img\n"
#~ " -rw-rw-r--. 1 rjones rjones 100M Aug  8 08:08 test1.img\n"
#~ " $ du -sh test1.img\n"
#~ " 3.6M\ttest1.img\n"
#~ "\n"
#~ msgstr ""
#~ " $ ls -lh test1.img\n"
#~ " -rw-rw-r--. 1 rjones rjones 100M Aug  8 08:08 test1.img\n"
#~ " $ du -sh test1.img\n"
#~ " 3.6M\ttest1.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify --convert qcow2 disk.raw disk.qcow2\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify --convert qcow2 disk.raw disk.qcow2\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> mount-options utf8 /dev/sda1 /\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> mount-options utf8 /dev/sda1 /\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [...] -m /dev/sda1:/:utf8\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [...] -m /dev/sda1:/:utf8\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_mount_options (g, \"utf8\", \"/dev/sda1\", \"/\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_mount_options (g, \"utf8\", \"/dev/sda1\", \"/\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                  C  guestfs_ln_sf (g, target, linkname);\n"
#~ "             Python  g.ln_sf (target, linkname);\n"
#~ "              OCaml  g#ln_sf target linkname;\n"
#~ "               Perl  $g->ln_sf (target, linkname);\n"
#~ "  Shell (guestfish)  ln-sf target linkname\n"
#~ "                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
#~ "\n"
#~ msgstr ""
#~ "                  C  guestfs_ln_sf (g, target, linkname);\n"
#~ "             Python  g.ln_sf (target, linkname);\n"
#~ "              OCaml  g#ln_sf target linkname;\n"
#~ "               Perl  $g->ln_sf (target, linkname);\n"
#~ "  Shell (guestfish)  ln-sf target linkname\n"
#~ "                PHP  guestfs_ln_sf ($g, $target, $linkname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_DEBUG=1\n"
#~ " export LIBGUESTFS_TRACE=1\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_DEBUG=1\n"
#~ " export LIBGUESTFS_TRACE=1\n"
#~ "\n"

#~ msgid "C<LIBGUESTFS_DEBUG>"
#~ msgstr "C<LIBGUESTFS_DEBUG>"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_TRACE=1\n"
#~ " export LIBGUESTFS_DEBUG=1\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_TRACE=1\n"
#~ " export LIBGUESTFS_DEBUG=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " setenv LIBGUESTFS_TRACE 1\n"
#~ " setenv LIBGUESTFS_DEBUG 1\n"
#~ "\n"
#~ msgstr ""
#~ " setenv LIBGUESTFS_TRACE 1\n"
#~ " setenv LIBGUESTFS_DEBUG 1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a /dev/vg/my_root_fs run : fsck /dev/sda\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a /dev/vg/my_root_fs run : fsck /dev/sda\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ guestfish --ro -a guest.img\n"
#~ " ><fs> run\n"
#~ " ><fs> fsck /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " $ guestfish --ro -a guest.img\n"
#~ " ><fs> run\n"
#~ " ><fs> fsck /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-rescue --ro guest.img\n"
#~ " ><rescue> /sbin/fsck /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-rescue --ro guest.img\n"
#~ " ><rescue> /sbin/fsck /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> debug sh \"cmd arg1 arg2 ...\"\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> debug sh \"cmd arg1 arg2 ...\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat fedora.img /var/log/messages\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat fedora.img /var/log/messages\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " SKIP_TEST_<CMD>_<NUM>=1\n"
#~ "\n"
#~ msgstr ""
#~ " SKIP_TEST_<CMD>_<NUM>=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " SKIP_TEST_<CMD>=1\n"
#~ "\n"
#~ msgstr ""
#~ " SKIP_TEST_<CMD>=1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " TEST_ONLY=\"vfs_type zerofree\"\n"
#~ "\n"
#~ msgstr ""
#~ " TEST_ONLY=\"vfs_type zerofree\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 000+ basic tests:\n"
#~ " \n"
#~ msgstr ""
#~ " - 000+ basic tests:\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " - 100  launch, create partitions and LVs and filesystems\n"
#~ " \n"
#~ msgstr ""
#~ " - 100  launch, create partitions and LVs and filesystems\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " - 400+ events:\n"
#~ " \n"
#~ msgstr ""
#~ " - 400+ events:\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   410  close event\n"
#~ "   420  log messages\n"
#~ "   430  progress messages\n"
#~ " \n"
#~ msgstr ""
#~ "   410  close event\n"
#~ "   420  log messages\n"
#~ "   430  progress messages\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " - 800+ regression tests (specific to the language)\n"
#~ " \n"
#~ msgstr ""
#~ " - 800+ regression tests (specific to the language)\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " - 900+ any other custom tests for the language\n"
#~ "\n"
#~ msgstr ""
#~ " - 900+ any other custom tests for the language\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
#~ " ;;; Exceptions: Makefile and ChangeLog modes.\n"
#~ " (add-hook 'find-file-hook\n"
#~ "     '(lambda () (if (and buffer-file-name\n"
#~ "                          (string-match \"/libguestfs\\\\>\"\n"
#~ "                              (buffer-file-name))\n"
#~ "                          (not (string-equal mode-name \"Change Log\"))\n"
#~ "                          (not (string-equal mode-name \"Makefile\")))\n"
#~ "                     (setq indent-tabs-mode nil))))\n"
#~ " \n"
#~ msgstr ""
#~ " ;;; In libguestfs, indent with spaces everywhere (not TABs).\n"
#~ " ;;; Exceptions: Makefile and ChangeLog modes.\n"
#~ " (add-hook 'find-file-hook\n"
#~ "     '(lambda () (if (and buffer-file-name\n"
#~ "                          (string-match \"/libguestfs\\\\>\"\n"
#~ "                              (buffer-file-name))\n"
#~ "                          (not (string-equal mode-name \"Change Log\"))\n"
#~ "                          (not (string-equal mode-name \"Makefile\")))\n"
#~ "                     (setq indent-tabs-mode nil))))\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " ;;; When editing C sources in libguestfs, use this style.\n"
#~ " (defun libguestfs-c-mode ()\n"
#~ "   \"C mode with adjusted defaults for use with libguestfs.\"\n"
#~ "   (interactive)\n"
#~ "   (c-set-style \"K&R\")\n"
#~ "   (setq c-indent-level 2)\n"
#~ "   (setq c-basic-offset 2))\n"
#~ " (add-hook 'c-mode-hook\n"
#~ "           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
#~ "                               (buffer-file-name))\n"
#~ "                           (libguestfs-c-mode))))\n"
#~ "\n"
#~ msgstr ""
#~ " ;;; When editing C sources in libguestfs, use this style.\n"
#~ " (defun libguestfs-c-mode ()\n"
#~ "   \"C mode with adjusted defaults for use with libguestfs.\"\n"
#~ "   (interactive)\n"
#~ "   (c-set-style \"K&R\")\n"
#~ "   (setq c-indent-level 2)\n"
#~ "   (setq c-basic-offset 2))\n"
#~ " (add-hook 'c-mode-hook\n"
#~ "           '(lambda () (if (string-match \"/libguestfs\\\\>\"\n"
#~ "                               (buffer-file-name))\n"
#~ "                           (libguestfs-c-mode))))\n"
#~ "\n"

#~ msgid "C<make check>"
#~ msgstr "C<make check>"

#~ msgid "C<make check-valgrind>"
#~ msgstr "C<make check-valgrind>"

#~ msgid "C<make check-valgrind-local-guests>"
#~ msgstr "C<make check-valgrind-local-guests>"

#~ msgid "C<make check-direct>"
#~ msgstr "C<make check-direct>"

#~ msgid "C<make check-valgrind-direct>"
#~ msgstr "C<make check-valgrind-direct>"

#~ msgid "C<make check-uml>"
#~ msgstr "C<make check-uml>"

#, no-wrap
#~ msgid ""
#~ " make check-uml LIBGUESTFS_HV=~/d/linux-um/vmlinux\n"
#~ "\n"
#~ msgstr ""
#~ " make check-uml LIBGUESTFS_HV=~/d/linux-um/vmlinux\n"
#~ "\n"

#~ msgid "C<make check-valgrind-uml>"
#~ msgstr "C<make check-valgrind-uml>"

#~ msgid "C<make check-with-upstream-qemu>"
#~ msgstr "C<make check-with-upstream-qemu>"

#, no-wrap
#~ msgid ""
#~ " make check-with-upstream-qemu QEMUDIR=/usr/src/qemu\n"
#~ "\n"
#~ msgstr ""
#~ " make check-with-upstream-qemu QEMUDIR=/usr/src/qemu\n"
#~ "\n"

#~ msgid "C<make check-with-upstream-libvirt>"
#~ msgstr "C<make check-with-upstream-libvirt>"

#, no-wrap
#~ msgid ""
#~ " make check-with-upstream-libvirt LIBVIRTDIR=/usr/src/libvirt\n"
#~ "\n"
#~ msgstr ""
#~ " make check-with-upstream-libvirt LIBVIRTDIR=/usr/src/libvirt\n"
#~ "\n"

#~ msgid "C<make check-slow>"
#~ msgstr "C<make check-slow>"

#~ msgid "C<make check-all>"
#~ msgstr "C<make check-all>"

#~ msgid "C<make check-release>"
#~ msgstr "C<make check-release>"

#, no-wrap
#~ msgid ""
#~ " asprintf (&cmd, \"cat %R\", path);\n"
#~ "\n"
#~ msgstr ""
#~ " asprintf (&cmd, \"cat %R\", path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                         |\n"
#~ "          guestfs_create / guestfs_create_flags\n"
#~ "                         |\n"
#~ "                         |\n"
#~ "                     ____V_____\n"
#~ "                    /          \\\n"
#~ "                    |  CONFIG  |\n"
#~ "                    \\__________/\n"
#~ "                       ^   ^  \\\n"
#~ "                       |    \\  \\ guestfs_launch\n"
#~ "                       |    _\\__V______\n"
#~ "                       |   /           \\\n"
#~ "                       |   | LAUNCHING |\n"
#~ "                       |   \\___________/\n"
#~ "                       |       /\n"
#~ "                       |  guestfs_launch\n"
#~ "                       |     /\n"
#~ "                     __|____V\n"
#~ "                    /        \\\n"
#~ "                    | READY  |\n"
#~ "                    \\________/\n"
#~ "\n"
#~ msgstr ""
#~ "                         |\n"
#~ "          guestfs_create / guestfs_create_flags\n"
#~ "                         |\n"
#~ "                         |\n"
#~ "                     ____V_____\n"
#~ "                    /          \\\n"
#~ "                    |  CONFIG  |\n"
#~ "                    \\__________/\n"
#~ "                       ^   ^  \\\n"
#~ "                       |    \\  \\ guestfs_launch\n"
#~ "                       |    _\\__V______\n"
#~ "                       |   /           \\\n"
#~ "                       |   | LAUNCHING |\n"
#~ "                       |   \\___________/\n"
#~ "                       |       /\n"
#~ "                       |  guestfs_launch\n"
#~ "                       |     /\n"
#~ "                     __|____V\n"
#~ "                    /        \\\n"
#~ "                    | READY  |\n"
#~ "                    \\________/\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " supermin: ext2 mini initrd starting up\n"
#~ " supermin: mounting /sys\n"
#~ " supermin: internal insmod libcrc32c.ko\n"
#~ " supermin: internal insmod crc32c-intel.ko\n"
#~ "\n"
#~ msgstr ""
#~ " supermin: ext2 mini initrd starting up\n"
#~ " supermin: mounting /sys\n"
#~ " supermin: internal insmod libcrc32c.ko\n"
#~ " supermin: internal insmod crc32c-intel.ko\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " supermin: picked /sys/block/vdb/dev as root device\n"
#~ " supermin: creating /dev/root as block special 252:16\n"
#~ " supermin: mounting new root on /root\n"
#~ " supermin: chroot\n"
#~ " Starting /init script ...\n"
#~ "\n"
#~ msgstr ""
#~ " supermin: picked /sys/block/vdb/dev as root device\n"
#~ " supermin: creating /dev/root as block special 252:16\n"
#~ " supermin: mounting new root on /root\n"
#~ " supermin: chroot\n"
#~ " Starting /init script ...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " verbose daemon enabled\n"
#~ "\n"
#~ msgstr ""
#~ " verbose daemon enabled\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " total length (header + arguments,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_args (encoded as XDR)\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + arguments,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_args (encoded as XDR)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " total length (header + ret,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_ret (encoded as XDR)\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + ret,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_ret (encoded as XDR)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " total length (header + error,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_message_error (encoded as XDR)\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + error,\n"
#~ "      but not including the length word itself)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_message_error (encoded as XDR)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " total length (header + arguments,\n"
#~ "      but not including the length word itself,\n"
#~ "      and not including the chunks)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_args (encoded as XDR)\n"
#~ " sequence of chunks for FileIn param #0\n"
#~ " sequence of chunks for FileIn param #1 etc.\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + arguments,\n"
#~ "      but not including the length word itself,\n"
#~ "      and not including the chunks)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_args (encoded as XDR)\n"
#~ " sequence of chunks for FileIn param #0\n"
#~ " sequence of chunks for FileIn param #1 etc.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " length of chunk (not including length word itself)\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ "   ...\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (with data.data_len == 0)\n"
#~ "\n"
#~ msgstr ""
#~ " length of chunk (not including length word itself)\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (encoded as XDR)\n"
#~ "   ...\n"
#~ " length of chunk\n"
#~ " struct guestfs_chunk (with data.data_len == 0)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " total length (header + ret,\n"
#~ "      but not including the length word itself,\n"
#~ "      and not including the chunks)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_ret (encoded as XDR)\n"
#~ " sequence of chunks for FileOut param #0\n"
#~ " sequence of chunks for FileOut param #1 etc.\n"
#~ "\n"
#~ msgstr ""
#~ " total length (header + ret,\n"
#~ "      but not including the length word itself,\n"
#~ "      and not including the chunks)\n"
#~ " struct guestfs_message_header (encoded as XDR)\n"
#~ " struct guestfs_<foo>_ret (encoded as XDR)\n"
#~ " sequence of chunks for FileOut param #0\n"
#~ " sequence of chunks for FileOut param #1 etc.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " time guestfish -a /dev/null run\n"
#~ "\n"
#~ msgstr ""
#~ " time guestfish -a /dev/null run\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " time guestfish --ro -a disk.img -i exit\n"
#~ "\n"
#~ msgstr ""
#~ " time guestfish --ro -a disk.img -i exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " time guestfish --ro -d GuestName -i exit\n"
#~ "\n"
#~ msgstr ""
#~ " time guestfish --ro -d GuestName -i exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-make-fixed-appliance <directory>\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-make-fixed-appliance <directory>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  12 ++---+----+----+----+-----+----+----+----+----+---++\n"
#~ "     +    +    +    +    +     +    +    +    +    +    *\n"
#~ "     |                                                  |\n"
#~ "     |                                               *  |\n"
#~ "  11 ++                                                ++\n"
#~ "     |                                                  |\n"
#~ "     |                                                  |\n"
#~ "     |                                          *  *    |\n"
#~ "  10 ++                                                ++\n"
#~ "     |                                        *         |\n"
#~ "     |                                                  |\n"
#~ " s   |                                                  |\n"
#~ "   9 ++                                                ++\n"
#~ " e   |                                                  |\n"
#~ "     |                                     *            |\n"
#~ " c   |                                                  |\n"
#~ "   8 ++                                  *             ++\n"
#~ " o   |                                *                 |\n"
#~ "     |                                                  |\n"
#~ " n 7 ++                                                ++\n"
#~ "     |                              *                   |\n"
#~ " d   |                           *                      |\n"
#~ "     |                                                  |\n"
#~ " s 6 ++                                                ++\n"
#~ "     |                      *  *                        |\n"
#~ "     |                   *                              |\n"
#~ "     |                                                  |\n"
#~ "   5 ++                                                ++\n"
#~ "     |                                                  |\n"
#~ "     |                 *                                |\n"
#~ "     |            * *                                   |\n"
#~ "   4 ++                                                ++\n"
#~ "     |                                                  |\n"
#~ "     |                                                  |\n"
#~ "     +    *  * *    +    +     +    +    +    +    +    +\n"
#~ "   3 ++-*-+----+----+----+-----+----+----+----+----+---++\n"
#~ "     0    2    4    6    8     10   12   14   16   18   20\n"
#~ "               number of parallel appliances\n"
#~ "\n"
#~ msgstr ""
#~ "  12 ++---+----+----+----+-----+----+----+----+----+---++\n"
#~ "     +    +    +    +    +     +    +    +    +    +    *\n"
#~ "     |                                                  |\n"
#~ "     |                                               *  |\n"
#~ "  11 ++                                                ++\n"
#~ "     |                                                  |\n"
#~ "     |                                                  |\n"
#~ "     |                                          *  *    |\n"
#~ "  10 ++                                                ++\n"
#~ "     |                                        *         |\n"
#~ "     |                                                  |\n"
#~ " s   |                                                  |\n"
#~ "   9 ++                                                ++\n"
#~ " e   |                                                  |\n"
#~ "     |                                     *            |\n"
#~ " c   |                                                  |\n"
#~ "   8 ++                                  *             ++\n"
#~ " o   |                                *                 |\n"
#~ "     |                                                  |\n"
#~ " n 7 ++                                                ++\n"
#~ "     |                              *                   |\n"
#~ " d   |                           *                      |\n"
#~ "     |                                                  |\n"
#~ " s 6 ++                                                ++\n"
#~ "     |                      *  *                        |\n"
#~ "     |                   *                              |\n"
#~ "     |                                                  |\n"
#~ "   5 ++                                                ++\n"
#~ "     |                                                  |\n"
#~ "     |                 *                                |\n"
#~ "     |            * *                                   |\n"
#~ "   4 ++                                                ++\n"
#~ "     |                                                  |\n"
#~ "     |                                                  |\n"
#~ "     +    *  * *    +    +     +    +    +    +    +    +\n"
#~ "   3 ++-*-+----+----+----+-----+----+----+----+----+---++\n"
#~ "     0    2    4    6    8     10   12   14   16   18   20\n"
#~ "               number of parallel appliances\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " sub test {\n"
#~ "     my $g = Sys::Guestfs->new;\n"
#~ "     $g->add_drive_ro (\"/dev/null\");\n"
#~ "     $g->launch ();\n"
#~ "     \n"
#~ msgstr ""
#~ " sub test {\n"
#~ "     my $g = Sys::Guestfs->new;\n"
#~ "     $g->add_drive_ro (\"/dev/null\");\n"
#~ "     $g->launch ();\n"
#~ "     \n"

#, no-wrap
#~ msgid ""
#~ "     # You could add some work for libguestfs to do here.\n"
#~ "     \n"
#~ msgstr ""
#~ "     # You could add some work for libguestfs to do here.\n"
#~ "     \n"

#, no-wrap
#~ msgid ""
#~ "     $g->close ();\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ "     $g->close ();\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Get everything into cache.\n"
#~ " test (); test (); test ();\n"
#~ " \n"
#~ msgstr ""
#~ " # Get everything into cache.\n"
#~ " test (); test (); test ();\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " for my $nr_threads (1..20) {\n"
#~ "     my $start_t = time ();\n"
#~ "     my @threads;\n"
#~ "     foreach (1..$nr_threads) {\n"
#~ "         push @threads, threads->create (\\&test)\n"
#~ "     }\n"
#~ "     foreach (@threads) {\n"
#~ "         $_->join ();\n"
#~ "         if (my $err = $_->error ()) {\n"
#~ "             die \"launch failed with $nr_threads threads: $err\"\n"
#~ "         }\n"
#~ "     }\n"
#~ "     my $end_t = time ();\n"
#~ "     printf (\"%d %.2f\\n\", $nr_threads, $end_t - $start_t);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " for my $nr_threads (1..20) {\n"
#~ "     my $start_t = time ();\n"
#~ "     my @threads;\n"
#~ "     foreach (1..$nr_threads) {\n"
#~ "         push @threads, threads->create (\\&test)\n"
#~ "     }\n"
#~ "     foreach (@threads) {\n"
#~ "         $_->join ();\n"
#~ "         if (my $err = $_->error ()) {\n"
#~ "             die \"launch failed with $nr_threads threads: $err\"\n"
#~ "         }\n"
#~ "     }\n"
#~ "     my $end_t = time ();\n"
#~ "     printf (\"%d %.2f\\n\", $nr_threads, $end_t - $start_t);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " global last;\n"
#~ " \n"
#~ msgstr ""
#~ " global last;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " function display_time () {\n"
#~ "       now = gettimeofday_us ();\n"
#~ "       delta = 0;\n"
#~ "       if (last > 0)\n"
#~ "             delta = now - last;\n"
#~ "       last = now;\n"
#~ " \n"
#~ msgstr ""
#~ " function display_time () {\n"
#~ "       now = gettimeofday_us ();\n"
#~ "       delta = 0;\n"
#~ "       if (last > 0)\n"
#~ "             delta = now - last;\n"
#~ "       last = now;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "       printf (\"%d (+%d):\", now, delta);\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ "       printf (\"%d (+%d):\", now, delta);\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " probe begin {\n"
#~ "       last = 0;\n"
#~ "       printf (\"ready\\n\");\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ " probe begin {\n"
#~ "       last = 0;\n"
#~ "       printf (\"ready\\n\");\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Display all calls to static markers. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .provider(\"guestfs\").mark(\"*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", $$name, $$parms);\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ " /* Display all calls to static markers. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .provider(\"guestfs\").mark(\"*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", $$name, $$parms);\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Display all calls to guestfs_* functions. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_[a-z]*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " /* Display all calls to guestfs_* functions. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_[a-z]*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # stap time.stap\n"
#~ " ready\n"
#~ "\n"
#~ msgstr ""
#~ " # stap time.stap\n"
#~ " ready\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ guestfish -a /dev/null run\n"
#~ "\n"
#~ msgstr ""
#~ " $ guestfish -a /dev/null run\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #!/bin/bash -\n"
#~ " \n"
#~ msgstr ""
#~ " #!/bin/bash -\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Set this to point to the real qemu binary.\n"
#~ " qemu=/usr/bin/qemu-kvm\n"
#~ " \n"
#~ msgstr ""
#~ " # Set this to point to the real qemu binary.\n"
#~ " qemu=/usr/bin/qemu-kvm\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " if [ \"$1\" != \"-global\" ]; then\n"
#~ "     # Scanning help output etc.\n"
#~ "     exec $qemu \"$@\"\n"
#~ " else \n"
#~ "     # Really running qemu.\n"
#~ "     exec $qemu -S -s \"$@\"\n"
#~ " fi\n"
#~ "\n"
#~ msgstr ""
#~ " if [ \"$1\" != \"-global\" ]; then\n"
#~ "     # Scanning help output etc.\n"
#~ "     exec $qemu \"$@\"\n"
#~ " else \n"
#~ "     # Really running qemu.\n"
#~ "     exec $qemu -S -s \"$@\"\n"
#~ " fi\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " LIBGUESTFS_HV=/path/to/qemu-wrapper guestfish -a /dev/null -v run\n"
#~ "\n"
#~ msgstr ""
#~ " LIBGUESTFS_HV=/path/to/qemu-wrapper guestfish -a /dev/null -v run\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ gdb\n"
#~ " (gdb) set architecture i8086\n"
#~ " The target architecture is assumed to be i8086\n"
#~ " (gdb) target remote :1234\n"
#~ " Remote debugging using :1234\n"
#~ " 0x0000fff0 in ?? ()\n"
#~ " (gdb) cont\n"
#~ "\n"
#~ msgstr ""
#~ " $ gdb\n"
#~ " (gdb) set architecture i8086\n"
#~ " The target architecture is assumed to be i8086\n"
#~ " (gdb) target remote :1234\n"
#~ " Remote debugging using :1234\n"
#~ " 0x0000fff0 in ?? ()\n"
#~ " (gdb) cont\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : checksum-device md5 /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : checksum-device md5 /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i checksum sha256 /etc/passwd\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i checksum sha256 /etc/passwd\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i \\\n"
#~ "   checksum sha256 'win:\\windows\\system32\\config\\SOFTWARE'\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i \\\n"
#~ "   checksum sha256 'win:\\windows\\system32\\config\\SOFTWARE'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out / cd.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a cd.iso -m /dev/sda tgz-out /files cd.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " truncate -s 10G target.img\n"
#~ " virt-format -a target.img --partition=mbr --lvm --filesystem=ext3\n"
#~ "\n"
#~ msgstr ""
#~ " truncate -s 10G target.img\n"
#~ " virt-format -a target.img --partition=mbr --lvm --filesystem=ext3\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a source.img -m /dev/sda1  -- tar-out / - | \\\n"
#~ " guestfish --rw -a target.img -m /dev/VG/LV -- tar-in - /\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a source.img -m /dev/sda1  -- tar-out / - | \\\n"
#~ " guestfish --rw -a target.img -m /dev/VG/LV -- tar-in - /\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a target.img -m /dev/VG/LV\n"
#~ " ><fs> ll /\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a target.img -m /dev/VG/LV\n"
#~ " ><fs> ll /\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish\n"
#~ " ><fs> add-ro input.img\n"
#~ " ><fs> sparse output.img 10G     # adjust the output size\n"
#~ " ><fs> run\n"
#~ " # Create a partition table on the output disk:\n"
#~ " ><fs> part-init /dev/sdb mbr\n"
#~ " ><fs> part-add /dev/sdb p 2048 -2048\n"
#~ " # Copy the data to the target partition:\n"
#~ " ><fs> copy-device-to-device /dev/sda /dev/sdb1 sparse:true\n"
#~ " # Optionally resize the target filesystem.  Use ntfsresize\n"
#~ " # for Windows guests:\n"
#~ " ><fs> resize2fs /dev/sdb1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish\n"
#~ " ><fs> add-ro input.img\n"
#~ " ><fs> sparse output.img 10G     # adjust the output size\n"
#~ " ><fs> run\n"
#~ " # Create a partition table on the output disk:\n"
#~ " ><fs> part-init /dev/sdb mbr\n"
#~ " ><fs> part-add /dev/sdb p 2048 -2048\n"
#~ " # Copy the data to the target partition:\n"
#~ " ><fs> copy-device-to-device /dev/sda /dev/sdb1 sparse:true\n"
#~ " # Optionally resize the target filesystem.  Use ntfsresize\n"
#~ " # for Windows guests:\n"
#~ " ><fs> resize2fs /dev/sdb1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img -i rm /file/to/delete\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img -i rm /file/to/delete\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img -i touch /file/to/touch\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img -i touch /file/to/touch\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i stat /file/to/stat\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i stat /file/to/stat\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 sda1.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d Guest run : download /dev/vg_guest/lv_root lv.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 - | gzip > sda1.gz\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : download /dev/sda1 - | gzip > sda1.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d BrokenGuest /boot/grub2/grub.cfg\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d BrokenGuest /boot/grub2/grub.cfg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -d BrokenGuest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -d BrokenGuest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -d Guest /home .\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -d Guest /home .\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -d WinGuest 'win:c:\\windows\\system32\\config' .\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d Guest /home - | gzip --best > home.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mkdir outputdir\n"
#~ " virt-builder --get-kernel disk.img -o outputdir\n"
#~ " ls -lh outputdir\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir outputdir\n"
#~ " virt-builder --get-kernel disk.img -o outputdir\n"
#~ " ls -lh outputdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " \n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " set -e\n"
#~ " \n"
#~ msgstr ""
#~ " set -e\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " vm=\"$1\"\n"
#~ " dir=/home\n"
#~ " \n"
#~ msgstr ""
#~ " vm=\"$1\"\n"
#~ " dir=/home\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
#~ " \n"
#~ msgstr ""
#~ " eval $(guestfish --ro -d \"$vm\" -i --listen)\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " for d in $(guestfish --remote ls \"$dir\"); do\n"
#~ "     echo -n \"$dir/$d\"\n"
#~ "     echo -ne '\\t'\n"
#~ "     guestfish --remote du \"$dir/$d\";\n"
#~ " done | sort -nr -k 2\n"
#~ " \n"
#~ msgstr ""
#~ " for d in $(guestfish --remote ls \"$dir\"); do\n"
#~ "     echo -n \"$dir/$d\"\n"
#~ "     echo -ne '\\t'\n"
#~ "     guestfish --remote du \"$dir/$d\";\n"
#~ " done | sort -nr -k 2\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote exit\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-get-product-name \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-get-product-name \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # product-name.sh RHEL60x64\n"
#~ " Red Hat Enterprise Linux Server release 6.0 (Santiago)\n"
#~ "\n"
#~ msgstr ""
#~ " # product-name.sh RHEL60x64\n"
#~ " Red Hat Enterprise Linux Server release 6.0 (Santiago)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-inspector RHEL60x64 > xml\n"
#~ " # xpath '//product_name' < xml\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-inspector RHEL60x64 > xml\n"
#~ " # xpath '//product_name' < xml\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <product_name>Red Hat Enterprise Linux Server release 6.0 (Santiago)</product_name>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat Guest /var/log/messages | less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat Guest /var/log/messages | less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img run : pread-device /dev/sda 0x200 0 |\n"
#~ "   hexdump -C\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img run : pread-device /dev/sda 0x200 0 |\n"
#~ "   hexdump -C\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img run : hexedit /dev/sda 0x200\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img run : hexedit /dev/sda 0x200\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " DEFAULT linux\n"
#~ " LABEL linux\n"
#~ "   SAY Booting the kernel\n"
#~ "   KERNEL vmlinuz\n"
#~ "   INITRD initrd\n"
#~ "   APPEND ro root=/dev/sda3\n"
#~ "\n"
#~ msgstr ""
#~ " DEFAULT linux\n"
#~ " LABEL linux\n"
#~ "   SAY Booting the kernel\n"
#~ "   KERNEL vmlinuz\n"
#~ "   INITRD initrd\n"
#~ "   APPEND ro root=/dev/sda3\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img -i\n"
#~ " # Upload the master boot record and configuration file:\n"
#~ " ><fs> upload ..../mbr.bin /boot/mbr.bin\n"
#~ " ><fs> upload ..../syslinux.cfg /boot/syslinux.cfg\n"
#~ " # Put the MBR into the boot sector:\n"
#~ " ><fs> copy-file-to-device /boot/mbr.bin /dev/sda size:440\n"
#~ " # Install syslinux on the first partition:\n"
#~ " ><fs> extlinux /boot\n"
#~ " # Set the first partition as bootable:\n"
#~ " ><fs> part-set-bootable /dev/sda 1 true\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img -i\n"
#~ " # Upload the master boot record and configuration file:\n"
#~ " ><fs> upload ..../mbr.bin /boot/mbr.bin\n"
#~ " ><fs> upload ..../syslinux.cfg /boot/syslinux.cfg\n"
#~ " # Put the MBR into the boot sector:\n"
#~ " ><fs> copy-file-to-device /boot/mbr.bin /dev/sda size:440\n"
#~ " # Install syslinux on the first partition:\n"
#~ " ><fs> extlinux /boot\n"
#~ " # Set the first partition as bootable:\n"
#~ " ><fs> part-set-bootable /dev/sda 1 true\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-list-applications \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " set -e\n"
#~ " eval \"$(guestfish --ro -d \"$1\" --i --listen)\"\n"
#~ " root=\"$(guestfish --remote inspect-get-roots)\"\n"
#~ " guestfish --remote inspect-list-applications \"$root\"\n"
#~ " guestfish --remote exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # list-apps.sh WinGuest\n"
#~ " [0] = {\n"
#~ "   app_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_display_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 3.6.12 (en-GB)\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: Mozilla\n"
#~ "   app_url: http://www.mozilla.com/en-GB/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description: Mozilla Firefox\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: VLC media player\n"
#~ "   app_display_name: VLC media player 1.1.5\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 1.1.5\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: VideoLAN\n"
#~ "   app_url: http://www.videolan.org/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " # list-apps.sh WinGuest\n"
#~ " [0] = {\n"
#~ "   app_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_display_name: Mozilla Firefox (3.6.12)\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 3.6.12 (en-GB)\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\Mozilla Firefox\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: Mozilla\n"
#~ "   app_url: http://www.mozilla.com/en-GB/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description: Mozilla Firefox\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: VLC media player\n"
#~ "   app_display_name: VLC media player 1.1.5\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 1.1.5\n"
#~ "   app_release:\n"
#~ "   app_install_path: C:\\Program Files\\VideoLAN\\VLC\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher: VideoLAN\n"
#~ "   app_url: http://www.videolan.org/\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d domname /etc/passwd -e 's/^root:.*?:/root::/'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img run : upload sda1.img /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img run : upload sda1.img /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -d Guest run : upload lv.img /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -d Guest run : upload lv.img /dev/vg_guest/lv_root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -d Guest run : \\\n"
#~ "   upload lv.img /dev/vg_guest/lv_root : \\\n"
#~ "   resize2fs /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -d Guest run : \\\n"
#~ "   upload lv.img /dev/vg_guest/lv_root : \\\n"
#~ "   resize2fs /dev/vg_guest/lv_root\n"
#~ "\n"

#, fuzzy
#~| msgid ""
#~| " virt-inspector [--options] -d domname\n"
#~| "\n"
#~ msgid "virt-inspector --help differs from manpage"
#~ msgstr ""
#~ " virt-inspector [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-drive-scratch: Add a temporary scratch drive\n"
#~ " aug-label\n"
#~ " aug-setm\n"
#~ " journal-open: Systemd journal support\n"
#~ " journal-close\n"
#~ " journal-next\n"
#~ " journal-skip\n"
#~ " journal-get\n"
#~ " journal-get-data-threshold\n"
#~ " journal-set-data-threshold\n"
#~ " remount: Allow rw flag to be adjusted on mounted filesystems\n"
#~ " set-uuid: Set UUID of filesystem\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-scratch: Add a temporary scratch drive\n"
#~ " aug-label\n"
#~ " aug-setm\n"
#~ " journal-open: Systemd journal support\n"
#~ " journal-close\n"
#~ " journal-next\n"
#~ " journal-skip\n"
#~ " journal-get\n"
#~ " journal-get-data-threshold\n"
#~ " journal-set-data-threshold\n"
#~ " remount: Allow rw flag to be adjusted on mounted filesystems\n"
#~ " set-uuid: Set UUID of filesystem\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a ssh://example.com/path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a ssh://example.com/path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-extra-packages=\"list of package names\"\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-extra-packages=\"list of package names\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-supermin-extra-options=\"...\"\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-supermin-extra-options=\"...\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cp-r\n"
#~ " extlinux\n"
#~ " feature-available\n"
#~ " get-program\n"
#~ " is-whole-device\n"
#~ " part-get-gpt-type\n"
#~ " part-set-gpt-type\n"
#~ " rename\n"
#~ " set-program\n"
#~ " syslinux\n"
#~ "\n"
#~ msgstr ""
#~ " cp-r\n"
#~ " extlinux\n"
#~ " feature-available\n"
#~ " get-program\n"
#~ " is-whole-device\n"
#~ " part-get-gpt-type\n"
#~ " part-set-gpt-type\n"
#~ " rename\n"
#~ " set-program\n"
#~ " syslinux\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_event_to_string\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_event_to_string\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " acl-delete-def-file\n"
#~ " acl-get-file\n"
#~ " acl-set-file\n"
#~ " canonical-device-name\n"
#~ " cap-get-file\n"
#~ " cap-set-file\n"
#~ " create-flags\n"
#~ " device-index\n"
#~ " disk-has-backing-file\n"
#~ " disk-format\n"
#~ " disk-virtual-size\n"
#~ " filesystem-available\n"
#~ " fill-dir\n"
#~ " fstrim\n"
#~ " get-cachedir\n"
#~ " get-libvirt-requested-credentials\n"
#~ " get-libvirt-requested-credential-prompt\n"
#~ " get-libvirt-requested-credential-challenge\n"
#~ " get-libvirt-requested-credential-defresult\n"
#~ " get-tmpdir\n"
#~ " hivex-close\n"
#~ " hivex-commit\n"
#~ " hivex-node-add-child\n"
#~ " hivex-node-children\n"
#~ " hivex-node-delete-child\n"
#~ " hivex-node-get-child\n"
#~ " hivex-node-get-value\n"
#~ " hivex-node-name\n"
#~ " hivex-node-parent\n"
#~ " hivex-node-set-value\n"
#~ " hivex-node-values\n"
#~ " hivex-open\n"
#~ " hivex-root\n"
#~ " hivex-value-key\n"
#~ " hivex-value-type\n"
#~ " hivex-value-utf8\n"
#~ " hivex-value-value\n"
#~ " inspect-list-applications2 (John Eckersberg)\n"
#~ " list-ldm-volumes\n"
#~ " list-ldm-partitions\n"
#~ " ldmtool-create-all\n"
#~ " ldmtool-diskgroup-disks\n"
#~ " ldmtool-diskgroup-name\n"
#~ " ldmtool-diskgroup-volumes\n"
#~ " ldmtool-remove-all\n"
#~ " ldmtool-scan\n"
#~ " ldmtool-scan-devices\n"
#~ " ldmtool-volume-hint\n"
#~ " ldmtool-volume-partitions\n"
#~ " ldmtool-volume-type\n"
#~ " ls0\n"
#~ " max-disks\n"
#~ " mke2fs (Wanlong Gao)\n"
#~ " mklost-and-found\n"
#~ " mkswap [added label and uuid optional arguments]\n"
#~ " mktemp (Wanlong Gao)\n"
#~ " nr-devices\n"
#~ " parse-environment\n"
#~ " parse-environment-list\n"
#~ " rm-f\n"
#~ " rsync\n"
#~ " rsync-in\n"
#~ " rsync-out\n"
#~ " set-cachedir\n"
#~ " set-libvirt-supported-credentials\n"
#~ " set-libvirt-requested-credential\n"
#~ " set-tmpdir\n"
#~ " shutdown [backported to 1.16 and 1.18]\n"
#~ " tar-in [added compress flag]\n"
#~ " tar-out [added compress, numericowner, excludes flags]\n"
#~ " umount [added force and lazy optional arguments]\n"
#~ " utsname\n"
#~ " xfs-admin (Wanlong Gao)\n"
#~ " xfs-growfs (Wanlong Gao)\n"
#~ " xfs-info (Wanlong Gao)\n"
#~ " xfs-repair (Wanlong Gao)\n"
#~ "\n"
#~ msgstr ""
#~ " acl-delete-def-file\n"
#~ " acl-get-file\n"
#~ " acl-set-file\n"
#~ " canonical-device-name\n"
#~ " cap-get-file\n"
#~ " cap-set-file\n"
#~ " create-flags\n"
#~ " device-index\n"
#~ " disk-has-backing-file\n"
#~ " disk-format\n"
#~ " disk-virtual-size\n"
#~ " filesystem-available\n"
#~ " fill-dir\n"
#~ " fstrim\n"
#~ " get-cachedir\n"
#~ " get-libvirt-requested-credentials\n"
#~ " get-libvirt-requested-credential-prompt\n"
#~ " get-libvirt-requested-credential-challenge\n"
#~ " get-libvirt-requested-credential-defresult\n"
#~ " get-tmpdir\n"
#~ " hivex-close\n"
#~ " hivex-commit\n"
#~ " hivex-node-add-child\n"
#~ " hivex-node-children\n"
#~ " hivex-node-delete-child\n"
#~ " hivex-node-get-child\n"
#~ " hivex-node-get-value\n"
#~ " hivex-node-name\n"
#~ " hivex-node-parent\n"
#~ " hivex-node-set-value\n"
#~ " hivex-node-values\n"
#~ " hivex-open\n"
#~ " hivex-root\n"
#~ " hivex-value-key\n"
#~ " hivex-value-type\n"
#~ " hivex-value-utf8\n"
#~ " hivex-value-value\n"
#~ " inspect-list-applications2 (John Eckersberg)\n"
#~ " list-ldm-volumes\n"
#~ " list-ldm-partitions\n"
#~ " ldmtool-create-all\n"
#~ " ldmtool-diskgroup-disks\n"
#~ " ldmtool-diskgroup-name\n"
#~ " ldmtool-diskgroup-volumes\n"
#~ " ldmtool-remove-all\n"
#~ " ldmtool-scan\n"
#~ " ldmtool-scan-devices\n"
#~ " ldmtool-volume-hint\n"
#~ " ldmtool-volume-partitions\n"
#~ " ldmtool-volume-type\n"
#~ " ls0\n"
#~ " max-disks\n"
#~ " mke2fs (Wanlong Gao)\n"
#~ " mklost-and-found\n"
#~ " mkswap [added label and uuid optional arguments]\n"
#~ " mktemp (Wanlong Gao)\n"
#~ " nr-devices\n"
#~ " parse-environment\n"
#~ " parse-environment-list\n"
#~ " rm-f\n"
#~ " rsync\n"
#~ " rsync-in\n"
#~ " rsync-out\n"
#~ " set-cachedir\n"
#~ " set-libvirt-supported-credentials\n"
#~ " set-libvirt-requested-credential\n"
#~ " set-tmpdir\n"
#~ " shutdown [backported to 1.16 and 1.18]\n"
#~ " tar-in [added compress flag]\n"
#~ " tar-out [added compress, numericowner, excludes flags]\n"
#~ " umount [added force and lazy optional arguments]\n"
#~ " utsname\n"
#~ " xfs-admin (Wanlong Gao)\n"
#~ " xfs-growfs (Wanlong Gao)\n"
#~ " xfs-info (Wanlong Gao)\n"
#~ " xfs-repair (Wanlong Gao)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_push_error_handler\n"
#~ " guestfs_pop_error_handler\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_push_error_handler\n"
#~ " guestfs_pop_error_handler\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_push_error_handler (g, NULL, NULL);\n"
#~ " guestfs_mkdir (g, \"/foo\"); /* We don't care if this fails. */\n"
#~ " guestfs_pop_error_handler (g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_push_error_handler (g, NULL, NULL);\n"
#~ " guestfs_mkdir (g, \"/foo\"); /* We don't care if this fails. */\n"
#~ " guestfs_pop_error_handler (g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sysprep has been rewritten and expanded (thanks Wanlong Gao)\n"
#~ "     http://libguestfs.org/virt-sysprep.1.html\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sysprep has been rewritten and expanded (thanks Wanlong Gao)\n"
#~ "     http://libguestfs.org/virt-sysprep.1.html\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sparsify --zero is a new option that zeroes the named\n"
#~ "     partition or filesystem\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sparsify --zero is a new option that zeroes the named\n"
#~ "     partition or filesystem\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sparsify can now safely sparsify Linux swap partitions\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sparsify can now safely sparsify Linux swap partitions\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sparsify fixed so it cleans up after ^C\n"
#~ "     http://libguestfs.org/virt-sparsify.1.html\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sparsify fixed so it cleans up after ^C\n"
#~ "     http://libguestfs.org/virt-sparsify.1.html\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - a new tool 'libguestfs-make-fixed-appliance' is provided to build\n"
#~ "     fixed appliances that can be copied to other machines that don't\n"
#~ "     have febootstrap support\n"
#~ "     http://libguestfs.org/libguestfs-make-fixed-appliance.1.html\n"
#~ "\n"
#~ msgstr ""
#~ "   - a new tool 'libguestfs-make-fixed-appliance' is provided to build\n"
#~ "     fixed appliances that can be copied to other machines that don't\n"
#~ "     have febootstrap support\n"
#~ "     http://libguestfs.org/libguestfs-make-fixed-appliance.1.html\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-filesystems now displays the parents (containers) of MD\n"
#~ "     devices and volume groups\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-filesystems now displays the parents (containers) of MD\n"
#~ "     devices and volume groups\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-alignment-scan, run with no args, displays alignment information\n"
#~ "     for all libvirt domains\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-alignment-scan, run with no args, displays alignment information\n"
#~ "     for all libvirt domains\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-df and virt-alignment-scan will display information from all\n"
#~ "     guests even when a disk is inaccessible\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-df and virt-alignment-scan will display information from all\n"
#~ "     guests even when a disk is inaccessible\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-rescue new --scratch option to make scratch disks\n"
#~ "     https://rwmj.wordpress.com/2012/04/26/virt-rescue-scratch/#content\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-rescue new --scratch option to make scratch disks\n"
#~ "     https://rwmj.wordpress.com/2012/04/26/virt-rescue-scratch/#content\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-make-fs can now be used to create btrfs\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-make-fs can now be used to create btrfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-edit preserves permissions, UID, GID and SELinux context\n"
#~ "     when editing files\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-edit preserves permissions, UID, GID and SELinux context\n"
#~ "     when editing files\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish passes the close event over stdout and remote correctly\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish passes the close event over stdout and remote correctly\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish new '--pipe-error' option lets you detect errors in pipe\n"
#~ "     commands\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish new '--pipe-error' option lets you detect errors in pipe\n"
#~ "     commands\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish globs now expand device names\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish globs now expand device names\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - comma and colon characters in filenames now handled correctly by\n"
#~ "     all virt tools\n"
#~ "\n"
#~ msgstr ""
#~ "   - comma and colon characters in filenames now handled correctly by\n"
#~ "     all virt tools\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - added support for Fedora 17+\n"
#~ "\n"
#~ msgstr ""
#~ "   - added support for Fedora 17+\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - added support for FreeDOS\n"
#~ "\n"
#~ msgstr ""
#~ "   - added support for FreeDOS\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - added support for Buildroot and Cirros\n"
#~ "\n"
#~ msgstr ""
#~ "   - added support for Buildroot and Cirros\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - inspection is now compatible with Windows guests that have been\n"
#~ "     sysprepped (thanks Grant Williamson).\n"
#~ "\n"
#~ msgstr ""
#~ "   - inspection is now compatible with Windows guests that have been\n"
#~ "     sysprepped (thanks Grant Williamson).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - broad support for btrfs added, including adding multiple devices,\n"
#~ "     fsck, snapshots (thanks Wanlong Gao)\n"
#~ "\n"
#~ msgstr ""
#~ "   - broad support for btrfs added, including adding multiple devices,\n"
#~ "     fsck, snapshots (thanks Wanlong Gao)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - the new 'mount-local' API brings FUSE support directly into the\n"
#~ "     core libguestfs API\n"
#~ "     https://rwmj.wordpress.com/2012/05/14/tip-using-mount-local-api-from-c/#content\n"
#~ "\n"
#~ msgstr ""
#~ "   - the new 'mount-local' API brings FUSE support directly into the\n"
#~ "     core libguestfs API\n"
#~ "     https://rwmj.wordpress.com/2012/05/14/tip-using-mount-local-api-from-c/#content\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - new man page: guestfs-performance(1), which contains performance\n"
#~ "     tuning tips\n"
#~ "     http://libguestfs.org/guestfs-performance.1.html\n"
#~ "\n"
#~ msgstr ""
#~ "   - new man page: guestfs-performance(1), which contains performance\n"
#~ "     tuning tips\n"
#~ "     http://libguestfs.org/guestfs-performance.1.html\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - new man page: guestfs-faq(1), Frequently Asked Questions\n"
#~ "     http://libguestfs.org/guestfs-faq.1.html\n"
#~ "\n"
#~ msgstr ""
#~ "   - new man page: guestfs-faq(1), Frequently Asked Questions\n"
#~ "     http://libguestfs.org/guestfs-faq.1.html\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - ENOTSUP (from guestfs_last_errno) is now returned for APIs that\n"
#~ "     are not supported\n"
#~ "\n"
#~ msgstr ""
#~ "   - ENOTSUP (from guestfs_last_errno) is now returned for APIs that\n"
#~ "     are not supported\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - 'copy_over' example showing how to copy between two handles\n"
#~ "\n"
#~ msgstr ""
#~ "   - 'copy_over' example showing how to copy between two handles\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - 'display_icon' program displays the icon associated with a guest\n"
#~ "\n"
#~ msgstr ""
#~ "   - 'display_icon' program displays the icon associated with a guest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - 'mount_local.c' example shows how to use the mount-local API\n"
#~ "\n"
#~ msgstr ""
#~ "   - 'mount_local.c' example shows how to use the mount-local API\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  btrfs-device-add: Add devices to a btrfs filesystem.\n"
#~ "  btrfs-device-delete: Remove devices from a btrfs filesystem.\n"
#~ "  btrfs-filesystem-sync: Sync a btrfs filesystem.\n"
#~ "  btrfs-filesystem-balance: Balance a btrfs filesystem.\n"
#~ "  btrfs-fsck: Check btrfs filesystem.\n"
#~ "  btrfs-set-seeding: Enable or disable seeding.\n"
#~ "  btrfs-subvolume-create: Create a btrfs snapshot.\n"
#~ "  btrfs-subvolume-delete: Delete a btrfs snapshot.\n"
#~ "  btrfs-subvolume-list: List btrfs snapshots and subvolumes.\n"
#~ "  btrfs-subvolume-set-default: Set default btrfs subvolume.\n"
#~ "  btrfs-subvolume-snapshot: Create a writable btrfs snapshot.\n"
#~ "  get-e2attrs: List ext2 file attributes of a file.\n"
#~ "  get-e2generation: Get ext2 file generation of a file.\n"
#~ "  isoinfo, isoinfo-device: Get information from the header of ISO files.\n"
#~ "  llz: List files with SELinux information.\n"
#~ "  lvcreate-free: Create an LVM logical volume in % remaining free space.\n"
#~ "  md-stat: Return underlying devices from an MD device.\n"
#~ "  mkfs-brtfs: Make btrfs filesystem, with all tunables.\n"
#~ "  mount-local, mount-local-run, umount-local: FUSE support in the API.\n"
#~ "  ntfsclone-in, ntfsclone-out: Save, restore NTFS from backup.\n"
#~ "  ntfsfix: Fix common errors and force Windows to check NTFS.\n"
#~ "  set-e2attrs: Set or clear ext2 file attributes of a file.\n"
#~ "  set-e2generation: Set ext2 file generation of a file.\n"
#~ "  set-label: Unified interface for setting filesystem label.\n"
#~ "  vgmeta: Get volume group metadata.\n"
#~ "  wipefs: Wipe filesystem signatures from a device.\n"
#~ "  zero-free-space: Zero free space in a filesystem.\n"
#~ "\n"
#~ msgstr ""
#~ "  btrfs-device-add: Add devices to a btrfs filesystem.\n"
#~ "  btrfs-device-delete: Remove devices from a btrfs filesystem.\n"
#~ "  btrfs-filesystem-sync: Sync a btrfs filesystem.\n"
#~ "  btrfs-filesystem-balance: Balance a btrfs filesystem.\n"
#~ "  btrfs-fsck: Check btrfs filesystem.\n"
#~ "  btrfs-set-seeding: Enable or disable seeding.\n"
#~ "  btrfs-subvolume-create: Create a btrfs snapshot.\n"
#~ "  btrfs-subvolume-delete: Delete a btrfs snapshot.\n"
#~ "  btrfs-subvolume-list: List btrfs snapshots and subvolumes.\n"
#~ "  btrfs-subvolume-set-default: Set default btrfs subvolume.\n"
#~ "  btrfs-subvolume-snapshot: Create a writable btrfs snapshot.\n"
#~ "  get-e2attrs: List ext2 file attributes of a file.\n"
#~ "  get-e2generation: Get ext2 file generation of a file.\n"
#~ "  isoinfo, isoinfo-device: Get information from the header of ISO files.\n"
#~ "  llz: List files with SELinux information.\n"
#~ "  lvcreate-free: Create an LVM logical volume in % remaining free space.\n"
#~ "  md-stat: Return underlying devices from an MD device.\n"
#~ "  mkfs-brtfs: Make btrfs filesystem, with all tunables.\n"
#~ "  mount-local, mount-local-run, umount-local: FUSE support in the API.\n"
#~ "  ntfsclone-in, ntfsclone-out: Save, restore NTFS from backup.\n"
#~ "  ntfsfix: Fix common errors and force Windows to check NTFS.\n"
#~ "  set-e2attrs: Set or clear ext2 file attributes of a file.\n"
#~ "  set-e2generation: Set ext2 file generation of a file.\n"
#~ "  set-label: Unified interface for setting filesystem label.\n"
#~ "  vgmeta: Get volume group metadata.\n"
#~ "  wipefs: Wipe filesystem signatures from a device.\n"
#~ "  zero-free-space: Zero free space in a filesystem.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - The debian/ subdirectory has been removed.  We recommend you use\n"
#~ "   the official Debian packages made by Hilko Bengen.\n"
#~ "   http://people.debian.org/~bengen/libguestfs/\n"
#~ "   http://packages.debian.org/search?keywords=libguestfs\n"
#~ "\n"
#~ msgstr ""
#~ " - The debian/ subdirectory has been removed.  We recommend you use\n"
#~ "   the official Debian packages made by Hilko Bengen.\n"
#~ "   http://people.debian.org/~bengen/libguestfs/\n"
#~ "   http://packages.debian.org/search?keywords=libguestfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - O_CLOEXEC / SOCK_CLOEXEC is now used for almost all file\n"
#~ "   descriptors that the library opens.\n"
#~ "\n"
#~ msgstr ""
#~ " - O_CLOEXEC / SOCK_CLOEXEC is now used for almost all file\n"
#~ "   descriptors that the library opens.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - posix_fadvise is called when sequentially reading or writing large\n"
#~ "   files.\n"
#~ "\n"
#~ msgstr ""
#~ " - posix_fadvise is called when sequentially reading or writing large\n"
#~ "   files.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - close all file descriptors and remove all signal handlers in the\n"
#~ "   recovery process\n"
#~ "\n"
#~ msgstr ""
#~ " - close all file descriptors and remove all signal handlers in the\n"
#~ "   recovery process\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - multiple gcc warnings and Coverity bugs have been fixed;  many\n"
#~ "   strict-overflow bugs have also been fixed\n"
#~ "\n"
#~ msgstr ""
#~ " - multiple gcc warnings and Coverity bugs have been fixed;  many\n"
#~ "   strict-overflow bugs have also been fixed\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - use ./configure --enable-valgrind-daemon to use valgrind on the\n"
#~ "   daemon;  many errors have been fixed\n"
#~ "\n"
#~ msgstr ""
#~ " - use ./configure --enable-valgrind-daemon to use valgrind on the\n"
#~ "   daemon;  many errors have been fixed\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - use ./configure --with-qemu-options to pass extra options to qemu\n"
#~ "\n"
#~ msgstr ""
#~ " - use ./configure --with-qemu-options to pass extra options to qemu\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - the daemon now has a growable strings buffer type (DECLARE_STRINGSBUF)\n"
#~ "\n"
#~ msgstr ""
#~ " - the daemon now has a growable strings buffer type (DECLARE_STRINGSBUF)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - the <guestfs.h> header file works with C++ and we have a regression\n"
#~ "   test for this\n"
#~ "\n"
#~ msgstr ""
#~ " - the <guestfs.h> header file works with C++ and we have a regression\n"
#~ "   test for this\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - multiple APIs which should only be called in the CONFIG state now\n"
#~ "   give an error if they are not\n"
#~ "\n"
#~ msgstr ""
#~ " - multiple APIs which should only be called in the CONFIG state now\n"
#~ "   give an error if they are not\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - .gitignore fixed to use absolute paths\n"
#~ "\n"
#~ msgstr ""
#~ " - .gitignore fixed to use absolute paths\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - gobject bindings have been expanded, including mapping libguestfs\n"
#~ "   events to gobject signals (thanks Matt Booth)\n"
#~ "\n"
#~ msgstr ""
#~ " - gobject bindings have been expanded, including mapping libguestfs\n"
#~ "   events to gobject signals (thanks Matt Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - gobject documentation is generated properly (thanks Matt Booth)\n"
#~ "\n"
#~ msgstr ""
#~ " - gobject documentation is generated properly (thanks Matt Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - gobject header files now live in a subdirectory\n"
#~ "\n"
#~ msgstr ""
#~ " - gobject header files now live in a subdirectory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - CompareWithString test in the generator now works\n"
#~ "\n"
#~ msgstr ""
#~ " - CompareWithString test in the generator now works\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - FUInt32, FUInt64 struct field types now use the correct XDR type\n"
#~ "\n"
#~ msgstr ""
#~ " - FUInt32, FUInt64 struct field types now use the correct XDR type\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - OCaml tests are now run on bytecode and native code.\n"
#~ "\n"
#~ msgstr ""
#~ " - OCaml tests are now run on bytecode and native code.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - java -Xlint:all is used, and all warnings have been fixed\n"
#~ "\n"
#~ msgstr ""
#~ " - java -Xlint:all is used, and all warnings have been fixed\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - bmptopng, wrestool (etc) missing or failure no longer prints\n"
#~ "   warning messages\n"
#~ "\n"
#~ msgstr ""
#~ " - bmptopng, wrestool (etc) missing or failure no longer prints\n"
#~ "   warning messages\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - ruby: Use RbConfig instead of Config.\n"
#~ "\n"
#~ msgstr ""
#~ " - ruby: Use RbConfig instead of Config.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - PYTHONPATH is set by the ./run script.\n"
#~ "\n"
#~ msgstr ""
#~ " - PYTHONPATH is set by the ./run script.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - appliance building is now thread-safe.\n"
#~ "\n"
#~ msgstr ""
#~ " - appliance building is now thread-safe.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - appliance now uses 'ip' instead of 'ifconfig' and 'netstat'\n"
#~ "   commands\n"
#~ "\n"
#~ msgstr ""
#~ " - appliance now uses 'ip' instead of 'ifconfig' and 'netstat'\n"
#~ "   commands\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - several fixes to make parallel builds work properly\n"
#~ "\n"
#~ msgstr ""
#~ " - several fixes to make parallel builds work properly\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish --listen now cleans up properly\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish --listen now cleans up properly\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - the BUSY state has been removed\n"
#~ "\n"
#~ msgstr ""
#~ " - the BUSY state has been removed\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - gettextize has been removed, replaced by a simple Makefile.am\n"
#~ "\n"
#~ msgstr ""
#~ " - gettextize has been removed, replaced by a simple Makefile.am\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - gettext support now covers virt-resize, virt-sparsify and virt-sysprep\n"
#~ "\n"
#~ msgstr ""
#~ " - gettext support now covers virt-resize, virt-sparsify and virt-sysprep\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - better support for the arm architecture\n"
#~ "\n"
#~ msgstr ""
#~ " - better support for the arm architecture\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 822490 virt-ls error: \"libguestfs: error: checksum: path: parameter cannot be NULL\"\n"
#~ " - 816839 data overflow error when debug progress -1\n"
#~ " - 816098 virt-make-fs fails to make a btrfs filesystem because it doesn't allocate enough space\n"
#~ " - 811872 inspection fails on ubuntu 10.04 guest with encrypted swap\n"
#~ " - 811650 guestfs_last_error not set when qemu fails early during launch\n"
#~ " - 811649 libguestfs cannot open disk images which are symlinks to files that contain ':' (colon) character\n"
#~ " - 811117 [RFE][virt-sysprep] net-hwaddr not removed from \"ifcfg-*\" files on rhel\n"
#~ " - 811112 [RFE][virt-sysprep] hostname can not be changed on rhel system\n"
#~ " - 809361 inspection doesn't recognize Fedora 18 (grub2 + GPT)\n"
#~ " - 807905 mkfs blocksize option breaks when creating btrfs\n"
#~ " - 805070 virt-filesystems should show 'parents' of LV and RAID devices\n"
#~ " - 804464 libguestfs cannot be built when LINGUAS is different then ja or uk\n"
#~ " - 803664 libguestfs inspection fails on Windows XP: libguestfs: error: hivex: could not locate HKLM\\SYSTEM\\MountedDevices\n"
#~ " - 803533 guestfish: write error\n"
#~ " - 802389 event handlers for 'close' event doesn't work in remote mode\n"
#~ " - 802109 libguestfs uses putc on stderr, results in many individual 1 byte writes of debug messages\n"
#~ " - 801640 [RFE] the error reported by resize2fs-M need to be more clear\n"
#~ " - 801298 Possible null dereference and resource leaks\n"
#~ " - 801273 Document for set-pgroup need to be updated\n"
#~ " - 798196 virt-resize confuses format and output_format variables; using --output-format sets the input format\n"
#~ " - 797986 virt-resize on Windows XP in sysprep state causes \"UNMOUNTABLE_BOOT_VOLUME\" BSOD\n"
#~ " - 796520 [RFE] Prevent user from running some appliance configure commands after appliance boot up\n"
#~ " - 790721 multiprovider build error: RuntimeError: link: /tmp/.guestfs-0/kernel /tmp/.guestfs-0/kernel.10139: File exists\n"
#~ " - 789960 guestfsd crash when try to mount non-exist disk\n"
#~ " - 789504 virt-df (other tools?) should not give up if a guest disk is missing\n"
#~ " - 788641 virt-edit doesn't preserve file permissions\n"
#~ " - 786215 libguestfs inspection does not recognize FreeDOS operating system\n"
#~ " - 786188 libguestfs inspection does not recognize FreeDOS install CD\n"
#~ " - 785668 aug-defnode: daemon crash\n"
#~ " - 784647 Libguestfs uses deprecated net-tools\n"
#~ " - 769304 virt-resize on RHEL 6 kernel fails to re-read the partition table\n"
#~ " - 755729 Error message for resize2fs-M needs tweaking\n"
#~ " - 701814 virt-win-reg fails on a libvirt guest that has no defined disk format: \"format parameter is empty or contains disallowed characters\"\n"
#~ " - 679737 libguestfs: improve error message when zerofree is not available in the appliance\n"
#~ " - 635971 glob mkfs ext2 /dev/vd[b-t]1 does not expand\n"
#~ "\n"
#~ msgstr ""
#~ " - 822490 virt-ls error: \"libguestfs: error: checksum: path: parameter cannot be NULL\"\n"
#~ " - 816839 data overflow error when debug progress -1\n"
#~ " - 816098 virt-make-fs fails to make a btrfs filesystem because it doesn't allocate enough space\n"
#~ " - 811872 inspection fails on ubuntu 10.04 guest with encrypted swap\n"
#~ " - 811650 guestfs_last_error not set when qemu fails early during launch\n"
#~ " - 811649 libguestfs cannot open disk images which are symlinks to files that contain ':' (colon) character\n"
#~ " - 811117 [RFE][virt-sysprep] net-hwaddr not removed from \"ifcfg-*\" files on rhel\n"
#~ " - 811112 [RFE][virt-sysprep] hostname can not be changed on rhel system\n"
#~ " - 809361 inspection doesn't recognize Fedora 18 (grub2 + GPT)\n"
#~ " - 807905 mkfs blocksize option breaks when creating btrfs\n"
#~ " - 805070 virt-filesystems should show 'parents' of LV and RAID devices\n"
#~ " - 804464 libguestfs cannot be built when LINGUAS is different then ja or uk\n"
#~ " - 803664 libguestfs inspection fails on Windows XP: libguestfs: error: hivex: could not locate HKLM\\SYSTEM\\MountedDevices\n"
#~ " - 803533 guestfish: write error\n"
#~ " - 802389 event handlers for 'close' event doesn't work in remote mode\n"
#~ " - 802109 libguestfs uses putc on stderr, results in many individual 1 byte writes of debug messages\n"
#~ " - 801640 [RFE] the error reported by resize2fs-M need to be more clear\n"
#~ " - 801298 Possible null dereference and resource leaks\n"
#~ " - 801273 Document for set-pgroup need to be updated\n"
#~ " - 798196 virt-resize confuses format and output_format variables; using --output-format sets the input format\n"
#~ " - 797986 virt-resize on Windows XP in sysprep state causes \"UNMOUNTABLE_BOOT_VOLUME\" BSOD\n"
#~ " - 796520 [RFE] Prevent user from running some appliance configure commands after appliance boot up\n"
#~ " - 790721 multiprovider build error: RuntimeError: link: /tmp/.guestfs-0/kernel /tmp/.guestfs-0/kernel.10139: File exists\n"
#~ " - 789960 guestfsd crash when try to mount non-exist disk\n"
#~ " - 789504 virt-df (other tools?) should not give up if a guest disk is missing\n"
#~ " - 788641 virt-edit doesn't preserve file permissions\n"
#~ " - 786215 libguestfs inspection does not recognize FreeDOS operating system\n"
#~ " - 786188 libguestfs inspection does not recognize FreeDOS install CD\n"
#~ " - 785668 aug-defnode: daemon crash\n"
#~ " - 784647 Libguestfs uses deprecated net-tools\n"
#~ " - 769304 virt-resize on RHEL 6 kernel fails to re-read the partition table\n"
#~ " - 755729 Error message for resize2fs-M needs tweaking\n"
#~ " - 701814 virt-win-reg fails on a libvirt guest that has no defined disk format: \"format parameter is empty or contains disallowed characters\"\n"
#~ " - 679737 libguestfs: improve error message when zerofree is not available in the appliance\n"
#~ " - 635971 glob mkfs ext2 /dev/vd[b-t]1 does not expand\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - allow XFS filesystems to be created over an existing filesystem\n"
#~ "     (Wanlong Gao)\n"
#~ "\n"
#~ msgstr ""
#~ "   - allow XFS filesystems to be created over an existing filesystem\n"
#~ "     (Wanlong Gao)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - the (unspecified) default alignment for part-disk has been\n"
#~ "     changed to 64K for better support of high-end network-attached\n"
#~ "     storage\n"
#~ "\n"
#~ msgstr ""
#~ "   - the (unspecified) default alignment for part-disk has been\n"
#~ "     changed to 64K for better support of high-end network-attached\n"
#~ "     storage\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - new guestfs-testing(1) man page\n"
#~ "\n"
#~ msgstr ""
#~ "   - new guestfs-testing(1) man page\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - list-filesystems returns MD devices containing filesystems\n"
#~ "     (Matthew Booth)\n"
#~ "\n"
#~ msgstr ""
#~ "   - list-filesystems returns MD devices containing filesystems\n"
#~ "     (Matthew Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - support for GCC >= 4.7 (Jim Meyering)\n"
#~ "\n"
#~ msgstr ""
#~ "   - support for GCC >= 4.7 (Jim Meyering)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - check user does not add the same drive twice (Wanlong Gao).\n"
#~ "\n"
#~ msgstr ""
#~ "   - check user does not add the same drive twice (Wanlong Gao).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Experimental GObject bindings, with support for GObject\n"
#~ "     Introspection.  You can now use libguestfs from Javascript.\n"
#~ "     Please note these are not stable and final in this release.\n"
#~ "     (Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ "   - Experimental GObject bindings, with support for GObject\n"
#~ "     Introspection.  You can now use libguestfs from Javascript.\n"
#~ "     Please note these are not stable and final in this release.\n"
#~ "     (Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - support for Ruby >= 1.9\n"
#~ "\n"
#~ msgstr ""
#~ "   - support for Ruby >= 1.9\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Ruby bindings can be disabled individually (Hilko Bengen)\n"
#~ "\n"
#~ msgstr ""
#~ "   - Ruby bindings can be disabled individually (Hilko Bengen)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - support for Python 2.6, 3.x (Richard Jones, Hilko Bengen)\n"
#~ "\n"
#~ msgstr ""
#~ "   - support for Python 2.6, 3.x (Richard Jones, Hilko Bengen)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - support for PHP >= 5.4\n"
#~ "\n"
#~ msgstr ""
#~ "   - support for PHP >= 5.4\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - new %guestfs_introspection hash is available in Perl bindings so\n"
#~ "     you can query which optional arguments are available\n"
#~ "\n"
#~ msgstr ""
#~ "   - new %guestfs_introspection hash is available in Perl bindings so\n"
#~ "     you can query which optional arguments are available\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guests with MD devices can be inspected (Matthew Booth)\n"
#~ "\n"
#~ msgstr ""
#~ "   - guests with MD devices can be inspected (Matthew Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - support for GNU/Hurd guests\n"
#~ "\n"
#~ msgstr ""
#~ "   - support for GNU/Hurd guests\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - libguestfs events (such as progress bar events and log messages) can\n"
#~ "     be trapped and processed by user-defined shell scripts.\n"
#~ "\n"
#~ msgstr ""
#~ "   - libguestfs events (such as progress bar events and log messages) can\n"
#~ "     be trapped and processed by user-defined shell scripts.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - MD devices are tab-completed (Matthew Booth)\n"
#~ "\n"
#~ msgstr ""
#~ "   - MD devices are tab-completed (Matthew Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - New tool virt-format for erasing and making blank disks\n"
#~ "\n"
#~ msgstr ""
#~ "   - New tool virt-format for erasing and making blank disks\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sparsify new --compress and -o options to allow for compressed\n"
#~ "     and different format output\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sparsify new --compress and -o options to allow for compressed\n"
#~ "     and different format output\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sparsify can now detect and sparsify .vdi files\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sparsify can now detect and sparsify .vdi files\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-sysprep no longer requires xmlstarlet; a new virt-inspector --xpath\n"
#~ "     option has been added to replace this functionality\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-sysprep no longer requires xmlstarlet; a new virt-inspector --xpath\n"
#~ "     option has been added to replace this functionality\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-rescue has a new --suggest option which suggests mount commands\n"
#~ "     for the guest\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-rescue has a new --suggest option which suggests mount commands\n"
#~ "     for the guest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-resize no longer requires OCaml pcre library\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-resize no longer requires OCaml pcre library\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - daemon will no longer try to edit your live /etc/lvm configuration\n"
#~ "\n"
#~ msgstr ""
#~ "   - daemon will no longer try to edit your live /etc/lvm configuration\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - fix a potential security problem with predictable /tmp names (Steve Kemp)\n"
#~ "\n"
#~ msgstr ""
#~ "   - fix a potential security problem with predictable /tmp names (Steve Kemp)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  CVE-2011-4127, RHBZ#757071\n"
#~ "  Mitigate possible privilege escalation via SG_IO ioctl\n"
#~ "  For more information, see: https://github.com/libguestfs/libguestfs/commit/9a5f784d511a8f00a8386f316eab41fe660430db\n"
#~ "\n"
#~ msgstr ""
#~ "  CVE-2011-4127, RHBZ#757071\n"
#~ "  Mitigate possible privilege escalation via SG_IO ioctl\n"
#~ "  For more information, see: https://github.com/libguestfs/libguestfs/commit/9a5f784d511a8f00a8386f316eab41fe660430db\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  blkid: print all attributes of a device known to blkid (Wanlong Gao)\n"
#~ "  e2fsck: access to more features of e2fsck (Wanlong Gao)\n"
#~ "  list-md-devices: list of Linux MD devices (Matthew Booth)\n"
#~ "  md-create: create an MD device\n"
#~ "  md-detail: returns metadata for an MD device (Matthew Booth)\n"
#~ "  md-stop: stop an MD device (Wanlong Gao)\n"
#~ "  tune2fs: allow ext2/3/4 filesystems to be tuned\n"
#~ "\n"
#~ msgstr ""
#~ "  blkid: print all attributes of a device known to blkid (Wanlong Gao)\n"
#~ "  e2fsck: access to more features of e2fsck (Wanlong Gao)\n"
#~ "  list-md-devices: list of Linux MD devices (Matthew Booth)\n"
#~ "  md-create: create an MD device\n"
#~ "  md-detail: returns metadata for an MD device (Matthew Booth)\n"
#~ "  md-stop: stop an MD device (Wanlong Gao)\n"
#~ "  tune2fs: allow ext2/3/4 filesystems to be tuned\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  Git hosting has moved to http://github.com/libguestfs\n"
#~ "\n"
#~ msgstr ""
#~ "  Git hosting has moved to http://github.com/libguestfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  The various test directories have been rearranged logically, and now\n"
#~ "  all appear under 'tests/'.\n"
#~ "\n"
#~ msgstr ""
#~ "  The various test directories have been rearranged logically, and now\n"
#~ "  all appear under 'tests/'.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  There is a 'make extra-tests' rule which runs ordinary tests and\n"
#~ "  additional tests, using valgrind to check for memory problems.\n"
#~ "\n"
#~ msgstr ""
#~ "  There is a 'make extra-tests' rule which runs ordinary tests and\n"
#~ "  additional tests, using valgrind to check for memory problems.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  Multiple memory leaks and other problems found by valgrind and fixed.\n"
#~ "\n"
#~ msgstr ""
#~ "  Multiple memory leaks and other problems found by valgrind and fixed.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  Support for optional arguments in the generator has been rewritten\n"
#~ "  to provide more features and safety (Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ "  Support for optional arguments in the generator has been rewritten\n"
#~ "  to provide more features and safety (Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  With gcc -fvisibility=hidden is used for internal symbols, avoiding\n"
#~ "  call indirection via the PLT.\n"
#~ "\n"
#~ msgstr ""
#~ "  With gcc -fvisibility=hidden is used for internal symbols, avoiding\n"
#~ "  call indirection via the PLT.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  RHashtable functions can be tested in the generator.\n"
#~ "\n"
#~ msgstr ""
#~ "  RHashtable functions can be tested in the generator.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  ADD_ARG macro in daemon allows arg lists to be constructed without\n"
#~ "  risk of stack smashing.\n"
#~ "\n"
#~ msgstr ""
#~ "  ADD_ARG macro in daemon allows arg lists to be constructed without\n"
#~ "  risk of stack smashing.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  Fix generation of OCaml functions that have more than 10 arguments.\n"
#~ "\n"
#~ msgstr ""
#~ "  Fix generation of OCaml functions that have more than 10 arguments.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  psmisc has been added to the appliance, allowing use of 'fuser',\n"
#~ "  'killall' and 'pstree' for debugging.\n"
#~ "\n"
#~ msgstr ""
#~ "  psmisc has been added to the appliance, allowing use of 'fuser',\n"
#~ "  'killall' and 'pstree' for debugging.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  bindtests now cover RBufferOut and optional arguments (Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ "  bindtests now cover RBufferOut and optional arguments (Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 769680 temporary directories created during appliance builds are not cleaned up on error\n"
#~ " - 761460 guestfs_utimens hangs on named pipes\n"
#~ " - 761451 guestfs_utimens cannot set times on a directory\n"
#~ " - 760775 \"guestfish: multi-boot operating systems are not supported by the -i option\" should be more explanatory\n"
#~ " - 760669 guestfish copy-in and <! (inline execution) don't mix well: pclose: No child processes\n"
#~ " - 760000 libguestfs fails to compile with Ruby >= 1.9\n"
#~ " - 755729 Error message for resize2fs-M needs tweaking\n"
#~ " - 750889 Python code incompatible with Python v3.\n"
#~ " - 596761 Ctrl-\\ causes guestfish to abort\n"
#~ "\n"
#~ msgstr ""
#~ " - 769680 temporary directories created during appliance builds are not cleaned up on error\n"
#~ " - 761460 guestfs_utimens hangs on named pipes\n"
#~ " - 761451 guestfs_utimens cannot set times on a directory\n"
#~ " - 760775 \"guestfish: multi-boot operating systems are not supported by the -i option\" should be more explanatory\n"
#~ " - 760669 guestfish copy-in and <! (inline execution) don't mix well: pclose: No child processes\n"
#~ " - 760000 libguestfs fails to compile with Ruby >= 1.9\n"
#~ " - 755729 Error message for resize2fs-M needs tweaking\n"
#~ " - 750889 Python code incompatible with Python v3.\n"
#~ " - 596761 Ctrl-\\ causes guestfish to abort\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  Erlang bindings.\n"
#~ "\n"
#~ msgstr ""
#~ "  Erlang bindings.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  virt-alignment-scan is a new tool to check the alignment of\n"
#~ "  partitions within virtual machines or disk images.\n"
#~ "\n"
#~ msgstr ""
#~ "  virt-alignment-scan is a new tool to check the alignment of\n"
#~ "  partitions within virtual machines or disk images.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  virt-sparsify is a new tool to make virtual machine disk images\n"
#~ "  sparse.\n"
#~ "\n"
#~ msgstr ""
#~ "  virt-sparsify is a new tool to make virtual machine disk images\n"
#~ "  sparse.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  virt-sysprep is a new tool to make cloning guests from a template\n"
#~ "  simpler.\n"
#~ "\n"
#~ msgstr ""
#~ "  virt-sysprep is a new tool to make cloning guests from a template\n"
#~ "  simpler.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - New commands setenv, unsetenv, to set environment variables.\n"
#~ "\n"
#~ msgstr ""
#~ "   - New commands setenv, unsetenv, to set environment variables.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - The input file and line number is printed in error messages.\n"
#~ "\n"
#~ msgstr ""
#~ "   - The input file and line number is printed in error messages.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish progress bars are now a \"mini-library\" used by other\n"
#~ "     tools too.\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish progress bars are now a \"mini-library\" used by other\n"
#~ "     tools too.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - the --live option (for access to live VMs) now works.\n"
#~ "\n"
#~ msgstr ""
#~ "   - the --live option (for access to live VMs) now works.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-cat can now handle Windows paths and drive letters (RHBZ#693359).\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-cat can now handle Windows paths and drive letters (RHBZ#693359).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - the MBR partition type byte is displayed in --long output.\n"
#~ "\n"
#~ msgstr ""
#~ "   - the MBR partition type byte is displayed in --long output.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-make-fs now sets the MBR partition type byte correctly,\n"
#~ "     improving compatibility with Windows (RHBZ#746295).\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-make-fs now sets the MBR partition type byte correctly,\n"
#~ "     improving compatibility with Windows (RHBZ#746295).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-resize can now work with guests using extended and logical\n"
#~ "     partitions, in particular Ubuntu guests.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-resize can now work with guests using extended and logical\n"
#~ "     partitions, in particular Ubuntu guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-resize can now align the first partition of Windows guests,\n"
#~ "     improving performance.  The new virt-resize --align-first option\n"
#~ "     controls this behaviour.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-resize can now align the first partition of Windows guests,\n"
#~ "     improving performance.  The new virt-resize --align-first option\n"
#~ "     controls this behaviour.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - The virt-resize --machine-readable flag makes it possible to use\n"
#~ "     virt-resize from other programs.\n"
#~ "\n"
#~ msgstr ""
#~ "   - The virt-resize --machine-readable flag makes it possible to use\n"
#~ "     virt-resize from other programs.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Partitions are now aligned to 128 sectors (usually 64K) by\n"
#~ "     default.  This improves efficiency on high-end storage.  The new\n"
#~ "     virt-resize --alignment option allows the alignment to be\n"
#~ "     adjusted.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Partitions are now aligned to 128 sectors (usually 64K) by\n"
#~ "     default.  This improves efficiency on high-end storage.  The new\n"
#~ "     virt-resize --alignment option allows the alignment to be\n"
#~ "     adjusted.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - The syntax for deleting registry keys and values is documented\n"
#~ "     in the man page (RHBZ#737944).\n"
#~ "\n"
#~ msgstr ""
#~ "   - The syntax for deleting registry keys and values is documented\n"
#~ "     in the man page (RHBZ#737944).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - non-printing characters are escaped correctly in debug output.\n"
#~ "\n"
#~ msgstr ""
#~ "   - non-printing characters are escaped correctly in debug output.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - GUESTFS_EVENT_ENTER is a new event type generated whenever a\n"
#~ "     libguestfs function is called.\n"
#~ "\n"
#~ msgstr ""
#~ "   - GUESTFS_EVENT_ENTER is a new event type generated whenever a\n"
#~ "     libguestfs function is called.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - the library contains systemtap/DTrace probes.\n"
#~ "\n"
#~ msgstr ""
#~ "   - the library contains systemtap/DTrace probes.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - the library can now be compiled without hivex (RHBZ#723474).\n"
#~ "\n"
#~ msgstr ""
#~ "   - the library can now be compiled without hivex (RHBZ#723474).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Improve detection of Windows disks.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Improve detection of Windows disks.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Adds support for:\n"
#~ "         ttylinux - a minimal Linux\n"
#~ "         Mageia (thanks Michael Scherer)\n"
#~ "         OpenSUSE and zypper (thanks Michael Scherer, Vincent Untz)\n"
#~ "         Ubuntu logos (thanks Michael Scherer)\n"
#~ "         NetBSD and pkgsrc (thanks Michael Scherer)\n"
#~ "\n"
#~ msgstr ""
#~ "   - Adds support for:\n"
#~ "         ttylinux - a minimal Linux\n"
#~ "         Mageia (thanks Michael Scherer)\n"
#~ "         OpenSUSE and zypper (thanks Michael Scherer, Vincent Untz)\n"
#~ "         Ubuntu logos (thanks Michael Scherer)\n"
#~ "         NetBSD and pkgsrc (thanks Michael Scherer)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Handle some guest types that use /dev/root in /etc/fstab.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Handle some guest types that use /dev/root in /etc/fstab.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Fix handling of guests with > 26 disks (thanks Matthew Booth)\n"
#~ "\n"
#~ msgstr ""
#~ "   - Fix handling of guests with > 26 disks (thanks Matthew Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Add support for guests with HP Smart Array disks (thanks Matthew Booth)\n"
#~ "\n"
#~ msgstr ""
#~ "   - Add support for guests with HP Smart Array disks (thanks Matthew Booth)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - FEBOOTSTRAP_KERNEL, FEBOOTSTRAP_MODULES environment variables can\n"
#~ "     be set in order to choose which kernel to use for the appliance.\n"
#~ "\n"
#~ msgstr ""
#~ "   - FEBOOTSTRAP_KERNEL, FEBOOTSTRAP_MODULES environment variables can\n"
#~ "     be set in order to choose which kernel to use for the appliance.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - ArchLinux support now working with Linux 3.0 (thanks Erik Nolte)\n"
#~ "\n"
#~ msgstr ""
#~ "   - ArchLinux support now working with Linux 3.0 (thanks Erik Nolte)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - libvirt disks marked <readonly/> are now added readonly when\n"
#~ "     using the virt-tools '-d' option.\n"
#~ "\n"
#~ msgstr ""
#~ "   - libvirt disks marked <readonly/> are now added readonly when\n"
#~ "     using the virt-tools '-d' option.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  compress-out, compress-device-out, copy-device-to-device,\n"
#~ "  copy-device-to-file, copy-file-to-device, copy-file-to-file,\n"
#~ "  get-smp, part-to-partnum, set-smp.\n"
#~ "\n"
#~ msgstr ""
#~ "  compress-out, compress-device-out, copy-device-to-device,\n"
#~ "  copy-device-to-file, copy-file-to-device, copy-file-to-file,\n"
#~ "  get-smp, part-to-partnum, set-smp.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  The mount API no longer implicitly adds -o sync,noatime options.\n"
#~ "\n"
#~ msgstr ""
#~ "  The mount API no longer implicitly adds -o sync,noatime options.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  add-domain has a new 'readonlydisk' optional parameter to control\n"
#~ "  how <readonly/> disks are handled.\n"
#~ "\n"
#~ msgstr ""
#~ "  add-domain has a new 'readonlydisk' optional parameter to control\n"
#~ "  how <readonly/> disks are handled.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Coverity was run on the source and more bugs were identified and\n"
#~ "   fixed.\n"
#~ "\n"
#~ msgstr ""
#~ " - Coverity was run on the source and more bugs were identified and\n"
#~ "   fixed.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - PCRE library is now required to build libguestfs.\n"
#~ "\n"
#~ msgstr ""
#~ " - PCRE library is now required to build libguestfs.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - APIC is now the default for the appliance.  You can also enable\n"
#~ "   SMP support in the appliance.\n"
#~ "\n"
#~ msgstr ""
#~ " - APIC is now the default for the appliance.  You can also enable\n"
#~ "   SMP support in the appliance.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - OCaml bindings now correctly acquire GC lock during callbacks.\n"
#~ "\n"
#~ msgstr ""
#~ " - OCaml bindings now correctly acquire GC lock during callbacks.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Out of tree builds should now work correctly (thanks Hilko Bengen).\n"
#~ "\n"
#~ msgstr ""
#~ " - Out of tree builds should now work correctly (thanks Hilko Bengen).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - ./configure --with-extra=\"...\" can be used by packagers to set\n"
#~ "   the extra version string.\n"
#~ "\n"
#~ msgstr ""
#~ " - ./configure --with-extra=\"...\" can be used by packagers to set\n"
#~ "   the extra version string.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - zero, zero-device APIs: if the blocks already contain zeroes,\n"
#~ "   don't write zeroes, so that we don't unnecessarily make the\n"
#~ "   underlying storage non-sparse.\n"
#~ "\n"
#~ msgstr ""
#~ " - zero, zero-device APIs: if the blocks already contain zeroes,\n"
#~ "   don't write zeroes, so that we don't unnecessarily make the\n"
#~ "   underlying storage non-sparse.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - is-zero, is-zero-device APIs: optimize these so zero detection is\n"
#~ "   faster.\n"
#~ "\n"
#~ msgstr ""
#~ " - is-zero, is-zero-device APIs: optimize these so zero detection is\n"
#~ "   faster.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 748266 libguestfs should detect versions of qemu which require -machine pc option\n"
#~ " - 747290 libguestfs ignores <readonly/> in libvirt XML\n"
#~ " - 747287 Misleading error message when permission denied opening a disk image\n"
#~ " - 746295 virt-make-fs doesn't set partition ID\n"
#~ " - 744795 guestmount --live is not usable\n"
#~ " - 737944 virt-win-reg hyphen (delete key) syntax may be wrong, and is not documented\n"
#~ " - 733297 ruby event handlers fail with \"exception in callback: wrong argument type Proc (expected Data)\"\n"
#~ " - 731744 libguestfs should escape special/non-printing characters in debug output\n"
#~ " - 729887 appliance crashes running aug_init with flags=4\n"
#~ " - 729075 libguestfs confuses Hp_recovery partition with Windows root filesystem\n"
#~ " - 727178 error: luks_open: cryptsetup: error while loading shared libraries: libfipscheck.so.1: cannot open shared object file: No such file or directory\n"
#~ " - 726739 libguestfs: error: aug_get: no matching node, trying to find hostname\n"
#~ " - 723474 If hivex and/or pcre not installed, libguestfs fails to compile\n"
#~ " - 693359 virt-cat and virt-edit don't handle case sensitive NTFS paths properly\n"
#~ " - 678231 virt-inspector reports unknown filesystem UUID\n"
#~ " - 671082 libguestfs does not work with kernel-rt\n"
#~ " - 666578 libguestfs: unknown filesystem label SWAP-sda2\n"
#~ " - 642821 virt-resize falls over on a disk image with a logical swap partition\n"
#~ "\n"
#~ msgstr ""
#~ " - 748266 libguestfs should detect versions of qemu which require -machine pc option\n"
#~ " - 747290 libguestfs ignores <readonly/> in libvirt XML\n"
#~ " - 747287 Misleading error message when permission denied opening a disk image\n"
#~ " - 746295 virt-make-fs doesn't set partition ID\n"
#~ " - 744795 guestmount --live is not usable\n"
#~ " - 737944 virt-win-reg hyphen (delete key) syntax may be wrong, and is not documented\n"
#~ " - 733297 ruby event handlers fail with \"exception in callback: wrong argument type Proc (expected Data)\"\n"
#~ " - 731744 libguestfs should escape special/non-printing characters in debug output\n"
#~ " - 729887 appliance crashes running aug_init with flags=4\n"
#~ " - 729075 libguestfs confuses Hp_recovery partition with Windows root filesystem\n"
#~ " - 727178 error: luks_open: cryptsetup: error while loading shared libraries: libfipscheck.so.1: cannot open shared object file: No such file or directory\n"
#~ " - 726739 libguestfs: error: aug_get: no matching node, trying to find hostname\n"
#~ " - 723474 If hivex and/or pcre not installed, libguestfs fails to compile\n"
#~ " - 693359 virt-cat and virt-edit don't handle case sensitive NTFS paths properly\n"
#~ " - 678231 virt-inspector reports unknown filesystem UUID\n"
#~ " - 671082 libguestfs does not work with kernel-rt\n"
#~ " - 666578 libguestfs: unknown filesystem label SWAP-sda2\n"
#~ " - 642821 virt-resize falls over on a disk image with a logical swap partition\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish strings can use escapes,\n"
#~ "     eg. ><fs> write /foo \"line 1\\nline 2\\n\"\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish strings can use escapes,\n"
#~ "     eg. ><fs> write /foo \"line 1\\nline 2\\n\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish write-append command can be used to append to files.\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish write-append command can be used to append to files.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Long-running file uploads and downloads can be cancelled through the\n"
#~ "     API or by hitting ^C in guestfish.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Long-running file uploads and downloads can be cancelled through the\n"
#~ "     API or by hitting ^C in guestfish.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - New guestfish \"display\" command for displaying graphical files\n"
#~ "     inside guests.\n"
#~ "\n"
#~ msgstr ""
#~ "   - New guestfish \"display\" command for displaying graphical files\n"
#~ "     inside guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - In guestfish, tab completion now works on /dev/mapper devices.\n"
#~ "\n"
#~ msgstr ""
#~ "   - In guestfish, tab completion now works on /dev/mapper devices.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Inspection API can get an icon or logo for certain guests.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Inspection API can get an icon or logo for certain guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-inspector includes the logo and hostname for certain guests.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-inspector includes the logo and hostname for certain guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-inspector can now get the version and release numbers for RPM\n"
#~ "     packages.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-inspector can now get the version and release numbers for RPM\n"
#~ "     packages.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - CentOS and Scientific Linux are now treated as separate distros by\n"
#~ "     the inspection API.\n"
#~ "\n"
#~ msgstr ""
#~ "   - CentOS and Scientific Linux are now treated as separate distros by\n"
#~ "     the inspection API.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-resize can now handle btrfs.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-resize can now handle btrfs.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - New virt-resize --ntfsresize-force option allows Windows VMs to be\n"
#~ "     resized multiple times.\n"
#~ "\n"
#~ msgstr ""
#~ "   - New virt-resize --ntfsresize-force option allows Windows VMs to be\n"
#~ "     resized multiple times.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfish, guestmount, virt-cat, virt-df, virt-edit, virt-filesystems,\n"
#~ "     virt-inspector, virt-ls and virt-rescue now allow you to use\n"
#~ "     \"-d UUID\" option to specify a guest by UUID.  This makes them more\n"
#~ "     robust to use from other programs.\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfish, guestmount, virt-cat, virt-df, virt-edit, virt-filesystems,\n"
#~ "     virt-inspector, virt-ls and virt-rescue now allow you to use\n"
#~ "     \"-d UUID\" option to specify a guest by UUID.  This makes them more\n"
#~ "     robust to use from other programs.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-ls -lR option allows complex file iteration and guest analysis.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-ls -lR option allows complex file iteration and guest analysis.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-win-reg supports HKEY_USERS\\<SID> and HKEY_USERS\\<username>.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-win-reg supports HKEY_USERS\\<SID> and HKEY_USERS\\<username>.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-win-reg new option --unsafe-printable-strings allows printable\n"
#~ "     strings to be displayed in the output (unsafely: read the documentation\n"
#~ "     before using).\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-win-reg new option --unsafe-printable-strings allows printable\n"
#~ "     strings to be displayed in the output (unsafely: read the documentation\n"
#~ "     before using).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - virt-edit has been rewritten in C.\n"
#~ "\n"
#~ msgstr ""
#~ "   - virt-edit has been rewritten in C.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Java is now completely supported.\n"
#~ "     See http://libguestfs.org/guestfs-java.3.html\n"
#~ "\n"
#~ msgstr ""
#~ "   - Java is now completely supported.\n"
#~ "     See http://libguestfs.org/guestfs-java.3.html\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - JRuby is supported via the Java bindings.\n"
#~ "\n"
#~ msgstr ""
#~ "   - JRuby is supported via the Java bindings.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfs_close now appears in trace messages.\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfs_close now appears in trace messages.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Python binding adds explicit g.close() method.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Python binding adds explicit g.close() method.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Python programs can now use the new event API.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Python programs can now use the new event API.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Python GIL is released during libguestfs calls, allowing multithreaded\n"
#~ "     Python programs to work properly.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Python GIL is released during libguestfs calls, allowing multithreaded\n"
#~ "     Python programs to work properly.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - 9pfs (Plan 9 filesystems exported from the host) are now supported.\n"
#~ "\n"
#~ msgstr ""
#~ "   - 9pfs (Plan 9 filesystems exported from the host) are now supported.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - Add -DGUESTFS_WARN_DEPRECATED=1 to warn about use of deprecated API\n"
#~ "     functions in C programs.\n"
#~ "\n"
#~ msgstr ""
#~ "   - Add -DGUESTFS_WARN_DEPRECATED=1 to warn about use of deprecated API\n"
#~ "     functions in C programs.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - New manual page guestfs-recipes(1) with recipes.\n"
#~ "\n"
#~ msgstr ""
#~ "   - New manual page guestfs-recipes(1) with recipes.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - mkfs-opts can now set inode size and sector size on created filesystems\n"
#~ "     (thanks Nikita Menkovich).\n"
#~ "\n"
#~ msgstr ""
#~ "   - mkfs-opts can now set inode size and sector size on created filesystems\n"
#~ "     (thanks Nikita Menkovich).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   - guestfs_last_errno is now accessible from OCaml (as g#last_errno ()).\n"
#~ "\n"
#~ msgstr ""
#~ "   - guestfs_last_errno is now accessible from OCaml (as g#last_errno ()).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - optargs_bitmask is checked even for calls that have no optional\n"
#~ "   arguments.  This closes a possible exploit in the daemon from\n"
#~ "   untrusted callers.\n"
#~ "\n"
#~ msgstr ""
#~ " - optargs_bitmask is checked even for calls that have no optional\n"
#~ "   arguments.  This closes a possible exploit in the daemon from\n"
#~ "   untrusted callers.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  btrfs-filesystem-resize, get-pgroup, inspect-get-icon, is-zero,\n"
#~ "  is-zero-device, list-9p, list-dm-devices, mount-9p, ntfsresize-opts,\n"
#~ "  set-pgroup, write-append\n"
#~ "\n"
#~ msgstr ""
#~ "  btrfs-filesystem-resize, get-pgroup, inspect-get-icon, is-zero,\n"
#~ "  is-zero-device, list-9p, list-dm-devices, mount-9p, ntfsresize-opts,\n"
#~ "  set-pgroup, write-append\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Coverity (a static analysis tool) was run across the codebase and\n"
#~ "   many fixes were made.\n"
#~ "\n"
#~ msgstr ""
#~ " - Coverity (a static analysis tool) was run across the codebase and\n"
#~ "   many fixes were made.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Generator can handle functions that return RBufferOut and have\n"
#~ "   optional arguments.\n"
#~ "\n"
#~ msgstr ""
#~ " - Generator can handle functions that return RBufferOut and have\n"
#~ "   optional arguments.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Compatible with Perl 5.14.\n"
#~ "\n"
#~ msgstr ""
#~ " - Compatible with Perl 5.14.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Compatible with gcc 4.6.\n"
#~ "\n"
#~ msgstr ""
#~ " - Compatible with gcc 4.6.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Perform safety checks on QEMU.\n"
#~ "\n"
#~ msgstr ""
#~ " - Perform safety checks on QEMU.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - C API tests can now fully test calls that have optional arguments.\n"
#~ "\n"
#~ msgstr ""
#~ " - C API tests can now fully test calls that have optional arguments.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Use ./configure --enable-install-daemon to install /usr/sbin/guestfsd.\n"
#~ "\n"
#~ msgstr ""
#~ " - Use ./configure --enable-install-daemon to install /usr/sbin/guestfsd.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - po-docs directory now covers all man pages.\n"
#~ "\n"
#~ msgstr ""
#~ " - po-docs directory now covers all man pages.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - stderr from qemu process is now captured by the event subsystem.\n"
#~ "\n"
#~ msgstr ""
#~ " - stderr from qemu process is now captured by the event subsystem.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 602997 part-get-bootable gives wrong result with an unordered part layout\n"
#~ " - 661280 virt-rescue: panic when shutting down: \"/sbin/reboot: No such file or directory\"\n"
#~ " - 700369 qemu-system-x86_64 says 'KVM not supported for this target'\n"
#~ " - 705200 guestmount attempt results in access denied\n"
#~ " - 714981 'list-filesystems' does not know about virtio 9p filesystems or detect existing mounts\n"
#~ " - 717786 libguestfs python bindings should have an explicit close call\n"
#~ " - 721275 virt-resize in F16 should support btrfs\n"
#~ "\n"
#~ msgstr ""
#~ " - 602997 part-get-bootable gives wrong result with an unordered part layout\n"
#~ " - 661280 virt-rescue: panic when shutting down: \"/sbin/reboot: No such file or directory\"\n"
#~ " - 700369 qemu-system-x86_64 says 'KVM not supported for this target'\n"
#~ " - 705200 guestmount attempt results in access denied\n"
#~ " - 714981 'list-filesystems' does not know about virtio 9p filesystems or detect existing mounts\n"
#~ " - 717786 libguestfs python bindings should have an explicit close call\n"
#~ " - 721275 virt-resize in F16 should support btrfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - libguestfs and tools can be used against live virtual machines.\n"
#~ "   See the 'guestfish --live' and 'guestmount --live' options, and (for\n"
#~ "   the low-level interface) the new APIs set-attach-method and\n"
#~ "   get-attach-method.\n"
#~ "\n"
#~ msgstr ""
#~ " - libguestfs and tools can be used against live virtual machines.\n"
#~ "   See the 'guestfish --live' and 'guestmount --live' options, and (for\n"
#~ "   the low-level interface) the new APIs set-attach-method and\n"
#~ "   get-attach-method.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New virt tools:\n"
#~ "   virt-copy-in, virt-copy-out, virt-tar-in, virt-tar-out.\n"
#~ "\n"
#~ msgstr ""
#~ " - New virt tools:\n"
#~ "   virt-copy-in, virt-copy-out, virt-tar-in, virt-tar-out.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - libguestfs can get the drive letter mappings for Windows guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - libguestfs can get the drive letter mappings for Windows guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-inspector displays drive letter mappings for Windows guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-inspector displays drive letter mappings for Windows guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Drive letters can now be used in virt-edit and guestfish programs\n"
#~ "   when operating on Windows guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - Drive letters can now be used in virt-edit and guestfish programs\n"
#~ "   when operating on Windows guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-resize now works on 32 bit hosts.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-resize now works on 32 bit hosts.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - You can now inspect the install disks and live CDs of many different\n"
#~ "   operating systems.\n"
#~ "\n"
#~ msgstr ""
#~ " - You can now inspect the install disks and live CDs of many different\n"
#~ "   operating systems.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish <! cmd which executes a shell cmd and inlines the result.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish <! cmd which executes a shell cmd and inlines the result.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish, guestmount, virt-rescue now all support --ro and --rw\n"
#~ "   options, and the default for this can be chosen via a configuration\n"
#~ "   file (/etc/libguestfs-tools.conf).\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish, guestmount, virt-rescue now all support --ro and --rw\n"
#~ "   options, and the default for this can be chosen via a configuration\n"
#~ "   file (/etc/libguestfs-tools.conf).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New event API allows more than one callback to be registered for\n"
#~ "   each event, makes it possible to call the API from other languages,\n"
#~ "   and allows nearly all log, debug and trace messages to be rerouted\n"
#~ "   from stderr.\n"
#~ "\n"
#~ msgstr ""
#~ " - New event API allows more than one callback to be registered for\n"
#~ "   each event, makes it possible to call the API from other languages,\n"
#~ "   and allows nearly all log, debug and trace messages to be rerouted\n"
#~ "   from stderr.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Greater FHS compliance for temporary files, including using /var/tmp\n"
#~ "   for large cached files that should survive reboot (instead of /tmp).\n"
#~ "\n"
#~ msgstr ""
#~ " - Greater FHS compliance for temporary files, including using /var/tmp\n"
#~ "   for large cached files that should survive reboot (instead of /tmp).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish, guestmount -m option allows mount options to be passed\n"
#~ "   through to the underlying filesystem.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish, guestmount -m option allows mount options to be passed\n"
#~ "   through to the underlying filesystem.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - mkfs-opts allows filesystem features to be specified.\n"
#~ "\n"
#~ msgstr ""
#~ " - mkfs-opts allows filesystem features to be specified.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - More intelligent handling of mountpoints, allowing mkmountpoint, mount\n"
#~ "   and umount-all commands to work together properly.\n"
#~ "\n"
#~ msgstr ""
#~ " - More intelligent handling of mountpoints, allowing mkmountpoint, mount\n"
#~ "   and umount-all commands to work together properly.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Trace messages are prefixed with a distinct string, allowing them to\n"
#~ "   be easily 'grepped' out from debug output.\n"
#~ "\n"
#~ msgstr ""
#~ " - Trace messages are prefixed with a distinct string, allowing them to\n"
#~ "   be easily 'grepped' out from debug output.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfs_launch (guestfish 'run' command) now produces progress\n"
#~ "   messages (a guestfish progress bar) if it takes longer than 5\n"
#~ "   seconds to run.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfs_launch (guestfish 'run' command) now produces progress\n"
#~ "   messages (a guestfish progress bar) if it takes longer than 5\n"
#~ "   seconds to run.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Several long-running commands where we are unable to estimate time\n"
#~ "   to completion generate \"pulse mode\" progress events.  Progress bar\n"
#~ "   in guestfish has been updated to display these.\n"
#~ "\n"
#~ msgstr ""
#~ " - Several long-running commands where we are unable to estimate time\n"
#~ "   to completion generate \"pulse mode\" progress events.  Progress bar\n"
#~ "   in guestfish has been updated to display these.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Publish new example code in: C, Perl, Python, OCaml, Ruby.\n"
#~ "\n"
#~ msgstr ""
#~ " - Publish new example code in: C, Perl, Python, OCaml, Ruby.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New virt-dhcp-address example program.\n"
#~ "\n"
#~ msgstr ""
#~ " - New virt-dhcp-address example program.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - The Java and Ruby bindings have been improved greatly.\n"
#~ "\n"
#~ msgstr ""
#~ " - The Java and Ruby bindings have been improved greatly.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Perl includes a way to get the errno of the last error.\n"
#~ "\n"
#~ msgstr ""
#~ " - Perl includes a way to get the errno of the last error.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Python bindings now compatible with rpyc (thanks Erez Shinan).\n"
#~ "\n"
#~ msgstr ""
#~ " - Python bindings now compatible with rpyc (thanks Erez Shinan).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Transifex is now being used to manage translations.\n"
#~ "   http://www.transifex.net/projects/p/libguestfs/\n"
#~ "\n"
#~ msgstr ""
#~ " - Transifex is now being used to manage translations.\n"
#~ "   http://www.transifex.net/projects/p/libguestfs/\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Inspection now supports Red Hat Desktop, Slackware distributions.\n"
#~ "\n"
#~ msgstr ""
#~ " - Inspection now supports Red Hat Desktop, Slackware distributions.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Inspection no longer fails for Windows guests that have two or\n"
#~ "   more disks.\n"
#~ "\n"
#~ msgstr ""
#~ " - Inspection no longer fails for Windows guests that have two or\n"
#~ "   more disks.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Inspection can now tell the difference between Windows 2008 Server\n"
#~ "   and Windows 7.\n"
#~ "\n"
#~ msgstr ""
#~ " - Inspection can now tell the difference between Windows 2008 Server\n"
#~ "   and Windows 7.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Inspection can detect 32 bit applications installed in 64 bit\n"
#~ "   Windows, running on the WOW64 emulator.\n"
#~ "\n"
#~ msgstr ""
#~ " - Inspection can detect 32 bit applications installed in 64 bit\n"
#~ "   Windows, running on the WOW64 emulator.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - A series of protocol fixes has fixed the old bug RHBZ#576879\n"
#~ "   which used to cause errors during the upload command to lose\n"
#~ "   protocol synchronization.\n"
#~ "\n"
#~ msgstr ""
#~ " - A series of protocol fixes has fixed the old bug RHBZ#576879\n"
#~ "   which used to cause errors during the upload command to lose\n"
#~ "   protocol synchronization.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New logo!\n"
#~ "\n"
#~ msgstr ""
#~ " - New logo!\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  [none]\n"
#~ "\n"
#~ msgstr ""
#~ "  [none]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  first-private, get-attach-method, inspect-get-drive-mappings,\n"
#~ "  inspect-get-product-variant,\n"
#~ "  inspect-get-windows-current-control-set, next-private, resize2fs-M,\n"
#~ "  set-attach-method.\n"
#~ "\n"
#~ msgstr ""
#~ "  first-private, get-attach-method, inspect-get-drive-mappings,\n"
#~ "  inspect-get-product-variant,\n"
#~ "  inspect-get-windows-current-control-set, next-private, resize2fs-M,\n"
#~ "  set-attach-method.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - The 'HACKING' file is obsolete.  The contents have been moved into\n"
#~ "   a section of the guestfs(3) manual page.\n"
#~ "\n"
#~ msgstr ""
#~ " - The 'HACKING' file is obsolete.  The contents have been moved into\n"
#~ "   a section of the guestfs(3) manual page.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - libguestfs-test-tool simplified.  It no longer needs the static\n"
#~ "   binary or tries to construct an ISO.\n"
#~ "\n"
#~ msgstr ""
#~ " - libguestfs-test-tool simplified.  It no longer needs the static\n"
#~ "   binary or tries to construct an ISO.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - rpcgen-generated files are compiled with -fno-strict-aliasing\n"
#~ "   which should be safer (thanks Matt Booth).\n"
#~ "\n"
#~ msgstr ""
#~ " - rpcgen-generated files are compiled with -fno-strict-aliasing\n"
#~ "   which should be safer (thanks Matt Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-resize was rewritten in OCaml.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-resize was rewritten in OCaml.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish and other tools tested with valgrind; some memory leaks\n"
#~ "   were fixed.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish and other tools tested with valgrind; some memory leaks\n"
#~ "   were fixed.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Support and packages for Debian and Ubuntu.\n"
#~ "\n"
#~ msgstr ""
#~ " - Support and packages for Debian and Ubuntu.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Daily builds from git repository on Debian and Ubuntu to reduce risk\n"
#~ "   of regressions.\n"
#~ "\n"
#~ msgstr ""
#~ " - Daily builds from git repository on Debian and Ubuntu to reduce risk\n"
#~ "   of regressions.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Port to ArchLinux 'pacman' (thanks Thomas S Hatch).\n"
#~ "\n"
#~ msgstr ""
#~ " - Port to ArchLinux 'pacman' (thanks Thomas S Hatch).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - The following tools have been rewritten in C (originally in Perl):\n"
#~ "\n"
#~ msgstr ""
#~ " - The following tools have been rewritten in C (originally in Perl):\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "     . virt-cat\n"
#~ "     . virt-df\n"
#~ "     . virt-inspector\n"
#~ "     . virt-ls\n"
#~ "     . virt-rescue\n"
#~ "\n"
#~ msgstr ""
#~ "     . virt-cat\n"
#~ "     . virt-df\n"
#~ "     . virt-inspector\n"
#~ "     . virt-ls\n"
#~ "     . virt-rescue\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Some C tools support encrypted guests automatically.  This is\n"
#~ "   supported in: guestfish, guestmount, virt-cat, virt-inspector,\n"
#~ "   virt-ls.\n"
#~ "\n"
#~ msgstr ""
#~ " - Some C tools support encrypted guests automatically.  This is\n"
#~ "   supported in: guestfish, guestmount, virt-cat, virt-inspector,\n"
#~ "   virt-ls.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New tool virt-filesystems (in C) which is a replacement for\n"
#~ "   virt-list-filesystems and virt-list-partitions, and has a superset\n"
#~ "   of the functionality of those tools.\n"
#~ "\n"
#~ msgstr ""
#~ " - New tool virt-filesystems (in C) which is a replacement for\n"
#~ "   virt-list-filesystems and virt-list-partitions, and has a superset\n"
#~ "   of the functionality of those tools.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish, guestmount and the C tools use unified command line option\n"
#~ "   parsing, so they support many common options such as '-a disk.img',\n"
#~ "   '-d libvirt-domain', '-x', '-v'.  The old command line option\n"
#~ "   parsing is preserved for compatibility in scripts etc.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish, guestmount and the C tools use unified command line option\n"
#~ "   parsing, so they support many common options such as '-a disk.img',\n"
#~ "   '-d libvirt-domain', '-x', '-v'.  The old command line option\n"
#~ "   parsing is preserved for compatibility in scripts etc.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish no longer has any dependencies on Perl\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish no longer has any dependencies on Perl\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New man pages containing programming examples: guestfs-examples(3) (C/C++),\n"
#~ "   guestfs-ocaml(3), guestfs-python(3), guestfs-ruby(3).\n"
#~ "\n"
#~ msgstr ""
#~ " - New man pages containing programming examples: guestfs-examples(3) (C/C++),\n"
#~ "   guestfs-ocaml(3), guestfs-python(3), guestfs-ruby(3).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Trace mode prints return values from API functions.\n"
#~ "\n"
#~ msgstr ""
#~ " - Trace mode prints return values from API functions.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-inspector can list applications installed in Windows guests, along\n"
#~ "   with a great deal of information about those applications.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-inspector can list applications installed in Windows guests, along\n"
#~ "   with a great deal of information about those applications.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add support for inspecting: Linux Mint, Mandriva, FreeBSD.\n"
#~ "\n"
#~ msgstr ""
#~ " - Add support for inspecting: Linux Mint, Mandriva, FreeBSD.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish --rw option (with no effect currently) to make potentially\n"
#~ "   dangerous write access explicit.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish --rw option (with no effect currently) to make potentially\n"
#~ "   dangerous write access explicit.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish --listen --csh for compatibility with csh, tcsh (thanks\n"
#~ "   Eric Blake).\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish --listen --csh for compatibility with csh, tcsh (thanks\n"
#~ "   Eric Blake).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - The first upstream version that introduced each API function is now\n"
#~ "   documented in guestfs(3).\n"
#~ "\n"
#~ msgstr ""
#~ " - The first upstream version that introduced each API function is now\n"
#~ "   documented in guestfs(3).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfs_last_errno allows you to retrieve the errno from the\n"
#~ "   daemon, correctly translated to the local operating system.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfs_last_errno allows you to retrieve the errno from the\n"
#~ "   daemon, correctly translated to the local operating system.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Functions can now have optional parameters.\n"
#~ "\n"
#~ msgstr ""
#~ " - Functions can now have optional parameters.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Progress bars and progress notifications can now happen for upload\n"
#~ "   commands.\n"
#~ "\n"
#~ msgstr ""
#~ " - Progress bars and progress notifications can now happen for upload\n"
#~ "   commands.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Appliance builder more careful about not leaving temporary files\n"
#~ "   around in /tmp.\n"
#~ "\n"
#~ msgstr ""
#~ " - Appliance builder more careful about not leaving temporary files\n"
#~ "   around in /tmp.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - getfattr/setfattr commands added to virt-rescue.\n"
#~ "\n"
#~ msgstr ""
#~ " - getfattr/setfattr commands added to virt-rescue.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - ROADMAP file covers roadmap and goals for future releases.\n"
#~ "\n"
#~ msgstr ""
#~ " - ROADMAP file covers roadmap and goals for future releases.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New SECURITY section in guestfs(3) API documentation.\n"
#~ "\n"
#~ msgstr ""
#~ " - New SECURITY section in guestfs(3) API documentation.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-inspector no longer runs any guest commands.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-inspector no longer runs any guest commands.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Inspection code is more careful about avoiding very large files\n"
#~ "   from guests which might previously have caused a denial of service.\n"
#~ "\n"
#~ msgstr ""
#~ " - Inspection code is more careful about avoiding very large files\n"
#~ "   from guests which might previously have caused a denial of service.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - FUSE calls into guestmount are now traced when using guestmount -x.\n"
#~ "\n"
#~ msgstr ""
#~ " - FUSE calls into guestmount are now traced when using guestmount -x.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - add-domain\n"
#~ " - add-drive-opts\n"
#~ " - getxattr\n"
#~ " - inspect-get-hostname\n"
#~ " - inspect-get-package-format\n"
#~ " - inspect-get-package-management\n"
#~ " - inspect-get-roots\n"
#~ " - inspect-list-applications\n"
#~ " - lgetxattr\n"
#~ " - mkfs-opts\n"
#~ "\n"
#~ msgstr ""
#~ " - add-domain\n"
#~ " - add-drive-opts\n"
#~ " - getxattr\n"
#~ " - inspect-get-hostname\n"
#~ " - inspect-get-package-format\n"
#~ " - inspect-get-package-management\n"
#~ " - inspect-get-roots\n"
#~ " - inspect-list-applications\n"
#~ " - lgetxattr\n"
#~ " - mkfs-opts\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - C programs now only link precisely with the libraries that they use.\n"
#~ "\n"
#~ msgstr ""
#~ " - C programs now only link precisely with the libraries that they use.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - PCRE, libmagic, hivex and libvirt libraries are now completely\n"
#~ "   optional for building.\n"
#~ "\n"
#~ msgstr ""
#~ " - PCRE, libmagic, hivex and libvirt libraries are now completely\n"
#~ "   optional for building.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Multiple memory leaks and file descriptor leaks fixed.\n"
#~ "\n"
#~ msgstr ""
#~ " - Multiple memory leaks and file descriptor leaks fixed.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add a POD wrapper to unify generation of man pages and HTML files\n"
#~ "   across all programs.\n"
#~ "\n"
#~ msgstr ""
#~ " - Add a POD wrapper to unify generation of man pages and HTML files\n"
#~ "   across all programs.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Source includes phony images of Fedora, Debian, Ubuntu and\n"
#~ "   Windows guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - Source includes phony images of Fedora, Debian, Ubuntu and\n"
#~ "   Windows guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Ruby bindings have 'make install' rule.\n"
#~ "\n"
#~ msgstr ""
#~ " - Ruby bindings have 'make install' rule.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - <guestfs.h> is now a single file.\n"
#~ "\n"
#~ msgstr ""
#~ " - <guestfs.h> is now a single file.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - <guestfs.h> does not require XDR headers.\n"
#~ "\n"
#~ msgstr ""
#~ " - <guestfs.h> does not require XDR headers.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - ocaml xml-light library is no longer required to build (thanks\n"
#~ "   Maxim Koltsov).\n"
#~ "\n"
#~ msgstr ""
#~ " - ocaml xml-light library is no longer required to build (thanks\n"
#~ "   Maxim Koltsov).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - ./configure --disable-[...] for each language binding (thanks\n"
#~ "   Maxim Koltsov).\n"
#~ "\n"
#~ msgstr ""
#~ " - ./configure --disable-[...] for each language binding (thanks\n"
#~ "   Maxim Koltsov).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Old ocaml-viewer program removed (use guestfs-browser instead).\n"
#~ "\n"
#~ msgstr ""
#~ " - Old ocaml-viewer program removed (use guestfs-browser instead).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New C API test type 'InitScratchFS' makes the tests run a little\n"
#~ "   more quickly.\n"
#~ "\n"
#~ msgstr ""
#~ " - New C API test type 'InitScratchFS' makes the tests run a little\n"
#~ "   more quickly.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Excluded packages in the appliance are now listed in a separate\n"
#~ "   file appliance/excludelist.in, and can be customized per-distro.\n"
#~ "\n"
#~ msgstr ""
#~ " - Excluded packages in the appliance are now listed in a separate\n"
#~ "   file appliance/excludelist.in, and can be customized per-distro.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 663407 readlink and readlinklist returns /sysroot/ in some paths\n"
#~ " - 661280 virt-rescue: panic when shutting down: \"/sbin/reboot: No such file or directory\"\n"
#~ " - 657499 checksum: wrong check sum type causes umount to fail\n"
#~ " - 655554 Whole disk paths are not made canonical by virt-inspector\n"
#~ " - 654638 openssl updated to 1.0.0b libguestfs depends on exact file names\n"
#~ " - 652796 ruby bindings not installed by 'make install', hence omitted from the binary distribution\n"
#~ "\n"
#~ msgstr ""
#~ " - 663407 readlink and readlinklist returns /sysroot/ in some paths\n"
#~ " - 661280 virt-rescue: panic when shutting down: \"/sbin/reboot: No such file or directory\"\n"
#~ " - 657499 checksum: wrong check sum type causes umount to fail\n"
#~ " - 655554 Whole disk paths are not made canonical by virt-inspector\n"
#~ " - 654638 openssl updated to 1.0.0b libguestfs depends on exact file names\n"
#~ " - 652796 ruby bindings not installed by 'make install', hence omitted from the binary distribution\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Use a new method for creating and caching the appliance.  This\n"
#~ "   greatly improves the performance of libguestfs, often by a factor\n"
#~ "   of x 4 to x 5.\n"
#~ "\n"
#~ msgstr ""
#~ " - Use a new method for creating and caching the appliance.  This\n"
#~ "   greatly improves the performance of libguestfs, often by a factor\n"
#~ "   of x 4 to x 5.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Support for guest inspection (like virt-inspector) via the ordinary\n"
#~ "   API and all language bindings.  'guestfish -i' option is as a side-\n"
#~ "   effect much quicker.\n"
#~ "\n"
#~ msgstr ""
#~ " - Support for guest inspection (like virt-inspector) via the ordinary\n"
#~ "   API and all language bindings.  'guestfish -i' option is as a side-\n"
#~ "   effect much quicker.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-inspector and core inspection API can now detect guests running:\n"
#~ "   Fedora, Debian, Ubuntu, Windows, Red Hat Enterprise Linux, CentOS,\n"
#~ "   Scientific Linux, Gentoo, Pardus, Arch Linux, MeeGo.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-inspector and core inspection API can now detect guests running:\n"
#~ "   Fedora, Debian, Ubuntu, Windows, Red Hat Enterprise Linux, CentOS,\n"
#~ "   Scientific Linux, Gentoo, Pardus, Arch Linux, MeeGo.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Support for LUKS whole-disk encryption in guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - Support for LUKS whole-disk encryption in guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - PHP bindings.\n"
#~ "\n"
#~ msgstr ""
#~ " - PHP bindings.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Progress messages (and progress bars in guestfish and virt-resize)\n"
#~ "   for certain long-running operations.\n"
#~ "\n"
#~ msgstr ""
#~ " - Progress messages (and progress bars in guestfish and virt-resize)\n"
#~ "   for certain long-running operations.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-df is now much more efficient.  Use '--one-per-guest' to restore\n"
#~ "   the old per-guest isolation behaviour.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-df is now much more efficient.  Use '--one-per-guest' to restore\n"
#~ "   the old per-guest isolation behaviour.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish 'copy-in' and 'copy-out' commands for copying files and\n"
#~ "   directories recursively in and out of the guest.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish 'copy-in' and 'copy-out' commands for copying files and\n"
#~ "   directories recursively in and out of the guest.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish 'hexedit' command for doing binary edits to devices and\n"
#~ "   files.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish 'hexedit' command for doing binary edits to devices and\n"
#~ "   files.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Change guestfish -i syntax to allow commands to be specified on the\n"
#~ "   command line (retaining backwards compatibility).\n"
#~ "\n"
#~ msgstr ""
#~ " - Change guestfish -i syntax to allow commands to be specified on the\n"
#~ "   command line (retaining backwards compatibility).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish '-d <domain>' for adding disks from libvirt domains.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish '-d <domain>' for adding disks from libvirt domains.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish '-N' option supports several new prepared disk image types:\n"
#~ "         lvfs : disk with LV formatted with filesystem\n"
#~ "           lv : disk with LV\n"
#~ "     bootroot : boot+root\n"
#~ "   bootrootlv : boot and root on LV\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish '-N' option supports several new prepared disk image types:\n"
#~ "         lvfs : disk with LV formatted with filesystem\n"
#~ "           lv : disk with LV\n"
#~ "     bootroot : boot+root\n"
#~ "   bootrootlv : boot and root on LV\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish 'more' and 'edit' commands now work with arbitrary files.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish 'more' and 'edit' commands now work with arbitrary files.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish '--echo-keys' option allows you to echo keys/passphrases\n"
#~ "   while typing them.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish '--echo-keys' option allows you to echo keys/passphrases\n"
#~ "   while typing them.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestmount now supports -a / -d / -i options, like guestfish.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestmount now supports -a / -d / -i options, like guestfish.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Use virtio-serial for communications with the appliance.  This\n"
#~ "   also has a major performance benefit.\n"
#~ "\n"
#~ msgstr ""
#~ " - Use virtio-serial for communications with the appliance.  This\n"
#~ "   also has a major performance benefit.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-edit '-b' option to create a backup of edited files.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-edit '-b' option to create a backup of edited files.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-edit '-e' option for non-interactive edits to files.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-edit '-e' option for non-interactive edits to files.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Ability to capture core dumps from the appliance (thanks Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ " - Ability to capture core dumps from the appliance (thanks Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-rescue now shuts down cleanly (thanks Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-rescue now shuts down cleanly (thanks Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-rescue now has a --network option to enable network access.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-rescue now has a --network option to enable network access.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-resize can now handle guests which use GPT partition table format.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-resize can now handle guests which use GPT partition table format.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-resize has better support for shrinking guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-resize has better support for shrinking guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-resize supports qcow2-format guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-resize supports qcow2-format guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - $TMPDIR can be used to override almost all temporary directory usage.\n"
#~ "\n"
#~ msgstr ""
#~ " - $TMPDIR can be used to override almost all temporary directory usage.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - OCaml users can use an alternate OO-style of coding, eg. g#launch ()\n"
#~ "\n"
#~ msgstr ""
#~ " - OCaml users can use an alternate OO-style of coding, eg. g#launch ()\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - The API supports calls which take optional parameters, eg.\n"
#~ "     $g->add_drive_opts (\"disk\", readonly => 1);\n"
#~ "\n"
#~ msgstr ""
#~ " - The API supports calls which take optional parameters, eg.\n"
#~ "     $g->add_drive_opts (\"disk\", readonly => 1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Trace output now escapes and shortens large strings (thanks\n"
#~ "   Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ " - Trace output now escapes and shortens large strings (thanks\n"
#~ "   Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Autosync is now on by default, resulting in more reliable behaviour\n"
#~ "   when the handle is closed.\n"
#~ "\n"
#~ msgstr ""
#~ " - Autosync is now on by default, resulting in more reliable behaviour\n"
#~ "   when the handle is closed.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-df --uuid option allows you to follow a domain across migration\n"
#~ "   and renaming.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-df --uuid option allows you to follow a domain across migration\n"
#~ "   and renaming.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Translations of manual pages.\n"
#~ "\n"
#~ msgstr ""
#~ " - Translations of manual pages.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - CVE-2010-3851 libguestfs: missing disk format specifier when adding a disk\n"
#~ "   https://www.redhat.com/archives/libguestfs/2010-October/msg00036.html\n"
#~ "   This is comprehensively fixed in this release, and the fix will be\n"
#~ "   backported to the other stable branches after more testing.\n"
#~ "\n"
#~ msgstr ""
#~ " - CVE-2010-3851 libguestfs: missing disk format specifier when adding a disk\n"
#~ "   https://www.redhat.com/archives/libguestfs/2010-October/msg00036.html\n"
#~ "   This is comprehensively fixed in this release, and the fix will be\n"
#~ "   backported to the other stable branches after more testing.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-inspector no longer relies on untrusted guest code to list\n"
#~ "   applications in some guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-inspector no longer relies on untrusted guest code to list\n"
#~ "   applications in some guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  download-offset, file-architecture, findfs-label, findfs-uuid,\n"
#~ "  inspect-os, inspect-get-arch, inspect-get-distro,\n"
#~ "  inspect-get-filesystems, inspect-get-major-version,\n"
#~ "  inspect-get-minor-version, inspect-get-mountpoints,\n"
#~ "  inspect-get-product-name, inspect-get-type, is-blockdev, is-chardev,\n"
#~ "  is-fifo, is-lv, is-socket, is-symlink, list-filesystems, luks-add-key,\n"
#~ "  luks-close, luks-format, luks-format-cipher, luks-kill-slot,\n"
#~ "  luks-open, luks-open-ro, lvm-clear-filter, lvm-canonical-lv-name,\n"
#~ "  lvm-set-filter, part-to-dev, pread-device, pwrite-device,\n"
#~ "  upload-offset\n"
#~ "\n"
#~ msgstr ""
#~ "  download-offset, file-architecture, findfs-label, findfs-uuid,\n"
#~ "  inspect-os, inspect-get-arch, inspect-get-distro,\n"
#~ "  inspect-get-filesystems, inspect-get-major-version,\n"
#~ "  inspect-get-minor-version, inspect-get-mountpoints,\n"
#~ "  inspect-get-product-name, inspect-get-type, is-blockdev, is-chardev,\n"
#~ "  is-fifo, is-lv, is-socket, is-symlink, list-filesystems, luks-add-key,\n"
#~ "  luks-close, luks-format, luks-format-cipher, luks-kill-slot,\n"
#~ "  luks-open, luks-open-ro, lvm-clear-filter, lvm-canonical-lv-name,\n"
#~ "  lvm-set-filter, part-to-dev, pread-device, pwrite-device,\n"
#~ "  upload-offset\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Use size_t for loop iterators.\n"
#~ " - Refactor the library code into separate files.\n"
#~ " - Refactor the generator code into separate files.\n"
#~ " - Generate guestfish commands.\n"
#~ " - guestfish & guestmount options processing is unified.\n"
#~ " - Protocol changes:\n"
#~ "     error message size increased to 64K\n"
#~ "     send errno to library\n"
#~ " - Add 'make bindist' to make a binary distribution.\n"
#~ " - Cleaner behaviour under valgrind.\n"
#~ " - More testing of the guestfish command line options and libvirt\n"
#~ "   integration.\n"
#~ " - The Perl inspection code is no longer used by any of the tools.\n"
#~ "\n"
#~ msgstr ""
#~ " - Use size_t for loop iterators.\n"
#~ " - Refactor the library code into separate files.\n"
#~ " - Refactor the generator code into separate files.\n"
#~ " - Generate guestfish commands.\n"
#~ " - guestfish & guestmount options processing is unified.\n"
#~ " - Protocol changes:\n"
#~ "     error message size increased to 64K\n"
#~ "     send errno to library\n"
#~ " - Add 'make bindist' to make a binary distribution.\n"
#~ " - Cleaner behaviour under valgrind.\n"
#~ " - More testing of the guestfish command line options and libvirt\n"
#~ "   integration.\n"
#~ " - The Perl inspection code is no longer used by any of the tools.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 646822 libguestfs trace mode should not print long binary strings\n"
#~ " - 646821 virt-df should have --uuid option\n"
#~ " - 646432 /dev/mapper paths should not be returned from guestfs_mountpoints\n"
#~ " - 643624 libguestfs tools documentation should describe how to quote guest domain names from shell\n"
#~ " - 642934 No way to specify disk format when adding a disk to libguestfs\n"
#~ " - 642933 guestfs_list_filesystems should be used in all possible places\n"
#~ " - 642932 guestmount options should match guestfish options\n"
#~ " - 642930 virt-inspector (Sys::Guestfs::Lib) should use C inspection APIs\n"
#~ " - 642929 C inspection code should ignore /dev/fd* in /etc/fstab\n"
#~ " - 642826 virt-resize converts any other image format to raw without notifying user, instructions do not account for this\n"
#~ " - 640961 Document that grub-install might be needed for old Linux guests after virt-resize\n"
#~ " - 639986 virt-df --csv does not properly quote \" in libvirt domain names\n"
#~ " - 639405 Interrupted cached appliance creation leaves libguestfs unusable\n"
#~ " - 638901 Appliance filename should not contain repository name\n"
#~ " - 638899 /dev/mapper paths should not be returned from C inspection APIs\n"
#~ " - 636918 Updates to Spanish translation\n"
#~ " - 636061 [abrt] guestfish-1.2.11-1.fc12: malloc_consolidate: Process /usr/bin/guestfish was killed by signal 11 (SIGSEGV)\n"
#~ " - 635969 glob echo mkfs ext2 /dev/vd[b-t]1 prints garbage\n"
#~ " - 634246 guestfs_part_get_parttype returns \"loop\" when run against a partition, LV or filesystem\n"
#~ " - 633766 virt-resize --shrink fails\n"
#~ " - 633357 Updates to Spanish translation\n"
#~ " - 633096 virt-resize calculates block device size incorrectly, doesn't work with qcow2 target\n"
#~ " - 629593 Dutch translation added\n"
#~ " - 627556 Updates to Spanish translations of libguestfs\n"
#~ " - 626843 Updates to Spanish translations\n"
#~ " - 619793 [RFE] Need a way to determine if a particular block device is a logical volume\n"
#~ " - 618556 virt-rescue return none zero value when exit\n"
#~ " - 617200 mount operation failed and hung on some images which running in read-only mode\n"
#~ " - 610880 libguestfs should set broader read perms on tmpdir, so works in some situations when executed with umask 077\n"
#~ " - 599503 document that mkmountpoint and umount-all cannot be mixed\n"
#~ " - 571714 Running virt-df on disk image relabels it, so qemu can no longer write to it.\n"
#~ " - 502533 Updated Polish translation of libguestfs\n"
#~ "\n"
#~ msgstr ""
#~ " - 646822 libguestfs trace mode should not print long binary strings\n"
#~ " - 646821 virt-df should have --uuid option\n"
#~ " - 646432 /dev/mapper paths should not be returned from guestfs_mountpoints\n"
#~ " - 643624 libguestfs tools documentation should describe how to quote guest domain names from shell\n"
#~ " - 642934 No way to specify disk format when adding a disk to libguestfs\n"
#~ " - 642933 guestfs_list_filesystems should be used in all possible places\n"
#~ " - 642932 guestmount options should match guestfish options\n"
#~ " - 642930 virt-inspector (Sys::Guestfs::Lib) should use C inspection APIs\n"
#~ " - 642929 C inspection code should ignore /dev/fd* in /etc/fstab\n"
#~ " - 642826 virt-resize converts any other image format to raw without notifying user, instructions do not account for this\n"
#~ " - 640961 Document that grub-install might be needed for old Linux guests after virt-resize\n"
#~ " - 639986 virt-df --csv does not properly quote \" in libvirt domain names\n"
#~ " - 639405 Interrupted cached appliance creation leaves libguestfs unusable\n"
#~ " - 638901 Appliance filename should not contain repository name\n"
#~ " - 638899 /dev/mapper paths should not be returned from C inspection APIs\n"
#~ " - 636918 Updates to Spanish translation\n"
#~ " - 636061 [abrt] guestfish-1.2.11-1.fc12: malloc_consolidate: Process /usr/bin/guestfish was killed by signal 11 (SIGSEGV)\n"
#~ " - 635969 glob echo mkfs ext2 /dev/vd[b-t]1 prints garbage\n"
#~ " - 634246 guestfs_part_get_parttype returns \"loop\" when run against a partition, LV or filesystem\n"
#~ " - 633766 virt-resize --shrink fails\n"
#~ " - 633357 Updates to Spanish translation\n"
#~ " - 633096 virt-resize calculates block device size incorrectly, doesn't work with qcow2 target\n"
#~ " - 629593 Dutch translation added\n"
#~ " - 627556 Updates to Spanish translations of libguestfs\n"
#~ " - 626843 Updates to Spanish translations\n"
#~ " - 619793 [RFE] Need a way to determine if a particular block device is a logical volume\n"
#~ " - 618556 virt-rescue return none zero value when exit\n"
#~ " - 617200 mount operation failed and hung on some images which running in read-only mode\n"
#~ " - 610880 libguestfs should set broader read perms on tmpdir, so works in some situations when executed with umask 077\n"
#~ " - 599503 document that mkmountpoint and umount-all cannot be mixed\n"
#~ " - 571714 Running virt-df on disk image relabels it, so qemu can no longer write to it.\n"
#~ " - 502533 Updated Polish translation of libguestfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish lets you choose a prepared disk image, eg:\n"
#~ "     guestfish -N fs:ext4\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish lets you choose a prepared disk image, eg:\n"
#~ "     guestfish -N fs:ext4\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add write support to guestmount (FUSE) module.\n"
#~ "\n"
#~ msgstr ""
#~ " - Add write support to guestmount (FUSE) module.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-resize can now resize the content of partitions and logical\n"
#~ "   volumes in the guest, and we have better support for shrinking guests.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-resize can now resize the content of partitions and logical\n"
#~ "   volumes in the guest, and we have better support for shrinking guests.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Bash tab-completion script for guestfish.\n"
#~ "\n"
#~ msgstr ""
#~ " - Bash tab-completion script for guestfish.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add ZFS support to virt-rescue.\n"
#~ "\n"
#~ msgstr ""
#~ " - Add ZFS support to virt-rescue.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New tool 'virt-make-fs' for creating filesystems with content.\n"
#~ "\n"
#~ msgstr ""
#~ " - New tool 'virt-make-fs' for creating filesystems with content.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Allow suffixes on any guestfish number parameter, eg. \"1M\".\n"
#~ "\n"
#~ msgstr ""
#~ " - Allow suffixes on any guestfish number parameter, eg. \"1M\".\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish 'man' command opens the manual page.\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish 'man' command opens the manual page.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish supports a \"heredoc\" syntax for uploading files:\n"
#~ "     upload -<<_end_ /foo\n"
#~ "     content\n"
#~ "     _end_\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish supports a \"heredoc\" syntax for uploading files:\n"
#~ "     upload -<<_end_ /foo\n"
#~ "     content\n"
#~ "     _end_\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Some guestfish commands now print their output in octal or hex\n"
#~ "   where appropriate (RHBZ#583242).\n"
#~ "\n"
#~ msgstr ""
#~ " - Some guestfish commands now print their output in octal or hex\n"
#~ "   where appropriate (RHBZ#583242).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Allow dash prefix on guestfish command line.  This ignores any\n"
#~ "   error from the second command:                   (RHBZ#578407)\n"
#~ "     guestfish -- cmd1 : -cmd2 : cmd3\n"
#~ "\n"
#~ msgstr ""
#~ " - Allow dash prefix on guestfish command line.  This ignores any\n"
#~ "   error from the second command:                   (RHBZ#578407)\n"
#~ "     guestfish -- cmd1 : -cmd2 : cmd3\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - guestfish -h / help command now returns an error for non-existent\n"
#~ "   commands (RHBZ#597145).\n"
#~ "\n"
#~ msgstr ""
#~ " - guestfish -h / help command now returns an error for non-existent\n"
#~ "   commands (RHBZ#597145).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - New 'supported' command in guestfish to list optional groups of\n"
#~ "   commands which are supported by the daemon / configuration.\n"
#~ "\n"
#~ msgstr ""
#~ " - New 'supported' command in guestfish to list optional groups of\n"
#~ "   commands which are supported by the daemon / configuration.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-inspector and guestfish -i now work for filenames which\n"
#~ "   contain spaces (RHBZ#507810).\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-inspector and guestfish -i now work for filenames which\n"
#~ "   contain spaces (RHBZ#507810).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Change the protocol to use link-local addresses, to avoid\n"
#~ "   conflicting with any address that the host might be using\n"
#~ "   (RHBZ#588763).\n"
#~ "\n"
#~ msgstr ""
#~ " - Change the protocol to use link-local addresses, to avoid\n"
#~ "   conflicting with any address that the host might be using\n"
#~ "   (RHBZ#588763).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - libguestfs now sets the correct time and timezone on filesystem\n"
#~ "   modifications.\n"
#~ "\n"
#~ msgstr ""
#~ " - libguestfs now sets the correct time and timezone on filesystem\n"
#~ "   modifications.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Sort the domains into alphabetical order in virt-df.\n"
#~ "\n"
#~ msgstr ""
#~ " - Sort the domains into alphabetical order in virt-df.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Make mkfs-b command work for FAT and NTFS by mapping the blocksize\n"
#~ "   parameter to the cluster size (RHBZ#599464).\n"
#~ "\n"
#~ msgstr ""
#~ " - Make mkfs-b command work for FAT and NTFS by mapping the blocksize\n"
#~ "   parameter to the cluster size (RHBZ#599464).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add version numbers to Perl modules (RHBZ#521674).\n"
#~ "\n"
#~ msgstr ""
#~ " - Add version numbers to Perl modules (RHBZ#521674).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Localization now works for all the libguestfs tools (RHBZ#559963).\n"
#~ "\n"
#~ msgstr ""
#~ " - Localization now works for all the libguestfs tools (RHBZ#559963).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Tools now support filesystem-on-image VMs (RHBZ#590167).\n"
#~ "\n"
#~ msgstr ""
#~ " - Tools now support filesystem-on-image VMs (RHBZ#590167).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - virt-list-partitions has a '-t' option to show the total size of disks.\n"
#~ "\n"
#~ msgstr ""
#~ " - virt-list-partitions has a '-t' option to show the total size of disks.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Include extra Augeas lenses in the supermin appliance (Matthew Booth).\n"
#~ "\n"
#~ msgstr ""
#~ " - Include extra Augeas lenses in the supermin appliance (Matthew Booth).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add error and close callbacks.\n"
#~ "\n"
#~ msgstr ""
#~ " - Add error and close callbacks.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Add explicit close method in the Perl API.\n"
#~ "\n"
#~ msgstr ""
#~ " - Add explicit close method in the Perl API.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Multiple fixes for RHEL 5 compatibility.\n"
#~ "\n"
#~ msgstr ""
#~ " - Multiple fixes for RHEL 5 compatibility.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Multiple fixes for Debian/Ubuntu compatibility.\n"
#~ "\n"
#~ msgstr ""
#~ " - Multiple fixes for Debian/Ubuntu compatibility.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Multiple revisions to improve the documentation.\n"
#~ "\n"
#~ msgstr ""
#~ " - Multiple revisions to improve the documentation.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Fix a potential DoS in virt-inspector and virt-v2v if a specially\n"
#~ "   crafted disk image contained a char device in place of one of the\n"
#~ "   configuration files that we read under /etc (RHBZ#582484).\n"
#~ "\n"
#~ msgstr ""
#~ " - Fix a potential DoS in virt-inspector and virt-v2v if a specially\n"
#~ "   crafted disk image contained a char device in place of one of the\n"
#~ "   configuration files that we read under /etc (RHBZ#582484).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - aug-clear - clear Augeas path\n"
#~ " - available-all-groups - return a list of all optional groups\n"
#~ " - base64-in - upload base64-encoded data to file\n"
#~ " - base64-out - download file and encode as base64\n"
#~ " - checksum-device - compute checksums on the contents of a device\n"
#~ " - checksums-out - compute checksums of multiple files in a directory\n"
#~ " - debug-upload - upload a file to the appliance\n"
#~ " - fallocate64 - preallocate a file in the guest filesystem\n"
#~ " - fill-pattern - fill a file with a repeating pattern of bytes\n"
#~ " - get-umask - get the current umask\n"
#~ " - lvresize-free - expand an LV to fill free space\n"
#~ " - ntfsresize - resize an NTFS filesystem\n"
#~ " - ntfsresize-size - resize an NTFS filesystem (with size)\n"
#~ " - part-del - delete a partition\n"
#~ " - part-get-bootable - get the bootable flag of a partition\n"
#~ " - part-get-mbr-id - get the MBR type byte of a partition\n"
#~ " - part-set-mbr-id - set the MBR type byte of a partition\n"
#~ " - pvresize-size - resize a physical volume (with size)\n"
#~ " - pwrite - write to part of a file\n"
#~ " - resize2fs-size - resize an ext2/3/4 filesystem (with size)\n"
#~ " - txz-in - unpack compressed tarball to directory (RHBZ#580556)\n"
#~ " - txz-out - pack directory into compressed tarball (RHBZ#580556)\n"
#~ " - vfs-label - get the filesystem label\n"
#~ " - vfs-uuid - get the filesystem UUID\n"
#~ " - vgscan - rescan for LVM physical volumes, volume groups and logical volumes\n"
#~ " - write - create a new file\n"
#~ " - zero-device - write zeroes to an entire device\n"
#~ "\n"
#~ msgstr ""
#~ " - aug-clear - clear Augeas path\n"
#~ " - available-all-groups - return a list of all optional groups\n"
#~ " - base64-in - upload base64-encoded data to file\n"
#~ " - base64-out - download file and encode as base64\n"
#~ " - checksum-device - compute checksums on the contents of a device\n"
#~ " - checksums-out - compute checksums of multiple files in a directory\n"
#~ " - debug-upload - upload a file to the appliance\n"
#~ " - fallocate64 - preallocate a file in the guest filesystem\n"
#~ " - fill-pattern - fill a file with a repeating pattern of bytes\n"
#~ " - get-umask - get the current umask\n"
#~ " - lvresize-free - expand an LV to fill free space\n"
#~ " - ntfsresize - resize an NTFS filesystem\n"
#~ " - ntfsresize-size - resize an NTFS filesystem (with size)\n"
#~ " - part-del - delete a partition\n"
#~ " - part-get-bootable - get the bootable flag of a partition\n"
#~ " - part-get-mbr-id - get the MBR type byte of a partition\n"
#~ " - part-set-mbr-id - set the MBR type byte of a partition\n"
#~ " - pvresize-size - resize a physical volume (with size)\n"
#~ " - pwrite - write to part of a file\n"
#~ " - resize2fs-size - resize an ext2/3/4 filesystem (with size)\n"
#~ " - txz-in - unpack compressed tarball to directory (RHBZ#580556)\n"
#~ " - txz-out - pack directory into compressed tarball (RHBZ#580556)\n"
#~ " - vfs-label - get the filesystem label\n"
#~ " - vfs-uuid - get the filesystem UUID\n"
#~ " - vgscan - rescan for LVM physical volumes, volume groups and logical volumes\n"
#~ " - write - create a new file\n"
#~ " - zero-device - write zeroes to an entire device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - Extend the generator to support testing optional features.\n"
#~ " - Stricter checks on input parameters to many calls (RHBZ#501893 RHBZ#501894)\n"
#~ " - Extend the protocol to support sending arbitrary 8 bit data buffers.\n"
#~ " - Ship 'BUGS' file with releases.  This is a summary of the bugs in\n"
#~ "   the Red Hat Bugzilla database.\n"
#~ " - Ship 'RELEASE-NOTES' file with releases, containing release notes.\n"
#~ " - Unify supermin appliance building into one place, in febootstrap 2.7.\n"
#~ " - Fix the protocol code to handle the case where both ends send cancel\n"
#~ "   messages at the same time.\n"
#~ "\n"
#~ msgstr ""
#~ " - Extend the generator to support testing optional features.\n"
#~ " - Stricter checks on input parameters to many calls (RHBZ#501893 RHBZ#501894)\n"
#~ " - Extend the protocol to support sending arbitrary 8 bit data buffers.\n"
#~ " - Ship 'BUGS' file with releases.  This is a summary of the bugs in\n"
#~ "   the Red Hat Bugzilla database.\n"
#~ " - Ship 'RELEASE-NOTES' file with releases, containing release notes.\n"
#~ " - Unify supermin appliance building into one place, in febootstrap 2.7.\n"
#~ " - Fix the protocol code to handle the case where both ends send cancel\n"
#~ "   messages at the same time.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " - 612178 guestfish: using -m option in conjunction with --listen option causes appliance to die\n"
#~ " - 610880 libguestfs should set broader read perms on tmpdir, so works in some situations when executed with umask 077\n"
#~ " - 604691 OCaml bindings are not thread safe\n"
#~ " - 603870 Updates to Spanish translation\n"
#~ " - 602592 [RFE] expose guestfs_close in perl bindings\n"
#~ " - 600977 virt-df -h --csv \"Argument .. isn't numeric in printf\"\n"
#~ " - 599464 mkfs-b does not support vfat/ntfs\n"
#~ " - 598807 add_cdrom does not work in RHEL 6\n"
#~ " - 598309 part-list and several other cmd failed on libguestfs on RHEL5\n"
#~ " - 597145 guestfish 'help' command should indicate error in exit status with an unknown command\n"
#~ " - 597135 guestfish write-file cmd does not check \"size\" parameter\n"
#~ " - 597118 A warning should be given in the help of mke2journal-L for the length of label\n"
#~ " - 597112 get-e2uuid should use blkid instead of \"tune2fs -l\" to get filesystem UUID\n"
#~ " - 596776 virt-inspector doesn't discover modprobe aliases on RHEL 3 guests\n"
#~ " - 596763 Updates to Spanish translation\n"
#~ " - 593292 Updates to Spanish translation\n"
#~ " - 592883 can not edit files on  images mounted with guestmount cmd\n"
#~ " - 592360 Updates to Spanish translation\n"
#~ " - 591250 virt-tar prints \"tar_in: tar subcommand failed on directory\" if the archive is compressed or not in the right format\n"
#~ " - 591155 virt-tar prints \"tar_in: tar subcommand failed on directory\" if a disk image is not writable\n"
#~ " - 591142 virt-inspector should give an error for unrecognized disk images\n"
#~ " - 590167 virt-inspector and other virt tools should be able to handle filesystem-on-image VMs\n"
#~ " - 589039 guestfish read-file cmd will cause daemon hang when read large files\n"
#~ " - 588851 guestfs_launch() returns -1, but guestfs_last_error() == NULL\n"
#~ " - 588763 libguestfs should use non-public or link-local addresses for appliance network\n"
#~ " - 588733 Updates to Spanish translation\n"
#~ " - 588651 guestfish 'strings-e' cmd does not give proper error message or hint\n"
#~ " - 587484 lvresize can't reduce size of a volumn\n"
#~ " - 585961 Updates to Spanish translation\n"
#~ " - 585223 ntfsresize should support shrinking filesystems\n"
#~ " - 585222 pvresize should support shrinking PVs\n"
#~ " - 585221 resize2fs should support shrinking filesystems\n"
#~ " - 584038 Updates to Spanish translation\n"
#~ " - 583554 [FEAT] mknod-mode command is needed to set mode explicitly\n"
#~ " - 583242 [RFE] guestfish should print outputs in a suitable base (eg. octal for modes)\n"
#~ " - 582993 guestfish eats words when tab completing case (in)sensitive paths\n"
#~ " - 582953 Misleading help information about lvcreate command\n"
#~ " - 582948 mknod command doesn't make block, character or FIFO devices\n"
#~ " - 582929 mknod doesn't check for invalid mode\n"
#~ " - 582901 guestfish chmod/umask commands do not check invalid mode value\n"
#~ " - 582899 guestfish:sparse is missed from command autocomplete list\n"
#~ " - 582891 [Feature Request] behavior and return value of guestfish umask cmd should be changed\n"
#~ " - 582548 [mknod] umask shouldn't take effect when mode is set explicitly\n"
#~ " - 582484 some guestfish sub commands can not handle special files properly\n"
#~ " - 582252 Updates to Spanish translation\n"
#~ " - 581501 Updates to Spanish translation\n"
#~ " - 580650 virt-inspector warns \"No grub default specified at /usr/lib/perl5/Sys/Guestfs/Lib.pm at [...]\"\n"
#~ " - 580556 request for libguestfs to support .txz tarballs\n"
#~ " - 580246 tar-in command hangs if uploading more than available space\n"
#~ " - 580016 aug-ls in guestfish does not take augeas variable as argument\n"
#~ " - 579664 guestfish doesn't report error when there is not enough space for image allocation\n"
#~ " - 579608 multiple commands in guestfish can not work for symbol links\n"
#~ " - 579155 libguestfs hangs if qemu doesn't start (in null vmchannel mode)\n"
#~ " - 578407 the prefix '-' in sub-command isn't handled by guestfish in remote control mode\n"
#~ " - 576879 libguestfs protocol loses synchronization if you 'upload' before mounting disks\n"
#~ " - 559963 libguestfs Perl programs do set locale, but still localization doesn't work\n"
#~ " - 521674 Perl modules are unversioned, but should carry version numbers\n"
#~ " - 516096 Race condition in test_swapon_label_0: /sbin/blockdev: BLKRRPART: Device or resource busy\n"
#~ " - 507810 guestfish -i / virt-inspector cannot handle spaces in filenames\n"
#~ " - 502533 Updated Polish translation of libguestfs\n"
#~ " - 501894 Some String parameters should be OptString\n"
#~ " - 501893 String parameters should be checked for != NULL\n"
#~ " - 501889 write-file does not support strings containing ASCII NUL\n"
#~ " - 484986 grub-install fails on virtio disk\n"
#~ "\n"
#~ msgstr ""
#~ " - 612178 guestfish: using -m option in conjunction with --listen option causes appliance to die\n"
#~ " - 610880 libguestfs should set broader read perms on tmpdir, so works in some situations when executed with umask 077\n"
#~ " - 604691 OCaml bindings are not thread safe\n"
#~ " - 603870 Updates to Spanish translation\n"
#~ " - 602592 [RFE] expose guestfs_close in perl bindings\n"
#~ " - 600977 virt-df -h --csv \"Argument .. isn't numeric in printf\"\n"
#~ " - 599464 mkfs-b does not support vfat/ntfs\n"
#~ " - 598807 add_cdrom does not work in RHEL 6\n"
#~ " - 598309 part-list and several other cmd failed on libguestfs on RHEL5\n"
#~ " - 597145 guestfish 'help' command should indicate error in exit status with an unknown command\n"
#~ " - 597135 guestfish write-file cmd does not check \"size\" parameter\n"
#~ " - 597118 A warning should be given in the help of mke2journal-L for the length of label\n"
#~ " - 597112 get-e2uuid should use blkid instead of \"tune2fs -l\" to get filesystem UUID\n"
#~ " - 596776 virt-inspector doesn't discover modprobe aliases on RHEL 3 guests\n"
#~ " - 596763 Updates to Spanish translation\n"
#~ " - 593292 Updates to Spanish translation\n"
#~ " - 592883 can not edit files on  images mounted with guestmount cmd\n"
#~ " - 592360 Updates to Spanish translation\n"
#~ " - 591250 virt-tar prints \"tar_in: tar subcommand failed on directory\" if the archive is compressed or not in the right format\n"
#~ " - 591155 virt-tar prints \"tar_in: tar subcommand failed on directory\" if a disk image is not writable\n"
#~ " - 591142 virt-inspector should give an error for unrecognized disk images\n"
#~ " - 590167 virt-inspector and other virt tools should be able to handle filesystem-on-image VMs\n"
#~ " - 589039 guestfish read-file cmd will cause daemon hang when read large files\n"
#~ " - 588851 guestfs_launch() returns -1, but guestfs_last_error() == NULL\n"
#~ " - 588763 libguestfs should use non-public or link-local addresses for appliance network\n"
#~ " - 588733 Updates to Spanish translation\n"
#~ " - 588651 guestfish 'strings-e' cmd does not give proper error message or hint\n"
#~ " - 587484 lvresize can't reduce size of a volumn\n"
#~ " - 585961 Updates to Spanish translation\n"
#~ " - 585223 ntfsresize should support shrinking filesystems\n"
#~ " - 585222 pvresize should support shrinking PVs\n"
#~ " - 585221 resize2fs should support shrinking filesystems\n"
#~ " - 584038 Updates to Spanish translation\n"
#~ " - 583554 [FEAT] mknod-mode command is needed to set mode explicitly\n"
#~ " - 583242 [RFE] guestfish should print outputs in a suitable base (eg. octal for modes)\n"
#~ " - 582993 guestfish eats words when tab completing case (in)sensitive paths\n"
#~ " - 582953 Misleading help information about lvcreate command\n"
#~ " - 582948 mknod command doesn't make block, character or FIFO devices\n"
#~ " - 582929 mknod doesn't check for invalid mode\n"
#~ " - 582901 guestfish chmod/umask commands do not check invalid mode value\n"
#~ " - 582899 guestfish:sparse is missed from command autocomplete list\n"
#~ " - 582891 [Feature Request] behavior and return value of guestfish umask cmd should be changed\n"
#~ " - 582548 [mknod] umask shouldn't take effect when mode is set explicitly\n"
#~ " - 582484 some guestfish sub commands can not handle special files properly\n"
#~ " - 582252 Updates to Spanish translation\n"
#~ " - 581501 Updates to Spanish translation\n"
#~ " - 580650 virt-inspector warns \"No grub default specified at /usr/lib/perl5/Sys/Guestfs/Lib.pm at [...]\"\n"
#~ " - 580556 request for libguestfs to support .txz tarballs\n"
#~ " - 580246 tar-in command hangs if uploading more than available space\n"
#~ " - 580016 aug-ls in guestfish does not take augeas variable as argument\n"
#~ " - 579664 guestfish doesn't report error when there is not enough space for image allocation\n"
#~ " - 579608 multiple commands in guestfish can not work for symbol links\n"
#~ " - 579155 libguestfs hangs if qemu doesn't start (in null vmchannel mode)\n"
#~ " - 578407 the prefix '-' in sub-command isn't handled by guestfish in remote control mode\n"
#~ " - 576879 libguestfs protocol loses synchronization if you 'upload' before mounting disks\n"
#~ " - 559963 libguestfs Perl programs do set locale, but still localization doesn't work\n"
#~ " - 521674 Perl modules are unversioned, but should carry version numbers\n"
#~ " - 516096 Race condition in test_swapon_label_0: /sbin/blockdev: BLKRRPART: Device or resource busy\n"
#~ " - 507810 guestfish -i / virt-inspector cannot handle spaces in filenames\n"
#~ " - 502533 Updated Polish translation of libguestfs\n"
#~ " - 501894 Some String parameters should be OptString\n"
#~ " - 501893 String parameters should be checked for != NULL\n"
#~ " - 501889 write-file does not support strings containing ASCII NUL\n"
#~ " - 484986 grub-install fails on virtio disk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "   untrusted filesystem\n"
#~ " --------------------------------------\n"
#~ "   appliance kernel\n"
#~ " --------------------------------------\n"
#~ "   qemu process running as non-root\n"
#~ " --------------------------------------\n"
#~ "   sVirt [if using libvirt + SELinux]\n"
#~ " --------------------------------------\n"
#~ "   host kernel\n"
#~ "\n"
#~ msgstr ""
#~ "   untrusted filesystem\n"
#~ " --------------------------------------\n"
#~ "   appliance kernel\n"
#~ " --------------------------------------\n"
#~ "   qemu process running as non-root\n"
#~ " --------------------------------------\n"
#~ "   sVirt [if using libvirt + SELinux]\n"
#~ " --------------------------------------\n"
#~ "   host kernel\n"
#~ "\n"

#~ msgid "You can report bugs you find through this link:"
#~ msgstr ""
#~ "Vous pouvez rapporter les anomalies que vous rencontrez à travers ce "
#~ "lien :"

#, no-wrap
#~ msgid ""
#~ " library version: 1.22.0fedora=19,release=1.fc19,libvirt\n"
#~ "\n"
#~ msgstr ""
#~ " library version: 1.22.0fedora=19,release=1.fc19,libvirt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_get_backend: direct\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_get_backend: direct\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_get_backend: libvirt\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_get_backend: libvirt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs: qemu version 1.5\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs: qemu version 1.5\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " [    0.000000] Linux version 3.9.2-200.fc18.x86_64 [...]\n"
#~ "\n"
#~ msgstr ""
#~ " [    0.000000] Linux version 3.9.2-200.fc18.x86_64 [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a /path/to/disk.img -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a /path/to/disk.img -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -i --format=raw -a http://www.example.com/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -i --format=raw -a http://www.example.com/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -i --format=raw \\\n"
#~ "   -a ssh://remote.example.com/path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -i --format=raw \\\n"
#~ "   -a ssh://remote.example.com/path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan -a /path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan -a /path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-alignment-scan -d Guest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-alignment-scan -d Guest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat LinuxGuest /etc/passwd\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat LinuxGuest /etc/passwd\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-cat WindowsGuest 'c:\\windows\\win.ini'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d Guest /etc /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d Guest /etc /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d Guest /home /etc/issue /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d Guest /home /etc/issue /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-df --csv > /tmp/report.csv\n"
#~ "\n"
#~ msgstr ""
#~ " virt-df --csv > /tmp/report.csv\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit LinuxGuest /etc/sysconfig/network\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit LinuxGuest /etc/sysconfig/network\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit LinuxGuest /etc/motd\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit LinuxGuest /etc/motd\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems -a /path/to/disk.img --all --long -h\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems -a /path/to/disk.img --all --long -h\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems -d Guest --all --long -h\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems -d Guest --all --long -h\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector -a /path/to/disk.img | less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector -a /path/to/disk.img | less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector -d Guest | less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector -d Guest | less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep '^- [42]'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep '^- [42]'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep '^d ...7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep '^d ...7'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep '^s'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep '^s'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest / | grep -i '^-.*\\.png$'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest /home | awk '$3 > 10*1024*1024'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest --time-days / | awk '$6 <= 7'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-ls -lR -d Guest --time-days / | grep '^-' | awk '$6 < 1'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --partition=mbr --type=vfat /any/tarball.tar.gz output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --partition=mbr --type=vfat /any/tarball.tar.gz output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -a /path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -a /path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -d Guest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -d Guest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " truncate -s 30G newdisk.img\n"
#~ " virt-filesystems -a /path/to/olddisk.img --all --long -h\n"
#~ " virt-resize /path/to/olddisk.img newdisk.img --expand /dev/sda1\n"
#~ " qemu-kvm -m 1024 -hda newdisk.img\n"
#~ "\n"
#~ msgstr ""
#~ " truncate -s 30G newdisk.img\n"
#~ " virt-filesystems -a /path/to/olddisk.img --all --long -h\n"
#~ " virt-resize /path/to/olddisk.img newdisk.img --expand /dev/sda1\n"
#~ " qemu-kvm -m 1024 -hda newdisk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify /path/to/olddisk.img newdisk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify /path/to/olddisk.img newdisk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep --hostname newhost.example.com -a /path/to/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep --hostname newhost.example.com -a /path/to/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\Software' |\n"
#~ "   less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\Software' |\n"
#~ "   less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\System' |\n"
#~ "   less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKLM\\System' |\n"
#~ "   less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\\username' |\n"
#~ "   less\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --unsafe-printable-strings WindowsGuest 'HKEY_USERS\\username' |\n"
#~ "   less\n"
#~ "\n"

#~ msgid "C<1>"
#~ msgstr "C<1>"

#, fuzzy, no-wrap
#~| msgid ""
#~| " char **\n"
#~| " guestfs_strings (guestfs_h *g,\n"
#~| "                  const char *path);\n"
#~| "\n"
#~ msgid ""
#~ " char *\n"
#~ " guestfs_int_replace_string (const char *str, const char *s1, const char *s2)\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_strings (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit [--options] -d domname file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit [--options] -d domname file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit [--options] -a disk.img [-a disk.img ...] file [file ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit [-d domname|-a disk.img] file -e 'expr'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit [-d domname|-a disk.img] file -e 'expr'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit domname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit domname file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit disk.img [disk.img ...] file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit disk.img [disk.img ...] file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /boot/grub/grub.conf\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /boot/grub/grub.conf\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /etc/passwd\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /etc/passwd\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mywindomain 'c:\\autoexec.bat'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /etc/inittab -e 's/^id:.*/id:5:initdefault:/'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -b .orig [etc]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -b .orig [etc]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit --format=raw -a disk.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit --format=raw -a disk.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit --format=raw -a disk.img --format -a another.img file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit guestname file\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit guestname file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d domname filename -e 's/foo/bar/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d domname filename -e 's/foo/bar/'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-edit -d mydomain /etc/passwd -e '$_ = \"\" if /^apache:/'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /some text(\\r?\\n)?$/\n"
#~ "\n"
#~ msgstr ""
#~ " /some text(\\r?\\n)?$/\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " my $m = $_; chomp $m; $m =~ /some text$/\n"
#~ "\n"
#~ msgstr ""
#~ " my $m = $_; chomp $m; $m =~ /some text$/\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname edit /file\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname edit /file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img -m /dev/sda1 edit /file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname touch /newfile\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname touch /newfile\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname write /newfile \"new content\"\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname write /newfile \"new content\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -i -d domname upload localfile /newfile\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -i -d domname upload localfile /newfile\n"
#~ "\n"

#~ msgid "C<EDITOR>"
#~ msgstr "C<EDITOR>"

#, no-wrap
#~ msgid ""
#~ " {ok, G} = guestfs:create(),\n"
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]),\n"
#~ " ok = guestfs:launch(G),\n"
#~ " [Device] = guestfs:list_devices(G),\n"
#~ " ok = guestfs:close(G).\n"
#~ "\n"
#~ msgstr ""
#~ " {ok, G} = guestfs:create(),\n"
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]),\n"
#~ " ok = guestfs:launch(G),\n"
#~ " [Device] = guestfs:list_devices(G),\n"
#~ " ok = guestfs:close(G).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " {ok, G} = guestfs:create().\n"
#~ "\n"
#~ msgstr ""
#~ " {ok, G} = guestfs:create().\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " {ok, G} = guestfs:create(\"/path/to/erl-guestfs\").\n"
#~ "\n"
#~ msgstr ""
#~ " {ok, G} = guestfs:create(\"/path/to/erl-guestfs\").\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ok = guestfs:close(G).\n"
#~ "\n"
#~ msgstr ""
#~ " ok = guestfs:close(G).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]).\n"
#~ "\n"
#~ msgstr ""
#~ " ok = guestfs:add_drive_opts(G, Disk,\n"
#~ "                             [{format, \"raw\"}, {readonly, true}]).\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ok = guestfs:add_drive_opts(G, Disk).\n"
#~ "\n"
#~ msgstr ""
#~ " ok = guestfs:add_drive_opts(G, Disk).\n"
#~ "\n"

#~ msgid "C<{error, Msg, Errno}>"
#~ msgstr "C<{error, Msg, Errno}>"

#~ msgid "C<{unknown, Function}>"
#~ msgstr "C<{unknown, Function}>"

#~ msgid "C<{unknownarg, Arg}>"
#~ msgstr "C<{unknownarg, Arg}>"

#, no-wrap
#~ msgid ""
#~ " #include <guestfs.h>\n"
#~ " \n"
#~ msgstr ""
#~ " #include <guestfs.h>\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive_ro (g, \"disk.img\");\n"
#~ " guestfs_launch (g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive_ro (g, \"disk.img\");\n"
#~ " guestfs_launch (g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cc prog.c -o prog -lguestfs\n"
#~ "or:\n"
#~ " cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
#~ "\n"
#~ msgstr ""
#~ " cc prog.c -o prog -lguestfs\n"
#~ "ou :\n"
#~ " cc prog.c -o prog `pkg-config libguestfs --cflags --libs`\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " acl-delete-def-file dir\n"
#~ "\n"
#~ msgstr ""
#~ " acl-delete-def-file dir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " acl-get-file path acltype\n"
#~ "\n"
#~ msgstr ""
#~ " acl-get-file path acltype\n"
#~ "\n"

#~ msgid "C<access>"
#~ msgstr "C<access>"

#~ msgid "C<default>"
#~ msgstr "C<default>"

#, no-wrap
#~ msgid ""
#~ " acl-set-file path acltype acl\n"
#~ "\n"
#~ msgstr ""
#~ " acl-set-file path acltype acl\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " u::rwx,g::rwx,o::rwx,m::rwx,u:500:rwx,g:500:rwx\n"
#~ " \\ Unix permissions / \\mask/ \\      ACL        /\n"
#~ "\n"
#~ msgstr ""
#~ " u::rwx,g::rwx,o::rwx,m::rwx,u:500:rwx,g:500:rwx\n"
#~ " \\ Unix permissions / \\mask/ \\      ACL        /\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-cdrom filename\n"
#~ "\n"
#~ msgstr ""
#~ " add-cdrom filename\n"
#~ "\n"

#~ msgid "C<readonly>"
#~ msgstr "C<readonly>"

#~ msgid "C<format>"
#~ msgstr "C<format>"

#~ msgid "C<iface>"
#~ msgstr "C<iface>"

#~ msgid "C<name>"
#~ msgstr "C<name>"

#~ msgid "C<label>"
#~ msgstr "C<label>"

#~ msgid "C<protocol>"
#~ msgstr "C<protocol>"

#~ msgid "C<protocol = \"file\">"
#~ msgstr "C<protocol = \"file\">"

#~ msgid "C<protocol = \"ftp\"|\"ftps\"|\"http\"|\"https\"|\"tftp\">"
#~ msgstr "C<protocol = \"ftp\"|\"ftps\"|\"http\"|\"https\"|\"tftp\">"

#~ msgid "C<protocol = \"gluster\">"
#~ msgstr "C<protocol = \"gluster\">"

#~ msgid "C<protocol = \"iscsi\">"
#~ msgstr "C<protocol = \"iscsi\">"

#~ msgid "C<protocol = \"nbd\">"
#~ msgstr "C<protocol = \"nbd\">"

#~ msgid "C<protocol = \"rbd\">"
#~ msgstr "C<protocol = \"rbd\">"

#~ msgid "C<protocol = \"sheepdog\">"
#~ msgstr "C<protocol = \"sheepdog\">"

#~ msgid "C<protocol = \"ssh\">"
#~ msgstr "C<protocol = \"ssh\">"

#, no-wrap
#~ msgid ""
#~ " hostname\n"
#~ " hostname:port\n"
#~ " tcp:hostname\n"
#~ " tcp:hostname:port\n"
#~ " unix:/path/to/socket\n"
#~ "\n"
#~ msgstr ""
#~ " hostname\n"
#~ " hostname:port\n"
#~ " tcp:hostname\n"
#~ " tcp:hostname:port\n"
#~ " unix:/path/to/socket\n"
#~ "\n"

#~ msgid "C<username>"
#~ msgstr "C<username>"

#~ msgid "C<secret>"
#~ msgstr "C<secret>"

#~ msgid "C<cachemode>"
#~ msgstr "C<cachemode>"

#~ msgid "C<cachemode = \"writeback\">"
#~ msgstr "C<cachemode = \"writeback\">"

#~ msgid "C<cachemode = \"unsafe\">"
#~ msgstr "C<cachemode = \"unsafe\">"

#, no-wrap
#~ msgid ""
#~ " add-drive-ro filename\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-ro filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-drive-ro-with-if filename iface\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-ro-with-if filename iface\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-drive-scratch size [name:..] [label:..]\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-scratch size [name:..] [label:..]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-drive-with-if filename iface\n"
#~ "\n"
#~ msgstr ""
#~ " add-drive-with-if filename iface\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-clear augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-clear augpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-close\n"
#~ "\n"
#~ msgstr ""
#~ " aug-close\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-defnode name expr val\n"
#~ "\n"
#~ msgstr ""
#~ " aug-defnode name expr val\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-defvar name expr\n"
#~ "\n"
#~ msgstr ""
#~ " aug-defvar name expr\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-get augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-get augpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-init root flags\n"
#~ "\n"
#~ msgstr ""
#~ " aug-init root flags\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-insert augpath label true|false\n"
#~ "\n"
#~ msgstr ""
#~ " aug-insert augpath label true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-label augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-label augpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-load\n"
#~ "\n"
#~ msgstr ""
#~ " aug-load\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-ls augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-ls augpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-match augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-match augpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-mv src dest\n"
#~ "\n"
#~ msgstr ""
#~ " aug-mv src dest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-rm augpath\n"
#~ "\n"
#~ msgstr ""
#~ " aug-rm augpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-save\n"
#~ "\n"
#~ msgstr ""
#~ " aug-save\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-set augpath val\n"
#~ "\n"
#~ msgstr ""
#~ " aug-set augpath val\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " aug-setm base sub val\n"
#~ "\n"
#~ msgstr ""
#~ " aug-setm base sub val\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " available 'groups ...'\n"
#~ "\n"
#~ msgstr ""
#~ " available 'groups ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " available-all-groups\n"
#~ "\n"
#~ msgstr ""
#~ " available-all-groups\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " base64-in (base64file|-) filename\n"
#~ "\n"
#~ msgstr ""
#~ " base64-in (base64file|-) filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " base64-out filename (base64file|-)\n"
#~ "\n"
#~ msgstr ""
#~ " base64-out filename (base64file|-)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blkid device\n"
#~ "\n"
#~ msgstr ""
#~ " blkid device\n"
#~ "\n"

#~ msgid "C<UUID>"
#~ msgstr "C<UUID>"

#~ msgid "C<LABEL>"
#~ msgstr "C<LABEL>"

#~ msgid "C<VERSION>"
#~ msgstr "C<VERSION>"

#~ msgid "C<TYPE>"
#~ msgstr "C<TYPE>"

#~ msgid "C<USAGE>"
#~ msgstr "C<USAGE>"

#, no-wrap
#~ msgid ""
#~ " blockdev-flushbufs device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-flushbufs device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-getbsz device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getbsz device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-getro device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getro device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-getsize64 device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getsize64 device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-getss device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getss device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-getsz device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-getsz device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-rereadpt device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-rereadpt device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-setbsz device blocksize\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setbsz device blocksize\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-setro device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setro device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " blockdev-setrw device\n"
#~ "\n"
#~ msgstr ""
#~ " blockdev-setrw device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-device-add 'devices ...' fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-device-add 'devices ...' fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-device-delete 'devices ...' fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-device-delete 'devices ...' fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-filesystem-balance fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-filesystem-balance fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-filesystem-resize mountpoint [size:N]\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-filesystem-resize mountpoint [size:N]\n"
#~ "\n"

#~ msgid "C<size>"
#~ msgstr "C<size>"

#, no-wrap
#~ msgid ""
#~ " btrfs-filesystem-sync fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-filesystem-sync fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-fsck device [superblock:N] [repair:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-fsck device [superblock:N] [repair:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-set-seeding device true|false\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-set-seeding device true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-delete subvolume\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-list fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-list fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " btrfs-subvolume-set-default id fs\n"
#~ "\n"
#~ msgstr ""
#~ " btrfs-subvolume-set-default id fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " canonical-device-name device\n"
#~ "\n"
#~ msgstr ""
#~ " canonical-device-name device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cap-get-file path\n"
#~ "\n"
#~ msgstr ""
#~ " cap-get-file path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cap-set-file path cap\n"
#~ "\n"
#~ msgstr ""
#~ " cap-set-file path cap\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " case-sensitive-path path\n"
#~ "\n"
#~ msgstr ""
#~ " case-sensitive-path path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat path\n"
#~ "\n"
#~ msgstr ""
#~ " cat path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " checksum csumtype path\n"
#~ "\n"
#~ msgstr ""
#~ " checksum csumtype path\n"
#~ "\n"

#~ msgid "C<crc>"
#~ msgstr "C<crc>"

#~ msgid "C<md5>"
#~ msgstr "C<md5>"

#~ msgid "C<sha1>"
#~ msgstr "C<sha1>"

#~ msgid "C<sha224>"
#~ msgstr "C<sha224>"

#~ msgid "C<sha256>"
#~ msgstr "C<sha256>"

#~ msgid "C<sha384>"
#~ msgstr "C<sha384>"

#~ msgid "C<sha512>"
#~ msgstr "C<sha512>"

#, no-wrap
#~ msgid ""
#~ " checksum-device csumtype device\n"
#~ "\n"
#~ msgstr ""
#~ " checksum-device csumtype device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " checksums-out csumtype directory (sumsfile|-)\n"
#~ "\n"
#~ msgstr ""
#~ " checksums-out csumtype directory (sumsfile|-)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " chmod mode path\n"
#~ "\n"
#~ msgstr ""
#~ " chmod mode path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " chown owner group path\n"
#~ "\n"
#~ msgstr ""
#~ " chown owner group path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " command 'arguments ...'\n"
#~ "\n"
#~ msgstr ""
#~ " command 'arguments ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " command-lines 'arguments ...'\n"
#~ "\n"
#~ msgstr ""
#~ " command-lines 'arguments ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " compress-device-out ctype device (zdevice|-) [level:N]\n"
#~ "\n"
#~ msgstr ""
#~ " compress-device-out ctype device (zdevice|-) [level:N]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " compress-out ctype file (zfile|-) [level:N]\n"
#~ "\n"
#~ msgstr ""
#~ " compress-out ctype file (zfile|-) [level:N]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " config hvparam hvvalue\n"
#~ "\n"
#~ msgstr ""
#~ " config hvparam hvvalue\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " copy-size src dest size\n"
#~ "\n"
#~ msgstr ""
#~ " copy-size src dest size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cp src dest\n"
#~ "\n"
#~ msgstr ""
#~ " cp src dest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cp-a src dest\n"
#~ "\n"
#~ msgstr ""
#~ " cp-a src dest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cp-r src dest\n"
#~ "\n"
#~ msgstr ""
#~ " cp-r src dest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " dd src dest\n"
#~ "\n"
#~ msgstr ""
#~ " dd src dest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " device-index device\n"
#~ "\n"
#~ msgstr ""
#~ " device-index device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " df\n"
#~ "\n"
#~ msgstr ""
#~ " df\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " df-h\n"
#~ "\n"
#~ msgstr ""
#~ " df-h\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " disk-format filename\n"
#~ "\n"
#~ msgstr ""
#~ " disk-format filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " disk-has-backing-file filename\n"
#~ "\n"
#~ msgstr ""
#~ " disk-has-backing-file filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " disk-virtual-size filename\n"
#~ "\n"
#~ msgstr ""
#~ " disk-virtual-size filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " dmesg\n"
#~ "\n"
#~ msgstr ""
#~ " dmesg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " download remotefilename (filename|-)\n"
#~ "\n"
#~ msgstr ""
#~ " download remotefilename (filename|-)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " download-offset remotefilename (filename|-) offset size\n"
#~ "\n"
#~ msgstr ""
#~ " download-offset remotefilename (filename|-) offset size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " drop-caches whattodrop\n"
#~ "\n"
#~ msgstr ""
#~ " drop-caches whattodrop\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " du path\n"
#~ "\n"
#~ msgstr ""
#~ " du path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " e2fsck device [correct:true|false] [forceall:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " e2fsck device [correct:true|false] [forceall:true|false]\n"
#~ "\n"

#~ msgid "C<correct>"
#~ msgstr "C<correct>"

#~ msgid "C<forceall>"
#~ msgstr "C<forceall>"

#, no-wrap
#~ msgid ""
#~ " e2fsck-f device\n"
#~ "\n"
#~ msgstr ""
#~ " e2fsck-f device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " echo-daemon 'words ...'\n"
#~ "\n"
#~ msgstr ""
#~ " echo-daemon 'words ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " egrep regex path\n"
#~ "\n"
#~ msgstr ""
#~ " egrep regex path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " egrepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " egrepi regex path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " equal file1 file2\n"
#~ "\n"
#~ msgstr ""
#~ " equal file1 file2\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " exists path\n"
#~ "\n"
#~ msgstr ""
#~ " exists path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " extlinux directory\n"
#~ "\n"
#~ msgstr ""
#~ " extlinux directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fallocate path len\n"
#~ "\n"
#~ msgstr ""
#~ " fallocate path len\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fallocate64 path len\n"
#~ "\n"
#~ msgstr ""
#~ " fallocate64 path len\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " feature-available 'groups ...'\n"
#~ "\n"
#~ msgstr ""
#~ " feature-available 'groups ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fgrep pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " fgrep pattern path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fgrepi pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " fgrepi pattern path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file path\n"
#~ "\n"
#~ msgstr ""
#~ " file path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file-architecture filename\n"
#~ "\n"
#~ msgstr ""
#~ " file-architecture filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " filesize file\n"
#~ "\n"
#~ msgstr ""
#~ " filesize file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " filesystem-available filesystem\n"
#~ "\n"
#~ msgstr ""
#~ " filesystem-available filesystem\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fill c len path\n"
#~ "\n"
#~ msgstr ""
#~ " fill c len path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fill-dir dir nr\n"
#~ "\n"
#~ msgstr ""
#~ " fill-dir dir nr\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fill-pattern pattern len path\n"
#~ "\n"
#~ msgstr ""
#~ " fill-pattern pattern len path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " find directory\n"
#~ "\n"
#~ msgstr ""
#~ " find directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /tmp/a\n"
#~ " /tmp/b\n"
#~ " /tmp/c/d\n"
#~ "\n"
#~ msgstr ""
#~ " /tmp/a\n"
#~ " /tmp/b\n"
#~ " /tmp/c/d\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " a\n"
#~ " b\n"
#~ " c\n"
#~ " c/d\n"
#~ "\n"
#~ msgstr ""
#~ " a\n"
#~ " b\n"
#~ " c\n"
#~ " c/d\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " find0 directory (files|-)\n"
#~ "\n"
#~ msgstr ""
#~ " find0 directory (files|-)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " findfs-label label\n"
#~ "\n"
#~ msgstr ""
#~ " findfs-label label\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " findfs-uuid uuid\n"
#~ "\n"
#~ msgstr ""
#~ " findfs-uuid uuid\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fsck fstype device\n"
#~ "\n"
#~ msgstr ""
#~ " fsck fstype device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fstrim mountpoint [offset:N] [length:N] [minimumfreeextent:N]\n"
#~ "\n"
#~ msgstr ""
#~ " fstrim mountpoint [offset:N] [length:N] [minimumfreeextent:N]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-append\n"
#~ "\n"
#~ msgstr ""
#~ " get-append\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-attach-method\n"
#~ "\n"
#~ msgstr ""
#~ " get-attach-method\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-autosync\n"
#~ "\n"
#~ msgstr ""
#~ " get-autosync\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-backend\n"
#~ "\n"
#~ msgstr ""
#~ " get-backend\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-cachedir\n"
#~ "\n"
#~ msgstr ""
#~ " get-cachedir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-direct\n"
#~ "\n"
#~ msgstr ""
#~ " get-direct\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-e2attrs file\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2attrs file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-e2generation file\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2generation file\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-e2label device\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2label device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-e2uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " get-e2uuid device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-hv\n"
#~ "\n"
#~ msgstr ""
#~ " get-hv\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credential-challenge index\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credential-challenge index\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credential-defresult index\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credential-defresult index\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credential-prompt index\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credential-prompt index\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-libvirt-requested-credentials\n"
#~ "\n"
#~ msgstr ""
#~ " get-libvirt-requested-credentials\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-memsize\n"
#~ "\n"
#~ msgstr ""
#~ " get-memsize\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-network\n"
#~ "\n"
#~ msgstr ""
#~ " get-network\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-path\n"
#~ "\n"
#~ msgstr ""
#~ " get-path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-pgroup\n"
#~ "\n"
#~ msgstr ""
#~ " get-pgroup\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-pid\n"
#~ "\n"
#~ msgstr ""
#~ " get-pid\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-program\n"
#~ "\n"
#~ msgstr ""
#~ " get-program\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-qemu\n"
#~ "\n"
#~ msgstr ""
#~ " get-qemu\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-recovery-proc\n"
#~ "\n"
#~ msgstr ""
#~ " get-recovery-proc\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-selinux\n"
#~ "\n"
#~ msgstr ""
#~ " get-selinux\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-smp\n"
#~ "\n"
#~ msgstr ""
#~ " get-smp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-tmpdir\n"
#~ "\n"
#~ msgstr ""
#~ " get-tmpdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-trace\n"
#~ "\n"
#~ msgstr ""
#~ " get-trace\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-umask\n"
#~ "\n"
#~ msgstr ""
#~ " get-umask\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " get-verbose\n"
#~ "\n"
#~ msgstr ""
#~ " get-verbose\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " getcon\n"
#~ "\n"
#~ msgstr ""
#~ " getcon\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " getxattr path name\n"
#~ "\n"
#~ msgstr ""
#~ " getxattr path name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " getxattrs path\n"
#~ "\n"
#~ msgstr ""
#~ " getxattrs path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " grep regex path [extended:true|false] [fixed:true|false] [insensitive:true|false] [compressed:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " grep regex path [extended:true|false] [fixed:true|false] [insensitive:true|false] [compressed:true|false]\n"
#~ "\n"

#~ msgid "C<extended>"
#~ msgstr "C<extended>"

#~ msgid "C<fixed>"
#~ msgstr "C<fixed>"

#~ msgid "C<insensitive>"
#~ msgstr "C<insensitive>"

#~ msgid "C<compressed>"
#~ msgstr "C<compressed>"

#, no-wrap
#~ msgid ""
#~ " grepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " grepi regex path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " grub-install root device\n"
#~ "\n"
#~ msgstr ""
#~ " grub-install root device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " (hd0) /dev/vda\n"
#~ "\n"
#~ msgstr ""
#~ " (hd0) /dev/vda\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " head path\n"
#~ "\n"
#~ msgstr ""
#~ " head path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " head-n nrlines path\n"
#~ "\n"
#~ msgstr ""
#~ " head-n nrlines path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexdump path\n"
#~ "\n"
#~ msgstr ""
#~ " hexdump path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-close\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-close\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-commit filename\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-commit filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-add-child parent name\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-add-child parent name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-children nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-children nodeh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-delete-child nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-delete-child nodeh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-get-child nodeh name\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-get-child nodeh name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-get-value nodeh key\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-get-value nodeh key\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-name nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-name nodeh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-parent nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-parent nodeh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-set-value nodeh key t val\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-set-value nodeh key t val\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-node-values nodeh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-node-values nodeh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-root\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-value-key valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-key valueh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-value-type valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-type valueh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-value-utf8 valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-utf8 valueh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hivex-value-value valueh\n"
#~ "\n"
#~ msgstr ""
#~ " hivex-value-value valueh\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " initrd-cat initrdpath filename\n"
#~ "\n"
#~ msgstr ""
#~ " initrd-cat initrdpath filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " initrd-cat /boot/initrd-<version>.img init\n"
#~ "\n"
#~ msgstr ""
#~ " initrd-cat /boot/initrd-<version>.img init\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " initrd-list path\n"
#~ "\n"
#~ msgstr ""
#~ " initrd-list path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inotify-add-watch path mask\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-add-watch path mask\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inotify-close\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-close\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inotify-files\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-files\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inotify-init maxevents\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-init maxevents\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inotify-read\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-read\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inotify-rm-watch wd\n"
#~ "\n"
#~ msgstr ""
#~ " inotify-rm-watch wd\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-arch root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-arch root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-distro root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-distro root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-drive-mappings root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-drive-mappings root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " C      =>     /dev/vda2\n"
#~ " E      =>     /dev/vdb1\n"
#~ " F      =>     /dev/vdc1\n"
#~ "\n"
#~ msgstr ""
#~ " C      =>     /dev/vda2\n"
#~ " E      =>     /dev/vdb1\n"
#~ " F      =>     /dev/vdc1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-filesystems root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-filesystems root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-format root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-format root\n"
#~ "\n"

#, fuzzy
#~| msgid "C<app_install_path>"
#~ msgid "C<installed>"
#~ msgstr "C<app_install_path>"

#, fuzzy
#~| msgid "C<app_install_path>"
#~ msgid "C<installer>"
#~ msgstr "C<app_install_path>"

#, fuzzy
#~| msgid "C<{unknownarg, Arg}>"
#~ msgid "C<unknown>"
#~ msgstr "C<{unknownarg, Arg}>"

#, no-wrap
#~ msgid ""
#~ " inspect-get-hostname root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-hostname root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-icon root [favicon:true|false] [highquality:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-icon root [favicon:true|false] [highquality:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-major-version root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-major-version root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-minor-version root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-minor-version root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-mountpoints root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-mountpoints root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-package-format root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-package-format root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-package-management root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-package-management root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-product-name root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-product-name root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-product-variant root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-product-variant root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-roots\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-roots\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-type root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-type root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-windows-current-control-set root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-windows-current-control-set root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-get-windows-systemroot root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-get-windows-systemroot root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-is-live root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-is-live root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-is-multipart root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-is-multipart root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-is-netinst root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-is-netinst root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " inspect-list-applications root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-list-applications root\n"
#~ "\n"

#~ msgid "C<app_name>"
#~ msgstr "C<app_name>"

#~ msgid "C<app_display_name>"
#~ msgstr "C<app_display_name>"

#~ msgid "C<app_epoch>"
#~ msgstr "C<app_epoch>"

#~ msgid "C<app_version>"
#~ msgstr "C<app_version>"

#~ msgid "C<app_release>"
#~ msgstr "C<app_release>"

#~ msgid "C<app_install_path>"
#~ msgstr "C<app_install_path>"

#~ msgid "C<app_trans_path>"
#~ msgstr "C<app_trans_path>"

#~ msgid "C<app_publisher>"
#~ msgstr "C<app_publisher>"

#~ msgid "C<app_url>"
#~ msgstr "C<app_url>"

#~ msgid "C<app_source_package>"
#~ msgstr "C<app_source_package>"

#~ msgid "C<app_summary>"
#~ msgstr "C<app_summary>"

#~ msgid "C<app_description>"
#~ msgstr "C<app_description>"

#, no-wrap
#~ msgid ""
#~ " inspect-list-applications2 root\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-list-applications2 root\n"
#~ "\n"

#~ msgid "C<app2_name>"
#~ msgstr "C<app2_name>"

#~ msgid "C<app2_display_name>"
#~ msgstr "C<app2_display_name>"

#~ msgid "C<app2_epoch>"
#~ msgstr "C<app2_epoch>"

#~ msgid "C<app2_version>"
#~ msgstr "C<app2_version>"

#~ msgid "C<app2_release>"
#~ msgstr "C<app2_release>"

#~ msgid "C<app2_arch>"
#~ msgstr "C<app2_arch>"

#~ msgid "C<app2_install_path>"
#~ msgstr "C<app2_install_path>"

#~ msgid "C<app2_trans_path>"
#~ msgstr "C<app2_trans_path>"

#~ msgid "C<app2_publisher>"
#~ msgstr "C<app2_publisher>"

#~ msgid "C<app2_url>"
#~ msgstr "C<app2_url>"

#~ msgid "C<app2_source_package>"
#~ msgstr "C<app2_source_package>"

#~ msgid "C<app2_summary>"
#~ msgstr "C<app2_summary>"

#~ msgid "C<app2_description>"
#~ msgstr "C<app2_description>"

#, no-wrap
#~ msgid ""
#~ " inspect-os\n"
#~ "\n"
#~ msgstr ""
#~ " inspect-os\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-blockdev path [followsymlinks:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " is-blockdev path [followsymlinks:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-chardev path [followsymlinks:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " is-chardev path [followsymlinks:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-config\n"
#~ "\n"
#~ msgstr ""
#~ " is-config\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-dir path [followsymlinks:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " is-dir path [followsymlinks:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-fifo path [followsymlinks:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " is-fifo path [followsymlinks:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-file path [followsymlinks:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " is-file path [followsymlinks:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-socket path [followsymlinks:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " is-socket path [followsymlinks:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-symlink path\n"
#~ "\n"
#~ msgstr ""
#~ " is-symlink path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-whole-device device\n"
#~ "\n"
#~ msgstr ""
#~ " is-whole-device device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-zero path\n"
#~ "\n"
#~ msgstr ""
#~ " is-zero path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " is-zero-device device\n"
#~ "\n"
#~ msgstr ""
#~ " is-zero-device device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " isoinfo isofile\n"
#~ "\n"
#~ msgstr ""
#~ " isoinfo isofile\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " isoinfo-device device\n"
#~ "\n"
#~ msgstr ""
#~ " isoinfo-device device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-close\n"
#~ "\n"
#~ msgstr ""
#~ " journal-close\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-get\n"
#~ "\n"
#~ msgstr ""
#~ " journal-get\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-get-data-threshold\n"
#~ "\n"
#~ msgstr ""
#~ " journal-get-data-threshold\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-next\n"
#~ "\n"
#~ msgstr ""
#~ " journal-next\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-open directory\n"
#~ "\n"
#~ msgstr ""
#~ " journal-open directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-set-data-threshold threshold\n"
#~ "\n"
#~ msgstr ""
#~ " journal-set-data-threshold threshold\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " journal-skip skip\n"
#~ "\n"
#~ msgstr ""
#~ " journal-skip skip\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " kill-subprocess\n"
#~ "\n"
#~ msgstr ""
#~ " kill-subprocess\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " launch\n"
#~ "\n"
#~ msgstr ""
#~ " launch\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lchown owner group path\n"
#~ "\n"
#~ msgstr ""
#~ " lchown owner group path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-create-all\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-create-all\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-diskgroup-disks diskgroup\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-diskgroup-disks diskgroup\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-diskgroup-name diskgroup\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-diskgroup-name diskgroup\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-diskgroup-volumes diskgroup\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-diskgroup-volumes diskgroup\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-remove-all\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-remove-all\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-scan\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-scan\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-scan-devices 'devices ...'\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-scan-devices 'devices ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-volume-hint diskgroup volume\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-volume-hint diskgroup volume\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-volume-partitions diskgroup volume\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-volume-partitions diskgroup volume\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ldmtool-volume-type diskgroup volume\n"
#~ "\n"
#~ msgstr ""
#~ " ldmtool-volume-type diskgroup volume\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lgetxattr path name\n"
#~ "\n"
#~ msgstr ""
#~ " lgetxattr path name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lgetxattrs path\n"
#~ "\n"
#~ msgstr ""
#~ " lgetxattrs path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-9p\n"
#~ "\n"
#~ msgstr ""
#~ " list-9p\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-devices\n"
#~ "\n"
#~ msgstr ""
#~ " list-devices\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-disk-labels\n"
#~ "\n"
#~ msgstr ""
#~ " list-disk-labels\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-dm-devices\n"
#~ "\n"
#~ msgstr ""
#~ " list-dm-devices\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-filesystems\n"
#~ "\n"
#~ msgstr ""
#~ " list-filesystems\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " \"/dev/sda1\" => \"ntfs\"\n"
#~ " \"/dev/sda2\" => \"ext2\"\n"
#~ " \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
#~ " \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
#~ "\n"
#~ msgstr ""
#~ " \"/dev/sda1\" => \"ntfs\"\n"
#~ " \"/dev/sda2\" => \"ext2\"\n"
#~ " \"/dev/vg_guest/lv_root\" => \"ext4\"\n"
#~ " \"/dev/vg_guest/lv_swap\" => \"swap\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-ldm-partitions\n"
#~ "\n"
#~ msgstr ""
#~ " list-ldm-partitions\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-ldm-volumes\n"
#~ "\n"
#~ msgstr ""
#~ " list-ldm-volumes\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-md-devices\n"
#~ "\n"
#~ msgstr ""
#~ " list-md-devices\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-partitions\n"
#~ "\n"
#~ msgstr ""
#~ " list-partitions\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ll directory\n"
#~ "\n"
#~ msgstr ""
#~ " ll directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " llz directory\n"
#~ "\n"
#~ msgstr ""
#~ " llz directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ln target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln target linkname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ln-f target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln-f target linkname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ln-s target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln-s target linkname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ln-sf target linkname\n"
#~ "\n"
#~ msgstr ""
#~ " ln-sf target linkname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lremovexattr xattr path\n"
#~ "\n"
#~ msgstr ""
#~ " lremovexattr xattr path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ls directory\n"
#~ "\n"
#~ msgstr ""
#~ " ls directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ls0 dir (filenames|-)\n"
#~ "\n"
#~ msgstr ""
#~ " ls0 dir (filenames|-)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lsetxattr xattr val vallen path\n"
#~ "\n"
#~ msgstr ""
#~ " lsetxattr xattr val vallen path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lstat path\n"
#~ "\n"
#~ msgstr ""
#~ " lstat path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lstatlist path 'names ...'\n"
#~ "\n"
#~ msgstr ""
#~ " lstatlist path 'names ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " luks-add-key device keyslot\n"
#~ "\n"
#~ msgstr ""
#~ " luks-add-key device keyslot\n"
#~ "\n"

#~ msgid "luks-close"
#~ msgstr "luks-close"

#, no-wrap
#~ msgid ""
#~ " luks-close device\n"
#~ "\n"
#~ msgstr ""
#~ " luks-close device\n"
#~ "\n"

#~ msgid "luks-format"
#~ msgstr "luks-format"

#, no-wrap
#~ msgid ""
#~ " luks-format device keyslot\n"
#~ "\n"
#~ msgstr ""
#~ " luks-format device keyslot\n"
#~ "\n"

#~ msgid "luks-format-cipher"
#~ msgstr "luks-format-cipher"

#, no-wrap
#~ msgid ""
#~ " luks-format-cipher device keyslot cipher\n"
#~ "\n"
#~ msgstr ""
#~ " luks-format-cipher device keyslot cipher\n"
#~ "\n"

#~ msgid "luks-kill-slot"
#~ msgstr "luks-kill-slot"

#, no-wrap
#~ msgid ""
#~ " luks-kill-slot device keyslot\n"
#~ "\n"
#~ msgstr ""
#~ " luks-kill-slot device keyslot\n"
#~ "\n"

#~ msgid "luks-open"
#~ msgstr "luks-open"

#, no-wrap
#~ msgid ""
#~ " luks-open device mapname\n"
#~ "\n"
#~ msgstr ""
#~ " luks-open device mapname\n"
#~ "\n"

#~ msgid "luks-open-ro"
#~ msgstr "luks-open-ro"

#, no-wrap
#~ msgid ""
#~ " luks-open-ro device mapname\n"
#~ "\n"
#~ msgstr ""
#~ " luks-open-ro device mapname\n"
#~ "\n"

#~ msgid "lvcreate"
#~ msgstr "lvcreate"

#, no-wrap
#~ msgid ""
#~ " lvcreate logvol volgroup mbytes\n"
#~ "\n"
#~ msgstr ""
#~ " lvcreate logvol volgroup mbytes\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lvcreate-free logvol volgroup percent\n"
#~ "\n"
#~ msgstr ""
#~ " lvcreate-free logvol volgroup percent\n"
#~ "\n"

#~ msgid "lvm-canonical-lv-name"
#~ msgstr "lvm-canonical-lv-name"

#, no-wrap
#~ msgid ""
#~ " lvm-canonical-lv-name lvname\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-canonical-lv-name lvname\n"
#~ "\n"

#~ msgid "lvm-clear-filter"
#~ msgstr "lvm-clear-filter"

#, no-wrap
#~ msgid ""
#~ " lvm-clear-filter\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-clear-filter\n"
#~ "\n"

#~ msgid "lvm-remove-all"
#~ msgstr "lvm-remove-all"

#, no-wrap
#~ msgid ""
#~ " lvm-remove-all\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-remove-all\n"
#~ "\n"

#~ msgid "lvm-set-filter"
#~ msgstr "lvm-set-filter"

#, no-wrap
#~ msgid ""
#~ " lvm-set-filter 'devices ...'\n"
#~ "\n"
#~ msgstr ""
#~ " lvm-set-filter 'devices ...'\n"
#~ "\n"

#~ msgid "lvremove"
#~ msgstr "lvremove"

#, no-wrap
#~ msgid ""
#~ " lvremove device\n"
#~ "\n"
#~ msgstr ""
#~ " lvremove device\n"
#~ "\n"

#~ msgid "lvrename"
#~ msgstr "lvrename"

#, no-wrap
#~ msgid ""
#~ " lvrename logvol newlogvol\n"
#~ "\n"
#~ msgstr ""
#~ " lvrename logvol newlogvol\n"
#~ "\n"

#~ msgid "lvresize"
#~ msgstr "lvresize"

#, no-wrap
#~ msgid ""
#~ " lvresize device mbytes\n"
#~ "\n"
#~ msgstr ""
#~ " lvresize device mbytes\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lvresize-free lv percent\n"
#~ "\n"
#~ msgstr ""
#~ " lvresize-free lv percent\n"
#~ "\n"

#~ msgid "lvs"
#~ msgstr "lvs"

#, no-wrap
#~ msgid ""
#~ " lvs\n"
#~ "\n"
#~ msgstr ""
#~ " lvs\n"
#~ "\n"

#~ msgid "lvs-full"
#~ msgstr "lvs-full"

#, no-wrap
#~ msgid ""
#~ " lvs-full\n"
#~ "\n"
#~ msgstr ""
#~ " lvs-full\n"
#~ "\n"

#~ msgid "lvuuid"
#~ msgstr "lvuuid"

#, no-wrap
#~ msgid ""
#~ " lvuuid device\n"
#~ "\n"
#~ msgstr ""
#~ " lvuuid device\n"
#~ "\n"

#~ msgid "lxattrlist"
#~ msgstr "lxattrlist"

#, no-wrap
#~ msgid ""
#~ " lxattrlist path 'names ...'\n"
#~ "\n"
#~ msgstr ""
#~ " lxattrlist path 'names ...'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " max-disks\n"
#~ "\n"
#~ msgstr ""
#~ " max-disks\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " md-create name 'devices ...' [missingbitmap:N] [nrdevices:N] [spare:N] [chunk:N] [level:..]\n"
#~ "\n"
#~ msgstr ""
#~ " md-create name 'devices ...' [missingbitmap:N] [nrdevices:N] [spare:N] [chunk:N] [level:..]\n"
#~ "\n"

#~ msgid "C<missingbitmap>"
#~ msgstr "C<missingbitmap>"

#~ msgid "C<nrdevices>"
#~ msgstr "C<nrdevices>"

#~ msgid "C<spare>"
#~ msgstr "C<spare>"

#~ msgid "C<chunk>"
#~ msgstr "C<chunk>"

#~ msgid "C<level>"
#~ msgstr "C<level>"

#, no-wrap
#~ msgid ""
#~ " md-detail md\n"
#~ "\n"
#~ msgstr ""
#~ " md-detail md\n"
#~ "\n"

#~ msgid "C<devices>"
#~ msgstr "C<devices>"

#~ msgid "C<metadata>"
#~ msgstr "C<metadata>"

#~ msgid "C<uuid>"
#~ msgstr "C<uuid>"

#, no-wrap
#~ msgid ""
#~ " md-stat md\n"
#~ "\n"
#~ msgstr ""
#~ " md-stat md\n"
#~ "\n"

#~ msgid "C<mdstat_device>"
#~ msgstr "C<mdstat_device>"

#~ msgid "C<mdstat_index>"
#~ msgstr "C<mdstat_index>"

#~ msgid "C<mdstat_flags>"
#~ msgstr "C<mdstat_flags>"

#~ msgid "C<W>"
#~ msgstr "C<W>"

#~ msgid "C<F>"
#~ msgstr "C<F>"

#~ msgid "C<S>"
#~ msgstr "C<S>"

#~ msgid "C<R>"
#~ msgstr "C<R>"

#, no-wrap
#~ msgid ""
#~ " md-stop md\n"
#~ "\n"
#~ msgstr ""
#~ " md-stop md\n"
#~ "\n"

#~ msgid "mkdir"
#~ msgstr "mkdir"

#, no-wrap
#~ msgid ""
#~ " mkdir path\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir path\n"
#~ "\n"

#~ msgid "mkdir-mode"
#~ msgstr "mkdir-mode"

#, no-wrap
#~ msgid ""
#~ " mkdir-mode path mode\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir-mode path mode\n"
#~ "\n"

#~ msgid "See also L</mkdir>, L</umask>"
#~ msgstr "Voir aussi L</mkdir>, L</umask>"

#~ msgid "mkdir-p"
#~ msgstr "mkdir-p"

#, no-wrap
#~ msgid ""
#~ " mkdir-p path\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir-p path\n"
#~ "\n"

#~ msgid "mkdtemp"
#~ msgstr "mkdtemp"

#, no-wrap
#~ msgid ""
#~ " mkdtemp tmpl\n"
#~ "\n"
#~ msgstr ""
#~ " mkdtemp tmpl\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mke2fs device [blockscount:N] [blocksize:N] [fragsize:N] [blockspergroup:N] [numberofgroups:N] [bytesperinode:N] [inodesize:N] [journalsize:N] [numberofinodes:N] [stridesize:N] [stripewidth:N] [maxonlineresize:N] [reservedblockspercentage:N] [mmpupdateinterval:N] [journaldevice:..] [label:..] [lastmounteddir:..] [creatoros:..] [fstype:..] [usagetype:..] [uuid:..] [forcecreate:true|false] [writesbandgrouponly:true|false] [lazyitableinit:true|false] [lazyjournalinit:true|false] [testfs:true|false] [discard:true|false] [quotatype:true|false] [extent:true|false] [filetype:true|false] [flexbg:true|false] [hasjournal:true|false] [journaldev:true|false] [largefile:true|false] [quota:true|false] [resizeinode:true|false] [sparsesuper:true|false] [uninitbg:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs device [blockscount:N] [blocksize:N] [fragsize:N] [blockspergroup:N] [numberofgroups:N] [bytesperinode:N] [inodesize:N] [journalsize:N] [numberofinodes:N] [stridesize:N] [stripewidth:N] [maxonlineresize:N] [reservedblockspercentage:N] [mmpupdateinterval:N] [journaldevice:..] [label:..] [lastmounteddir:..] [creatoros:..] [fstype:..] [usagetype:..] [uuid:..] [forcecreate:true|false] [writesbandgrouponly:true|false] [lazyitableinit:true|false] [lazyjournalinit:true|false] [testfs:true|false] [discard:true|false] [quotatype:true|false] [extent:true|false] [filetype:true|false] [flexbg:true|false] [hasjournal:true|false] [journaldev:true|false] [largefile:true|false] [quota:true|false] [resizeinode:true|false] [sparsesuper:true|false] [uninitbg:true|false]\n"
#~ "\n"

#~ msgid "mke2fs-J"
#~ msgstr "mke2fs-J"

#, no-wrap
#~ msgid ""
#~ " mke2fs-J fstype blocksize device journal\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs-J fstype blocksize device journal\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs -t fstype -b blocksize -J device=<journal> <device>\n"
#~ "\n"

#~ msgid "mke2fs-JL"
#~ msgstr "mke2fs-JL"

#, no-wrap
#~ msgid ""
#~ " mke2fs-JL fstype blocksize device label\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs-JL fstype blocksize device label\n"
#~ "\n"

#~ msgid "mke2fs-JU"
#~ msgstr "mke2fs-JU"

#, no-wrap
#~ msgid ""
#~ " mke2fs-JU fstype blocksize device uuid\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs-JU fstype blocksize device uuid\n"
#~ "\n"

#~ msgid "mke2journal"
#~ msgstr "mke2journal"

#, no-wrap
#~ msgid ""
#~ " mke2journal blocksize device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2journal blocksize device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mke2fs -O journal_dev -b blocksize device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2fs -O journal_dev -b blocksize device\n"
#~ "\n"

#~ msgid "mke2journal-L"
#~ msgstr "mke2journal-L"

#, no-wrap
#~ msgid ""
#~ " mke2journal-L blocksize label device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2journal-L blocksize label device\n"
#~ "\n"

#~ msgid "mke2journal-U"
#~ msgstr "mke2journal-U"

#, no-wrap
#~ msgid ""
#~ " mke2journal-U blocksize uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " mke2journal-U blocksize uuid device\n"
#~ "\n"

#~ msgid "mkfifo"
#~ msgstr "mkfifo"

#, no-wrap
#~ msgid ""
#~ " mkfifo mode path\n"
#~ "\n"
#~ msgstr ""
#~ " mkfifo mode path\n"
#~ "\n"

#~ msgid "mkfs"
#~ msgstr "mkfs"

#~ msgid "mkfs-opts"
#~ msgstr "mkfs-opts"

#~ msgid "C<inode>"
#~ msgstr "C<inode>"

#~ msgid "C<sectorsize>"
#~ msgstr "C<sectorsize>"

#~ msgid "mkfs-b"
#~ msgstr "mkfs-b"

#, no-wrap
#~ msgid ""
#~ " mkfs-b fstype blocksize device\n"
#~ "\n"
#~ msgstr ""
#~ " mkfs-b fstype blocksize device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mkfs-btrfs 'devices ...' [allocstart:N] [bytecount:N] [datatype:..] [leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]\n"
#~ "\n"
#~ msgstr ""
#~ " mkfs-btrfs 'devices ...' [allocstart:N] [bytecount:N] [datatype:..] [leafsize:N] [label:..] [metadata:..] [nodesize:N] [sectorsize:N]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mklost-and-found mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mklost-and-found mountpoint\n"
#~ "\n"

#~ msgid "mkmountpoint"
#~ msgstr "mkmountpoint"

#, no-wrap
#~ msgid ""
#~ " mkmountpoint exemptpath\n"
#~ "\n"
#~ msgstr ""
#~ " mkmountpoint exemptpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add-ro Fedora-11-i686-Live.iso\n"
#~ " run\n"
#~ " mkmountpoint /cd\n"
#~ " mkmountpoint /sqsh\n"
#~ " mkmountpoint /ext3fs\n"
#~ " mount /dev/sda /cd\n"
#~ " mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
#~ " mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
#~ "\n"
#~ msgstr ""
#~ " add-ro Fedora-11-i686-Live.iso\n"
#~ " run\n"
#~ " mkmountpoint /cd\n"
#~ " mkmountpoint /sqsh\n"
#~ " mkmountpoint /ext3fs\n"
#~ " mount /dev/sda /cd\n"
#~ " mount-loop /cd/LiveOS/squashfs.img /sqsh\n"
#~ " mount-loop /sqsh/LiveOS/ext3fs.img /ext3fs\n"
#~ "\n"

#~ msgid "mknod"
#~ msgstr "mknod"

#, no-wrap
#~ msgid ""
#~ " mknod mode devmajor devminor path\n"
#~ "\n"
#~ msgstr ""
#~ " mknod mode devmajor devminor path\n"
#~ "\n"

#~ msgid "mknod-b"
#~ msgstr "mknod-b"

#, no-wrap
#~ msgid ""
#~ " mknod-b mode devmajor devminor path\n"
#~ "\n"
#~ msgstr ""
#~ " mknod-b mode devmajor devminor path\n"
#~ "\n"

#~ msgid "mknod-c"
#~ msgstr "mknod-c"

#, no-wrap
#~ msgid ""
#~ " mknod-c mode devmajor devminor path\n"
#~ "\n"
#~ msgstr ""
#~ " mknod-c mode devmajor devminor path\n"
#~ "\n"

#~ msgid "C<excludes>"
#~ msgstr "C<excludes>"

#~ msgid "mkswap"
#~ msgstr "mkswap"

#, no-wrap
#~ msgid ""
#~ " mkswap device [label:..] [uuid:..]\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap device [label:..] [uuid:..]\n"
#~ "\n"

#~ msgid "mkswap-L"
#~ msgstr "mkswap-L"

#, no-wrap
#~ msgid ""
#~ " mkswap-L label device\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap-L label device\n"
#~ "\n"

#~ msgid "mkswap-U"
#~ msgstr "mkswap-U"

#, no-wrap
#~ msgid ""
#~ " mkswap-U uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap-U uuid device\n"
#~ "\n"

#~ msgid "mkswap-file"
#~ msgstr "mkswap-file"

#, no-wrap
#~ msgid ""
#~ " mkswap-file path\n"
#~ "\n"
#~ msgstr ""
#~ " mkswap-file path\n"
#~ "\n"

#~ msgid ""
#~ "This command just writes a swap file signature to an existing file.  To "
#~ "create the file itself, use something like L</fallocate>."
#~ msgstr ""
#~ "This command just writes a swap file signature to an existing file.  To "
#~ "create the file itself, use something like L</fallocate>."

#, no-wrap
#~ msgid ""
#~ " mktemp tmpl [suffix:..]\n"
#~ "\n"
#~ msgstr ""
#~ " mktemp tmpl [suffix:..]\n"
#~ "\n"

#~ msgid "modprobe"
#~ msgstr "modprobe"

#, no-wrap
#~ msgid ""
#~ " modprobe modulename\n"
#~ "\n"
#~ msgstr ""
#~ " modprobe modulename\n"
#~ "\n"

#~ msgid "mount"
#~ msgstr "mount"

#, no-wrap
#~ msgid ""
#~ " mount mountable mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mount mountable mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mount-9p mounttag mountpoint [options:..]\n"
#~ "\n"
#~ msgstr ""
#~ " mount-9p mounttag mountpoint [options:..]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mount-local localmountpoint [readonly:true|false] [options:..] [cachetimeout:N] [debugcalls:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " mount-local localmountpoint [readonly:true|false] [options:..] [cachetimeout:N] [debugcalls:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mount-local-run\n"
#~ "\n"
#~ msgstr ""
#~ " mount-local-run\n"
#~ "\n"

#~ msgid "mount-loop"
#~ msgstr "mount-loop"

#, no-wrap
#~ msgid ""
#~ " mount-loop file mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mount-loop file mountpoint\n"
#~ "\n"

#~ msgid "mount-options"
#~ msgstr "mount-options"

#, no-wrap
#~ msgid ""
#~ " mount-options options mountable mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mount-options options mountable mountpoint\n"
#~ "\n"

#~ msgid "mount-ro"
#~ msgstr "mount-ro"

#, no-wrap
#~ msgid ""
#~ " mount-ro mountable mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mount-ro mountable mountpoint\n"
#~ "\n"

#~ msgid "mount-vfs"
#~ msgstr "mount-vfs"

#, no-wrap
#~ msgid ""
#~ " mount-vfs options vfstype mountable mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " mount-vfs options vfstype mountable mountpoint\n"
#~ "\n"

#~ msgid "mountpoints"
#~ msgstr "mountpoints"

#, no-wrap
#~ msgid ""
#~ " mountpoints\n"
#~ "\n"
#~ msgstr ""
#~ " mountpoints\n"
#~ "\n"

#~ msgid "mounts"
#~ msgstr "mounts"

#, no-wrap
#~ msgid ""
#~ " mounts\n"
#~ "\n"
#~ msgstr ""
#~ " mounts\n"
#~ "\n"

#~ msgid "mv"
#~ msgstr "mv"

#, no-wrap
#~ msgid ""
#~ " mv src dest\n"
#~ "\n"
#~ msgstr ""
#~ " mv src dest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " nr-devices\n"
#~ "\n"
#~ msgstr ""
#~ " nr-devices\n"
#~ "\n"

#~ msgid "ntfs-3g-probe"
#~ msgstr "ntfs-3g-probe"

#, no-wrap
#~ msgid ""
#~ " ntfs-3g-probe true|false device\n"
#~ "\n"
#~ msgstr ""
#~ " ntfs-3g-probe true|false device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ntfsclone-in (backupfile|-) device\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsclone-in (backupfile|-) device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ntfsclone-out device (backupfile|-) [metadataonly:true|false] [rescue:true|false] [ignorefscheck:true|false] [preservetimestamps:true|false] [force:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsclone-out device (backupfile|-) [metadataonly:true|false] [rescue:true|false] [ignorefscheck:true|false] [preservetimestamps:true|false] [force:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ntfsfix device [clearbadsectors:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsfix device [clearbadsectors:true|false]\n"
#~ "\n"

#~ msgid "ntfsresize"
#~ msgstr "ntfsresize"

#, no-wrap
#~ msgid ""
#~ " ntfsresize device [size:N] [force:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsresize device [size:N] [force:true|false]\n"
#~ "\n"

#~ msgid "C<force>"
#~ msgstr "C<force>"

#~ msgid "ntfsresize-size"
#~ msgstr "ntfsresize-size"

#, no-wrap
#~ msgid ""
#~ " ntfsresize-size device size\n"
#~ "\n"
#~ msgstr ""
#~ " ntfsresize-size device size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " parse-environment\n"
#~ "\n"
#~ msgstr ""
#~ " parse-environment\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " parse-environment-list 'environment ...'\n"
#~ "\n"
#~ msgstr ""
#~ " parse-environment-list 'environment ...'\n"
#~ "\n"

#~ msgid "part-add"
#~ msgstr "part-add"

#, no-wrap
#~ msgid ""
#~ " part-add device prlogex startsect endsect\n"
#~ "\n"
#~ msgstr ""
#~ " part-add device prlogex startsect endsect\n"
#~ "\n"

#~ msgid "part-del"
#~ msgstr "part-del"

#, no-wrap
#~ msgid ""
#~ " part-del device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-del device partnum\n"
#~ "\n"

#~ msgid "part-disk"
#~ msgstr "part-disk"

#, no-wrap
#~ msgid ""
#~ " part-disk device parttype\n"
#~ "\n"
#~ msgstr ""
#~ " part-disk device parttype\n"
#~ "\n"

#~ msgid "part-get-bootable"
#~ msgstr "part-get-bootable"

#, no-wrap
#~ msgid ""
#~ " part-get-bootable device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-bootable device partnum\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " part-get-gpt-type device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-gpt-type device partnum\n"
#~ "\n"

#~ msgid "part-get-mbr-id"
#~ msgstr "part-get-mbr-id"

#, no-wrap
#~ msgid ""
#~ " part-get-mbr-id device partnum\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-mbr-id device partnum\n"
#~ "\n"

#~ msgid "part-get-parttype"
#~ msgstr "part-get-parttype"

#, no-wrap
#~ msgid ""
#~ " part-get-parttype device\n"
#~ "\n"
#~ msgstr ""
#~ " part-get-parttype device\n"
#~ "\n"

#~ msgid "part-init"
#~ msgstr "part-init"

#, no-wrap
#~ msgid ""
#~ " part-init device parttype\n"
#~ "\n"
#~ msgstr ""
#~ " part-init device parttype\n"
#~ "\n"

#, fuzzy
#~| msgid "C<make check>"
#~ msgid "C<mac>"
#~ msgstr "C<make check>"

#~ msgid "part-list"
#~ msgstr "part-list"

#, no-wrap
#~ msgid ""
#~ " part-list device\n"
#~ "\n"
#~ msgstr ""
#~ " part-list device\n"
#~ "\n"

#, fuzzy
#~| msgid "C<size>"
#~ msgid "C<part_size>"
#~ msgstr "C<size>"

#~ msgid "part-set-bootable"
#~ msgstr "part-set-bootable"

#, no-wrap
#~ msgid ""
#~ " part-set-bootable device partnum true|false\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-bootable device partnum true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " part-set-gpt-type device partnum guid\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-gpt-type device partnum guid\n"
#~ "\n"

#~ msgid "part-set-mbr-id"
#~ msgstr "part-set-mbr-id"

#, no-wrap
#~ msgid ""
#~ " part-set-mbr-id device partnum idbyte\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-mbr-id device partnum idbyte\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " part-set-name device partnum name\n"
#~ "\n"
#~ msgstr ""
#~ " part-set-name device partnum name\n"
#~ "\n"

#~ msgid "part-to-dev"
#~ msgstr "part-to-dev"

#, no-wrap
#~ msgid ""
#~ " part-to-dev partition\n"
#~ "\n"
#~ msgstr ""
#~ " part-to-dev partition\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " part-to-partnum partition\n"
#~ "\n"
#~ msgstr ""
#~ " part-to-partnum partition\n"
#~ "\n"

#~ msgid "ping-daemon"
#~ msgstr "ping-daemon"

#, no-wrap
#~ msgid ""
#~ " ping-daemon\n"
#~ "\n"
#~ msgstr ""
#~ " ping-daemon\n"
#~ "\n"

#~ msgid "pread"
#~ msgstr "pread"

#, no-wrap
#~ msgid ""
#~ " pread path count offset\n"
#~ "\n"
#~ msgstr ""
#~ " pread path count offset\n"
#~ "\n"

#~ msgid "pread-device"
#~ msgstr "pread-device"

#, no-wrap
#~ msgid ""
#~ " pread-device device count offset\n"
#~ "\n"
#~ msgstr ""
#~ " pread-device device count offset\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " pvchange-uuid device\n"
#~ "\n"
#~ msgstr ""
#~ " pvchange-uuid device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " pvchange-uuid-all\n"
#~ "\n"
#~ msgstr ""
#~ " pvchange-uuid-all\n"
#~ "\n"

#~ msgid "pvcreate"
#~ msgstr "pvcreate"

#, no-wrap
#~ msgid ""
#~ " pvcreate device\n"
#~ "\n"
#~ msgstr ""
#~ " pvcreate device\n"
#~ "\n"

#~ msgid "pvremove"
#~ msgstr "pvremove"

#, no-wrap
#~ msgid ""
#~ " pvremove device\n"
#~ "\n"
#~ msgstr ""
#~ " pvremove device\n"
#~ "\n"

#~ msgid "pvresize"
#~ msgstr "pvresize"

#, no-wrap
#~ msgid ""
#~ " pvresize device\n"
#~ "\n"
#~ msgstr ""
#~ " pvresize device\n"
#~ "\n"

#~ msgid "pvresize-size"
#~ msgstr "pvresize-size"

#, no-wrap
#~ msgid ""
#~ " pvresize-size device size\n"
#~ "\n"
#~ msgstr ""
#~ " pvresize-size device size\n"
#~ "\n"

#~ msgid "pvs"
#~ msgstr "pvs"

#, no-wrap
#~ msgid ""
#~ " pvs\n"
#~ "\n"
#~ msgstr ""
#~ " pvs\n"
#~ "\n"

#~ msgid "pvs-full"
#~ msgstr "pvs-full"

#, no-wrap
#~ msgid ""
#~ " pvs-full\n"
#~ "\n"
#~ msgstr ""
#~ " pvs-full\n"
#~ "\n"

#~ msgid "pvuuid"
#~ msgstr "pvuuid"

#, no-wrap
#~ msgid ""
#~ " pvuuid device\n"
#~ "\n"
#~ msgstr ""
#~ " pvuuid device\n"
#~ "\n"

#~ msgid "pwrite"
#~ msgstr "pwrite"

#, no-wrap
#~ msgid ""
#~ " pwrite path content offset\n"
#~ "\n"
#~ msgstr ""
#~ " pwrite path content offset\n"
#~ "\n"

#~ msgid "pwrite-device"
#~ msgstr "pwrite-device"

#, no-wrap
#~ msgid ""
#~ " pwrite-device device content offset\n"
#~ "\n"
#~ msgstr ""
#~ " pwrite-device device content offset\n"
#~ "\n"

#~ msgid "read-file"
#~ msgstr "read-file"

#, no-wrap
#~ msgid ""
#~ " read-file path\n"
#~ "\n"
#~ msgstr ""
#~ " read-file path\n"
#~ "\n"

#~ msgid "read-lines"
#~ msgstr "read-lines"

#, no-wrap
#~ msgid ""
#~ " read-lines path\n"
#~ "\n"
#~ msgstr ""
#~ " read-lines path\n"
#~ "\n"

#~ msgid "readdir"
#~ msgstr "readdir"

#, no-wrap
#~ msgid ""
#~ " readdir dir\n"
#~ "\n"
#~ msgstr ""
#~ " readdir dir\n"
#~ "\n"

#~ msgid "readlink"
#~ msgstr "readlink"

#, no-wrap
#~ msgid ""
#~ " readlink path\n"
#~ "\n"
#~ msgstr ""
#~ " readlink path\n"
#~ "\n"

#~ msgid "readlinklist"
#~ msgstr "readlinklist"

#, no-wrap
#~ msgid ""
#~ " readlinklist path 'names ...'\n"
#~ "\n"
#~ msgstr ""
#~ " readlinklist path 'names ...'\n"
#~ "\n"

#~ msgid "realpath"
#~ msgstr "realpath"

#, no-wrap
#~ msgid ""
#~ " realpath path\n"
#~ "\n"
#~ msgstr ""
#~ " realpath path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " remount mountpoint [rw:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " remount mountpoint [rw:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " remove-drive label\n"
#~ "\n"
#~ msgstr ""
#~ " remove-drive label\n"
#~ "\n"

#~ msgid "removexattr"
#~ msgstr "removexattr"

#, no-wrap
#~ msgid ""
#~ " removexattr xattr path\n"
#~ "\n"
#~ msgstr ""
#~ " removexattr xattr path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rename oldpath newpath\n"
#~ "\n"
#~ msgstr ""
#~ " rename oldpath newpath\n"
#~ "\n"

#~ msgid "resize2fs"
#~ msgstr "resize2fs"

#, no-wrap
#~ msgid ""
#~ " resize2fs device\n"
#~ "\n"
#~ msgstr ""
#~ " resize2fs device\n"
#~ "\n"

#~ msgid "resize2fs-M"
#~ msgstr "resize2fs-M"

#, no-wrap
#~ msgid ""
#~ " resize2fs-M device\n"
#~ "\n"
#~ msgstr ""
#~ " resize2fs-M device\n"
#~ "\n"

#~ msgid "resize2fs-size"
#~ msgstr "resize2fs-size"

#, no-wrap
#~ msgid ""
#~ " resize2fs-size device size\n"
#~ "\n"
#~ msgstr ""
#~ " resize2fs-size device size\n"
#~ "\n"

#~ msgid "rm"
#~ msgstr "rm"

#, no-wrap
#~ msgid ""
#~ " rm path\n"
#~ "\n"
#~ msgstr ""
#~ " rm path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm-f path\n"
#~ "\n"
#~ msgstr ""
#~ " rm-f path\n"
#~ "\n"

#~ msgid "rm-rf"
#~ msgstr "rm-rf"

#, no-wrap
#~ msgid ""
#~ " rm-rf path\n"
#~ "\n"
#~ msgstr ""
#~ " rm-rf path\n"
#~ "\n"

#~ msgid "rmdir"
#~ msgstr "rmdir"

#, no-wrap
#~ msgid ""
#~ " rmdir path\n"
#~ "\n"
#~ msgstr ""
#~ " rmdir path\n"
#~ "\n"

#~ msgid "rmmountpoint"
#~ msgstr "rmmountpoint"

#, no-wrap
#~ msgid ""
#~ " rmmountpoint exemptpath\n"
#~ "\n"
#~ msgstr ""
#~ " rmmountpoint exemptpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rsync src dest [archive:true|false] [deletedest:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " rsync src dest [archive:true|false] [deletedest:true|false]\n"
#~ "\n"

#~ msgid "C<archive>"
#~ msgstr "C<archive>"

#~ msgid "C<deletedest>"
#~ msgstr "C<deletedest>"

#, no-wrap
#~ msgid ""
#~ " rsync-in remote dest [archive:true|false] [deletedest:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " rsync-in remote dest [archive:true|false] [deletedest:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rsync-out src remote [archive:true|false] [deletedest:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " rsync-out src remote [archive:true|false] [deletedest:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> glob rsync-out /* rsync://remote/\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> glob rsync-out /* rsync://remote/\n"
#~ "\n"

#~ msgid "scrub-device"
#~ msgstr "scrub-device"

#, no-wrap
#~ msgid ""
#~ " scrub-device device\n"
#~ "\n"
#~ msgstr ""
#~ " scrub-device device\n"
#~ "\n"

#~ msgid "scrub-file"
#~ msgstr "scrub-file"

#, no-wrap
#~ msgid ""
#~ " scrub-file file\n"
#~ "\n"
#~ msgstr ""
#~ " scrub-file file\n"
#~ "\n"

#~ msgid "scrub-freespace"
#~ msgstr "scrub-freespace"

#, no-wrap
#~ msgid ""
#~ " scrub-freespace dir\n"
#~ "\n"
#~ msgstr ""
#~ " scrub-freespace dir\n"
#~ "\n"

#~ msgid "set-append"
#~ msgstr "set-append"

#~ msgid "append"
#~ msgstr "append"

#, no-wrap
#~ msgid ""
#~ " set-append append\n"
#~ "\n"
#~ msgstr ""
#~ " set-append append\n"
#~ "\n"

#~ msgid "set-attach-method"
#~ msgstr "set-attach-method"

#~ msgid "attach-method"
#~ msgstr "attach-method"

#, no-wrap
#~ msgid ""
#~ " set-attach-method backend\n"
#~ "\n"
#~ msgstr ""
#~ " set-attach-method backend\n"
#~ "\n"

#~ msgid "autosync"
#~ msgstr "autosync"

#, no-wrap
#~ msgid ""
#~ " set-autosync true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-autosync true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-backend backend\n"
#~ "\n"
#~ msgstr ""
#~ " set-backend backend\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-cachedir cachedir\n"
#~ "\n"
#~ msgstr ""
#~ " set-cachedir cachedir\n"
#~ "\n"

#~ msgid "set-direct"
#~ msgstr "set-direct"

#~ msgid "direct"
#~ msgstr "direct"

#, no-wrap
#~ msgid ""
#~ " set-direct true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-direct true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-e2attrs file attrs [clear:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2attrs file attrs [clear:true|false]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-e2generation file generation\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2generation file generation\n"
#~ "\n"

#~ msgid "set-e2label"
#~ msgstr "set-e2label"

#, no-wrap
#~ msgid ""
#~ " set-e2label device label\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2label device label\n"
#~ "\n"

#~ msgid "set-e2uuid"
#~ msgstr "set-e2uuid"

#, no-wrap
#~ msgid ""
#~ " set-e2uuid device uuid\n"
#~ "\n"
#~ msgstr ""
#~ " set-e2uuid device uuid\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-hv hv\n"
#~ "\n"
#~ msgstr ""
#~ " set-hv hv\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-label mountable label\n"
#~ "\n"
#~ msgstr ""
#~ " set-label mountable label\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-libvirt-requested-credential index cred\n"
#~ "\n"
#~ msgstr ""
#~ " set-libvirt-requested-credential index cred\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-libvirt-supported-credentials 'creds ...'\n"
#~ "\n"
#~ msgstr ""
#~ " set-libvirt-supported-credentials 'creds ...'\n"
#~ "\n"

#~ msgid "C<authname>"
#~ msgstr "C<authname>"

#~ msgid "C<language>"
#~ msgstr "C<language>"

#~ msgid "C<cnonce>"
#~ msgstr "C<cnonce>"

#~ msgid "C<passphrase>"
#~ msgstr "C<passphrase>"

#~ msgid "C<echoprompt>"
#~ msgstr "C<echoprompt>"

#~ msgid "C<noechoprompt>"
#~ msgstr "C<noechoprompt>"

#~ msgid "C<realm>"
#~ msgstr "C<realm>"

#~ msgid "set-memsize"
#~ msgstr "set-memsize"

#~ msgid "memsize"
#~ msgstr "memsize"

#, no-wrap
#~ msgid ""
#~ " set-memsize memsize\n"
#~ "\n"
#~ msgstr ""
#~ " set-memsize memsize\n"
#~ "\n"

#~ msgid "set-network"
#~ msgstr "set-network"

#~ msgid "network"
#~ msgstr "network"

#, no-wrap
#~ msgid ""
#~ " set-network true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-network true|false\n"
#~ "\n"

#~ msgid "set-path"
#~ msgstr "set-path"

#, no-wrap
#~ msgid ""
#~ " set-path searchpath\n"
#~ "\n"
#~ msgstr ""
#~ " set-path searchpath\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-pgroup true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-pgroup true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-program program\n"
#~ "\n"
#~ msgstr ""
#~ " set-program program\n"
#~ "\n"

#~ msgid "set-qemu"
#~ msgstr "set-qemu"

#~ msgid "qemu"
#~ msgstr "qemu"

#, no-wrap
#~ msgid ""
#~ " set-qemu hv\n"
#~ "\n"
#~ msgstr ""
#~ " set-qemu hv\n"
#~ "\n"

#~ msgid "set-recovery-proc"
#~ msgstr "set-recovery-proc"

#~ msgid "recovery-proc"
#~ msgstr "recovery-proc"

#, no-wrap
#~ msgid ""
#~ " set-recovery-proc true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-recovery-proc true|false\n"
#~ "\n"

#~ msgid "set-selinux"
#~ msgstr "set-selinux"

#~ msgid "selinux"
#~ msgstr "selinux"

#, no-wrap
#~ msgid ""
#~ " set-selinux true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-selinux true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-smp smp\n"
#~ "\n"
#~ msgstr ""
#~ " set-smp smp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-tmpdir tmpdir\n"
#~ "\n"
#~ msgstr ""
#~ " set-tmpdir tmpdir\n"
#~ "\n"

#~ msgid "set-trace"
#~ msgstr "set-trace"

#~ msgid "trace"
#~ msgstr "trace"

#, no-wrap
#~ msgid ""
#~ " set-trace true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-trace true|false\n"
#~ "\n"

#~ msgid "set-uuid"
#~ msgstr "set-uuid"

#, no-wrap
#~ msgid ""
#~ " set-uuid device uuid\n"
#~ "\n"
#~ msgstr ""
#~ " set-uuid device uuid\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set-verbose true|false\n"
#~ "\n"
#~ msgstr ""
#~ " set-verbose true|false\n"
#~ "\n"

#~ msgid "setcon"
#~ msgstr "setcon"

#, no-wrap
#~ msgid ""
#~ " setcon context\n"
#~ "\n"
#~ msgstr ""
#~ " setcon context\n"
#~ "\n"

#~ msgid "setxattr"
#~ msgstr "setxattr"

#, no-wrap
#~ msgid ""
#~ " setxattr xattr val vallen path\n"
#~ "\n"
#~ msgstr ""
#~ " setxattr xattr val vallen path\n"
#~ "\n"

#~ msgid "See also: L</lsetxattr>, L<attr(5)>."
#~ msgstr "Voir aussi : L</lsetxattr>, L<attr(5)>."

#~ msgid "sfdisk"
#~ msgstr "sfdisk"

#, no-wrap
#~ msgid ""
#~ " sfdisk device cyls heads sectors 'lines ...'\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk device cyls heads sectors 'lines ...'\n"
#~ "\n"

#~ msgid "sfdiskM"
#~ msgstr "sfdiskM"

#, no-wrap
#~ msgid ""
#~ " sfdiskM device 'lines ...'\n"
#~ "\n"
#~ msgstr ""
#~ " sfdiskM device 'lines ...'\n"
#~ "\n"

#~ msgid "sfdisk-N"
#~ msgstr "sfdisk-N"

#, no-wrap
#~ msgid ""
#~ " sfdisk-N device partnum cyls heads sectors line\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-N device partnum cyls heads sectors line\n"
#~ "\n"

#~ msgid "sfdisk-disk-geometry"
#~ msgstr "sfdisk-disk-geometry"

#, no-wrap
#~ msgid ""
#~ " sfdisk-disk-geometry device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-disk-geometry device\n"
#~ "\n"

#~ msgid "sfdisk-kernel-geometry"
#~ msgstr "sfdisk-kernel-geometry"

#, no-wrap
#~ msgid ""
#~ " sfdisk-kernel-geometry device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-kernel-geometry device\n"
#~ "\n"

#~ msgid "sfdisk-l"
#~ msgstr "sfdisk-l"

#, no-wrap
#~ msgid ""
#~ " sfdisk-l device\n"
#~ "\n"
#~ msgstr ""
#~ " sfdisk-l device\n"
#~ "\n"

#~ msgid "sh"
#~ msgstr "sh"

#, no-wrap
#~ msgid ""
#~ " sh command\n"
#~ "\n"
#~ msgstr ""
#~ " sh command\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /bin/sh -c \"command\"\n"
#~ "\n"
#~ msgstr ""
#~ " /bin/sh -c \"command\"\n"
#~ "\n"

#~ msgid "sh-lines"
#~ msgstr "sh-lines"

#, no-wrap
#~ msgid ""
#~ " sh-lines command\n"
#~ "\n"
#~ msgstr ""
#~ " sh-lines command\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " shutdown\n"
#~ "\n"
#~ msgstr ""
#~ " shutdown\n"
#~ "\n"

#~ msgid "sleep"
#~ msgstr "sleep"

#, no-wrap
#~ msgid ""
#~ " sleep secs\n"
#~ "\n"
#~ msgstr ""
#~ " sleep secs\n"
#~ "\n"

#~ msgid "stat"
#~ msgstr "stat"

#, no-wrap
#~ msgid ""
#~ " stat path\n"
#~ "\n"
#~ msgstr ""
#~ " stat path\n"
#~ "\n"

#~ msgid "statvfs"
#~ msgstr "statvfs"

#, no-wrap
#~ msgid ""
#~ " statvfs path\n"
#~ "\n"
#~ msgstr ""
#~ " statvfs path\n"
#~ "\n"

#~ msgid "strings"
#~ msgstr "strings"

#, no-wrap
#~ msgid ""
#~ " strings path\n"
#~ "\n"
#~ msgstr ""
#~ " strings path\n"
#~ "\n"

#~ msgid "strings-e"
#~ msgstr "strings-e"

#, no-wrap
#~ msgid ""
#~ " strings-e encoding path\n"
#~ "\n"
#~ msgstr ""
#~ " strings-e encoding path\n"
#~ "\n"

#~ msgid "swapoff-device"
#~ msgstr "swapoff-device"

#, no-wrap
#~ msgid ""
#~ " swapoff-device device\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-device device\n"
#~ "\n"

#~ msgid "swapoff-file"
#~ msgstr "swapoff-file"

#, no-wrap
#~ msgid ""
#~ " swapoff-file file\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-file file\n"
#~ "\n"

#~ msgid "swapoff-label"
#~ msgstr "swapoff-label"

#, no-wrap
#~ msgid ""
#~ " swapoff-label label\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-label label\n"
#~ "\n"

#~ msgid "swapoff-uuid"
#~ msgstr "swapoff-uuid"

#, no-wrap
#~ msgid ""
#~ " swapoff-uuid uuid\n"
#~ "\n"
#~ msgstr ""
#~ " swapoff-uuid uuid\n"
#~ "\n"

#~ msgid "swapon-device"
#~ msgstr "swapon-device"

#, no-wrap
#~ msgid ""
#~ " swapon-device device\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-device device\n"
#~ "\n"

#~ msgid "swapon-file"
#~ msgstr "swapon-file"

#, no-wrap
#~ msgid ""
#~ " swapon-file file\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-file file\n"
#~ "\n"

#~ msgid "swapon-label"
#~ msgstr "swapon-label"

#, no-wrap
#~ msgid ""
#~ " swapon-label label\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-label label\n"
#~ "\n"

#~ msgid "swapon-uuid"
#~ msgstr "swapon-uuid"

#, no-wrap
#~ msgid ""
#~ " swapon-uuid uuid\n"
#~ "\n"
#~ msgstr ""
#~ " swapon-uuid uuid\n"
#~ "\n"

#~ msgid "sync"
#~ msgstr "sync"

#, no-wrap
#~ msgid ""
#~ " sync\n"
#~ "\n"
#~ msgstr ""
#~ " sync\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " syslinux device [directory:..]\n"
#~ "\n"
#~ msgstr ""
#~ " syslinux device [directory:..]\n"
#~ "\n"

#~ msgid "tail"
#~ msgstr "tail"

#, no-wrap
#~ msgid ""
#~ " tail path\n"
#~ "\n"
#~ msgstr ""
#~ " tail path\n"
#~ "\n"

#~ msgid "tail-n"
#~ msgstr "tail-n"

#, no-wrap
#~ msgid ""
#~ " tail-n nrlines path\n"
#~ "\n"
#~ msgstr ""
#~ " tail-n nrlines path\n"
#~ "\n"

#~ msgid "tar-in"
#~ msgstr "tar-in"

#~ msgid "tar-out"
#~ msgstr "tar-out"

#~ msgid "C<numericowner>"
#~ msgstr "C<numericowner>"

#~ msgid "tgz-in"
#~ msgstr "tgz-in"

#, no-wrap
#~ msgid ""
#~ " tgz-in (tarball|-) directory\n"
#~ "\n"
#~ msgstr ""
#~ " tgz-in (tarball|-) directory\n"
#~ "\n"

#~ msgid "tgz-out"
#~ msgstr "tgz-out"

#, no-wrap
#~ msgid ""
#~ " tgz-out directory (tarball|-)\n"
#~ "\n"
#~ msgstr ""
#~ " tgz-out directory (tarball|-)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " touch path\n"
#~ "\n"
#~ msgstr ""
#~ " touch path\n"
#~ "\n"

#~ msgid "truncate"
#~ msgstr "truncate"

#, no-wrap
#~ msgid ""
#~ " truncate path\n"
#~ "\n"
#~ msgstr ""
#~ " truncate path\n"
#~ "\n"

#~ msgid "truncate-size"
#~ msgstr "truncate-size"

#, no-wrap
#~ msgid ""
#~ " truncate-size path size\n"
#~ "\n"
#~ msgstr ""
#~ " truncate-size path size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " tune2fs device [force:true|false] [maxmountcount:N] [mountcount:N] [errorbehavior:..] [group:N] [intervalbetweenchecks:N] [reservedblockspercentage:N] [lastmounteddirectory:..] [reservedblockscount:N] [user:N]\n"
#~ "\n"
#~ msgstr ""
#~ " tune2fs device [force:true|false] [maxmountcount:N] [mountcount:N] [errorbehavior:..] [group:N] [intervalbetweenchecks:N] [reservedblockspercentage:N] [lastmounteddirectory:..] [reservedblockscount:N] [user:N]\n"
#~ "\n"

#~ msgid "C<maxmountcount>"
#~ msgstr "C<maxmountcount>"

#~ msgid "C<mountcount>"
#~ msgstr "C<mountcount>"

#~ msgid "C<errorbehavior>"
#~ msgstr "C<errorbehavior>"

#~ msgid "C<group>"
#~ msgstr "C<group>"

#~ msgid "C<intervalbetweenchecks>"
#~ msgstr "C<intervalbetweenchecks>"

#~ msgid "C<reservedblockspercentage>"
#~ msgstr "C<reservedblockspercentage>"

#~ msgid "C<lastmounteddirectory>"
#~ msgstr "C<lastmounteddirectory>"

#~ msgid "C<user>"
#~ msgstr "C<user>"

#~ msgid "tune2fs-l"
#~ msgstr "tune2fs-l"

#, no-wrap
#~ msgid ""
#~ " tune2fs-l device\n"
#~ "\n"
#~ msgstr ""
#~ " tune2fs-l device\n"
#~ "\n"

#~ msgid "txz-in"
#~ msgstr "txz-in"

#, no-wrap
#~ msgid ""
#~ " txz-in (tarball|-) directory\n"
#~ "\n"
#~ msgstr ""
#~ " txz-in (tarball|-) directory\n"
#~ "\n"

#~ msgid "txz-out"
#~ msgstr "txz-out"

#, no-wrap
#~ msgid ""
#~ " txz-out directory (tarball|-)\n"
#~ "\n"
#~ msgstr ""
#~ " txz-out directory (tarball|-)\n"
#~ "\n"

#~ msgid "umask"
#~ msgstr "umask"

#, no-wrap
#~ msgid ""
#~ " umask mask\n"
#~ "\n"
#~ msgstr ""
#~ " umask mask\n"
#~ "\n"

#~ msgid "umount"
#~ msgstr "umount"

#~ msgid "unmount"
#~ msgstr "unmount"

#, no-wrap
#~ msgid ""
#~ " umount pathordevice [force:true|false] [lazyunmount:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " umount pathordevice [force:true|false] [lazyunmount:true|false]\n"
#~ "\n"

#~ msgid "umount-all"
#~ msgstr "umount-all"

#~ msgid "unmount-all"
#~ msgstr "unmount-all"

#, no-wrap
#~ msgid ""
#~ " umount-all\n"
#~ "\n"
#~ msgstr ""
#~ " umount-all\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " umount-local [retry:true|false]\n"
#~ "\n"
#~ msgstr ""
#~ " umount-local [retry:true|false]\n"
#~ "\n"

#~ msgid "upload"
#~ msgstr "upload"

#, no-wrap
#~ msgid ""
#~ " upload (filename|-) remotefilename\n"
#~ "\n"
#~ msgstr ""
#~ " upload (filename|-) remotefilename\n"
#~ "\n"

#~ msgid "upload-offset"
#~ msgstr "upload-offset"

#, no-wrap
#~ msgid ""
#~ " upload-offset (filename|-) remotefilename offset\n"
#~ "\n"
#~ msgstr ""
#~ " upload-offset (filename|-) remotefilename offset\n"
#~ "\n"

#~ msgid "user-cancel"
#~ msgstr "user-cancel"

#, no-wrap
#~ msgid ""
#~ " user-cancel\n"
#~ "\n"
#~ msgstr ""
#~ " user-cancel\n"
#~ "\n"

#~ msgid "utimens"
#~ msgstr "utimens"

#, no-wrap
#~ msgid ""
#~ " utimens path atsecs atnsecs mtsecs mtnsecs\n"
#~ "\n"
#~ msgstr ""
#~ " utimens path atsecs atnsecs mtsecs mtnsecs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " utsname\n"
#~ "\n"
#~ msgstr ""
#~ " utsname\n"
#~ "\n"

#~ msgid "version"
#~ msgstr "version"

#, no-wrap
#~ msgid ""
#~ " version\n"
#~ "\n"
#~ msgstr ""
#~ " version\n"
#~ "\n"

#~ msgid "vfs-label"
#~ msgstr "vfs-label"

#, no-wrap
#~ msgid ""
#~ " vfs-label mountable\n"
#~ "\n"
#~ msgstr ""
#~ " vfs-label mountable\n"
#~ "\n"

#~ msgid "vfs-type"
#~ msgstr "vfs-type"

#, no-wrap
#~ msgid ""
#~ " vfs-type mountable\n"
#~ "\n"
#~ msgstr ""
#~ " vfs-type mountable\n"
#~ "\n"

#~ msgid "vfs-uuid"
#~ msgstr "vfs-uuid"

#, no-wrap
#~ msgid ""
#~ " vfs-uuid mountable\n"
#~ "\n"
#~ msgstr ""
#~ " vfs-uuid mountable\n"
#~ "\n"

#~ msgid "vg-activate"
#~ msgstr "vg-activate"

#, no-wrap
#~ msgid ""
#~ " vg-activate true|false 'volgroups ...'\n"
#~ "\n"
#~ msgstr ""
#~ " vg-activate true|false 'volgroups ...'\n"
#~ "\n"

#~ msgid "vg-activate-all"
#~ msgstr "vg-activate-all"

#, no-wrap
#~ msgid ""
#~ " vg-activate-all true|false\n"
#~ "\n"
#~ msgstr ""
#~ " vg-activate-all true|false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgchange-uuid vg\n"
#~ "\n"
#~ msgstr ""
#~ " vgchange-uuid vg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgchange-uuid-all\n"
#~ "\n"
#~ msgstr ""
#~ " vgchange-uuid-all\n"
#~ "\n"

#~ msgid "vgcreate"
#~ msgstr "vgcreate"

#, no-wrap
#~ msgid ""
#~ " vgcreate volgroup 'physvols ...'\n"
#~ "\n"
#~ msgstr ""
#~ " vgcreate volgroup 'physvols ...'\n"
#~ "\n"

#~ msgid "vglvuuids"
#~ msgstr "vglvuuids"

#, no-wrap
#~ msgid ""
#~ " vglvuuids vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vglvuuids vgname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgmeta vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vgmeta vgname\n"
#~ "\n"

#~ msgid "vgpvuuids"
#~ msgstr "vgpvuuids"

#, no-wrap
#~ msgid ""
#~ " vgpvuuids vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vgpvuuids vgname\n"
#~ "\n"

#~ msgid "vgremove"
#~ msgstr "vgremove"

#, no-wrap
#~ msgid ""
#~ " vgremove vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vgremove vgname\n"
#~ "\n"

#~ msgid "vgrename"
#~ msgstr "vgrename"

#, no-wrap
#~ msgid ""
#~ " vgrename volgroup newvolgroup\n"
#~ "\n"
#~ msgstr ""
#~ " vgrename volgroup newvolgroup\n"
#~ "\n"

#~ msgid "vgs"
#~ msgstr "vgs"

#, no-wrap
#~ msgid ""
#~ " vgs\n"
#~ "\n"
#~ msgstr ""
#~ " vgs\n"
#~ "\n"

#~ msgid "vgs-full"
#~ msgstr "vgs-full"

#, no-wrap
#~ msgid ""
#~ " vgs-full\n"
#~ "\n"
#~ msgstr ""
#~ " vgs-full\n"
#~ "\n"

#~ msgid "vgscan"
#~ msgstr "vgscan"

#, no-wrap
#~ msgid ""
#~ " vgscan\n"
#~ "\n"
#~ msgstr ""
#~ " vgscan\n"
#~ "\n"

#~ msgid "vguuid"
#~ msgstr "vguuid"

#, no-wrap
#~ msgid ""
#~ " vguuid vgname\n"
#~ "\n"
#~ msgstr ""
#~ " vguuid vgname\n"
#~ "\n"

#~ msgid "wc-c"
#~ msgstr "wc-c"

#, no-wrap
#~ msgid ""
#~ " wc-c path\n"
#~ "\n"
#~ msgstr ""
#~ " wc-c path\n"
#~ "\n"

#~ msgid "wc-l"
#~ msgstr "wc-l"

#, no-wrap
#~ msgid ""
#~ " wc-l path\n"
#~ "\n"
#~ msgstr ""
#~ " wc-l path\n"
#~ "\n"

#~ msgid "wc-w"
#~ msgstr "wc-w"

#, no-wrap
#~ msgid ""
#~ " wc-w path\n"
#~ "\n"
#~ msgstr ""
#~ " wc-w path\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " wipefs device\n"
#~ "\n"
#~ msgstr ""
#~ " wipefs device\n"
#~ "\n"

#~ msgid "write"
#~ msgstr "write"

#, no-wrap
#~ msgid ""
#~ " write path content\n"
#~ "\n"
#~ msgstr ""
#~ " write path content\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " write-append path content\n"
#~ "\n"
#~ msgstr ""
#~ " write-append path content\n"
#~ "\n"

#~ msgid "write-file"
#~ msgstr "write-file"

#, no-wrap
#~ msgid ""
#~ " write-file path content size\n"
#~ "\n"
#~ msgstr ""
#~ " write-file path content size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " xfs-admin device [extunwritten:true|false] [imgfile:true|false] [v2log:true|false] [projid32bit:true|false] [lazycounter:true|false] [label:..] [uuid:..]\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-admin device [extunwritten:true|false] [imgfile:true|false] [v2log:true|false] [projid32bit:true|false] [lazycounter:true|false] [label:..] [uuid:..]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " xfs-growfs path [datasec:true|false] [logsec:true|false] [rtsec:true|false] [datasize:N] [logsize:N] [rtsize:N] [rtextsize:N] [maxpct:N]\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-growfs path [datasec:true|false] [logsec:true|false] [rtsec:true|false] [datasize:N] [logsize:N] [rtsize:N] [rtextsize:N] [maxpct:N]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " xfs-info pathordevice\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-info pathordevice\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " xfs-repair device [forcelogzero:true|false] [nomodify:true|false] [noprefetch:true|false] [forcegeometry:true|false] [maxmem:N] [ihashsize:N] [bhashsize:N] [agstride:N] [logdev:..] [rtdev:..]\n"
#~ "\n"
#~ msgstr ""
#~ " xfs-repair device [forcelogzero:true|false] [nomodify:true|false] [noprefetch:true|false] [forcegeometry:true|false] [maxmem:N] [ihashsize:N] [bhashsize:N] [agstride:N] [logdev:..] [rtdev:..]\n"
#~ "\n"

#~ msgid "zegrep"
#~ msgstr "zegrep"

#, no-wrap
#~ msgid ""
#~ " zegrep regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zegrep regex path\n"
#~ "\n"

#~ msgid "zegrepi"
#~ msgstr "zegrepi"

#, no-wrap
#~ msgid ""
#~ " zegrepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zegrepi regex path\n"
#~ "\n"

#~ msgid "zero"
#~ msgstr "zero"

#, no-wrap
#~ msgid ""
#~ " zero device\n"
#~ "\n"
#~ msgstr ""
#~ " zero device\n"
#~ "\n"

#~ msgid "zero-device"
#~ msgstr "zero-device"

#, no-wrap
#~ msgid ""
#~ " zero-device device\n"
#~ "\n"
#~ msgstr ""
#~ " zero-device device\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " zero-free-space directory\n"
#~ "\n"
#~ msgstr ""
#~ " zero-free-space directory\n"
#~ "\n"

#~ msgid "zerofree"
#~ msgstr "zerofree"

#, no-wrap
#~ msgid ""
#~ " zerofree device\n"
#~ "\n"
#~ msgstr ""
#~ " zerofree device\n"
#~ "\n"

#~ msgid "zfgrep"
#~ msgstr "zfgrep"

#, no-wrap
#~ msgid ""
#~ " zfgrep pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " zfgrep pattern path\n"
#~ "\n"

#~ msgid "zfgrepi"
#~ msgstr "zfgrepi"

#, no-wrap
#~ msgid ""
#~ " zfgrepi pattern path\n"
#~ "\n"
#~ msgstr ""
#~ " zfgrepi pattern path\n"
#~ "\n"

#~ msgid "zfile"
#~ msgstr "zfile"

#, no-wrap
#~ msgid ""
#~ " zfile meth path\n"
#~ "\n"
#~ msgstr ""
#~ " zfile meth path\n"
#~ "\n"

#~ msgid "zgrep"
#~ msgstr "zgrep"

#, no-wrap
#~ msgid ""
#~ " zgrep regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zgrep regex path\n"
#~ "\n"

#~ msgid "zgrepi"
#~ msgstr "zgrepi"

#, no-wrap
#~ msgid ""
#~ " zgrepi regex path\n"
#~ "\n"
#~ msgstr ""
#~ " zgrepi regex path\n"
#~ "\n"

#~ msgid "alloc"
#~ msgstr "alloc"

#~ msgid "allocate"
#~ msgstr "allocate"

#, no-wrap
#~ msgid ""
#~ " alloc filename size\n"
#~ "\n"
#~ msgstr ""
#~ " alloc filename size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " copy-in local [local ...] /remotedir\n"
#~ "\n"
#~ msgstr ""
#~ " copy-in local [local ...] /remotedir\n"
#~ "\n"

#~ msgid "copy-out"
#~ msgstr "copy-out"

#, no-wrap
#~ msgid ""
#~ " copy-out remote [remote ...] localdir\n"
#~ "\n"
#~ msgstr ""
#~ " copy-out remote [remote ...] localdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " copy-out /home .\n"
#~ "\n"
#~ msgstr ""
#~ " copy-out /home .\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " glob copy-out /home/* .\n"
#~ "\n"
#~ msgstr ""
#~ " glob copy-out /home/* .\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " delete-event name\n"
#~ "\n"
#~ msgstr ""
#~ " delete-event name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " display filename\n"
#~ "\n"
#~ msgstr ""
#~ " display filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export GUESTFISH_DISPLAY_IMAGE=eog\n"
#~ "\n"
#~ msgstr ""
#~ " export GUESTFISH_DISPLAY_IMAGE=eog\n"
#~ "\n"

#~ msgid "echo"
#~ msgstr "echo"

#, no-wrap
#~ msgid ""
#~ " echo [params ...]\n"
#~ "\n"
#~ msgstr ""
#~ " echo [params ...]\n"
#~ "\n"

#~ msgid "edit"
#~ msgstr "edit"

#~ msgid "vi"
#~ msgstr "vi"

#~ msgid "emacs"
#~ msgstr "emacs"

#, no-wrap
#~ msgid ""
#~ " edit filename\n"
#~ "\n"
#~ msgstr ""
#~ " edit filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " event name eventset \"shell script ...\"\n"
#~ "\n"
#~ msgstr ""
#~ " event name eventset \"shell script ...\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " event \"\" close \"echo closed\"\n"
#~ " event messages appliance,library,trace \"echo $@\"\n"
#~ " event \"\" progress \"echo progress: $3/$4\"\n"
#~ " event \"\" * \"echo $EVENT $@\"\n"
#~ "\n"
#~ msgstr ""
#~ " event \"\" close \"echo closed\"\n"
#~ " event messages appliance,library,trace \"echo $@\"\n"
#~ " event \"\" progress \"echo progress: $3/$4\"\n"
#~ " event \"\" * \"echo $EVENT $@\"\n"
#~ "\n"

#~ msgid "glob"
#~ msgstr "glob"

#, no-wrap
#~ msgid ""
#~ " glob command args...\n"
#~ "\n"
#~ msgstr ""
#~ " glob command args...\n"
#~ "\n"

#~ msgid "hexedit"
#~ msgstr "hexedit"

#, no-wrap
#~ msgid ""
#~ " hexedit <filename|device>\n"
#~ " hexedit <filename|device> <max>\n"
#~ " hexedit <filename|device> <start> <max>\n"
#~ "\n"
#~ msgstr ""
#~ " hexedit <filename|device>\n"
#~ " hexedit <filename|device> <max>\n"
#~ " hexedit <filename|device> <start> <max>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexedit /dev/sda 1M\n"
#~ "\n"
#~ msgstr ""
#~ " hexedit /dev/sda 1M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexedit /dev/sda1 0x400 0x400\n"
#~ "\n"
#~ msgstr ""
#~ " hexedit /dev/sda1 0x400 0x400\n"
#~ "\n"

#~ msgid "lcd"
#~ msgstr "lcd"

#, no-wrap
#~ msgid ""
#~ " lcd directory\n"
#~ "\n"
#~ msgstr ""
#~ " lcd directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " list-events\n"
#~ "\n"
#~ msgstr ""
#~ " list-events\n"
#~ "\n"

#~ msgid "man"
#~ msgstr "man"

#~ msgid "manual"
#~ msgstr "manual"

#, no-wrap
#~ msgid ""
#~ "  man\n"
#~ "\n"
#~ msgstr ""
#~ "  man\n"
#~ "\n"

#~ msgid "more"
#~ msgstr "more"

#, no-wrap
#~ msgid ""
#~ " more filename\n"
#~ "\n"
#~ msgstr ""
#~ " more filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " less filename\n"
#~ "\n"
#~ msgstr ""
#~ " less filename\n"
#~ "\n"

#~ msgid "reopen"
#~ msgstr "reopen"

#, no-wrap
#~ msgid ""
#~ "  reopen\n"
#~ "\n"
#~ msgstr ""
#~ "  reopen\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  setenv VAR value\n"
#~ "\n"
#~ msgstr ""
#~ "  setenv VAR value\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " !echo $VAR\n"
#~ "\n"
#~ msgstr ""
#~ " !echo $VAR\n"
#~ "\n"

#~ msgid "sparse"
#~ msgstr "sparse"

#, no-wrap
#~ msgid ""
#~ " sparse filename size\n"
#~ "\n"
#~ msgstr ""
#~ " sparse filename size\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " supported\n"
#~ "\n"
#~ msgstr ""
#~ " supported\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " time command args...\n"
#~ "\n"
#~ msgstr ""
#~ " time command args...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  unsetenv VAR\n"
#~ "\n"
#~ msgstr ""
#~ "  unsetenv VAR\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--options] [commands]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--options] [commands]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro|--rw] -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro|--rw] -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro|--rw] -a disk.img -m dev[:mountpoint]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -d libvirt-domain\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -d libvirt-domain\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro|--rw] -a disk.img -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro|--rw] -a disk.img -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -d libvirt-domain -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -d libvirt-domain -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ guestfish\n"
#~ " \n"
#~ msgstr ""
#~ " $ guestfish\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " Welcome to guestfish, the guest filesystem shell for\n"
#~ " editing virtual machine filesystems.\n"
#~ " \n"
#~ msgstr ""
#~ " Welcome to guestfish, the guest filesystem shell for\n"
#~ " editing virtual machine filesystems.\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " Type: 'help' for a list of commands\n"
#~ "       'man' to read the manual\n"
#~ "       'quit' to quit the shell\n"
#~ " \n"
#~ msgstr ""
#~ " Type: 'help' for a list of commands\n"
#~ "       'man' to read the manual\n"
#~ "       'quit' to quit the shell\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " ><fs> add-ro disk.img\n"
#~ " ><fs> run\n"
#~ " ><fs> list-filesystems\n"
#~ " /dev/sda1: ext4\n"
#~ " /dev/vg_guest/lv_root: ext4\n"
#~ " /dev/vg_guest/lv_swap: swap\n"
#~ " ><fs> mount /dev/vg_guest/lv_root /\n"
#~ " ><fs> cat /etc/fstab\n"
#~ " # /etc/fstab\n"
#~ " # Created by anaconda\n"
#~ " [...]\n"
#~ " ><fs> exit\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> add-ro disk.img\n"
#~ " ><fs> run\n"
#~ " ><fs> list-filesystems\n"
#~ " /dev/sda1: ext4\n"
#~ " /dev/vg_guest/lv_root: ext4\n"
#~ " /dev/vg_guest/lv_swap: swap\n"
#~ " ><fs> mount /dev/vg_guest/lv_root /\n"
#~ " ><fs> cat /etc/fstab\n"
#~ " # /etc/fstab\n"
#~ " # Created by anaconda\n"
#~ " [...]\n"
#~ " ><fs> exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish <<_EOF_\n"
#~ " add disk.img\n"
#~ " run\n"
#~ " mount /dev/vg_guest/lv_root /\n"
#~ " write /etc/motd \"Welcome, new users\"\n"
#~ " _EOF_\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish <<_EOF_\n"
#~ " add disk.img\n"
#~ " run\n"
#~ " mount /dev/vg_guest/lv_root /\n"
#~ " write /etc/motd \"Welcome, new users\"\n"
#~ " _EOF_\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " lvs\n"
#~ " _EOF_\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " lvs\n"
#~ " _EOF_\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " list-filesystems\n"
#~ " _EOF_\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a disk.img --ro <<_EOF_\n"
#~ " run\n"
#~ " list-filesystems\n"
#~ " _EOF_\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish \\\n"
#~ "   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
#~ "   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish \\\n"
#~ "   add disk.img : run : mount /dev/vg_guest/lv_root / : \\\n"
#~ "   write /etc/resolv.conf \"nameserver 1.2.3.4\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw --add disk.img \\\n"
#~ "   --mount /dev/vg_guest/lv_root \\\n"
#~ "   --mount /dev/sda1:/boot \\\n"
#~ "   edit /boot/grub/grub.conf\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw --add disk.img \\\n"
#~ "   --mount /dev/vg_guest/lv_root \\\n"
#~ "   --mount /dev/sda1:/boot \\\n"
#~ "   edit /boot/grub/grub.conf\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a disk.img -i cat /etc/group\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a disk.img -i cat /etc/group\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d libvirt-domain -i cat /etc/group\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d libvirt-domain -i cat /etc/group\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a disk.img -i edit /boot/grub/grub.conf\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #!/usr/bin/guestfish -f\n"
#~ " sparse test1.img 100M\n"
#~ " run\n"
#~ " part-disk /dev/sda mbr\n"
#~ " mkfs ext2 /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " #!/usr/bin/guestfish -f\n"
#~ " sparse test1.img 100M\n"
#~ " run\n"
#~ " part-disk /dev/sda mbr\n"
#~ " mkfs ext2 /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N fs\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N fs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N help | less\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N help | less\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " guestfish --remote add-ro disk.img\n"
#~ " guestfish --remote run\n"
#~ " guestfish --remote lvs\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " guestfish --remote add-ro disk.img\n"
#~ " guestfish --remote run\n"
#~ " guestfish --remote lvs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #!/usr/bin/guestfish -f\n"
#~ "\n"
#~ msgstr ""
#~ " #!/usr/bin/guestfish -f\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -d myguest -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -d myguest -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -d myguest -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -d myguest -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --rw -a /dev/Guests/MyGuest -i\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --rw -a /dev/Guests/MyGuest -i\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro] -i disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro] -i disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish [--ro] -i libvirt-domain\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish [--ro] -i libvirt-domain\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> command_with_lots_of_output | head\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> command_with_lots_of_output | head\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish cmd [args...] : cmd [args...] : cmd [args...] ...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add \"file with a space.img\"\n"
#~ "\n"
#~ msgstr ""
#~ " add \"file with a space.img\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm '/file name'\n"
#~ "\n"
#~ msgstr ""
#~ " rm '/file name'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm '/\"'\n"
#~ "\n"
#~ msgstr ""
#~ " rm '/\"'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
#~ " command \"/bin/echo 'foo      bar'\"\n"
#~ " command \"/bin/echo \\'foo\\'\"\n"
#~ "\n"
#~ msgstr ""
#~ " vgcreate VG \"/dev/sda1 /dev/sdb1\"\n"
#~ " command \"/bin/echo 'foo      bar'\"\n"
#~ " command \"/bin/echo \\'foo\\'\"\n"
#~ "\n"

#~ msgid "C<\\a>"
#~ msgstr "C<\\a>"

#~ msgid "C<\\b>"
#~ msgstr "C<\\b>"

#~ msgid "C<\\f>"
#~ msgstr "C<\\f>"

#~ msgid "C<\\n>"
#~ msgstr "C<\\n>"

#~ msgid "C<\\r>"
#~ msgstr "C<\\r>"

#~ msgid "C<\\t>"
#~ msgstr "C<\\t>"

#~ msgid "C<\\v>"
#~ msgstr "C<\\v>"

#~ msgid "C<\\\">"
#~ msgstr "C<\\\">"

#~ msgid "C<\\ooo>"
#~ msgstr "C<\\ooo>"

#~ msgid "C<\\xhh>"
#~ msgstr "C<\\xhh>"

#~ msgid "C<\\\\>"
#~ msgstr "C<\\\\>"

#, no-wrap
#~ msgid ""
#~ " add filename\n"
#~ "\n"
#~ msgstr ""
#~ " add filename\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add filename readonly:true\n"
#~ "\n"
#~ msgstr ""
#~ " add filename readonly:true\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " add filename format:qcow2 readonly:false\n"
#~ "\n"
#~ msgstr ""
#~ " add filename format:qcow2 readonly:false\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " truncate-size /file 1G\n"
#~ "\n"
#~ msgstr ""
#~ " truncate-size /file 1G\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " 1234      decimal number 1234\n"
#~ " 02322     octal number, equivalent to decimal 1234\n"
#~ " 0x4d2     hexadecimal number, equivalent to decimal 1234\n"
#~ "\n"
#~ msgstr ""
#~ " 1234      decimal number 1234\n"
#~ " 02322     octal number, equivalent to decimal 1234\n"
#~ " 0x4d2     hexadecimal number, equivalent to decimal 1234\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " chmod 0777 /public  # OK\n"
#~ " chmod 777 /public   # WRONG! This is mode 777 decimal = 01411 octal.\n"
#~ "\n"
#~ msgstr ""
#~ " chmod 0777 /public  # OK\n"
#~ " chmod 777 /public   # WRONG! This is mode 777 decimal = 01411 octal.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm-rf /home/*\n"
#~ "\n"
#~ msgstr ""
#~ " rm-rf /home/*\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " glob rm-rf /home/*\n"
#~ "\n"
#~ msgstr ""
#~ " glob rm-rf /home/*\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " rm-rf /home/jim\n"
#~ " rm-rf /home/joe\n"
#~ " rm-rf /home/mary\n"
#~ "\n"
#~ msgstr ""
#~ " rm-rf /home/jim\n"
#~ " rm-rf /home/joe\n"
#~ " rm-rf /home/mary\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # this is a comment\n"
#~ "         # this is a comment\n"
#~ " foo # NOT a comment\n"
#~ "\n"
#~ msgstr ""
#~ " # this is a comment\n"
#~ "         # this is a comment\n"
#~ " foo # NOT a comment\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " !mkdir local\n"
#~ " tgz-out /remote local/remote-data.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " !mkdir local\n"
#~ " tgz-out /remote local/remote-data.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
#~ "\n"
#~ msgstr ""
#~ " <! for n in `seq 1 100`; do echo write /foo.$n $n; done\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
#~ "\n"
#~ msgstr ""
#~ " <! for n in `seq 1 100`; do printf \"write /foo.%03d %d\\n\" $n $n; done\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
#~ "\n"
#~ msgstr ""
#~ " cat /etc/passwd | awk -F: '$3 == 0 { print }'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " hexdump /bin/ls | head\n"
#~ " list-devices | tail -1\n"
#~ " tgz-out / - | tar ztf -\n"
#~ "\n"
#~ msgstr ""
#~ " hexdump /bin/ls | head\n"
#~ " list-devices | tail -1\n"
#~ " tgz-out / - | tar ztf -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " echo \"|\"\n"
#~ "\n"
#~ msgstr ""
#~ " echo \"|\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " echo \"~\"\n"
#~ "\n"
#~ msgstr ""
#~ " echo \"~\"\n"
#~ "\n"

#~ msgid "ENCRYPTED DISKS"
#~ msgstr "DISQUES CHIFFRÉS"

#, no-wrap
#~ msgid ""
#~ " ><fs> vfs-type /dev/sda2\n"
#~ " crypto_LUKS\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> vfs-type /dev/sda2\n"
#~ " crypto_LUKS\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> luks-open /dev/sda2 luksdev\n"
#~ " Enter key or passphrase (\"key\"): <enter the passphrase>\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> luks-open /dev/sda2 luksdev\n"
#~ " Enter key or passphrase (\"key\"): <enter the passphrase>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vgscan\n"
#~ " vg-activate-all true\n"
#~ "\n"
#~ msgstr ""
#~ " vgscan\n"
#~ " vg-activate-all true\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " vg-activate false /dev/VG\n"
#~ " luks-close /dev/mapper/luksdev\n"
#~ "\n"
#~ msgstr ""
#~ " vg-activate false /dev/VG\n"
#~ " luks-close /dev/mapper/luksdev\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file /WINDOWS/system32/config/system.LOG\n"
#~ "\n"
#~ msgstr ""
#~ " file /WINDOWS/system32/config/system.LOG\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file win:\\windows\\system32\\config\\system.log\n"
#~ "\n"
#~ msgstr ""
#~ " file win:\\windows\\system32\\config\\system.log\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
#~ "\n"
#~ msgstr ""
#~ " file WIN:C:\\Windows\\SYSTEM32\\CONFIG\\SYSTEM.LOG\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " win:e:\\foo\\bar => /e/FOO/bar\n"
#~ "\n"
#~ msgstr ""
#~ " win:e:\\foo\\bar => /e/FOO/bar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " upload - /foo\n"
#~ "\n"
#~ msgstr ""
#~ " upload - /foo\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " tar-out /etc - | tar tf -\n"
#~ "\n"
#~ msgstr ""
#~ " tar-out /etc - | tar tf -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " upload -<<END /foo\n"
#~ " input line 1\n"
#~ " input line 2\n"
#~ " input line 3\n"
#~ " END\n"
#~ "\n"
#~ msgstr ""
#~ " upload -<<END /foo\n"
#~ " input line 1\n"
#~ " input line 2\n"
#~ " input line 3\n"
#~ " END\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen`\"\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen`\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote cmd [...]\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote cmd [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid1=$GUESTFISH_PID\n"
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid2=$GUESTFISH_PID\n"
#~ " ...\n"
#~ " guestfish --remote=$pid1 cmd\n"
#~ " guestfish --remote=$pid2 cmd\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid1=$GUESTFISH_PID\n"
#~ " eval \"`guestfish --listen`\"\n"
#~ " pid2=$GUESTFISH_PID\n"
#~ " ...\n"
#~ " guestfish --remote=$pid1 cmd\n"
#~ " guestfish --remote=$pid2 cmd\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eval \"`guestfish --listen --csh`\"\n"
#~ "\n"
#~ msgstr ""
#~ " eval \"`guestfish --listen --csh`\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish[0]=\"guestfish\"\n"
#~ " guestfish[1]=\"--listen\"\n"
#~ " guestfish[2]=\"--ro\"\n"
#~ " guestfish[3]=\"-a\"\n"
#~ " guestfish[4]=\"disk.img\"\n"
#~ " \n"
#~ msgstr ""
#~ " guestfish[0]=\"guestfish\"\n"
#~ " guestfish[1]=\"--listen\"\n"
#~ " guestfish[2]=\"--ro\"\n"
#~ " guestfish[3]=\"-a\"\n"
#~ " guestfish[4]=\"disk.img\"\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " GUESTFISH_PID=\n"
#~ " eval $(\"${guestfish[@]}\")\n"
#~ " if [ -z \"$GUESTFISH_PID\" ]; then\n"
#~ "     echo \"error: guestfish didn't start up, see error messages above\"\n"
#~ "     exit 1\n"
#~ " fi\n"
#~ " \n"
#~ msgstr ""
#~ " GUESTFISH_PID=\n"
#~ " eval $(\"${guestfish[@]}\")\n"
#~ " if [ -z \"$GUESTFISH_PID\" ]; then\n"
#~ "     echo \"error: guestfish didn't start up, see error messages above\"\n"
#~ "     exit 1\n"
#~ " fi\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " cleanup_guestfish ()\n"
#~ " {\n"
#~ "     guestfish --remote -- exit >/dev/null 2>&1 ||:\n"
#~ " }\n"
#~ " trap cleanup_guestfish EXIT ERR\n"
#~ " \n"
#~ msgstr ""
#~ " cleanup_guestfish ()\n"
#~ " {\n"
#~ "     guestfish --remote -- exit >/dev/null 2>&1 ||:\n"
#~ " }\n"
#~ " trap cleanup_guestfish EXIT ERR\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote -- run\n"
#~ " \n"
#~ msgstr ""
#~ " guestfish --remote -- run\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # ...\n"
#~ "\n"
#~ msgstr ""
#~ " # ...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote --add disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote --add disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote add-drive disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote add-drive disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --remote\n"
#~ " ><fs> add disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --remote\n"
#~ " ><fs> add disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " a=`guestfish --remote run`\n"
#~ "\n"
#~ msgstr ""
#~ " a=`guestfish --remote run`\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N fs:ext4\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N fs:ext4\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N fs:vfat:32M -m /dev/sda1\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N fs:vfat:32M -m /dev/sda1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N disk:200M\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N disk:200M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -N blankdisk.img=disk:200M\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -N blankdisk.img=disk:200M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -a ssh://root@example.com/disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -a ssh://root@example.com/disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> add /disk.img protocol:ssh server:tcp:example.com username:root\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> add /disk.img protocol:ssh server:tcp:example.com username:root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> add /disk.img protocol:(ftp|...) server:tcp:example.com\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> add /disk.img protocol:(ftp|...) server:tcp:example.com\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> add \"\" protocol:nbd server:[tcp:example.com|unix:/socket]\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> add \"\" protocol:nbd server:[tcp:example.com|unix:/socket]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> add /disk protocol:ssh server:tcp:example.com [username:user]\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> add /disk protocol:ssh server:tcp:example.com [username:user]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> copy-size /large-file /another-file 2048M\n"
#~ " / 10% [#####-----------------------------------------] 00:30\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> copy-size /large-file /another-file 2048M\n"
#~ " / 10% [#####-----------------------------------------] 00:30\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ GUESTFISH_PS1='(type a command) '\n"
#~ " $ export GUESTFISH_PS1\n"
#~ " $ guestfish\n"
#~ " [...]\n"
#~ " (type a command) ▂\n"
#~ "\n"
#~ msgstr ""
#~ " $ GUESTFISH_PS1='(type a command) '\n"
#~ " $ export GUESTFISH_PS1\n"
#~ " $ guestfish\n"
#~ " [...]\n"
#~ " (type a command) ▂\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFISH_PS1='\\[\\e[1;30m\\]><fs>\\[\\e[0;30m\\] '\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFISH_PS1='\\[\\e[1;30m\\]><fs>\\[\\e[0;30m\\] '\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " LIBGUESTFS_MEMSIZE=700\n"
#~ "\n"
#~ msgstr ""
#~ " LIBGUESTFS_MEMSIZE=700\n"
#~ "\n"

#~ msgid "PATH"
#~ msgstr "CHEMIN"

#, no-wrap
#~ msgid ""
#~ " $if guestfish\n"
#~ " ...\n"
#~ " $endif\n"
#~ "\n"
#~ msgstr ""
#~ " $if guestfish\n"
#~ " ...\n"
#~ " $endif\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " set completion-ignore-case off\n"
#~ "\n"
#~ msgstr ""
#~ " set completion-ignore-case off\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -a disk.img file|dir [file|dir ...] /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -a disk.img file|dir [file|dir ...] /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d domain file|dir [file|dir ...] /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d domain file|dir [file|dir ...] /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d MyGuest resolv.conf /etc\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d MyGuest resolv.conf /etc\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-in -d MyGuest skel /home\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-in -d MyGuest skel /home\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -a disk.img /file|dir [/file|dir ...] localdir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -a disk.img /file|dir [/file|dir ...] localdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-copy-out -d domain /file|dir [/file|dir ...] localdir\n"
#~ "\n"
#~ msgstr ""
#~ " virt-copy-out -d domain /file|dir [/file|dir ...] localdir\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mkdir homes\n"
#~ " virt-copy-out -d MyGuest /home homes\n"
#~ "\n"
#~ msgstr ""
#~ " mkdir homes\n"
#~ " virt-copy-out -d MyGuest /home homes\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-in -a disk.img data.tar /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-in -a disk.img data.tar /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-in -d domain data.tar /destination\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-in -d domain data.tar /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " zcat data.tar.gz | virt-tar-in -d domain - /destination\n"
#~ "\n"
#~ msgstr ""
#~ " zcat data.tar.gz | virt-tar-in -d domain - /destination\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-in -d MyGuest homes.tar /home\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-in -d MyGuest homes.tar /home\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -a disk.img /dir files.tar\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -a disk.img /dir files.tar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d domain /dir files.tar\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d domain /dir files.tar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d domain /dir - | gzip --best > files.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d domain /dir - | gzip --best > files.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar-out -d MyGuest /home - | gzip --best > homes.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar-out -d MyGuest /home - | gzip --best > homes.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-format [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-format -a disk.qcow\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format -a disk.qcow\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-format -a /dev/VG/LV\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format -a /dev/VG/LV\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-format --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-format --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-format --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [--options] -a disk.img -m device [--ro] mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [--options] -a disk.img -i [--ro] mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [--options] -d Guest -i [--ro] mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [--options] -d Guest -i [--ro] mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a windows.img -m /dev/sda1 --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a linux.img -m /dev/VG/LV -m /dev/sda1:/boot --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a guest.img -i --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a guest.img -i --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -d Guest -i --ro /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -d Guest -i --ro /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems -d MyGuest\n"
#~ "\n"
#~ msgstr ""
#~ " virt-filesystems -d MyGuest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [...] --trace /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [...] --trace /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount [...] --trace --verbose /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount [...] --trace --verbose /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestunmount /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " guestunmount /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " sudo guestmount [...] -o allow_other /mnt\n"
#~ "\n"
#~ msgstr ""
#~ " sudo guestmount [...] -o allow_other /mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a disk.img -i /mnt\n"
#~ " # copy things into /mnt\n"
#~ " guestunmount /mnt\n"
#~ " # immediately try to use 'disk.img' ** UNSAFE **\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount -a disk.img -i /mnt\n"
#~ " # copy things into /mnt\n"
#~ " guestunmount /mnt\n"
#~ " # immediately try to use 'disk.img' ** UNSAFE **\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount -a disk.img -i --pid-file guestmount.pid /mnt\n"
#~ " \n"
#~ msgstr ""
#~ " guestmount -a disk.img -i --pid-file guestmount.pid /mnt\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # ...\n"
#~ " # ...\n"
#~ " \n"
#~ msgstr ""
#~ " # ...\n"
#~ " # ...\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Save the PID of guestmount *before* calling guestunmount.\n"
#~ " pid=\"$(cat guestmount.pid)\"\n"
#~ " \n"
#~ msgstr ""
#~ " # Save the PID of guestmount *before* calling guestunmount.\n"
#~ " pid=\"$(cat guestmount.pid)\"\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Unmount the filesystem.\n"
#~ " guestunmount /mnt\n"
#~ " \n"
#~ msgstr ""
#~ " # Unmount the filesystem.\n"
#~ " guestunmount /mnt\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " timeout=10\n"
#~ " \n"
#~ msgstr ""
#~ " timeout=10\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " count=$timeout\n"
#~ " while kill -0 \"$pid\" 2>/dev/null && [ $count -gt 0 ]; do\n"
#~ "     sleep 1\n"
#~ "     ((count--))\n"
#~ " done\n"
#~ " if [ $count -eq 0 ]; then\n"
#~ "     echo \"$0: wait for guestmount to exit failed after $timeout seconds\"\n"
#~ "     exit 1\n"
#~ " fi\n"
#~ " \n"
#~ msgstr ""
#~ " count=$timeout\n"
#~ " while kill -0 \"$pid\" 2>/dev/null && [ $count -gt 0 ]; do\n"
#~ "     sleep 1\n"
#~ "     ((count--))\n"
#~ " done\n"
#~ " if [ $count -eq 0 ]; then\n"
#~ "     echo \"$0: wait for guestmount to exit failed after $timeout seconds\"\n"
#~ "     exit 1\n"
#~ " fi\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Now it is safe to use the disk image.\n"
#~ "\n"
#~ msgstr ""
#~ " # Now it is safe to use the disk image.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestmount --fuse-help\n"
#~ "\n"
#~ msgstr ""
#~ " guestmount --fuse-help\n"
#~ "\n"

#~ msgid "B<--trace>"
#~ msgstr "B<--trace>"

#, no-wrap
#~ msgid ""
#~ " guestunmount mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestunmount mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestunmount --fd=<FD> mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestunmount --fd=<FD> mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestunmount --fd=FD mountpoint\n"
#~ "\n"
#~ msgstr ""
#~ " guestunmount --fd=FD mountpoint\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " trap \"guestunmount mountpoint\" EXIT INT QUIT TERM\n"
#~ "\n"
#~ msgstr ""
#~ " trap \"guestunmount mountpoint\" EXIT INT QUIT TERM\n"
#~ "\n"

#~ msgid "C<PATH>"
#~ msgstr "C<PATH>"

#~ msgid "C<2>"
#~ msgstr "C<2>"

#~ msgid "C<3>"
#~ msgstr "C<3>"

#, no-wrap
#~ msgid ""
#~ " import \"libguestfs.org/guestfs\"\n"
#~ " \n"
#~ msgstr ""
#~ " import \"libguestfs.org/guestfs\"\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " g, errno := guestfs.Create ()\n"
#~ " if errno != nil {\n"
#~ "     panic (fmt.Sprintf (\"could not create handle: %s\", errno))\n"
#~ " }\n"
#~ " defer g.Close ()\n"
#~ " if err := g.Add_drive (\"test.img\"); err != nil {\n"
#~ "     panic (err)\n"
#~ " }\n"
#~ " if err := g.Launch (); err != nil {\n"
#~ "     panic (err)\n"
#~ " }\n"
#~ " if err := g.Shutdown (); err != nil {\n"
#~ "     panic (err)\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " g, errno := guestfs.Create ()\n"
#~ " if errno != nil {\n"
#~ "     panic (fmt.Sprintf (\"could not create handle: %s\", errno))\n"
#~ " }\n"
#~ " defer g.Close ()\n"
#~ " if err := g.Add_drive (\"test.img\"); err != nil {\n"
#~ "     panic (err)\n"
#~ " }\n"
#~ " if err := g.Launch (); err != nil {\n"
#~ "     panic (err)\n"
#~ " }\n"
#~ " if err := g.Shutdown (); err != nil {\n"
#~ "     panic (err)\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector guestname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector guestname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <mountpoints>\n"
#~ "       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
#~ "       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
#~ "     </mountpoints>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <mountpoints>\n"
#~ "       <mountpoint dev=\"/dev/vg_f13x64/lv_root\">/</mountpoint>\n"
#~ "       <mountpoint dev=\"/dev/sda1\">/boot</mountpoint>\n"
#~ "     </mountpoints>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <filesystems>\n"
#~ "       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "         <type>ext4</type>\n"
#~ "         <label>Fedora-13-x86_64</label>\n"
#~ "         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
#~ "       </filesystem>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <filesystems>\n"
#~ "       <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "         <type>ext4</type>\n"
#~ "         <label>Fedora-13-x86_64</label>\n"
#~ "         <uuid>e6a4db1e-15c2-477b-ac2a-699181c396aa</uuid>\n"
#~ "       </filesystem>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <applications>\n"
#~ "       <application>\n"
#~ "         <name>coreutils</name>\n"
#~ "         <version>8.5</version>\n"
#~ "         <release>1</release>\n"
#~ "       </application>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <applications>\n"
#~ "       <application>\n"
#~ "         <name>coreutils</name>\n"
#~ "         <version>8.5</version>\n"
#~ "         <release>1</release>\n"
#~ "       </application>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <drive_mappings>\n"
#~ "       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
#~ "       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
#~ "     </drive_mappings>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <drive_mappings>\n"
#~ "       <drive_mapping name=\"C\">/dev/sda2</drive_mapping>\n"
#~ "       <drive_mapping name=\"E\">/dev/sdb1</drive_mapping>\n"
#~ "     </drive_mappings>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <icon>\n"
#~ "       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
#~ "       [... many lines of base64 data ...]\n"
#~ "     </icon>\n"
#~ "\n"
#~ msgstr ""
#~ " <operatingsystems>\n"
#~ "   <operatingsystem>\n"
#~ "     ...\n"
#~ "     <icon>\n"
#~ "       iVBORw0KGgoAAAANSUhEUgAAAGAAAABg[.......]\n"
#~ "       [... many lines of base64 data ...]\n"
#~ "     </icon>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " base64 -i -d < icon.data > icon.png\n"
#~ "\n"
#~ msgstr ""
#~ " base64 -i -d < icon.data > icon.png\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-inspector -d Guest | virt-inspector --xpath '//filesystems'\n"
#~ " <filesystems>\n"
#~ "      <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "        <type>ext4</type>\n"
#~ " [...]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-inspector -d Guest | virt-inspector --xpath '//filesystems'\n"
#~ " <filesystems>\n"
#~ "      <filesystem dev=\"/dev/vg_f13x64/lv_root\">\n"
#~ "        <type>ext4</type>\n"
#~ " [...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath \"string(//filesystem[@dev='/dev/sda1']/type)\"\n"
#~ " ext4\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath \"string(//filesystem[@dev='/dev/sda1']/type)\"\n"
#~ " ext4\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath 'string(//icon)' | base64 -i -d | display -\n"
#~ " [displays the guest icon, if there is one]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-inspector -d Guest | \\\n"
#~ "     virt-inspector --xpath 'string(//icon)' | base64 -i -d | display -\n"
#~ " [displays the guest icon, if there is one]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ guestfish --ro -a F15x32.img\n"
#~ " ><fs> run\n"
#~ " ><fs> inspect-os\n"
#~ " /dev/vg_f15x32/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " $ guestfish --ro -a F15x32.img\n"
#~ " ><fs> run\n"
#~ " ><fs> inspect-os\n"
#~ " /dev/vg_f15x32/lv_root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
#~ " linux\n"
#~ " ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
#~ " fedora\n"
#~ " ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
#~ " 15\n"
#~ " ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
#~ " Fedora release 15 (Lovelock)\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-get-type /dev/vg_f15x32/lv_root\n"
#~ " linux\n"
#~ " ><fs> inspect-get-distro /dev/vg_f15x32/lv_root\n"
#~ " fedora\n"
#~ " ><fs> inspect-get-major-version /dev/vg_f15x32/lv_root\n"
#~ " 15\n"
#~ " ><fs> inspect-get-product-name /dev/vg_f15x32/lv_root\n"
#~ " Fedora release 15 (Lovelock)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
#~ " /: /dev/vg_f15x32/lv_root\n"
#~ " /boot: /dev/vda1\n"
#~ " ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
#~ " ><fs> mount-ro /dev/vda1 /boot\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-get-mountpoints /dev/vg_f15x32/lv_root\n"
#~ " /: /dev/vg_f15x32/lv_root\n"
#~ " /boot: /dev/vda1\n"
#~ " ><fs> mount-ro /dev/vg_f15x32/lv_root /\n"
#~ " ><fs> mount-ro /dev/vda1 /boot\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
#~ " [0] = {\n"
#~ "   app_name: ConsoleKit\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: ConsoleKit-libs\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-list-applications /dev/vg_f15x32/lv_root | head -28\n"
#~ " [0] = {\n"
#~ "   app_name: ConsoleKit\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ " [1] = {\n"
#~ "   app_name: ConsoleKit-libs\n"
#~ "   app_display_name:\n"
#~ "   app_epoch: 0\n"
#~ "   app_version: 0.4.5\n"
#~ "   app_release: 1.fc15\n"
#~ "   app_install_path:\n"
#~ "   app_trans_path:\n"
#~ "   app_publisher:\n"
#~ "   app_url:\n"
#~ "   app_source_package:\n"
#~ "   app_summary:\n"
#~ "   app_description:\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
#~ "\n"
#~ msgstr ""
#~ " ><fs> inspect-get-icon /dev/vg_f15x32/lv_root | display -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-inspector     Old Perl version.\n"
#~ " virt-inspector2    New C version.\n"
#~ "\n"
#~ msgstr ""
#~ " virt-inspector     Old Perl version.\n"
#~ " virt-inspector2    New C version.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " import com.redhat.et.libguestfs.*;\n"
#~ " \n"
#~ msgstr ""
#~ " import com.redhat.et.libguestfs.*;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " GuestFS g = new GuestFS ();\n"
#~ " g.add_drive (\"disk.img\",\n"
#~ "              new HashMap<String,Object>() {\n"
#~ "                {\n"
#~ "                    put (\"readonly\", Boolean.TRUE);\n"
#~ "                    put (\"format\", \"raw\");\n"
#~ "                }\n"
#~ "              });\n"
#~ " g.launch ();\n"
#~ "\n"
#~ msgstr ""
#~ " GuestFS g = new GuestFS ();\n"
#~ " g.add_drive (\"disk.img\",\n"
#~ "              new HashMap<String,Object>() {\n"
#~ "                {\n"
#~ "                    put (\"readonly\", Boolean.TRUE);\n"
#~ "                    put (\"format\", \"raw\");\n"
#~ "                }\n"
#~ "              });\n"
#~ " g.launch ();\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GuestFS g = new GuestFS ();\n"
#~ " g.set_trace (true);\n"
#~ " g.set_event_callback (\n"
#~ "   new EventCallback () {\n"
#~ "     public void event (long event, int eh,\n"
#~ "                        String buffer, long[] array) {\n"
#~ "       System.out.println (GuestFS.eventToString (event) +\n"
#~ "                           \": \" + buffer);\n"
#~ "     }\n"
#~ "   },\n"
#~ "   GuestFS.EVENT_TRACE);\n"
#~ " g.add_drive_ro (\"disk.img\");\n"
#~ " // etc.\n"
#~ "\n"
#~ msgstr ""
#~ " GuestFS g = new GuestFS ();\n"
#~ " g.set_trace (true);\n"
#~ " g.set_event_callback (\n"
#~ "   new EventCallback () {\n"
#~ "     public void event (long event, int eh,\n"
#~ "                        String buffer, long[] array) {\n"
#~ "       System.out.println (GuestFS.eventToString (event) +\n"
#~ "                           \": \" + buffer);\n"
#~ "     }\n"
#~ "   },\n"
#~ "   GuestFS.EVENT_TRACE);\n"
#~ " g.add_drive_ro (\"disk.img\");\n"
#~ " // etc.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " EVENT_TRACE: add_drive_ro \"disk.img\"\n"
#~ " EVENT_TRACE: add_drive_ro = 0\n"
#~ " // etc.\n"
#~ "\n"
#~ msgstr ""
#~ " EVENT_TRACE: add_drive_ro \"disk.img\"\n"
#~ " EVENT_TRACE: add_drive_ro = 0\n"
#~ " // etc.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_acl_delete_def_file (guestfs_h *g,\n"
#~ "                              const char *dir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_acl_delete_def_file (guestfs_h *g,\n"
#~ "                              const char *dir);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_acl_get_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_acl_get_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_acl_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype,\n"
#~ "                       const char *acl);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_acl_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *acltype,\n"
#~ "                       const char *acl);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_cdrom (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_cdrom (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_domain (guestfs_h *g,\n"
#~ "                     const char *dom,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain (guestfs_h *g,\n"
#~ "                     const char *dom,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_domain_va (guestfs_h *g,\n"
#~ "                        const char *dom,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain_va (guestfs_h *g,\n"
#~ "                        const char *dom,\n"
#~ "                        va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_domain_argv (guestfs_h *g,\n"
#~ "                          const char *dom,\n"
#~ "                          const struct guestfs_add_domain_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_domain_argv (guestfs_h *g,\n"
#~ "                          const char *dom,\n"
#~ "                          const struct guestfs_add_domain_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive (guestfs_h *g,\n"
#~ "                    const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_opts (guestfs_h *g,\n"
#~ "                         const char *filename,\n"
#~ "                         ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts (guestfs_h *g,\n"
#~ "                         const char *filename,\n"
#~ "                         ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_opts_va (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts_va (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_opts_argv (guestfs_h *g,\n"
#~ "                              const char *filename,\n"
#~ "                              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_opts_argv (guestfs_h *g,\n"
#~ "                              const char *filename,\n"
#~ "                              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_ro (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_ro (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
#~ "                               const char *filename,\n"
#~ "                               const char *iface);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_ro_with_if (guestfs_h *g,\n"
#~ "                               const char *filename,\n"
#~ "                               const char *iface);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_scratch (guestfs_h *g,\n"
#~ "                            int64_t size,\n"
#~ "                            ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_scratch (guestfs_h *g,\n"
#~ "                            int64_t size,\n"
#~ "                            ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_ADD_DRIVE_SCRATCH_NAME, const char *name,\n"
#~ " GUESTFS_ADD_DRIVE_SCRATCH_LABEL, const char *label,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_ADD_DRIVE_SCRATCH_NAME, const char *name,\n"
#~ " GUESTFS_ADD_DRIVE_SCRATCH_LABEL, const char *label,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_scratch_va (guestfs_h *g,\n"
#~ "                               int64_t size,\n"
#~ "                               va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_scratch_va (guestfs_h *g,\n"
#~ "                               int64_t size,\n"
#~ "                               va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_scratch_argv (guestfs_h *g,\n"
#~ "                                 int64_t size,\n"
#~ "                                 const struct guestfs_add_drive_scratch_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_scratch_argv (guestfs_h *g,\n"
#~ "                                 int64_t size,\n"
#~ "                                 const struct guestfs_add_drive_scratch_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_add_drive_with_if (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            const char *iface);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_add_drive_with_if (guestfs_h *g,\n"
#~ "                            const char *filename,\n"
#~ "                            const char *iface);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_clear (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_clear (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_close (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_int_bool *\n"
#~ " guestfs_aug_defnode (guestfs_h *g,\n"
#~ "                      const char *name,\n"
#~ "                      const char *expr,\n"
#~ "                      const char *val);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_int_bool *\n"
#~ " guestfs_aug_defnode (guestfs_h *g,\n"
#~ "                      const char *name,\n"
#~ "                      const char *expr,\n"
#~ "                      const char *val);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_defvar (guestfs_h *g,\n"
#~ "                     const char *name,\n"
#~ "                     const char *expr);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_defvar (guestfs_h *g,\n"
#~ "                     const char *name,\n"
#~ "                     const char *expr);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_aug_get (guestfs_h *g,\n"
#~ "                  const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_aug_get (guestfs_h *g,\n"
#~ "                  const char *augpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_init (guestfs_h *g,\n"
#~ "                   const char *root,\n"
#~ "                   int flags);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_init (guestfs_h *g,\n"
#~ "                   const char *root,\n"
#~ "                   int flags);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_insert (guestfs_h *g,\n"
#~ "                     const char *augpath,\n"
#~ "                     const char *label,\n"
#~ "                     int before);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_insert (guestfs_h *g,\n"
#~ "                     const char *augpath,\n"
#~ "                     const char *label,\n"
#~ "                     int before);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_aug_label (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_aug_label (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_load (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_load (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_aug_ls (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_aug_ls (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_aug_match (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_aug_match (guestfs_h *g,\n"
#~ "                    const char *augpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_mv (guestfs_h *g,\n"
#~ "                 const char *src,\n"
#~ "                 const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_mv (guestfs_h *g,\n"
#~ "                 const char *src,\n"
#~ "                 const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_rm (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_rm (guestfs_h *g,\n"
#~ "                 const char *augpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_save (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_save (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_set (guestfs_h *g,\n"
#~ "                  const char *augpath,\n"
#~ "                  const char *val);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_set (guestfs_h *g,\n"
#~ "                  const char *augpath,\n"
#~ "                  const char *val);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_aug_setm (guestfs_h *g,\n"
#~ "                   const char *base,\n"
#~ "                   const char *sub,\n"
#~ "                   const char *val);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_aug_setm (guestfs_h *g,\n"
#~ "                   const char *base,\n"
#~ "                   const char *sub,\n"
#~ "                   const char *val);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_available (guestfs_h *g,\n"
#~ "                    char *const *groups);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_available (guestfs_h *g,\n"
#~ "                    char *const *groups);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_available_all_groups (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_available_all_groups (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_base64_in (guestfs_h *g,\n"
#~ "                    const char *base64file,\n"
#~ "                    const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_base64_in (guestfs_h *g,\n"
#~ "                    const char *base64file,\n"
#~ "                    const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_base64_out (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     const char *base64file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_base64_out (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     const char *base64file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_blkid (guestfs_h *g,\n"
#~ "                const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_blkid (guestfs_h *g,\n"
#~ "                const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_flushbufs (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_flushbufs (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_getbsz (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_getbsz (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_getro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_getro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsize64 (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsize64 (guestfs_h *g,\n"
#~ "                             const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_getss (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_getss (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsz (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_blockdev_getsz (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_rereadpt (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_rereadpt (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setbsz (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int blocksize);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setbsz (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int blocksize);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setro (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_blockdev_setrw (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_blockdev_setrw (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_device_add (guestfs_h *g,\n"
#~ "                           char *const *devices,\n"
#~ "                           const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_device_add (guestfs_h *g,\n"
#~ "                           char *const *devices,\n"
#~ "                           const char *fs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_device_delete (guestfs_h *g,\n"
#~ "                              char *const *devices,\n"
#~ "                              const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_device_delete (guestfs_h *g,\n"
#~ "                              char *const *devices,\n"
#~ "                              const char *fs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
#~ "                                   const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_balance (guestfs_h *g,\n"
#~ "                                   const char *fs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
#~ "                                  const char *mountpoint,\n"
#~ "                                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize (guestfs_h *g,\n"
#~ "                                  const char *mountpoint,\n"
#~ "                                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_BTRFS_FILESYSTEM_RESIZE_SIZE, int64_t size,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
#~ "                                     const char *mountpoint,\n"
#~ "                                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_va (guestfs_h *g,\n"
#~ "                                     const char *mountpoint,\n"
#~ "                                     va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
#~ "                                       const char *mountpoint,\n"
#~ "                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_resize_argv (guestfs_h *g,\n"
#~ "                                       const char *mountpoint,\n"
#~ "                                       const struct guestfs_btrfs_filesystem_resize_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_filesystem_sync (guestfs_h *g,\n"
#~ "                                const char *fs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_fsck (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_fsck (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
#~ " GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_BTRFS_FSCK_SUPERBLOCK, int64_t superblock,\n"
#~ " GUESTFS_BTRFS_FSCK_REPAIR, int repair,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_fsck_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_btrfs_fsck_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_set_seeding (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int seeding);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_set_seeding (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int seeding);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_create (guestfs_h *g,\n"
#~ "                                 const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
#~ "                                 const char *subvolume);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_delete (guestfs_h *g,\n"
#~ "                                 const char *subvolume);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume_list *\n"
#~ " guestfs_btrfs_subvolume_list (guestfs_h *g,\n"
#~ "                               const char *fs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
#~ "                                      int64_t id,\n"
#~ "                                      const char *fs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_set_default (guestfs_h *g,\n"
#~ "                                      int64_t id,\n"
#~ "                                      const char *fs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_btrfs_subvolume_snapshot (guestfs_h *g,\n"
#~ "                                   const char *source,\n"
#~ "                                   const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_canonical_device_name (guestfs_h *g,\n"
#~ "                                const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_canonical_device_name (guestfs_h *g,\n"
#~ "                                const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_cap_get_file (guestfs_h *g,\n"
#~ "                       const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_cap_get_file (guestfs_h *g,\n"
#~ "                       const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cap_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *cap);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cap_set_file (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *cap);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_case_sensitive_path (guestfs_h *g,\n"
#~ "                              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_case_sensitive_path (guestfs_h *g,\n"
#~ "                              const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_cat (guestfs_h *g,\n"
#~ "              const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_cat (guestfs_h *g,\n"
#~ "              const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_checksum (guestfs_h *g,\n"
#~ "                   const char *csumtype,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_checksum (guestfs_h *g,\n"
#~ "                   const char *csumtype,\n"
#~ "                   const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_checksum_device (guestfs_h *g,\n"
#~ "                          const char *csumtype,\n"
#~ "                          const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_checksum_device (guestfs_h *g,\n"
#~ "                          const char *csumtype,\n"
#~ "                          const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_checksums_out (guestfs_h *g,\n"
#~ "                        const char *csumtype,\n"
#~ "                        const char *directory,\n"
#~ "                        const char *sumsfile);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_checksums_out (guestfs_h *g,\n"
#~ "                        const char *csumtype,\n"
#~ "                        const char *directory,\n"
#~ "                        const char *sumsfile);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_chmod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_chmod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_chown (guestfs_h *g,\n"
#~ "                int owner,\n"
#~ "                int group,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_chown (guestfs_h *g,\n"
#~ "                int owner,\n"
#~ "                int group,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_command (guestfs_h *g,\n"
#~ "                  char *const *arguments);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_command (guestfs_h *g,\n"
#~ "                  char *const *arguments);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_command_lines (guestfs_h *g,\n"
#~ "                        char *const *arguments);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_command_lines (guestfs_h *g,\n"
#~ "                        char *const *arguments);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_device_out (guestfs_h *g,\n"
#~ "                              const char *ctype,\n"
#~ "                              const char *device,\n"
#~ "                              const char *zdevice,\n"
#~ "                              ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_device_out (guestfs_h *g,\n"
#~ "                              const char *ctype,\n"
#~ "                              const char *device,\n"
#~ "                              const char *zdevice,\n"
#~ "                              ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_COMPRESS_DEVICE_OUT_LEVEL, int level,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_device_out_va (guestfs_h *g,\n"
#~ "                                 const char *ctype,\n"
#~ "                                 const char *device,\n"
#~ "                                 const char *zdevice,\n"
#~ "                                 va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_device_out_va (guestfs_h *g,\n"
#~ "                                 const char *ctype,\n"
#~ "                                 const char *device,\n"
#~ "                                 const char *zdevice,\n"
#~ "                                 va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_device_out_argv (guestfs_h *g,\n"
#~ "                                   const char *ctype,\n"
#~ "                                   const char *device,\n"
#~ "                                   const char *zdevice,\n"
#~ "                                   const struct guestfs_compress_device_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_device_out_argv (guestfs_h *g,\n"
#~ "                                   const char *ctype,\n"
#~ "                                   const char *device,\n"
#~ "                                   const char *zdevice,\n"
#~ "                                   const struct guestfs_compress_device_out_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_out (guestfs_h *g,\n"
#~ "                       const char *ctype,\n"
#~ "                       const char *file,\n"
#~ "                       const char *zfile,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_out (guestfs_h *g,\n"
#~ "                       const char *ctype,\n"
#~ "                       const char *file,\n"
#~ "                       const char *zfile,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_COMPRESS_OUT_LEVEL, int level,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_out_va (guestfs_h *g,\n"
#~ "                          const char *ctype,\n"
#~ "                          const char *file,\n"
#~ "                          const char *zfile,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_out_va (guestfs_h *g,\n"
#~ "                          const char *ctype,\n"
#~ "                          const char *file,\n"
#~ "                          const char *zfile,\n"
#~ "                          va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_compress_out_argv (guestfs_h *g,\n"
#~ "                            const char *ctype,\n"
#~ "                            const char *file,\n"
#~ "                            const char *zfile,\n"
#~ "                            const struct guestfs_compress_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_compress_out_argv (guestfs_h *g,\n"
#~ "                            const char *ctype,\n"
#~ "                            const char *file,\n"
#~ "                            const char *zfile,\n"
#~ "                            const struct guestfs_compress_out_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_config (guestfs_h *g,\n"
#~ "                 const char *hvparam,\n"
#~ "                 const char *hvvalue);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_config (guestfs_h *g,\n"
#~ "                 const char *hvparam,\n"
#~ "                 const char *hvvalue);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_device (guestfs_h *g,\n"
#~ "                                const char *src,\n"
#~ "                                const char *dest,\n"
#~ "                                ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device (guestfs_h *g,\n"
#~ "                                const char *src,\n"
#~ "                                const char *dest,\n"
#~ "                                ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_va (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_va (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
#~ "                                     const char *src,\n"
#~ "                                     const char *dest,\n"
#~ "                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_device_argv (guestfs_h *g,\n"
#~ "                                     const char *src,\n"
#~ "                                     const char *dest,\n"
#~ "                                     const struct guestfs_copy_device_to_device_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_file (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_file (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_device_to_file_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_device_to_file_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_device_to_file_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_device (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device (guestfs_h *g,\n"
#~ "                              const char *src,\n"
#~ "                              const char *dest,\n"
#~ "                              ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_va (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_file_to_device_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_device_argv (guestfs_h *g,\n"
#~ "                                   const char *src,\n"
#~ "                                   const char *dest,\n"
#~ "                                   const struct guestfs_copy_file_to_device_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_file (guestfs_h *g,\n"
#~ "                            const char *src,\n"
#~ "                            const char *dest,\n"
#~ "                            ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_file (guestfs_h *g,\n"
#~ "                            const char *src,\n"
#~ "                            const char *dest,\n"
#~ "                            ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_va (guestfs_h *g,\n"
#~ "                               const char *src,\n"
#~ "                               const char *dest,\n"
#~ "                               va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_va (guestfs_h *g,\n"
#~ "                               const char *src,\n"
#~ "                               const char *dest,\n"
#~ "                               va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 const struct guestfs_copy_file_to_file_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_file_to_file_argv (guestfs_h *g,\n"
#~ "                                 const char *src,\n"
#~ "                                 const char *dest,\n"
#~ "                                 const struct guestfs_copy_file_to_file_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_copy_size (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *dest,\n"
#~ "                    int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_copy_size (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *dest,\n"
#~ "                    int64_t size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cp (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cp (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cp_a (guestfs_h *g,\n"
#~ "               const char *src,\n"
#~ "               const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cp_a (guestfs_h *g,\n"
#~ "               const char *src,\n"
#~ "               const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_cp_r (guestfs_h *g,\n"
#~ "               const char *src,\n"
#~ "               const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_cp_r (guestfs_h *g,\n"
#~ "               const char *src,\n"
#~ "               const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_dd (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_dd (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_device_index (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_device_index (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_df (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_df (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_df_h (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_df_h (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_disk_format (guestfs_h *g,\n"
#~ "                      const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_disk_format (guestfs_h *g,\n"
#~ "                      const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_disk_has_backing_file (guestfs_h *g,\n"
#~ "                                const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_disk_has_backing_file (guestfs_h *g,\n"
#~ "                                const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_disk_virtual_size (guestfs_h *g,\n"
#~ "                            const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_disk_virtual_size (guestfs_h *g,\n"
#~ "                            const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_dmesg (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_dmesg (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_download (guestfs_h *g,\n"
#~ "                   const char *remotefilename,\n"
#~ "                   const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_download (guestfs_h *g,\n"
#~ "                   const char *remotefilename,\n"
#~ "                   const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_download_offset (guestfs_h *g,\n"
#~ "                          const char *remotefilename,\n"
#~ "                          const char *filename,\n"
#~ "                          int64_t offset,\n"
#~ "                          int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_download_offset (guestfs_h *g,\n"
#~ "                          const char *remotefilename,\n"
#~ "                          const char *filename,\n"
#~ "                          int64_t offset,\n"
#~ "                          int64_t size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_drop_caches (guestfs_h *g,\n"
#~ "                      int whattodrop);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_drop_caches (guestfs_h *g,\n"
#~ "                      int whattodrop);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_du (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_du (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_E2FSCK_CORRECT, int correct,\n"
#~ " GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_E2FSCK_CORRECT, int correct,\n"
#~ " GUESTFS_E2FSCK_FORCEALL, int forceall,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck_argv (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const struct guestfs_e2fsck_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck_argv (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const struct guestfs_e2fsck_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_e2fsck_f (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_e2fsck_f (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_echo_daemon (guestfs_h *g,\n"
#~ "                      char *const *words);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_echo_daemon (guestfs_h *g,\n"
#~ "                      char *const *words);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_egrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_egrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_egrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_egrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_equal (guestfs_h *g,\n"
#~ "                const char *file1,\n"
#~ "                const char *file2);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_equal (guestfs_h *g,\n"
#~ "                const char *file1,\n"
#~ "                const char *file2);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_exists (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_exists (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_extlinux (guestfs_h *g,\n"
#~ "                   const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_extlinux (guestfs_h *g,\n"
#~ "                   const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fallocate (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    int len);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fallocate (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    int len);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fallocate64 (guestfs_h *g,\n"
#~ "                      const char *path,\n"
#~ "                      int64_t len);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fallocate64 (guestfs_h *g,\n"
#~ "                      const char *path,\n"
#~ "                      int64_t len);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_feature_available (guestfs_h *g,\n"
#~ "                            char *const *groups);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_feature_available (guestfs_h *g,\n"
#~ "                            char *const *groups);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_fgrep (guestfs_h *g,\n"
#~ "                const char *pattern,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_fgrep (guestfs_h *g,\n"
#~ "                const char *pattern,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_fgrepi (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_fgrepi (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_file (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_file (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_file_architecture (guestfs_h *g,\n"
#~ "                            const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_file_architecture (guestfs_h *g,\n"
#~ "                            const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_filesize (guestfs_h *g,\n"
#~ "                   const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_filesize (guestfs_h *g,\n"
#~ "                   const char *file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_filesystem_available (guestfs_h *g,\n"
#~ "                               const char *filesystem);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_filesystem_available (guestfs_h *g,\n"
#~ "                               const char *filesystem);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fill (guestfs_h *g,\n"
#~ "               int c,\n"
#~ "               int len,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fill (guestfs_h *g,\n"
#~ "               int c,\n"
#~ "               int len,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fill_dir (guestfs_h *g,\n"
#~ "                   const char *dir,\n"
#~ "                   int nr);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fill_dir (guestfs_h *g,\n"
#~ "                   const char *dir,\n"
#~ "                   int nr);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fill_pattern (guestfs_h *g,\n"
#~ "                       const char *pattern,\n"
#~ "                       int len,\n"
#~ "                       const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fill_pattern (guestfs_h *g,\n"
#~ "                       const char *pattern,\n"
#~ "                       int len,\n"
#~ "                       const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_find (guestfs_h *g,\n"
#~ "               const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_find (guestfs_h *g,\n"
#~ "               const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_find0 (guestfs_h *g,\n"
#~ "                const char *directory,\n"
#~ "                const char *files);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_find0 (guestfs_h *g,\n"
#~ "                const char *directory,\n"
#~ "                const char *files);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_findfs_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_findfs_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_findfs_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_findfs_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fsck (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fsck (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fstrim (guestfs_h *g,\n"
#~ "                 const char *mountpoint,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fstrim (guestfs_h *g,\n"
#~ "                 const char *mountpoint,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_FSTRIM_OFFSET, int64_t offset,\n"
#~ " GUESTFS_FSTRIM_LENGTH, int64_t length,\n"
#~ " GUESTFS_FSTRIM_MINIMUMFREEEXTENT, int64_t minimumfreeextent,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_FSTRIM_OFFSET, int64_t offset,\n"
#~ " GUESTFS_FSTRIM_LENGTH, int64_t length,\n"
#~ " GUESTFS_FSTRIM_MINIMUMFREEEXTENT, int64_t minimumfreeextent,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fstrim_va (guestfs_h *g,\n"
#~ "                    const char *mountpoint,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fstrim_va (guestfs_h *g,\n"
#~ "                    const char *mountpoint,\n"
#~ "                    va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_fstrim_argv (guestfs_h *g,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      const struct guestfs_fstrim_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_fstrim_argv (guestfs_h *g,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      const struct guestfs_fstrim_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_append (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_append (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_attach_method (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_attach_method (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_autosync (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_autosync (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_backend (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_backend (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_cachedir (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_cachedir (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_direct (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_direct (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_get_e2generation (guestfs_h *g,\n"
#~ "                           const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_get_e2generation (guestfs_h *g,\n"
#~ "                           const char *file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_e2label (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_e2label (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_hv (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_hv (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_challenge (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_challenge (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_defresult (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_defresult (guestfs_h *g,\n"
#~ "                                                     int index);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_prompt (guestfs_h *g,\n"
#~ "                                                  int index);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_libvirt_requested_credential_prompt (guestfs_h *g,\n"
#~ "                                                  int index);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_get_libvirt_requested_credentials (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_get_libvirt_requested_credentials (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_memsize (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_memsize (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_network (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_network (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_path (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_path (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_pgroup (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_pgroup (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_pid (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_pid (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_program (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_program (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *\n"
#~ " guestfs_get_qemu (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *\n"
#~ " guestfs_get_qemu (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_recovery_proc (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_recovery_proc (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_selinux (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_selinux (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_smp (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_smp (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_state (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_state (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_get_tmpdir (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_get_tmpdir (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_trace (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_trace (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_umask (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_umask (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_get_verbose (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_get_verbose (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_getcon (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_getcon (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_getxattr (guestfs_h *g,\n"
#~ "                   const char *path,\n"
#~ "                   const char *name,\n"
#~ "                   size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_getxattr (guestfs_h *g,\n"
#~ "                   const char *path,\n"
#~ "                   const char *name,\n"
#~ "                   size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_getxattrs (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_getxattrs (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_glob_expand (guestfs_h *g,\n"
#~ "                      const char *pattern);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_glob_expand (guestfs_h *g,\n"
#~ "                      const char *pattern);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep (guestfs_h *g,\n"
#~ "               const char *regex,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep (guestfs_h *g,\n"
#~ "               const char *regex,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep_opts (guestfs_h *g,\n"
#~ "                    const char *regex,\n"
#~ "                    const char *path,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep_opts (guestfs_h *g,\n"
#~ "                    const char *regex,\n"
#~ "                    const char *path,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_GREP_OPTS_EXTENDED, int extended,\n"
#~ " GUESTFS_GREP_OPTS_FIXED, int fixed,\n"
#~ " GUESTFS_GREP_OPTS_INSENSITIVE, int insensitive,\n"
#~ " GUESTFS_GREP_OPTS_COMPRESSED, int compressed,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_GREP_OPTS_EXTENDED, int extended,\n"
#~ " GUESTFS_GREP_OPTS_FIXED, int fixed,\n"
#~ " GUESTFS_GREP_OPTS_INSENSITIVE, int insensitive,\n"
#~ " GUESTFS_GREP_OPTS_COMPRESSED, int compressed,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep_opts_va (guestfs_h *g,\n"
#~ "                       const char *regex,\n"
#~ "                       const char *path,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep_opts_va (guestfs_h *g,\n"
#~ "                       const char *regex,\n"
#~ "                       const char *path,\n"
#~ "                       va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grep_opts_argv (guestfs_h *g,\n"
#~ "                         const char *regex,\n"
#~ "                         const char *path,\n"
#~ "                         const struct guestfs_grep_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grep_opts_argv (guestfs_h *g,\n"
#~ "                         const char *regex,\n"
#~ "                         const char *path,\n"
#~ "                         const struct guestfs_grep_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_grepi (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_grepi (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_grub_install (guestfs_h *g,\n"
#~ "                       const char *root,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_grub_install (guestfs_h *g,\n"
#~ "                       const char *root,\n"
#~ "                       const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_head (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_head (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_head_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_head_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hexdump (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hexdump (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_close (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_commit (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_commit (guestfs_h *g,\n"
#~ "                       const char *filename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_add_child (guestfs_h *g,\n"
#~ "                               int64_t parent,\n"
#~ "                               const char *name);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_add_child (guestfs_h *g,\n"
#~ "                               int64_t parent,\n"
#~ "                               const char *name);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_node_list *\n"
#~ " guestfs_hivex_node_children (guestfs_h *g,\n"
#~ "                              int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_hivex_node_list *\n"
#~ " guestfs_hivex_node_children (guestfs_h *g,\n"
#~ "                              int64_t nodeh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_node_delete_child (guestfs_h *g,\n"
#~ "                                  int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_node_delete_child (guestfs_h *g,\n"
#~ "                                  int64_t nodeh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_child (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *name);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_child (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *name);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_get_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_node_name (guestfs_h *g,\n"
#~ "                          int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_node_name (guestfs_h *g,\n"
#~ "                          int64_t nodeh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_parent (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_node_parent (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_node_set_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key,\n"
#~ "                               int64_t t,\n"
#~ "                               const char *val,\n"
#~ "                               size_t val_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_node_set_value (guestfs_h *g,\n"
#~ "                               int64_t nodeh,\n"
#~ "                               const char *key,\n"
#~ "                               int64_t t,\n"
#~ "                               const char *val,\n"
#~ "                               size_t val_size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_value_list *\n"
#~ " guestfs_hivex_node_values (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_hivex_value_list *\n"
#~ " guestfs_hivex_node_values (guestfs_h *g,\n"
#~ "                            int64_t nodeh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_open (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_open (guestfs_h *g,\n"
#~ "                     const char *filename,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_open_va (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_open_va (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_hivex_open_argv (guestfs_h *g,\n"
#~ "                          const char *filename,\n"
#~ "                          const struct guestfs_hivex_open_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_hivex_open_argv (guestfs_h *g,\n"
#~ "                          const char *filename,\n"
#~ "                          const struct guestfs_hivex_open_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_root (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_root (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_value_key (guestfs_h *g,\n"
#~ "                          int64_t valueh);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_value_key (guestfs_h *g,\n"
#~ "                          int64_t valueh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_hivex_value_type (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_hivex_value_type (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_value_utf8 (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_value_utf8 (guestfs_h *g,\n"
#~ "                           int64_t valueh);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_hivex_value_value (guestfs_h *g,\n"
#~ "                            int64_t valueh,\n"
#~ "                            size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_hivex_value_value (guestfs_h *g,\n"
#~ "                            int64_t valueh,\n"
#~ "                            size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_initrd_cat (guestfs_h *g,\n"
#~ "                     const char *initrdpath,\n"
#~ "                     const char *filename,\n"
#~ "                     size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_initrd_cat (guestfs_h *g,\n"
#~ "                     const char *initrdpath,\n"
#~ "                     const char *filename,\n"
#~ "                     size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_initrd_list (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_initrd_list (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_inotify_add_watch (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            int mask);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_inotify_add_watch (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            int mask);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inotify_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inotify_close (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inotify_files (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inotify_files (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inotify_init (guestfs_h *g,\n"
#~ "                       int maxevents);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inotify_init (guestfs_h *g,\n"
#~ "                       int maxevents);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_inotify_event_list *\n"
#~ " guestfs_inotify_read (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_inotify_event_list *\n"
#~ " guestfs_inotify_read (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inotify_rm_watch (guestfs_h *g,\n"
#~ "                           int wd);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inotify_rm_watch (guestfs_h *g,\n"
#~ "                           int wd);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_arch (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_arch (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_distro (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_distro (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_drive_mappings (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_filesystems (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_filesystems (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_format (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_format (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_hostname (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_hostname (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon (guestfs_h *g,\n"
#~ "                           const char *root,\n"
#~ "                           size_t *size_r,\n"
#~ "                           ...);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon (guestfs_h *g,\n"
#~ "                           const char *root,\n"
#~ "                           size_t *size_r,\n"
#~ "                           ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
#~ " GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_INSPECT_GET_ICON_FAVICON, int favicon,\n"
#~ " GUESTFS_INSPECT_GET_ICON_HIGHQUALITY, int highquality,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_va (guestfs_h *g,\n"
#~ "                              const char *root,\n"
#~ "                              size_t *size_r,\n"
#~ "                              va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_va (guestfs_h *g,\n"
#~ "                              const char *root,\n"
#~ "                              size_t *size_r,\n"
#~ "                              va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
#~ "                                const char *root,\n"
#~ "                                size_t *size_r,\n"
#~ "                                const struct guestfs_inspect_get_icon_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_icon_argv (guestfs_h *g,\n"
#~ "                                const char *root,\n"
#~ "                                size_t *size_r,\n"
#~ "                                const struct guestfs_inspect_get_icon_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_get_major_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_get_major_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_get_minor_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_get_minor_version (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_mountpoints (guestfs_h *g,\n"
#~ "                                  const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_format (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_format (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_management (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_package_management (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_name (guestfs_h *g,\n"
#~ "                                   const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_name (guestfs_h *g,\n"
#~ "                                   const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_variant (guestfs_h *g,\n"
#~ "                                      const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_product_variant (guestfs_h *g,\n"
#~ "                                      const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_get_roots (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_get_roots (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_type (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_type (guestfs_h *g,\n"
#~ "                           const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
#~ "                                                  const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_current_control_set (guestfs_h *g,\n"
#~ "                                                  const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_inspect_get_windows_systemroot (guestfs_h *g,\n"
#~ "                                         const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_is_live (guestfs_h *g,\n"
#~ "                          const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_is_live (guestfs_h *g,\n"
#~ "                          const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_is_multipart (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_is_multipart (guestfs_h *g,\n"
#~ "                               const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_inspect_is_netinst (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_inspect_is_netinst (guestfs_h *g,\n"
#~ "                             const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application_list *\n"
#~ " guestfs_inspect_list_applications (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_application_list *\n"
#~ " guestfs_inspect_list_applications (guestfs_h *g,\n"
#~ "                                    const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application2_list *\n"
#~ " guestfs_inspect_list_applications2 (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_application2_list *\n"
#~ " guestfs_inspect_list_applications2 (guestfs_h *g,\n"
#~ "                                     const char *root);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_inspect_os (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_inspect_os (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_blockdev (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_blockdev (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_blockdev_opts (guestfs_h *g,\n"
#~ "                           const char *path,\n"
#~ "                           ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_blockdev_opts (guestfs_h *g,\n"
#~ "                           const char *path,\n"
#~ "                           ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_IS_BLOCKDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_IS_BLOCKDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_blockdev_opts_va (guestfs_h *g,\n"
#~ "                              const char *path,\n"
#~ "                              va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_blockdev_opts_va (guestfs_h *g,\n"
#~ "                              const char *path,\n"
#~ "                              va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_blockdev_opts_argv (guestfs_h *g,\n"
#~ "                                const char *path,\n"
#~ "                                const struct guestfs_is_blockdev_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_blockdev_opts_argv (guestfs_h *g,\n"
#~ "                                const char *path,\n"
#~ "                                const struct guestfs_is_blockdev_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_busy (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_busy (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_chardev (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_chardev (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_chardev_opts (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_chardev_opts (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_IS_CHARDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_IS_CHARDEV_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_chardev_opts_va (guestfs_h *g,\n"
#~ "                             const char *path,\n"
#~ "                             va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_chardev_opts_va (guestfs_h *g,\n"
#~ "                             const char *path,\n"
#~ "                             va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_chardev_opts_argv (guestfs_h *g,\n"
#~ "                               const char *path,\n"
#~ "                               const struct guestfs_is_chardev_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_chardev_opts_argv (guestfs_h *g,\n"
#~ "                               const char *path,\n"
#~ "                               const struct guestfs_is_chardev_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_config (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_config (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_dir (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_dir (guestfs_h *g,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_dir_opts (guestfs_h *g,\n"
#~ "                      const char *path,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_dir_opts (guestfs_h *g,\n"
#~ "                      const char *path,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_IS_DIR_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_IS_DIR_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_dir_opts_va (guestfs_h *g,\n"
#~ "                         const char *path,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_dir_opts_va (guestfs_h *g,\n"
#~ "                         const char *path,\n"
#~ "                         va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_dir_opts_argv (guestfs_h *g,\n"
#~ "                           const char *path,\n"
#~ "                           const struct guestfs_is_dir_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_dir_opts_argv (guestfs_h *g,\n"
#~ "                           const char *path,\n"
#~ "                           const struct guestfs_is_dir_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_fifo (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_fifo (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_fifo_opts (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_fifo_opts (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_IS_FIFO_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_IS_FIFO_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_fifo_opts_va (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_fifo_opts_va (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_fifo_opts_argv (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            const struct guestfs_is_fifo_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_fifo_opts_argv (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            const struct guestfs_is_fifo_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_file (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_file (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_file_opts (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_file_opts (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_IS_FILE_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_IS_FILE_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_file_opts_va (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_file_opts_va (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_file_opts_argv (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            const struct guestfs_is_file_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_file_opts_argv (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            const struct guestfs_is_file_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_launching (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_launching (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_ready (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_ready (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_socket (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_socket (guestfs_h *g,\n"
#~ "                    const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_socket_opts (guestfs_h *g,\n"
#~ "                         const char *path,\n"
#~ "                         ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_socket_opts (guestfs_h *g,\n"
#~ "                         const char *path,\n"
#~ "                         ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_IS_SOCKET_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_IS_SOCKET_OPTS_FOLLOWSYMLINKS, int followsymlinks,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_socket_opts_va (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_socket_opts_va (guestfs_h *g,\n"
#~ "                            const char *path,\n"
#~ "                            va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_socket_opts_argv (guestfs_h *g,\n"
#~ "                              const char *path,\n"
#~ "                              const struct guestfs_is_socket_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_socket_opts_argv (guestfs_h *g,\n"
#~ "                              const char *path,\n"
#~ "                              const struct guestfs_is_socket_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_symlink (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_symlink (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_whole_device (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_whole_device (guestfs_h *g,\n"
#~ "                          const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_zero (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_zero (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_is_zero_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_is_zero_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo (guestfs_h *g,\n"
#~ "                  const char *isofile);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo (guestfs_h *g,\n"
#~ "                  const char *isofile);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_isoinfo *\n"
#~ " guestfs_isoinfo_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_journal_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_journal_close (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_journal_get (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_journal_get (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_journal_get_data_threshold (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_journal_get_data_threshold (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_journal_next (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_journal_next (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_journal_open (guestfs_h *g,\n"
#~ "                       const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_journal_open (guestfs_h *g,\n"
#~ "                       const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_journal_set_data_threshold (guestfs_h *g,\n"
#~ "                                     int64_t threshold);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_journal_set_data_threshold (guestfs_h *g,\n"
#~ "                                     int64_t threshold);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int64_t\n"
#~ " guestfs_journal_skip (guestfs_h *g,\n"
#~ "                       int64_t skip);\n"
#~ "\n"
#~ msgstr ""
#~ " int64_t\n"
#~ " guestfs_journal_skip (guestfs_h *g,\n"
#~ "                       int64_t skip);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_kill_subprocess (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_kill_subprocess (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_launch (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_launch (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lchown (guestfs_h *g,\n"
#~ "                 int owner,\n"
#~ "                 int group,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lchown (guestfs_h *g,\n"
#~ "                 int owner,\n"
#~ "                 int group,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ldmtool_create_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ldmtool_create_all (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_disks (guestfs_h *g,\n"
#~ "                                  const char *diskgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_disks (guestfs_h *g,\n"
#~ "                                  const char *diskgroup);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_ldmtool_diskgroup_name (guestfs_h *g,\n"
#~ "                                 const char *diskgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_ldmtool_diskgroup_name (guestfs_h *g,\n"
#~ "                                 const char *diskgroup);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_volumes (guestfs_h *g,\n"
#~ "                                    const char *diskgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_diskgroup_volumes (guestfs_h *g,\n"
#~ "                                    const char *diskgroup);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ldmtool_remove_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ldmtool_remove_all (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_scan (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_scan (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_scan_devices (guestfs_h *g,\n"
#~ "                               char *const *devices);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_scan_devices (guestfs_h *g,\n"
#~ "                               char *const *devices);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_ldmtool_volume_hint (guestfs_h *g,\n"
#~ "                              const char *diskgroup,\n"
#~ "                              const char *volume);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_ldmtool_volume_hint (guestfs_h *g,\n"
#~ "                              const char *diskgroup,\n"
#~ "                              const char *volume);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ldmtool_volume_partitions (guestfs_h *g,\n"
#~ "                                    const char *diskgroup,\n"
#~ "                                    const char *volume);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ldmtool_volume_partitions (guestfs_h *g,\n"
#~ "                                    const char *diskgroup,\n"
#~ "                                    const char *volume);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_ldmtool_volume_type (guestfs_h *g,\n"
#~ "                              const char *diskgroup,\n"
#~ "                              const char *volume);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_ldmtool_volume_type (guestfs_h *g,\n"
#~ "                              const char *diskgroup,\n"
#~ "                              const char *volume);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_lgetxattr (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    const char *name,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_lgetxattr (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    const char *name,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lgetxattrs (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lgetxattrs (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_9p (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_9p (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_devices (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_disk_labels (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_disk_labels (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_dm_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_dm_devices (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_filesystems (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_filesystems (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_ldm_partitions (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_ldm_partitions (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_ldm_volumes (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_ldm_volumes (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_md_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_md_devices (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_list_partitions (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_list_partitions (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_ll (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_ll (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_llz (guestfs_h *g,\n"
#~ "              const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_llz (guestfs_h *g,\n"
#~ "              const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln (guestfs_h *g,\n"
#~ "             const char *target,\n"
#~ "             const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln (guestfs_h *g,\n"
#~ "             const char *target,\n"
#~ "             const char *linkname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln_f (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln_f (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln_s (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln_s (guestfs_h *g,\n"
#~ "               const char *target,\n"
#~ "               const char *linkname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ln_sf (guestfs_h *g,\n"
#~ "                const char *target,\n"
#~ "                const char *linkname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ln_sf (guestfs_h *g,\n"
#~ "                const char *target,\n"
#~ "                const char *linkname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lremovexattr (guestfs_h *g,\n"
#~ "                       const char *xattr,\n"
#~ "                       const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lremovexattr (guestfs_h *g,\n"
#~ "                       const char *xattr,\n"
#~ "                       const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_ls (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_ls (guestfs_h *g,\n"
#~ "             const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ls0 (guestfs_h *g,\n"
#~ "              const char *dir,\n"
#~ "              const char *filenames);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ls0 (guestfs_h *g,\n"
#~ "              const char *dir,\n"
#~ "              const char *filenames);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lsetxattr (guestfs_h *g,\n"
#~ "                    const char *xattr,\n"
#~ "                    const char *val,\n"
#~ "                    int vallen,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lsetxattr (guestfs_h *g,\n"
#~ "                    const char *xattr,\n"
#~ "                    const char *val,\n"
#~ "                    int vallen,\n"
#~ "                    const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_lstat (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_lstat (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat_list *\n"
#~ " guestfs_lstatlist (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    char *const *names);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_stat_list *\n"
#~ " guestfs_lstatlist (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    char *const *names);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_add_key (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *newkey,\n"
#~ "                       int keyslot);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_add_key (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *newkey,\n"
#~ "                       int keyslot);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_close (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_close (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_format (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *key,\n"
#~ "                      int keyslot);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_format (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *key,\n"
#~ "                      int keyslot);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_format_cipher (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *key,\n"
#~ "                             int keyslot,\n"
#~ "                             const char *cipher);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_format_cipher (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *key,\n"
#~ "                             int keyslot,\n"
#~ "                             const char *cipher);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_kill_slot (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const char *key,\n"
#~ "                         int keyslot);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_kill_slot (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const char *key,\n"
#~ "                         int keyslot);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_open (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *key,\n"
#~ "                    const char *mapname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_open (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *key,\n"
#~ "                    const char *mapname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_luks_open_ro (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *mapname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_luks_open_ro (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const char *key,\n"
#~ "                       const char *mapname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvcreate (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *volgroup,\n"
#~ "                   int mbytes);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvcreate (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *volgroup,\n"
#~ "                   int mbytes);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvcreate_free (guestfs_h *g,\n"
#~ "                        const char *logvol,\n"
#~ "                        const char *volgroup,\n"
#~ "                        int percent);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvcreate_free (guestfs_h *g,\n"
#~ "                        const char *logvol,\n"
#~ "                        const char *volgroup,\n"
#~ "                        int percent);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
#~ "                                const char *lvname);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_lvm_canonical_lv_name (guestfs_h *g,\n"
#~ "                                const char *lvname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvm_clear_filter (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvm_clear_filter (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvm_remove_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvm_remove_all (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvm_set_filter (guestfs_h *g,\n"
#~ "                         char *const *devices);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvm_set_filter (guestfs_h *g,\n"
#~ "                         char *const *devices);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvrename (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *newlogvol);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvrename (guestfs_h *g,\n"
#~ "                   const char *logvol,\n"
#~ "                   const char *newlogvol);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvresize (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int mbytes);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvresize (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int mbytes);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_lvresize_free (guestfs_h *g,\n"
#~ "                        const char *lv,\n"
#~ "                        int percent);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_lvresize_free (guestfs_h *g,\n"
#~ "                        const char *lv,\n"
#~ "                        int percent);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_lvs (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_lvs (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_lv_list *\n"
#~ " guestfs_lvs_full (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_lvm_lv_list *\n"
#~ " guestfs_lvs_full (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_lvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_lvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lxattrlist (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     char *const *names);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xattr_list *\n"
#~ " guestfs_lxattrlist (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     char *const *names);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_max_disks (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_max_disks (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_create (guestfs_h *g,\n"
#~ "                    const char *name,\n"
#~ "                    char *const *devices,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_create (guestfs_h *g,\n"
#~ "                    const char *name,\n"
#~ "                    char *const *devices,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
#~ " GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
#~ " GUESTFS_MD_CREATE_SPARE, int spare,\n"
#~ " GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
#~ " GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MD_CREATE_MISSINGBITMAP, int64_t missingbitmap,\n"
#~ " GUESTFS_MD_CREATE_NRDEVICES, int nrdevices,\n"
#~ " GUESTFS_MD_CREATE_SPARE, int spare,\n"
#~ " GUESTFS_MD_CREATE_CHUNK, int64_t chunk,\n"
#~ " GUESTFS_MD_CREATE_LEVEL, const char *level,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_create_va (guestfs_h *g,\n"
#~ "                       const char *name,\n"
#~ "                       char *const *devices,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_create_va (guestfs_h *g,\n"
#~ "                       const char *name,\n"
#~ "                       char *const *devices,\n"
#~ "                       va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_create_argv (guestfs_h *g,\n"
#~ "                         const char *name,\n"
#~ "                         char *const *devices,\n"
#~ "                         const struct guestfs_md_create_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_create_argv (guestfs_h *g,\n"
#~ "                         const char *name,\n"
#~ "                         char *const *devices,\n"
#~ "                         const struct guestfs_md_create_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_md_detail (guestfs_h *g,\n"
#~ "                    const char *md);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_md_detail (guestfs_h *g,\n"
#~ "                    const char *md);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_mdstat_list *\n"
#~ " guestfs_md_stat (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_mdstat_list *\n"
#~ " guestfs_md_stat (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_md_stop (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_md_stop (guestfs_h *g,\n"
#~ "                  const char *md);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkdir_mode (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     int mode);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkdir_mode (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     int mode);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkdir_p (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkdir_p (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mkdtemp (guestfs_h *g,\n"
#~ "                  const char *tmpl);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mkdtemp (guestfs_h *g,\n"
#~ "                  const char *tmpl);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKE2FS_BLOCKSCOUNT, int64_t blockscount,\n"
#~ " GUESTFS_MKE2FS_BLOCKSIZE, int64_t blocksize,\n"
#~ " GUESTFS_MKE2FS_FRAGSIZE, int64_t fragsize,\n"
#~ " GUESTFS_MKE2FS_BLOCKSPERGROUP, int64_t blockspergroup,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFGROUPS, int64_t numberofgroups,\n"
#~ " GUESTFS_MKE2FS_BYTESPERINODE, int64_t bytesperinode,\n"
#~ " GUESTFS_MKE2FS_INODESIZE, int64_t inodesize,\n"
#~ " GUESTFS_MKE2FS_JOURNALSIZE, int64_t journalsize,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFINODES, int64_t numberofinodes,\n"
#~ " GUESTFS_MKE2FS_STRIDESIZE, int64_t stridesize,\n"
#~ " GUESTFS_MKE2FS_STRIPEWIDTH, int64_t stripewidth,\n"
#~ " GUESTFS_MKE2FS_MAXONLINERESIZE, int64_t maxonlineresize,\n"
#~ " GUESTFS_MKE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_MKE2FS_MMPUPDATEINTERVAL, int mmpupdateinterval,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEVICE, const char *journaldevice,\n"
#~ " GUESTFS_MKE2FS_LABEL, const char *label,\n"
#~ " GUESTFS_MKE2FS_LASTMOUNTEDDIR, const char *lastmounteddir,\n"
#~ " GUESTFS_MKE2FS_CREATOROS, const char *creatoros,\n"
#~ " GUESTFS_MKE2FS_FSTYPE, const char *fstype,\n"
#~ " GUESTFS_MKE2FS_USAGETYPE, const char *usagetype,\n"
#~ " GUESTFS_MKE2FS_UUID, const char *uuid,\n"
#~ " GUESTFS_MKE2FS_FORCECREATE, int forcecreate,\n"
#~ " GUESTFS_MKE2FS_WRITESBANDGROUPONLY, int writesbandgrouponly,\n"
#~ " GUESTFS_MKE2FS_LAZYITABLEINIT, int lazyitableinit,\n"
#~ " GUESTFS_MKE2FS_LAZYJOURNALINIT, int lazyjournalinit,\n"
#~ " GUESTFS_MKE2FS_TESTFS, int testfs,\n"
#~ " GUESTFS_MKE2FS_DISCARD, int discard,\n"
#~ " GUESTFS_MKE2FS_QUOTATYPE, int quotatype,\n"
#~ " GUESTFS_MKE2FS_EXTENT, int extent,\n"
#~ " GUESTFS_MKE2FS_FILETYPE, int filetype,\n"
#~ " GUESTFS_MKE2FS_FLEXBG, int flexbg,\n"
#~ " GUESTFS_MKE2FS_HASJOURNAL, int hasjournal,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEV, int journaldev,\n"
#~ " GUESTFS_MKE2FS_LARGEFILE, int largefile,\n"
#~ " GUESTFS_MKE2FS_QUOTA, int quota,\n"
#~ " GUESTFS_MKE2FS_RESIZEINODE, int resizeinode,\n"
#~ " GUESTFS_MKE2FS_SPARSESUPER, int sparsesuper,\n"
#~ " GUESTFS_MKE2FS_UNINITBG, int uninitbg,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKE2FS_BLOCKSCOUNT, int64_t blockscount,\n"
#~ " GUESTFS_MKE2FS_BLOCKSIZE, int64_t blocksize,\n"
#~ " GUESTFS_MKE2FS_FRAGSIZE, int64_t fragsize,\n"
#~ " GUESTFS_MKE2FS_BLOCKSPERGROUP, int64_t blockspergroup,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFGROUPS, int64_t numberofgroups,\n"
#~ " GUESTFS_MKE2FS_BYTESPERINODE, int64_t bytesperinode,\n"
#~ " GUESTFS_MKE2FS_INODESIZE, int64_t inodesize,\n"
#~ " GUESTFS_MKE2FS_JOURNALSIZE, int64_t journalsize,\n"
#~ " GUESTFS_MKE2FS_NUMBEROFINODES, int64_t numberofinodes,\n"
#~ " GUESTFS_MKE2FS_STRIDESIZE, int64_t stridesize,\n"
#~ " GUESTFS_MKE2FS_STRIPEWIDTH, int64_t stripewidth,\n"
#~ " GUESTFS_MKE2FS_MAXONLINERESIZE, int64_t maxonlineresize,\n"
#~ " GUESTFS_MKE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_MKE2FS_MMPUPDATEINTERVAL, int mmpupdateinterval,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEVICE, const char *journaldevice,\n"
#~ " GUESTFS_MKE2FS_LABEL, const char *label,\n"
#~ " GUESTFS_MKE2FS_LASTMOUNTEDDIR, const char *lastmounteddir,\n"
#~ " GUESTFS_MKE2FS_CREATOROS, const char *creatoros,\n"
#~ " GUESTFS_MKE2FS_FSTYPE, const char *fstype,\n"
#~ " GUESTFS_MKE2FS_USAGETYPE, const char *usagetype,\n"
#~ " GUESTFS_MKE2FS_UUID, const char *uuid,\n"
#~ " GUESTFS_MKE2FS_FORCECREATE, int forcecreate,\n"
#~ " GUESTFS_MKE2FS_WRITESBANDGROUPONLY, int writesbandgrouponly,\n"
#~ " GUESTFS_MKE2FS_LAZYITABLEINIT, int lazyitableinit,\n"
#~ " GUESTFS_MKE2FS_LAZYJOURNALINIT, int lazyjournalinit,\n"
#~ " GUESTFS_MKE2FS_TESTFS, int testfs,\n"
#~ " GUESTFS_MKE2FS_DISCARD, int discard,\n"
#~ " GUESTFS_MKE2FS_QUOTATYPE, int quotatype,\n"
#~ " GUESTFS_MKE2FS_EXTENT, int extent,\n"
#~ " GUESTFS_MKE2FS_FILETYPE, int filetype,\n"
#~ " GUESTFS_MKE2FS_FLEXBG, int flexbg,\n"
#~ " GUESTFS_MKE2FS_HASJOURNAL, int hasjournal,\n"
#~ " GUESTFS_MKE2FS_JOURNALDEV, int journaldev,\n"
#~ " GUESTFS_MKE2FS_LARGEFILE, int largefile,\n"
#~ " GUESTFS_MKE2FS_QUOTA, int quota,\n"
#~ " GUESTFS_MKE2FS_RESIZEINODE, int resizeinode,\n"
#~ " GUESTFS_MKE2FS_SPARSESUPER, int sparsesuper,\n"
#~ " GUESTFS_MKE2FS_UNINITBG, int uninitbg,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_va (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_argv (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const struct guestfs_mke2fs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_argv (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const struct guestfs_mke2fs_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_J (guestfs_h *g,\n"
#~ "                   const char *fstype,\n"
#~ "                   int blocksize,\n"
#~ "                   const char *device,\n"
#~ "                   const char *journal);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_J (guestfs_h *g,\n"
#~ "                   const char *fstype,\n"
#~ "                   int blocksize,\n"
#~ "                   const char *device,\n"
#~ "                   const char *journal);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_JL (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_JL (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2fs_JU (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2fs_JU (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    int blocksize,\n"
#~ "                    const char *device,\n"
#~ "                    const char *uuid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2journal (guestfs_h *g,\n"
#~ "                      int blocksize,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2journal (guestfs_h *g,\n"
#~ "                      int blocksize,\n"
#~ "                      const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2journal_L (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *label,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2journal_L (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *label,\n"
#~ "                        const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mke2journal_U (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *uuid,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mke2journal_U (guestfs_h *g,\n"
#~ "                        int blocksize,\n"
#~ "                        const char *uuid,\n"
#~ "                        const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfifo (guestfs_h *g,\n"
#~ "                 int mode,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfifo (guestfs_h *g,\n"
#~ "                 int mode,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs (guestfs_h *g,\n"
#~ "               const char *fstype,\n"
#~ "               const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_opts (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_opts (guestfs_h *g,\n"
#~ "                    const char *fstype,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_opts_va (guestfs_h *g,\n"
#~ "                       const char *fstype,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_opts_va (guestfs_h *g,\n"
#~ "                       const char *fstype,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_opts_argv (guestfs_h *g,\n"
#~ "                         const char *fstype,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_mkfs_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_opts_argv (guestfs_h *g,\n"
#~ "                         const char *fstype,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_mkfs_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_b (guestfs_h *g,\n"
#~ "                 const char *fstype,\n"
#~ "                 int blocksize,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_b (guestfs_h *g,\n"
#~ "                 const char *fstype,\n"
#~ "                 int blocksize,\n"
#~ "                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs (guestfs_h *g,\n"
#~ "                     char *const *devices,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs (guestfs_h *g,\n"
#~ "                     char *const *devices,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
#~ " GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
#~ " GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
#~ " GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
#~ " GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
#~ " GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
#~ " GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
#~ " GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKFS_BTRFS_ALLOCSTART, int64_t allocstart,\n"
#~ " GUESTFS_MKFS_BTRFS_BYTECOUNT, int64_t bytecount,\n"
#~ " GUESTFS_MKFS_BTRFS_DATATYPE, const char *datatype,\n"
#~ " GUESTFS_MKFS_BTRFS_LEAFSIZE, int leafsize,\n"
#~ " GUESTFS_MKFS_BTRFS_LABEL, const char *label,\n"
#~ " GUESTFS_MKFS_BTRFS_METADATA, const char *metadata,\n"
#~ " GUESTFS_MKFS_BTRFS_NODESIZE, int nodesize,\n"
#~ " GUESTFS_MKFS_BTRFS_SECTORSIZE, int sectorsize,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
#~ "                        char *const *devices,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_va (guestfs_h *g,\n"
#~ "                        char *const *devices,\n"
#~ "                        va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
#~ "                          char *const *devices,\n"
#~ "                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkfs_btrfs_argv (guestfs_h *g,\n"
#~ "                          char *const *devices,\n"
#~ "                          const struct guestfs_mkfs_btrfs_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mklost_and_found (guestfs_h *g,\n"
#~ "                           const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mklost_and_found (guestfs_h *g,\n"
#~ "                           const char *mountpoint);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mknod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                int devmajor,\n"
#~ "                int devminor,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mknod (guestfs_h *g,\n"
#~ "                int mode,\n"
#~ "                int devmajor,\n"
#~ "                int devminor,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mknod_b (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mknod_b (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mknod_c (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mknod_c (guestfs_h *g,\n"
#~ "                  int mode,\n"
#~ "                  int devmajor,\n"
#~ "                  int devminor,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_opts (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_opts (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
#~ " GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKSWAP_OPTS_LABEL, const char *label,\n"
#~ " GUESTFS_MKSWAP_OPTS_UUID, const char *uuid,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_opts_va (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_opts_va (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_opts_argv (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const struct guestfs_mkswap_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_opts_argv (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const struct guestfs_mkswap_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_L (guestfs_h *g,\n"
#~ "                   const char *label,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_L (guestfs_h *g,\n"
#~ "                   const char *label,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_U (guestfs_h *g,\n"
#~ "                   const char *uuid,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_U (guestfs_h *g,\n"
#~ "                   const char *uuid,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mkswap_file (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mkswap_file (guestfs_h *g,\n"
#~ "                      const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mktemp (guestfs_h *g,\n"
#~ "                 const char *tmpl,\n"
#~ "                 ...);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mktemp (guestfs_h *g,\n"
#~ "                 const char *tmpl,\n"
#~ "                 ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MKTEMP_SUFFIX, const char *suffix,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MKTEMP_SUFFIX, const char *suffix,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mktemp_va (guestfs_h *g,\n"
#~ "                    const char *tmpl,\n"
#~ "                    va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mktemp_va (guestfs_h *g,\n"
#~ "                    const char *tmpl,\n"
#~ "                    va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_mktemp_argv (guestfs_h *g,\n"
#~ "                      const char *tmpl,\n"
#~ "                      const struct guestfs_mktemp_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_mktemp_argv (guestfs_h *g,\n"
#~ "                      const char *tmpl,\n"
#~ "                      const struct guestfs_mktemp_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_modprobe (guestfs_h *g,\n"
#~ "                   const char *modulename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_modprobe (guestfs_h *g,\n"
#~ "                   const char *modulename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount (guestfs_h *g,\n"
#~ "                const char *mountable,\n"
#~ "                const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount (guestfs_h *g,\n"
#~ "                const char *mountable,\n"
#~ "                const char *mountpoint);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_9p (guestfs_h *g,\n"
#~ "                   const char *mounttag,\n"
#~ "                   const char *mountpoint,\n"
#~ "                   ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_9p (guestfs_h *g,\n"
#~ "                   const char *mounttag,\n"
#~ "                   const char *mountpoint,\n"
#~ "                   ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MOUNT_9P_OPTIONS, const char *options,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_9p_va (guestfs_h *g,\n"
#~ "                      const char *mounttag,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_9p_va (guestfs_h *g,\n"
#~ "                      const char *mounttag,\n"
#~ "                      const char *mountpoint,\n"
#~ "                      va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_9p_argv (guestfs_h *g,\n"
#~ "                        const char *mounttag,\n"
#~ "                        const char *mountpoint,\n"
#~ "                        const struct guestfs_mount_9p_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_9p_argv (guestfs_h *g,\n"
#~ "                        const char *mounttag,\n"
#~ "                        const char *mountpoint,\n"
#~ "                        const struct guestfs_mount_9p_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local (guestfs_h *g,\n"
#~ "                      const char *localmountpoint,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local (guestfs_h *g,\n"
#~ "                      const char *localmountpoint,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
#~ " GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
#~ " GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
#~ " GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_MOUNT_LOCAL_READONLY, int readonly,\n"
#~ " GUESTFS_MOUNT_LOCAL_OPTIONS, const char *options,\n"
#~ " GUESTFS_MOUNT_LOCAL_CACHETIMEOUT, int cachetimeout,\n"
#~ " GUESTFS_MOUNT_LOCAL_DEBUGCALLS, int debugcalls,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local_va (guestfs_h *g,\n"
#~ "                         const char *localmountpoint,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local_va (guestfs_h *g,\n"
#~ "                         const char *localmountpoint,\n"
#~ "                         va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local_argv (guestfs_h *g,\n"
#~ "                           const char *localmountpoint,\n"
#~ "                           const struct guestfs_mount_local_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local_argv (guestfs_h *g,\n"
#~ "                           const char *localmountpoint,\n"
#~ "                           const struct guestfs_mount_local_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_local_run (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_local_run (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_loop (guestfs_h *g,\n"
#~ "                     const char *file,\n"
#~ "                     const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_loop (guestfs_h *g,\n"
#~ "                     const char *file,\n"
#~ "                     const char *mountpoint);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_options (guestfs_h *g,\n"
#~ "                        const char *options,\n"
#~ "                        const char *mountable,\n"
#~ "                        const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_options (guestfs_h *g,\n"
#~ "                        const char *options,\n"
#~ "                        const char *mountable,\n"
#~ "                        const char *mountpoint);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_ro (guestfs_h *g,\n"
#~ "                   const char *mountable,\n"
#~ "                   const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_ro (guestfs_h *g,\n"
#~ "                   const char *mountable,\n"
#~ "                   const char *mountpoint);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mount_vfs (guestfs_h *g,\n"
#~ "                    const char *options,\n"
#~ "                    const char *vfstype,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *mountpoint);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mount_vfs (guestfs_h *g,\n"
#~ "                    const char *options,\n"
#~ "                    const char *vfstype,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *mountpoint);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_mountpoints (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_mountpoints (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_mounts (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_mounts (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_mv (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_mv (guestfs_h *g,\n"
#~ "             const char *src,\n"
#~ "             const char *dest);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_nr_devices (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_nr_devices (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfs_3g_probe (guestfs_h *g,\n"
#~ "                        int rw,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfs_3g_probe (guestfs_h *g,\n"
#~ "                        int rw,\n"
#~ "                        const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_in (guestfs_h *g,\n"
#~ "                       const char *backupfile,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_in (guestfs_h *g,\n"
#~ "                       const char *backupfile,\n"
#~ "                       const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_out (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *backupfile,\n"
#~ "                        ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_out (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *backupfile,\n"
#~ "                        ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
#~ " GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
#~ " GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
#~ " GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
#~ " GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_NTFSCLONE_OUT_METADATAONLY, int metadataonly,\n"
#~ " GUESTFS_NTFSCLONE_OUT_RESCUE, int rescue,\n"
#~ " GUESTFS_NTFSCLONE_OUT_IGNOREFSCHECK, int ignorefscheck,\n"
#~ " GUESTFS_NTFSCLONE_OUT_PRESERVETIMESTAMPS, int preservetimestamps,\n"
#~ " GUESTFS_NTFSCLONE_OUT_FORCE, int force,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_va (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const char *backupfile,\n"
#~ "                           va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_va (guestfs_h *g,\n"
#~ "                           const char *device,\n"
#~ "                           const char *backupfile,\n"
#~ "                           va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *backupfile,\n"
#~ "                             const struct guestfs_ntfsclone_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsclone_out_argv (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             const char *backupfile,\n"
#~ "                             const struct guestfs_ntfsclone_out_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsfix (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsfix (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_NTFSFIX_CLEARBADSECTORS, int clearbadsectors,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsfix_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsfix_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsfix_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_ntfsfix_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsfix_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_ntfsfix_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize (guestfs_h *g,\n"
#~ "                     const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
#~ " GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_NTFSRESIZE_OPTS_SIZE, int64_t size,\n"
#~ " GUESTFS_NTFSRESIZE_OPTS_FORCE, int force,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_va (guestfs_h *g,\n"
#~ "                             const char *device,\n"
#~ "                             va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
#~ "                               const char *device,\n"
#~ "                               const struct guestfs_ntfsresize_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_opts_argv (guestfs_h *g,\n"
#~ "                               const char *device,\n"
#~ "                               const struct guestfs_ntfsresize_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ntfsresize_size (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ntfsresize_size (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int64_t size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_parse_environment (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_parse_environment (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_parse_environment_list (guestfs_h *g,\n"
#~ "                                 char *const *environment);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_parse_environment_list (guestfs_h *g,\n"
#~ "                                 char *const *environment);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_add (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   const char *prlogex,\n"
#~ "                   int64_t startsect,\n"
#~ "                   int64_t endsect);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_add (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   const char *prlogex,\n"
#~ "                   int64_t startsect,\n"
#~ "                   int64_t endsect);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_del (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_del (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_disk (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_disk (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_get_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_get_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_get_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_get_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_get_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_get_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_get_parttype (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_get_parttype (guestfs_h *g,\n"
#~ "                            const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_init (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_init (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    const char *parttype);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_partition_list *\n"
#~ " guestfs_part_list (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_partition_list *\n"
#~ " guestfs_part_list (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            int bootable);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_bootable (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            int bootable);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            const char *guid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_gpt_type (guestfs_h *g,\n"
#~ "                            const char *device,\n"
#~ "                            int partnum,\n"
#~ "                            const char *guid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum,\n"
#~ "                          int idbyte);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_mbr_id (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          int partnum,\n"
#~ "                          int idbyte);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_set_name (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int partnum,\n"
#~ "                        const char *name);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_set_name (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int partnum,\n"
#~ "                        const char *name);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_part_to_dev (guestfs_h *g,\n"
#~ "                      const char *partition);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_part_to_dev (guestfs_h *g,\n"
#~ "                      const char *partition);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_part_to_partnum (guestfs_h *g,\n"
#~ "                          const char *partition);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_part_to_partnum (guestfs_h *g,\n"
#~ "                          const char *partition);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_ping_daemon (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_ping_daemon (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_pread (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                int count,\n"
#~ "                int64_t offset,\n"
#~ "                size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_pread (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                int count,\n"
#~ "                int64_t offset,\n"
#~ "                size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_pread_device (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       int count,\n"
#~ "                       int64_t offset,\n"
#~ "                       size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_pread_device (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       int count,\n"
#~ "                       int64_t offset,\n"
#~ "                       size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvchange_uuid (guestfs_h *g,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvchange_uuid (guestfs_h *g,\n"
#~ "                        const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvchange_uuid_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvchange_uuid_all (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvcreate (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvcreate (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvremove (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvresize (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvresize (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pvresize_size (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pvresize_size (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        int64_t size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_pvs (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_pvs (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_pv_list *\n"
#~ " guestfs_pvs_full (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_lvm_pv_list *\n"
#~ " guestfs_pvs_full (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_pvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_pvuuid (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pwrite (guestfs_h *g,\n"
#~ "                 const char *path,\n"
#~ "                 const char *content,\n"
#~ "                 size_t content_size,\n"
#~ "                 int64_t offset);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pwrite (guestfs_h *g,\n"
#~ "                 const char *path,\n"
#~ "                 const char *content,\n"
#~ "                 size_t content_size,\n"
#~ "                 int64_t offset);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_pwrite_device (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *content,\n"
#~ "                        size_t content_size,\n"
#~ "                        int64_t offset);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_pwrite_device (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const char *content,\n"
#~ "                        size_t content_size,\n"
#~ "                        int64_t offset);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_read_file (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_read_file (guestfs_h *g,\n"
#~ "                    const char *path,\n"
#~ "                    size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_read_lines (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_read_lines (guestfs_h *g,\n"
#~ "                     const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_dirent_list *\n"
#~ " guestfs_readdir (guestfs_h *g,\n"
#~ "                  const char *dir);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_dirent_list *\n"
#~ " guestfs_readdir (guestfs_h *g,\n"
#~ "                  const char *dir);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_readlink (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_readlink (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_readlinklist (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       char *const *names);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_readlinklist (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       char *const *names);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_realpath (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_realpath (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_remount (guestfs_h *g,\n"
#~ "                  const char *mountpoint,\n"
#~ "                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_remount (guestfs_h *g,\n"
#~ "                  const char *mountpoint,\n"
#~ "                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_REMOUNT_RW, int rw,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_REMOUNT_RW, int rw,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_remount_va (guestfs_h *g,\n"
#~ "                     const char *mountpoint,\n"
#~ "                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_remount_va (guestfs_h *g,\n"
#~ "                     const char *mountpoint,\n"
#~ "                     va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_remount_argv (guestfs_h *g,\n"
#~ "                       const char *mountpoint,\n"
#~ "                       const struct guestfs_remount_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_remount_argv (guestfs_h *g,\n"
#~ "                       const char *mountpoint,\n"
#~ "                       const struct guestfs_remount_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_remove_drive (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_remove_drive (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_removexattr (guestfs_h *g,\n"
#~ "                      const char *xattr,\n"
#~ "                      const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_removexattr (guestfs_h *g,\n"
#~ "                      const char *xattr,\n"
#~ "                      const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rename (guestfs_h *g,\n"
#~ "                 const char *oldpath,\n"
#~ "                 const char *newpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rename (guestfs_h *g,\n"
#~ "                 const char *oldpath,\n"
#~ "                 const char *newpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_resize2fs (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_resize2fs (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_resize2fs_M (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_resize2fs_M (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_resize2fs_size (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_resize2fs_size (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         int64_t size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rm (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rm (guestfs_h *g,\n"
#~ "             const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rm_f (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rm_f (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rm_rf (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rm_rf (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rmdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rmdir (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rmmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rmmountpoint (guestfs_h *g,\n"
#~ "                       const char *exemptpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync (guestfs_h *g,\n"
#~ "                const char *src,\n"
#~ "                const char *dest,\n"
#~ "                ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync (guestfs_h *g,\n"
#~ "                const char *src,\n"
#~ "                const char *dest,\n"
#~ "                ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_RSYNC_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_DELETEDEST, int deletedest,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_RSYNC_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_DELETEDEST, int deletedest,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_va (guestfs_h *g,\n"
#~ "                   const char *src,\n"
#~ "                   const char *dest,\n"
#~ "                   va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_va (guestfs_h *g,\n"
#~ "                   const char *src,\n"
#~ "                   const char *dest,\n"
#~ "                   va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_argv (guestfs_h *g,\n"
#~ "                     const char *src,\n"
#~ "                     const char *dest,\n"
#~ "                     const struct guestfs_rsync_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_argv (guestfs_h *g,\n"
#~ "                     const char *src,\n"
#~ "                     const char *dest,\n"
#~ "                     const struct guestfs_rsync_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_in (guestfs_h *g,\n"
#~ "                   const char *remote,\n"
#~ "                   const char *dest,\n"
#~ "                   ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_in (guestfs_h *g,\n"
#~ "                   const char *remote,\n"
#~ "                   const char *dest,\n"
#~ "                   ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_RSYNC_IN_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_IN_DELETEDEST, int deletedest,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_RSYNC_IN_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_IN_DELETEDEST, int deletedest,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_in_va (guestfs_h *g,\n"
#~ "                      const char *remote,\n"
#~ "                      const char *dest,\n"
#~ "                      va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_in_va (guestfs_h *g,\n"
#~ "                      const char *remote,\n"
#~ "                      const char *dest,\n"
#~ "                      va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_in_argv (guestfs_h *g,\n"
#~ "                        const char *remote,\n"
#~ "                        const char *dest,\n"
#~ "                        const struct guestfs_rsync_in_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_in_argv (guestfs_h *g,\n"
#~ "                        const char *remote,\n"
#~ "                        const char *dest,\n"
#~ "                        const struct guestfs_rsync_in_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_out (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *remote,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_out (guestfs_h *g,\n"
#~ "                    const char *src,\n"
#~ "                    const char *remote,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_RSYNC_OUT_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_OUT_DELETEDEST, int deletedest,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_RSYNC_OUT_ARCHIVE, int archive,\n"
#~ " GUESTFS_RSYNC_OUT_DELETEDEST, int deletedest,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_out_va (guestfs_h *g,\n"
#~ "                       const char *src,\n"
#~ "                       const char *remote,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_out_va (guestfs_h *g,\n"
#~ "                       const char *src,\n"
#~ "                       const char *remote,\n"
#~ "                       va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_rsync_out_argv (guestfs_h *g,\n"
#~ "                         const char *src,\n"
#~ "                         const char *remote,\n"
#~ "                         const struct guestfs_rsync_out_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_rsync_out_argv (guestfs_h *g,\n"
#~ "                         const char *src,\n"
#~ "                         const char *remote,\n"
#~ "                         const struct guestfs_rsync_out_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_scrub_device (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_scrub_device (guestfs_h *g,\n"
#~ "                       const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_scrub_file (guestfs_h *g,\n"
#~ "                     const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_scrub_file (guestfs_h *g,\n"
#~ "                     const char *file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_scrub_freespace (guestfs_h *g,\n"
#~ "                          const char *dir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_scrub_freespace (guestfs_h *g,\n"
#~ "                          const char *dir);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_append (guestfs_h *g,\n"
#~ "                     const char *append);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_append (guestfs_h *g,\n"
#~ "                     const char *append);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_attach_method (guestfs_h *g,\n"
#~ "                            const char *backend);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_attach_method (guestfs_h *g,\n"
#~ "                            const char *backend);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_autosync (guestfs_h *g,\n"
#~ "                       int autosync);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_autosync (guestfs_h *g,\n"
#~ "                       int autosync);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_backend (guestfs_h *g,\n"
#~ "                      const char *backend);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_backend (guestfs_h *g,\n"
#~ "                      const char *backend);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_cachedir (guestfs_h *g,\n"
#~ "                       const char *cachedir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_cachedir (guestfs_h *g,\n"
#~ "                       const char *cachedir);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_direct (guestfs_h *g,\n"
#~ "                     int direct);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_direct (guestfs_h *g,\n"
#~ "                     int direct);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file,\n"
#~ "                      const char *attrs,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2attrs (guestfs_h *g,\n"
#~ "                      const char *file,\n"
#~ "                      const char *attrs,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_SET_E2ATTRS_CLEAR, int clear,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2attrs_va (guestfs_h *g,\n"
#~ "                         const char *file,\n"
#~ "                         const char *attrs,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2attrs_va (guestfs_h *g,\n"
#~ "                         const char *file,\n"
#~ "                         const char *attrs,\n"
#~ "                         va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2attrs_argv (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           const char *attrs,\n"
#~ "                           const struct guestfs_set_e2attrs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2attrs_argv (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           const char *attrs,\n"
#~ "                           const struct guestfs_set_e2attrs_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2generation (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           int64_t generation);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2generation (guestfs_h *g,\n"
#~ "                           const char *file,\n"
#~ "                           int64_t generation);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2label (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2label (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_e2uuid (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     const char *uuid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_hv (guestfs_h *g,\n"
#~ "                 const char *hv);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_hv (guestfs_h *g,\n"
#~ "                 const char *hv);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_label (guestfs_h *g,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_label (guestfs_h *g,\n"
#~ "                    const char *mountable,\n"
#~ "                    const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_libvirt_requested_credential (guestfs_h *g,\n"
#~ "                                           int index,\n"
#~ "                                           const char *cred,\n"
#~ "                                           size_t cred_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_libvirt_requested_credential (guestfs_h *g,\n"
#~ "                                           int index,\n"
#~ "                                           const char *cred,\n"
#~ "                                           size_t cred_size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_libvirt_supported_credentials (guestfs_h *g,\n"
#~ "                                            char *const *creds);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_libvirt_supported_credentials (guestfs_h *g,\n"
#~ "                                            char *const *creds);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_memsize (guestfs_h *g,\n"
#~ "                      int memsize);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_memsize (guestfs_h *g,\n"
#~ "                      int memsize);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_network (guestfs_h *g,\n"
#~ "                      int network);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_network (guestfs_h *g,\n"
#~ "                      int network);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_path (guestfs_h *g,\n"
#~ "                   const char *searchpath);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_path (guestfs_h *g,\n"
#~ "                   const char *searchpath);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_pgroup (guestfs_h *g,\n"
#~ "                     int pgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_pgroup (guestfs_h *g,\n"
#~ "                     int pgroup);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_program (guestfs_h *g,\n"
#~ "                      const char *program);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_program (guestfs_h *g,\n"
#~ "                      const char *program);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_qemu (guestfs_h *g,\n"
#~ "                   const char *hv);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_qemu (guestfs_h *g,\n"
#~ "                   const char *hv);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_recovery_proc (guestfs_h *g,\n"
#~ "                            int recoveryproc);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_recovery_proc (guestfs_h *g,\n"
#~ "                            int recoveryproc);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_selinux (guestfs_h *g,\n"
#~ "                      int selinux);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_selinux (guestfs_h *g,\n"
#~ "                      int selinux);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_smp (guestfs_h *g,\n"
#~ "                  int smp);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_smp (guestfs_h *g,\n"
#~ "                  int smp);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_tmpdir (guestfs_h *g,\n"
#~ "                     const char *tmpdir);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_tmpdir (guestfs_h *g,\n"
#~ "                     const char *tmpdir);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_trace (guestfs_h *g,\n"
#~ "                    int trace);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_trace (guestfs_h *g,\n"
#~ "                    int trace);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_uuid (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_uuid (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   const char *uuid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_set_verbose (guestfs_h *g,\n"
#~ "                      int verbose);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_set_verbose (guestfs_h *g,\n"
#~ "                      int verbose);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_setcon (guestfs_h *g,\n"
#~ "                 const char *context);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_setcon (guestfs_h *g,\n"
#~ "                 const char *context);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_setxattr (guestfs_h *g,\n"
#~ "                   const char *xattr,\n"
#~ "                   const char *val,\n"
#~ "                   int vallen,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_setxattr (guestfs_h *g,\n"
#~ "                   const char *xattr,\n"
#~ "                   const char *val,\n"
#~ "                   int vallen,\n"
#~ "                   const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sfdisk (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 int cyls,\n"
#~ "                 int heads,\n"
#~ "                 int sectors,\n"
#~ "                 char *const *lines);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sfdisk (guestfs_h *g,\n"
#~ "                 const char *device,\n"
#~ "                 int cyls,\n"
#~ "                 int heads,\n"
#~ "                 int sectors,\n"
#~ "                 char *const *lines);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sfdiskM (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  char *const *lines);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sfdiskM (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  char *const *lines);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sfdisk_N (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum,\n"
#~ "                   int cyls,\n"
#~ "                   int heads,\n"
#~ "                   int sectors,\n"
#~ "                   const char *line);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sfdisk_N (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   int partnum,\n"
#~ "                   int cyls,\n"
#~ "                   int heads,\n"
#~ "                   int sectors,\n"
#~ "                   const char *line);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
#~ "                               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sfdisk_disk_geometry (guestfs_h *g,\n"
#~ "                               const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
#~ "                                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sfdisk_kernel_geometry (guestfs_h *g,\n"
#~ "                                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sfdisk_l (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sfdisk_l (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_sh (guestfs_h *g,\n"
#~ "             const char *command);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_sh (guestfs_h *g,\n"
#~ "             const char *command);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_sh_lines (guestfs_h *g,\n"
#~ "                   const char *command);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_sh_lines (guestfs_h *g,\n"
#~ "                   const char *command);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_shutdown (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_shutdown (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sleep (guestfs_h *g,\n"
#~ "                int secs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sleep (guestfs_h *g,\n"
#~ "                int secs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_stat (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_stat *\n"
#~ " guestfs_stat (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_statvfs *\n"
#~ " guestfs_statvfs (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_statvfs *\n"
#~ " guestfs_statvfs (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_strings (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_strings (guestfs_h *g,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_strings_e (guestfs_h *g,\n"
#~ "                    const char *encoding,\n"
#~ "                    const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_strings_e (guestfs_h *g,\n"
#~ "                    const char *encoding,\n"
#~ "                    const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_device (guestfs_h *g,\n"
#~ "                         const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_file (guestfs_h *g,\n"
#~ "                       const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_file (guestfs_h *g,\n"
#~ "                       const char *file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_label (guestfs_h *g,\n"
#~ "                        const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_label (guestfs_h *g,\n"
#~ "                        const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapoff_uuid (guestfs_h *g,\n"
#~ "                       const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapoff_uuid (guestfs_h *g,\n"
#~ "                       const char *uuid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_device (guestfs_h *g,\n"
#~ "                        const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_device (guestfs_h *g,\n"
#~ "                        const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_file (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_file (guestfs_h *g,\n"
#~ "                      const char *file);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_label (guestfs_h *g,\n"
#~ "                       const char *label);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_swapon_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_swapon_uuid (guestfs_h *g,\n"
#~ "                      const char *uuid);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_sync (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_sync (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_syslinux (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_syslinux (guestfs_h *g,\n"
#~ "                   const char *device,\n"
#~ "                   ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_SYSLINUX_DIRECTORY, const char *directory,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_SYSLINUX_DIRECTORY, const char *directory,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_syslinux_va (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_syslinux_va (guestfs_h *g,\n"
#~ "                      const char *device,\n"
#~ "                      va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_syslinux_argv (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const struct guestfs_syslinux_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_syslinux_argv (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        const struct guestfs_syslinux_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_tail (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_tail (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_tail_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_tail_n (guestfs_h *g,\n"
#~ "                 int nrlines,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in (guestfs_h *g,\n"
#~ "                 const char *tarfile,\n"
#~ "                 const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in (guestfs_h *g,\n"
#~ "                 const char *tarfile,\n"
#~ "                 const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in_opts (guestfs_h *g,\n"
#~ "                      const char *tarfile,\n"
#~ "                      const char *directory,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in_opts (guestfs_h *g,\n"
#~ "                      const char *tarfile,\n"
#~ "                      const char *directory,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in_opts_va (guestfs_h *g,\n"
#~ "                         const char *tarfile,\n"
#~ "                         const char *directory,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in_opts_va (guestfs_h *g,\n"
#~ "                         const char *tarfile,\n"
#~ "                         const char *directory,\n"
#~ "                         va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_in_opts_argv (guestfs_h *g,\n"
#~ "                           const char *tarfile,\n"
#~ "                           const char *directory,\n"
#~ "                           const struct guestfs_tar_in_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_in_opts_argv (guestfs_h *g,\n"
#~ "                           const char *tarfile,\n"
#~ "                           const char *directory,\n"
#~ "                           const struct guestfs_tar_in_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarfile);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarfile);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out_opts (guestfs_h *g,\n"
#~ "                       const char *directory,\n"
#~ "                       const char *tarfile,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out_opts (guestfs_h *g,\n"
#~ "                       const char *directory,\n"
#~ "                       const char *tarfile,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out_opts_va (guestfs_h *g,\n"
#~ "                          const char *directory,\n"
#~ "                          const char *tarfile,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out_opts_va (guestfs_h *g,\n"
#~ "                          const char *directory,\n"
#~ "                          const char *tarfile,\n"
#~ "                          va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tar_out_opts_argv (guestfs_h *g,\n"
#~ "                            const char *directory,\n"
#~ "                            const char *tarfile,\n"
#~ "                            const struct guestfs_tar_out_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tar_out_opts_argv (guestfs_h *g,\n"
#~ "                            const char *directory,\n"
#~ "                            const char *tarfile,\n"
#~ "                            const struct guestfs_tar_out_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tgz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tgz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tgz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tgz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_touch (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_touch (guestfs_h *g,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_truncate (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_truncate (guestfs_h *g,\n"
#~ "                   const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_truncate_size (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        int64_t size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_truncate_size (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        int64_t size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tune2fs (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tune2fs (guestfs_h *g,\n"
#~ "                  const char *device,\n"
#~ "                  ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_TUNE2FS_FORCE, int force,\n"
#~ " GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
#~ " GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
#~ " GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
#~ " GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
#~ " GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
#~ " GUESTFS_TUNE2FS_USER, int64_t user,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_TUNE2FS_FORCE, int force,\n"
#~ " GUESTFS_TUNE2FS_MAXMOUNTCOUNT, int maxmountcount,\n"
#~ " GUESTFS_TUNE2FS_MOUNTCOUNT, int mountcount,\n"
#~ " GUESTFS_TUNE2FS_ERRORBEHAVIOR, const char *errorbehavior,\n"
#~ " GUESTFS_TUNE2FS_GROUP, int64_t group,\n"
#~ " GUESTFS_TUNE2FS_INTERVALBETWEENCHECKS, int intervalbetweenchecks,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSPERCENTAGE, int reservedblockspercentage,\n"
#~ " GUESTFS_TUNE2FS_LASTMOUNTEDDIRECTORY, const char *lastmounteddirectory,\n"
#~ " GUESTFS_TUNE2FS_RESERVEDBLOCKSCOUNT, int64_t reservedblockscount,\n"
#~ " GUESTFS_TUNE2FS_USER, int64_t user,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tune2fs_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tune2fs_va (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_tune2fs_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_tune2fs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_tune2fs_argv (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       const struct guestfs_tune2fs_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_tune2fs_l (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_tune2fs_l (guestfs_h *g,\n"
#~ "                    const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_txz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_txz_in (guestfs_h *g,\n"
#~ "                 const char *tarball,\n"
#~ "                 const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_txz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_txz_out (guestfs_h *g,\n"
#~ "                  const char *directory,\n"
#~ "                  const char *tarball);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umask (guestfs_h *g,\n"
#~ "                int mask);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umask (guestfs_h *g,\n"
#~ "                int mask);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount (guestfs_h *g,\n"
#~ "                 const char *pathordevice);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount (guestfs_h *g,\n"
#~ "                 const char *pathordevice);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_opts (guestfs_h *g,\n"
#~ "                      const char *pathordevice,\n"
#~ "                      ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_opts (guestfs_h *g,\n"
#~ "                      const char *pathordevice,\n"
#~ "                      ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_UMOUNT_OPTS_FORCE, int force,\n"
#~ " GUESTFS_UMOUNT_OPTS_LAZYUNMOUNT, int lazyunmount,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_UMOUNT_OPTS_FORCE, int force,\n"
#~ " GUESTFS_UMOUNT_OPTS_LAZYUNMOUNT, int lazyunmount,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_opts_va (guestfs_h *g,\n"
#~ "                         const char *pathordevice,\n"
#~ "                         va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_opts_va (guestfs_h *g,\n"
#~ "                         const char *pathordevice,\n"
#~ "                         va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_opts_argv (guestfs_h *g,\n"
#~ "                           const char *pathordevice,\n"
#~ "                           const struct guestfs_umount_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_opts_argv (guestfs_h *g,\n"
#~ "                           const char *pathordevice,\n"
#~ "                           const struct guestfs_umount_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_all (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_local (guestfs_h *g,\n"
#~ "                       ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_local (guestfs_h *g,\n"
#~ "                       ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_UMOUNT_LOCAL_RETRY, int retry,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_local_va (guestfs_h *g,\n"
#~ "                          va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_local_va (guestfs_h *g,\n"
#~ "                          va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_umount_local_argv (guestfs_h *g,\n"
#~ "                            const struct guestfs_umount_local_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_umount_local_argv (guestfs_h *g,\n"
#~ "                            const struct guestfs_umount_local_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_upload (guestfs_h *g,\n"
#~ "                 const char *filename,\n"
#~ "                 const char *remotefilename);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_upload (guestfs_h *g,\n"
#~ "                 const char *filename,\n"
#~ "                 const char *remotefilename);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_upload_offset (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        const char *remotefilename,\n"
#~ "                        int64_t offset);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_upload_offset (guestfs_h *g,\n"
#~ "                        const char *filename,\n"
#~ "                        const char *remotefilename,\n"
#~ "                        int64_t offset);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_user_cancel (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_user_cancel (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_utimens (guestfs_h *g,\n"
#~ "                  const char *path,\n"
#~ "                  int64_t atsecs,\n"
#~ "                  int64_t atnsecs,\n"
#~ "                  int64_t mtsecs,\n"
#~ "                  int64_t mtnsecs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_utimens (guestfs_h *g,\n"
#~ "                  const char *path,\n"
#~ "                  int64_t atsecs,\n"
#~ "                  int64_t atnsecs,\n"
#~ "                  int64_t mtsecs,\n"
#~ "                  int64_t mtnsecs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_utsname *\n"
#~ " guestfs_utsname (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_utsname *\n"
#~ " guestfs_utsname (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_version *\n"
#~ " guestfs_version (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_version *\n"
#~ " guestfs_version (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vfs_label (guestfs_h *g,\n"
#~ "                    const char *mountable);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vfs_label (guestfs_h *g,\n"
#~ "                    const char *mountable);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vfs_type (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vfs_type (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vfs_uuid (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vfs_uuid (guestfs_h *g,\n"
#~ "                   const char *mountable);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vg_activate (guestfs_h *g,\n"
#~ "                      int activate,\n"
#~ "                      char *const *volgroups);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vg_activate (guestfs_h *g,\n"
#~ "                      int activate,\n"
#~ "                      char *const *volgroups);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vg_activate_all (guestfs_h *g,\n"
#~ "                          int activate);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vg_activate_all (guestfs_h *g,\n"
#~ "                          int activate);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgchange_uuid (guestfs_h *g,\n"
#~ "                        const char *vg);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgchange_uuid (guestfs_h *g,\n"
#~ "                        const char *vg);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgchange_uuid_all (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgchange_uuid_all (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgcreate (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   char *const *physvols);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgcreate (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   char *const *physvols);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_vglvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_vglvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vgmeta (guestfs_h *g,\n"
#~ "                 const char *vgname,\n"
#~ "                 size_t *size_r);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vgmeta (guestfs_h *g,\n"
#~ "                 const char *vgname,\n"
#~ "                 size_t *size_r);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_vgpvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_vgpvuuids (guestfs_h *g,\n"
#~ "                    const char *vgname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgremove (guestfs_h *g,\n"
#~ "                   const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgremove (guestfs_h *g,\n"
#~ "                   const char *vgname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgrename (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   const char *newvolgroup);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgrename (guestfs_h *g,\n"
#~ "                   const char *volgroup,\n"
#~ "                   const char *newvolgroup);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_vgs (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_vgs (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_vg_list *\n"
#~ " guestfs_vgs_full (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_lvm_vg_list *\n"
#~ " guestfs_vgs_full (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_vgscan (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_vgscan (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_vguuid (guestfs_h *g,\n"
#~ "                 const char *vgname);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_vguuid (guestfs_h *g,\n"
#~ "                 const char *vgname);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wait_ready (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wait_ready (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wc_c (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wc_c (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wc_l (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wc_l (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wc_w (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wc_w (guestfs_h *g,\n"
#~ "               const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_wipefs (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_wipefs (guestfs_h *g,\n"
#~ "                 const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_write (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                const char *content,\n"
#~ "                size_t content_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_write (guestfs_h *g,\n"
#~ "                const char *path,\n"
#~ "                const char *content,\n"
#~ "                size_t content_size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_write_append (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *content,\n"
#~ "                       size_t content_size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_write_append (guestfs_h *g,\n"
#~ "                       const char *path,\n"
#~ "                       const char *content,\n"
#~ "                       size_t content_size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_write_file (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     const char *content,\n"
#~ "                     int size);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_write_file (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     const char *content,\n"
#~ "                     int size);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_admin (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_admin (guestfs_h *g,\n"
#~ "                    const char *device,\n"
#~ "                    ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_XFS_ADMIN_EXTUNWRITTEN, int extunwritten,\n"
#~ " GUESTFS_XFS_ADMIN_IMGFILE, int imgfile,\n"
#~ " GUESTFS_XFS_ADMIN_V2LOG, int v2log,\n"
#~ " GUESTFS_XFS_ADMIN_PROJID32BIT, int projid32bit,\n"
#~ " GUESTFS_XFS_ADMIN_LAZYCOUNTER, int lazycounter,\n"
#~ " GUESTFS_XFS_ADMIN_LABEL, const char *label,\n"
#~ " GUESTFS_XFS_ADMIN_UUID, const char *uuid,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_XFS_ADMIN_EXTUNWRITTEN, int extunwritten,\n"
#~ " GUESTFS_XFS_ADMIN_IMGFILE, int imgfile,\n"
#~ " GUESTFS_XFS_ADMIN_V2LOG, int v2log,\n"
#~ " GUESTFS_XFS_ADMIN_PROJID32BIT, int projid32bit,\n"
#~ " GUESTFS_XFS_ADMIN_LAZYCOUNTER, int lazycounter,\n"
#~ " GUESTFS_XFS_ADMIN_LABEL, const char *label,\n"
#~ " GUESTFS_XFS_ADMIN_UUID, const char *uuid,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_admin_va (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_admin_va (guestfs_h *g,\n"
#~ "                       const char *device,\n"
#~ "                       va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_admin_argv (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_xfs_admin_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_admin_argv (guestfs_h *g,\n"
#~ "                         const char *device,\n"
#~ "                         const struct guestfs_xfs_admin_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_growfs (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_growfs (guestfs_h *g,\n"
#~ "                     const char *path,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_XFS_GROWFS_DATASEC, int datasec,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSEC, int logsec,\n"
#~ " GUESTFS_XFS_GROWFS_RTSEC, int rtsec,\n"
#~ " GUESTFS_XFS_GROWFS_DATASIZE, int64_t datasize,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSIZE, int64_t logsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTSIZE, int64_t rtsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTEXTSIZE, int64_t rtextsize,\n"
#~ " GUESTFS_XFS_GROWFS_MAXPCT, int maxpct,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_XFS_GROWFS_DATASEC, int datasec,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSEC, int logsec,\n"
#~ " GUESTFS_XFS_GROWFS_RTSEC, int rtsec,\n"
#~ " GUESTFS_XFS_GROWFS_DATASIZE, int64_t datasize,\n"
#~ " GUESTFS_XFS_GROWFS_LOGSIZE, int64_t logsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTSIZE, int64_t rtsize,\n"
#~ " GUESTFS_XFS_GROWFS_RTEXTSIZE, int64_t rtextsize,\n"
#~ " GUESTFS_XFS_GROWFS_MAXPCT, int maxpct,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_growfs_va (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_growfs_va (guestfs_h *g,\n"
#~ "                        const char *path,\n"
#~ "                        va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_growfs_argv (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          const struct guestfs_xfs_growfs_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_growfs_argv (guestfs_h *g,\n"
#~ "                          const char *path,\n"
#~ "                          const struct guestfs_xfs_growfs_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xfsinfo *\n"
#~ " guestfs_xfs_info (guestfs_h *g,\n"
#~ "                   const char *pathordevice);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_xfsinfo *\n"
#~ " guestfs_xfs_info (guestfs_h *g,\n"
#~ "                   const char *pathordevice);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_repair (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_repair (guestfs_h *g,\n"
#~ "                     const char *device,\n"
#~ "                     ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " GUESTFS_XFS_REPAIR_FORCELOGZERO, int forcelogzero,\n"
#~ " GUESTFS_XFS_REPAIR_NOMODIFY, int nomodify,\n"
#~ " GUESTFS_XFS_REPAIR_NOPREFETCH, int noprefetch,\n"
#~ " GUESTFS_XFS_REPAIR_FORCEGEOMETRY, int forcegeometry,\n"
#~ " GUESTFS_XFS_REPAIR_MAXMEM, int64_t maxmem,\n"
#~ " GUESTFS_XFS_REPAIR_IHASHSIZE, int64_t ihashsize,\n"
#~ " GUESTFS_XFS_REPAIR_BHASHSIZE, int64_t bhashsize,\n"
#~ " GUESTFS_XFS_REPAIR_AGSTRIDE, int64_t agstride,\n"
#~ " GUESTFS_XFS_REPAIR_LOGDEV, const char *logdev,\n"
#~ " GUESTFS_XFS_REPAIR_RTDEV, const char *rtdev,\n"
#~ "\n"
#~ msgstr ""
#~ " GUESTFS_XFS_REPAIR_FORCELOGZERO, int forcelogzero,\n"
#~ " GUESTFS_XFS_REPAIR_NOMODIFY, int nomodify,\n"
#~ " GUESTFS_XFS_REPAIR_NOPREFETCH, int noprefetch,\n"
#~ " GUESTFS_XFS_REPAIR_FORCEGEOMETRY, int forcegeometry,\n"
#~ " GUESTFS_XFS_REPAIR_MAXMEM, int64_t maxmem,\n"
#~ " GUESTFS_XFS_REPAIR_IHASHSIZE, int64_t ihashsize,\n"
#~ " GUESTFS_XFS_REPAIR_BHASHSIZE, int64_t bhashsize,\n"
#~ " GUESTFS_XFS_REPAIR_AGSTRIDE, int64_t agstride,\n"
#~ " GUESTFS_XFS_REPAIR_LOGDEV, const char *logdev,\n"
#~ " GUESTFS_XFS_REPAIR_RTDEV, const char *rtdev,\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_repair_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_repair_va (guestfs_h *g,\n"
#~ "                        const char *device,\n"
#~ "                        va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_xfs_repair_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_xfs_repair_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_xfs_repair_argv (guestfs_h *g,\n"
#~ "                          const char *device,\n"
#~ "                          const struct guestfs_xfs_repair_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zegrep (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zegrep (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zegrepi (guestfs_h *g,\n"
#~ "                  const char *regex,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zegrepi (guestfs_h *g,\n"
#~ "                  const char *regex,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zero (guestfs_h *g,\n"
#~ "               const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zero (guestfs_h *g,\n"
#~ "               const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zero_device (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zero_device (guestfs_h *g,\n"
#~ "                      const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zero_free_space (guestfs_h *g,\n"
#~ "                          const char *directory);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zero_free_space (guestfs_h *g,\n"
#~ "                          const char *directory);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int\n"
#~ " guestfs_zerofree (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"
#~ msgstr ""
#~ " int\n"
#~ " guestfs_zerofree (guestfs_h *g,\n"
#~ "                   const char *device);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zfgrep (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zfgrep (guestfs_h *g,\n"
#~ "                 const char *pattern,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zfgrepi (guestfs_h *g,\n"
#~ "                  const char *pattern,\n"
#~ "                  const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zfgrepi (guestfs_h *g,\n"
#~ "                  const char *pattern,\n"
#~ "                  const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *\n"
#~ " guestfs_zfile (guestfs_h *g,\n"
#~ "                const char *meth,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char *\n"
#~ " guestfs_zfile (guestfs_h *g,\n"
#~ "                const char *meth,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zgrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zgrep (guestfs_h *g,\n"
#~ "                const char *regex,\n"
#~ "                const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **\n"
#~ " guestfs_zgrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"
#~ msgstr ""
#~ " char **\n"
#~ " guestfs_zgrepi (guestfs_h *g,\n"
#~ "                 const char *regex,\n"
#~ "                 const char *path);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_int_bool {\n"
#~ "   int32_t i;\n"
#~ "   int32_t b;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_int_bool {\n"
#~ "   int32_t i;\n"
#~ "   int32_t b;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_pv {\n"
#~ "   char *pv_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char pv_uuid[32];\n"
#~ "   char *pv_fmt;\n"
#~ "   uint64_t pv_size;\n"
#~ "   uint64_t dev_size;\n"
#~ "   uint64_t pv_free;\n"
#~ "   uint64_t pv_used;\n"
#~ "   char *pv_attr;\n"
#~ "   int64_t pv_pe_count;\n"
#~ "   int64_t pv_pe_alloc_count;\n"
#~ "   char *pv_tags;\n"
#~ "   uint64_t pe_start;\n"
#~ "   int64_t pv_mda_count;\n"
#~ "   uint64_t pv_mda_free;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_lvm_pv {\n"
#~ "   char *pv_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char pv_uuid[32];\n"
#~ "   char *pv_fmt;\n"
#~ "   uint64_t pv_size;\n"
#~ "   uint64_t dev_size;\n"
#~ "   uint64_t pv_free;\n"
#~ "   uint64_t pv_used;\n"
#~ "   char *pv_attr;\n"
#~ "   int64_t pv_pe_count;\n"
#~ "   int64_t pv_pe_alloc_count;\n"
#~ "   char *pv_tags;\n"
#~ "   uint64_t pe_start;\n"
#~ "   int64_t pv_mda_count;\n"
#~ "   uint64_t pv_mda_free;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_vg {\n"
#~ "   char *vg_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char vg_uuid[32];\n"
#~ "   char *vg_fmt;\n"
#~ "   char *vg_attr;\n"
#~ "   uint64_t vg_size;\n"
#~ "   uint64_t vg_free;\n"
#~ "   char *vg_sysid;\n"
#~ "   uint64_t vg_extent_size;\n"
#~ "   int64_t vg_extent_count;\n"
#~ "   int64_t vg_free_count;\n"
#~ "   int64_t max_lv;\n"
#~ "   int64_t max_pv;\n"
#~ "   int64_t pv_count;\n"
#~ "   int64_t lv_count;\n"
#~ "   int64_t snap_count;\n"
#~ "   int64_t vg_seqno;\n"
#~ "   char *vg_tags;\n"
#~ "   int64_t vg_mda_count;\n"
#~ "   uint64_t vg_mda_free;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_lvm_vg {\n"
#~ "   char *vg_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char vg_uuid[32];\n"
#~ "   char *vg_fmt;\n"
#~ "   char *vg_attr;\n"
#~ "   uint64_t vg_size;\n"
#~ "   uint64_t vg_free;\n"
#~ "   char *vg_sysid;\n"
#~ "   uint64_t vg_extent_size;\n"
#~ "   int64_t vg_extent_count;\n"
#~ "   int64_t vg_free_count;\n"
#~ "   int64_t max_lv;\n"
#~ "   int64_t max_pv;\n"
#~ "   int64_t pv_count;\n"
#~ "   int64_t lv_count;\n"
#~ "   int64_t snap_count;\n"
#~ "   int64_t vg_seqno;\n"
#~ "   char *vg_tags;\n"
#~ "   int64_t vg_mda_count;\n"
#~ "   uint64_t vg_mda_free;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_lvm_lv {\n"
#~ "   char *lv_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char lv_uuid[32];\n"
#~ "   char *lv_attr;\n"
#~ "   int64_t lv_major;\n"
#~ "   int64_t lv_minor;\n"
#~ "   int64_t lv_kernel_major;\n"
#~ "   int64_t lv_kernel_minor;\n"
#~ "   uint64_t lv_size;\n"
#~ "   int64_t seg_count;\n"
#~ "   char *origin;\n"
#~ "   /* The next field is [0..100] or -1 meaning 'not present': */\n"
#~ "   float snap_percent;\n"
#~ "   /* The next field is [0..100] or -1 meaning 'not present': */\n"
#~ "   float copy_percent;\n"
#~ "   char *move_pv;\n"
#~ "   char *lv_tags;\n"
#~ "   char *mirror_log;\n"
#~ "   char *modules;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_lvm_lv {\n"
#~ "   char *lv_name;\n"
#~ "   /* The next field is NOT nul-terminated, be careful when printing it: */\n"
#~ "   char lv_uuid[32];\n"
#~ "   char *lv_attr;\n"
#~ "   int64_t lv_major;\n"
#~ "   int64_t lv_minor;\n"
#~ "   int64_t lv_kernel_major;\n"
#~ "   int64_t lv_kernel_minor;\n"
#~ "   uint64_t lv_size;\n"
#~ "   int64_t seg_count;\n"
#~ "   char *origin;\n"
#~ "   /* The next field is [0..100] or -1 meaning 'not present': */\n"
#~ "   float snap_percent;\n"
#~ "   /* The next field is [0..100] or -1 meaning 'not present': */\n"
#~ "   float copy_percent;\n"
#~ "   char *move_pv;\n"
#~ "   char *lv_tags;\n"
#~ "   char *mirror_log;\n"
#~ "   char *modules;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_stat {\n"
#~ "   int64_t dev;\n"
#~ "   int64_t ino;\n"
#~ "   int64_t mode;\n"
#~ "   int64_t nlink;\n"
#~ "   int64_t uid;\n"
#~ "   int64_t gid;\n"
#~ "   int64_t rdev;\n"
#~ "   int64_t size;\n"
#~ "   int64_t blksize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t atime;\n"
#~ "   int64_t mtime;\n"
#~ "   int64_t ctime;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_stat {\n"
#~ "   int64_t dev;\n"
#~ "   int64_t ino;\n"
#~ "   int64_t mode;\n"
#~ "   int64_t nlink;\n"
#~ "   int64_t uid;\n"
#~ "   int64_t gid;\n"
#~ "   int64_t rdev;\n"
#~ "   int64_t size;\n"
#~ "   int64_t blksize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t atime;\n"
#~ "   int64_t mtime;\n"
#~ "   int64_t ctime;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_statvfs {\n"
#~ "   int64_t bsize;\n"
#~ "   int64_t frsize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t bfree;\n"
#~ "   int64_t bavail;\n"
#~ "   int64_t files;\n"
#~ "   int64_t ffree;\n"
#~ "   int64_t favail;\n"
#~ "   int64_t fsid;\n"
#~ "   int64_t flag;\n"
#~ "   int64_t namemax;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_statvfs {\n"
#~ "   int64_t bsize;\n"
#~ "   int64_t frsize;\n"
#~ "   int64_t blocks;\n"
#~ "   int64_t bfree;\n"
#~ "   int64_t bavail;\n"
#~ "   int64_t files;\n"
#~ "   int64_t ffree;\n"
#~ "   int64_t favail;\n"
#~ "   int64_t fsid;\n"
#~ "   int64_t flag;\n"
#~ "   int64_t namemax;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_dirent {\n"
#~ "   int64_t ino;\n"
#~ "   char ftyp;\n"
#~ "   char *name;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_dirent {\n"
#~ "   int64_t ino;\n"
#~ "   char ftyp;\n"
#~ "   char *name;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_version {\n"
#~ "   int64_t major;\n"
#~ "   int64_t minor;\n"
#~ "   int64_t release;\n"
#~ "   char *extra;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_version {\n"
#~ "   int64_t major;\n"
#~ "   int64_t minor;\n"
#~ "   int64_t release;\n"
#~ "   char *extra;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xattr {\n"
#~ "   char *attrname;\n"
#~ "   /* The next two fields describe a byte array. */\n"
#~ "   uint32_t attrval_len;\n"
#~ "   char *attrval;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_xattr {\n"
#~ "   char *attrname;\n"
#~ "   /* The next two fields describe a byte array. */\n"
#~ "   uint32_t attrval_len;\n"
#~ "   char *attrval;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_inotify_event {\n"
#~ "   int64_t in_wd;\n"
#~ "   uint32_t in_mask;\n"
#~ "   uint32_t in_cookie;\n"
#~ "   char *in_name;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_inotify_event {\n"
#~ "   int64_t in_wd;\n"
#~ "   uint32_t in_mask;\n"
#~ "   uint32_t in_cookie;\n"
#~ "   char *in_name;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_partition {\n"
#~ "   int32_t part_num;\n"
#~ "   uint64_t part_start;\n"
#~ "   uint64_t part_end;\n"
#~ "   uint64_t part_size;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_partition {\n"
#~ "   int32_t part_num;\n"
#~ "   uint64_t part_start;\n"
#~ "   uint64_t part_end;\n"
#~ "   uint64_t part_size;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application {\n"
#~ "   char *app_name;\n"
#~ "   char *app_display_name;\n"
#~ "   int32_t app_epoch;\n"
#~ "   char *app_version;\n"
#~ "   char *app_release;\n"
#~ "   char *app_install_path;\n"
#~ "   char *app_trans_path;\n"
#~ "   char *app_publisher;\n"
#~ "   char *app_url;\n"
#~ "   char *app_source_package;\n"
#~ "   char *app_summary;\n"
#~ "   char *app_description;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_application {\n"
#~ "   char *app_name;\n"
#~ "   char *app_display_name;\n"
#~ "   int32_t app_epoch;\n"
#~ "   char *app_version;\n"
#~ "   char *app_release;\n"
#~ "   char *app_install_path;\n"
#~ "   char *app_trans_path;\n"
#~ "   char *app_publisher;\n"
#~ "   char *app_url;\n"
#~ "   char *app_source_package;\n"
#~ "   char *app_summary;\n"
#~ "   char *app_description;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_application2 {\n"
#~ "   char *app2_name;\n"
#~ "   char *app2_display_name;\n"
#~ "   int32_t app2_epoch;\n"
#~ "   char *app2_version;\n"
#~ "   char *app2_release;\n"
#~ "   char *app2_arch;\n"
#~ "   char *app2_install_path;\n"
#~ "   char *app2_trans_path;\n"
#~ "   char *app2_publisher;\n"
#~ "   char *app2_url;\n"
#~ "   char *app2_source_package;\n"
#~ "   char *app2_summary;\n"
#~ "   char *app2_description;\n"
#~ "   char *app2_spare1;\n"
#~ "   char *app2_spare2;\n"
#~ "   char *app2_spare3;\n"
#~ "   char *app2_spare4;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_application2 {\n"
#~ "   char *app2_name;\n"
#~ "   char *app2_display_name;\n"
#~ "   int32_t app2_epoch;\n"
#~ "   char *app2_version;\n"
#~ "   char *app2_release;\n"
#~ "   char *app2_arch;\n"
#~ "   char *app2_install_path;\n"
#~ "   char *app2_trans_path;\n"
#~ "   char *app2_publisher;\n"
#~ "   char *app2_url;\n"
#~ "   char *app2_source_package;\n"
#~ "   char *app2_summary;\n"
#~ "   char *app2_description;\n"
#~ "   char *app2_spare1;\n"
#~ "   char *app2_spare2;\n"
#~ "   char *app2_spare3;\n"
#~ "   char *app2_spare4;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_isoinfo {\n"
#~ "   char *iso_system_id;\n"
#~ "   char *iso_volume_id;\n"
#~ "   uint32_t iso_volume_space_size;\n"
#~ "   uint32_t iso_volume_set_size;\n"
#~ "   uint32_t iso_volume_sequence_number;\n"
#~ "   uint32_t iso_logical_block_size;\n"
#~ "   char *iso_volume_set_id;\n"
#~ "   char *iso_publisher_id;\n"
#~ "   char *iso_data_preparer_id;\n"
#~ "   char *iso_application_id;\n"
#~ "   char *iso_copyright_file_id;\n"
#~ "   char *iso_abstract_file_id;\n"
#~ "   char *iso_bibliographic_file_id;\n"
#~ "   int64_t iso_volume_creation_t;\n"
#~ "   int64_t iso_volume_modification_t;\n"
#~ "   int64_t iso_volume_expiration_t;\n"
#~ "   int64_t iso_volume_effective_t;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_isoinfo {\n"
#~ "   char *iso_system_id;\n"
#~ "   char *iso_volume_id;\n"
#~ "   uint32_t iso_volume_space_size;\n"
#~ "   uint32_t iso_volume_set_size;\n"
#~ "   uint32_t iso_volume_sequence_number;\n"
#~ "   uint32_t iso_logical_block_size;\n"
#~ "   char *iso_volume_set_id;\n"
#~ "   char *iso_publisher_id;\n"
#~ "   char *iso_data_preparer_id;\n"
#~ "   char *iso_application_id;\n"
#~ "   char *iso_copyright_file_id;\n"
#~ "   char *iso_abstract_file_id;\n"
#~ "   char *iso_bibliographic_file_id;\n"
#~ "   int64_t iso_volume_creation_t;\n"
#~ "   int64_t iso_volume_modification_t;\n"
#~ "   int64_t iso_volume_expiration_t;\n"
#~ "   int64_t iso_volume_effective_t;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_mdstat {\n"
#~ "   char *mdstat_device;\n"
#~ "   int32_t mdstat_index;\n"
#~ "   char *mdstat_flags;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_mdstat {\n"
#~ "   char *mdstat_device;\n"
#~ "   int32_t mdstat_index;\n"
#~ "   char *mdstat_flags;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_btrfssubvolume {\n"
#~ "   uint64_t btrfssubvolume_id;\n"
#~ "   uint64_t btrfssubvolume_top_level_id;\n"
#~ "   char *btrfssubvolume_path;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_btrfssubvolume {\n"
#~ "   uint64_t btrfssubvolume_id;\n"
#~ "   uint64_t btrfssubvolume_top_level_id;\n"
#~ "   char *btrfssubvolume_path;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_xfsinfo {\n"
#~ "   char *xfs_mntpoint;\n"
#~ "   uint32_t xfs_inodesize;\n"
#~ "   uint32_t xfs_agcount;\n"
#~ "   uint32_t xfs_agsize;\n"
#~ "   uint32_t xfs_sectsize;\n"
#~ "   uint32_t xfs_attr;\n"
#~ "   uint32_t xfs_blocksize;\n"
#~ "   uint64_t xfs_datablocks;\n"
#~ "   uint32_t xfs_imaxpct;\n"
#~ "   uint32_t xfs_sunit;\n"
#~ "   uint32_t xfs_swidth;\n"
#~ "   uint32_t xfs_dirversion;\n"
#~ "   uint32_t xfs_dirblocksize;\n"
#~ "   uint32_t xfs_cimode;\n"
#~ "   char *xfs_logname;\n"
#~ "   uint32_t xfs_logblocksize;\n"
#~ "   uint32_t xfs_logblocks;\n"
#~ "   uint32_t xfs_logversion;\n"
#~ "   uint32_t xfs_logsectsize;\n"
#~ "   uint32_t xfs_logsunit;\n"
#~ "   uint32_t xfs_lazycount;\n"
#~ "   char *xfs_rtname;\n"
#~ "   uint32_t xfs_rtextsize;\n"
#~ "   uint64_t xfs_rtblocks;\n"
#~ "   uint64_t xfs_rtextents;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_xfsinfo {\n"
#~ "   char *xfs_mntpoint;\n"
#~ "   uint32_t xfs_inodesize;\n"
#~ "   uint32_t xfs_agcount;\n"
#~ "   uint32_t xfs_agsize;\n"
#~ "   uint32_t xfs_sectsize;\n"
#~ "   uint32_t xfs_attr;\n"
#~ "   uint32_t xfs_blocksize;\n"
#~ "   uint64_t xfs_datablocks;\n"
#~ "   uint32_t xfs_imaxpct;\n"
#~ "   uint32_t xfs_sunit;\n"
#~ "   uint32_t xfs_swidth;\n"
#~ "   uint32_t xfs_dirversion;\n"
#~ "   uint32_t xfs_dirblocksize;\n"
#~ "   uint32_t xfs_cimode;\n"
#~ "   char *xfs_logname;\n"
#~ "   uint32_t xfs_logblocksize;\n"
#~ "   uint32_t xfs_logblocks;\n"
#~ "   uint32_t xfs_logversion;\n"
#~ "   uint32_t xfs_logsectsize;\n"
#~ "   uint32_t xfs_logsunit;\n"
#~ "   uint32_t xfs_lazycount;\n"
#~ "   char *xfs_rtname;\n"
#~ "   uint32_t xfs_rtextsize;\n"
#~ "   uint64_t xfs_rtblocks;\n"
#~ "   uint64_t xfs_rtextents;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_utsname {\n"
#~ "   char *uts_sysname;\n"
#~ "   char *uts_release;\n"
#~ "   char *uts_version;\n"
#~ "   char *uts_machine;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_utsname {\n"
#~ "   char *uts_sysname;\n"
#~ "   char *uts_release;\n"
#~ "   char *uts_version;\n"
#~ "   char *uts_machine;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_node {\n"
#~ "   int64_t hivex_node_h;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_hivex_node {\n"
#~ "   int64_t hivex_node_h;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_hivex_value {\n"
#~ "   int64_t hivex_value_h;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_hivex_value {\n"
#~ "   int64_t hivex_value_h;\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_internal_mountable {\n"
#~ "   int32_t im_type;\n"
#~ "   char *im_device;\n"
#~ "   char *im_volume;\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_internal_mountable {\n"
#~ "   int32_t im_type;\n"
#~ "   char *im_device;\n"
#~ "   char *im_volume;\n"
#~ " };\n"
#~ " \n"

#~ msgid "guestfs - Library for accessing and modifying virtual machine images"
#~ msgstr ""
#~ "guestfs - Bibliothèque d'accès et modification d'images de machines "
#~ "virtuelles"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " guestfs_launch (g);\n"
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " guestfs_umount (g, \"/\");\n"
#~ " guestfs_shutdown (g);\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " guestfs_launch (g);\n"
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " guestfs_umount (g, \"/\");\n"
#~ " guestfs_shutdown (g);\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#~ msgid "API OVERVIEW"
#~ msgstr "APERÇU DE L'INTERFACE DE PROGRAMMATION"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " \n"
#~ msgstr ""
#~ " guestfs_h *g = guestfs_create ();\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Call guestfs_add_drive additional times if there are\n"
#~ "  * multiple disk images.\n"
#~ "  */\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " \n"
#~ msgstr ""
#~ " /* Call guestfs_add_drive additional times if there are\n"
#~ "  * multiple disk images.\n"
#~ "  */\n"
#~ " guestfs_add_drive (g, \"guest.img\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Most manipulation calls won't work until you've launched\n"
#~ "  * the handle 'g'.  You have to do this _after_ adding drives\n"
#~ "  * and _before_ other commands.\n"
#~ "  */\n"
#~ " guestfs_launch (g);\n"
#~ " \n"
#~ msgstr ""
#~ " /* Most manipulation calls won't work until you've launched\n"
#~ "  * the handle 'g'.  You have to do this _after_ adding drives\n"
#~ "  * and _before_ other commands.\n"
#~ "  */\n"
#~ " guestfs_launch (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Either: examine what partitions, LVs etc are available: */\n"
#~ " char **partitions = guestfs_list_partitions (g);\n"
#~ " char **logvols = guestfs_lvs (g);\n"
#~ " \n"
#~ msgstr ""
#~ " /* Either: examine what partitions, LVs etc are available: */\n"
#~ " char **partitions = guestfs_list_partitions (g);\n"
#~ " char **logvols = guestfs_lvs (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Or: ask libguestfs to find filesystems for you: */\n"
#~ " char **filesystems = guestfs_list_filesystems (g);\n"
#~ " \n"
#~ msgstr ""
#~ " /* Or: ask libguestfs to find filesystems for you: */\n"
#~ " char **filesystems = guestfs_list_filesystems (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Or: use inspection (see INSPECTION section below). */\n"
#~ " \n"
#~ msgstr ""
#~ " /* Or: use inspection (see INSPECTION section below). */\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* To access a filesystem in the image, you must mount it. */\n"
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ " \n"
#~ msgstr ""
#~ " /* To access a filesystem in the image, you must mount it. */\n"
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Now you can perform filesystem actions on the guest\n"
#~ "  * disk image.\n"
#~ "  */\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " \n"
#~ msgstr ""
#~ " /* Now you can perform filesystem actions on the guest\n"
#~ "  * disk image.\n"
#~ "  */\n"
#~ " guestfs_touch (g, \"/hello\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Synchronize the disk.  This is the opposite of guestfs_launch. */\n"
#~ " guestfs_shutdown (g);\n"
#~ " \n"
#~ msgstr ""
#~ " /* Synchronize the disk.  This is the opposite of guestfs_launch. */\n"
#~ " guestfs_shutdown (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* Close and free the handle 'g'. */\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " /* Close and free the handle 'g'. */\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#~ msgid "DISK IMAGES"
#~ msgstr "IMAGES DISQUES"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"

#~ msgid "MOUNTING"
#~ msgstr "MONTAGE"

#, no-wrap
#~ msgid ""
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_mount (g, \"/dev/sda1\", \"/\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *data = guestfs_cat (g, \"/etc/passwd\");\n"
#~ "\n"
#~ msgstr ""
#~ " char *data = guestfs_cat (g, \"/etc/passwd\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_mkdir (g, \"/var\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_mkdir (g, \"/var\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
#~ "               \"/etc/rc3.d/S30portmap\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_ln_s (g, \"/etc/init.d/portmap\",\n"
#~ "               \"/etc/rc3.d/S30portmap\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *parttype = \"mbr\";\n"
#~ " if (disk_is_larger_than_2TB)\n"
#~ "   parttype = \"gpt\";\n"
#~ " guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *parttype = \"mbr\";\n"
#~ " if (disk_is_larger_than_2TB)\n"
#~ "   parttype = \"gpt\";\n"
#~ " guestfs_part_disk (g, \"/dev/sda\", parttype);\n"
#~ "\n"

#~ msgid "LVM2"
#~ msgstr "LVM2"

#~ msgid "DOWNLOADING"
#~ msgstr "TÉLÉCHARGEMENT"

#~ msgid "UPLOADING"
#~ msgstr "TÉLÉVERSEMENT"

#~ msgid "COPYING"
#~ msgstr "COPIE"

#, no-wrap
#~ msgid ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         /* -1 marks the end of the list of optional parameters */\n"
#~ "         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         /* -1 marks the end of the list of optional parameters */\n"
#~ "         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
#~ "         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_copy_device_to_device (g,\n"
#~ "         \"/dev/VG/Original\", \"/dev/VG/Copy\",\n"
#~ "         GUESTFS_COPY_DEVICE_TO_DEVICE_SIZE, 10000,\n"
#~ "         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_download (g, filename, \"/dev/stdout\");\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_download (g, filename, \"/dev/stdout\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char devfd[64];\n"
#~ " snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
#~ " guestfs_tar_out (g, \"/\", devfd);\n"
#~ "\n"
#~ msgstr ""
#~ " char devfd[64];\n"
#~ " snprintf (devfd, sizeof devfd, \"/dev/fd/%d\", fd);\n"
#~ " guestfs_tar_out (g, \"/\", devfd);\n"
#~ "\n"

#~ msgid "RUNNING COMMANDS"
#~ msgstr "EXÉCUTION DE COMMANDES"

#~ msgid "CONFIGURATION FILES"
#~ msgstr "FICHIERS DE CONFIGURATION"

#~ msgid "UMASK"
#~ msgstr "UMASK"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_launch (g) == -1)\n"
#~ "   error (\"launch failed\");\n"
#~ " \n"
#~ msgstr ""
#~ " if (guestfs_launch (g) == -1)\n"
#~ "   error (\"launch failed\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_add_drive_opts (g, filename,\n"
#~ "                             GUESTFS_ADD_DRIVE_OPTS_LABEL, \"newdisk\",\n"
#~ "                             -1) == -1)\n"
#~ "   error (\"hot-add of disk failed\");\n"
#~ " \n"
#~ msgstr ""
#~ " if (guestfs_add_drive_opts (g, filename,\n"
#~ "                             GUESTFS_ADD_DRIVE_OPTS_LABEL, \"newdisk\",\n"
#~ "                             -1) == -1)\n"
#~ "   error (\"hot-add of disk failed\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_part_disk (\"/dev/disk/guestfs/newdisk\", \"mbr\") == -1)\n"
#~ "   error (\"partitioning of hot-added disk failed\");\n"
#~ "\n"
#~ msgstr ""
#~ " if (guestfs_part_disk (\"/dev/disk/guestfs/newdisk\", \"mbr\") == -1)\n"
#~ "   error (\"partitioning of hot-added disk failed\");\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **servers = { \"www.example.org\", NULL };\n"
#~ " guestfs_add_drive_opts (g, \"/disk.img\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"http\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " char **servers = { \"www.example.org\", NULL };\n"
#~ " guestfs_add_drive_opts (g, \"/disk.img\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"http\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_SERVER, servers,\n"
#~ "                         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **server = { \"nbd.example.org:3000\", NULL };\n"
#~ " guestfs_add_drive_opts (g, \"\" /* export name - see below */,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"nbd\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " char **server = { \"nbd.example.org:3000\", NULL };\n"
#~ " guestfs_add_drive_opts (g, \"\" /* export name - see below */,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"nbd\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
#~ "                         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char **server = { \"remote.example.com\", NULL };\n"
#~ " guestfs_add_drive_opts (g, \"/path/to/disk.img\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"ssh\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_USERNAME, \"remoteuser\",\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " char **server = { \"remote.example.com\", NULL };\n"
#~ " guestfs_add_drive_opts (g, \"/path/to/disk.img\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"raw\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_PROTOCOL, \"ssh\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_SERVER, server,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_USERNAME, \"remoteuser\",\n"
#~ "                         -1);\n"
#~ "\n"

#~ msgid "INSPECTION"
#~ msgstr "INSPECTION"

#, no-wrap
#~ msgid ""
#~ " /boot => /dev/sda1\n"
#~ " /     => /dev/vg_guest/lv_root\n"
#~ " /usr  => /dev/vg_guest/lv_usr\n"
#~ "\n"
#~ msgstr ""
#~ " /boot => /dev/sda1\n"
#~ " /     => /dev/vg_guest/lv_root\n"
#~ " /usr  => /dev/vg_guest/lv_usr\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " File name too long\n"
#~ "\n"
#~ msgstr ""
#~ " File name too long\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " The disk contains an unclean file system (0, 0).\n"
#~ " Metadata kept in Windows cache, refused to mount.\n"
#~ " Failed to mount '/dev/sda2': Operation not permitted\n"
#~ " The NTFS partition is in an unsafe state. Please resume\n"
#~ " and shutdown Windows fully (no hibernation or fast\n"
#~ " restarting), or mount the volume read-only with the\n"
#~ " 'ro' mount option.\n"
#~ "\n"
#~ msgstr ""
#~ " The disk contains an unclean file system (0, 0).\n"
#~ " Metadata kept in Windows cache, refused to mount.\n"
#~ " Failed to mount '/dev/sda2': Operation not permitted\n"
#~ " The NTFS partition is in an unsafe state. Please resume\n"
#~ " and shutdown Windows fully (no hibernation or fast\n"
#~ " restarting), or mount the volume read-only with the\n"
#~ " 'ro' mount option.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " Please run 'e2fsck -fy <device>' to fix the filesystem\n"
#~ " after the aborted resize operation.\n"
#~ "\n"
#~ msgstr ""
#~ " Please run 'e2fsck -fy <device>' to fix the filesystem\n"
#~ " after the aborted resize operation.\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " lvcreate LV VG 100M\n"
#~ "\n"
#~ msgstr ""
#~ " lvcreate LV VG 100M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " type path = Path of string | Device of int | Partition of int * int\n"
#~ "\n"
#~ msgstr ""
#~ " type path = Path of string | Device of int | Partition of int * int\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " Path \"/foo/bar\"\n"
#~ " Device 1            (* /dev/sdb, or perhaps /dev/sda *)\n"
#~ " Partition (1, 2)    (* /dev/sdb2 (or is it /dev/sda2 or /dev/sdb3?) *)\n"
#~ " Path \"/dev/sdb2\"    (* not a device *)\n"
#~ "\n"
#~ msgstr ""
#~ " Path \"/foo/bar\"\n"
#~ " Device 1            (* /dev/sdb, or perhaps /dev/sda *)\n"
#~ " Partition (1, 2)    (* /dev/sdb2 (or is it /dev/sda2 or /dev/sdb3?) *)\n"
#~ " Path \"/dev/sdb2\"    (* not a device *)\n"
#~ "\n"

#~ msgid "QEMU WRAPPERS"
#~ msgstr "ENVELOPPES (WRAPPERS) QEMU"

#, no-wrap
#~ msgid ""
#~ " #!/bin/sh -\n"
#~ " qemudir=/home/rjones/d/qemu\n"
#~ " exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios \"$@\"\n"
#~ "\n"
#~ msgstr ""
#~ " #!/bin/sh -\n"
#~ " qemudir=/home/rjones/d/qemu\n"
#~ " exec $qemudir/x86_64-softmmu/qemu-system-x86_64 -L $qemudir/pc-bios \"$@\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " LIBGUESTFS_HV=/tmp/qemu.wrapper guestfish\n"
#~ "\n"
#~ msgstr ""
#~ " LIBGUESTFS_HV=/tmp/qemu.wrapper guestfish\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " i=0\n"
#~ " while [ $# -gt 0 ]; do\n"
#~ "     case \"$1\" in\n"
#~ "     -machine)\n"
#~ "         shift 2;;\n"
#~ "     *)\n"
#~ "         args[i]=\"$1\"\n"
#~ "         (( i++ ))\n"
#~ "         shift ;;\n"
#~ "     esac\n"
#~ " done\n"
#~ " \n"
#~ msgstr ""
#~ " i=0\n"
#~ " while [ $# -gt 0 ]; do\n"
#~ "     case \"$1\" in\n"
#~ "     -machine)\n"
#~ "         shift 2;;\n"
#~ "     *)\n"
#~ "         args[i]=\"$1\"\n"
#~ "         (( i++ ))\n"
#~ "         shift ;;\n"
#~ "     esac\n"
#~ " done\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
#~ "\n"
#~ msgstr ""
#~ " exec qemu-kvm -machine pc,accel=tcg \"${args[@]}\"\n"
#~ "\n"

#~ msgid "C<direct>"
#~ msgstr "C<direct>"

#~ msgid "C<appliance>"
#~ msgstr "C<appliance>"

#~ msgid "C<libvirt>"
#~ msgstr "C<libvirt>"

#~ msgid "C<uml>"
#~ msgstr "C<uml>"

#, no-wrap
#~ msgid ""
#~ " ./configure --with-default-backend=...\n"
#~ "\n"
#~ msgstr ""
#~ " ./configure --with-default-backend=...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " unset LIBGUESTFS_BACKEND\n"
#~ " guestfish get-backend\n"
#~ "\n"
#~ msgstr ""
#~ " unset LIBGUESTFS_BACKEND\n"
#~ " guestfish get-backend\n"
#~ "\n"

#~ msgid "ATTACHING TO RUNNING DAEMONS"
#~ msgstr "ATTACHEMENT À DES DÉMONS EN COURS D'EXÉCUTION"

#, no-wrap
#~ msgid ""
#~ " <domain>\n"
#~ "   ...\n"
#~ "   <devices>\n"
#~ "     ...\n"
#~ "     <channel type='unix'>\n"
#~ "       <source mode='bind' path='/path/to/socket'/>\n"
#~ "       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
#~ "     </channel>\n"
#~ "     ...\n"
#~ "   </devices>\n"
#~ " </domain>\n"
#~ "\n"
#~ msgstr ""
#~ " <domain>\n"
#~ "   ...\n"
#~ "   <devices>\n"
#~ "     ...\n"
#~ "     <channel type='unix'>\n"
#~ "       <source mode='bind' path='/path/to/socket'/>\n"
#~ "       <target type='virtio' name='org.libguestfs.channel.0'/>\n"
#~ "     </channel>\n"
#~ "     ...\n"
#~ "   </devices>\n"
#~ " </domain>\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_BACKEND=uml\n"
#~ " export LIBGUESTFS_HV=/path/to/vmlinux\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_BACKEND=uml\n"
#~ " export LIBGUESTFS_HV=/path/to/vmlinux\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " make menuconfig ARCH=um\n"
#~ "\n"
#~ msgstr ""
#~ " make menuconfig ARCH=um\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " make ARCH=um\n"
#~ "\n"
#~ msgstr ""
#~ " make ARCH=um\n"
#~ "\n"

#~ msgid "ABI GUARANTEE"
#~ msgstr "GARANTIE SUR L'INTERFACE BINAIRE"

#~ msgid "BLOCK DEVICE NAMING"
#~ msgstr "NOMMAGE DES PÉRIPHÉRIQUES BLOCS"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g;\n"
#~ " char **groups = [ \"btrfs\", NULL ];\n"
#~ " \n"
#~ msgstr ""
#~ " guestfs_h *g;\n"
#~ " char **groups = [ \"btrfs\", NULL ];\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"/dev/null\");\n"
#~ " guestfs_launch (g);\n"
#~ " if (guestfs_available (g, groups) == 0) {\n"
#~ "   // group(s) are available\n"
#~ " } else {\n"
#~ "   // group(s) are not available\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " g = guestfs_create ();\n"
#~ " guestfs_add_drive (g, \"/dev/null\");\n"
#~ " guestfs_launch (g);\n"
#~ " if (guestfs_available (g, groups) == 0) {\n"
#~ "   // group(s) are available\n"
#~ " } else {\n"
#~ "   // group(s) are not available\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *guestfs_create (void);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *guestfs_create (void);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *guestfs_create_flags (unsigned flags [, ...]);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_h *guestfs_create_flags (unsigned flags [, ...]);\n"
#~ "\n"

#~ msgid "C<GUESTFS_CREATE_NO_ENVIRONMENT>"
#~ msgstr "C<GUESTFS_CREATE_NO_ENVIRONMENT>"

#~ msgid "C<GUESTFS_CREATE_NO_CLOSE_ON_EXIT>"
#~ msgstr "C<GUESTFS_CREATE_NO_CLOSE_ON_EXIT>"

#, no-wrap
#~ msgid ""
#~ " guestfs_h *g;\n"
#~ " int r;\n"
#~ " \n"
#~ msgstr ""
#~ " guestfs_h *g;\n"
#~ " int r;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " g = guestfs_create_flags (GUESTFS_CREATE_NO_ENVIRONMENT);\n"
#~ " if (!g) {\n"
#~ "   perror (\"guestfs_create_flags\");\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ " }\n"
#~ " r = guestfs_parse_environment (g);\n"
#~ " if (r == -1)\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ "\n"
#~ msgstr ""
#~ " g = guestfs_create_flags (GUESTFS_CREATE_NO_ENVIRONMENT);\n"
#~ " if (!g) {\n"
#~ "   perror (\"guestfs_create_flags\");\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ " }\n"
#~ " r = guestfs_parse_environment (g);\n"
#~ " if (r == -1)\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void guestfs_close (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_close (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_shutdown (g) == -1) {\n"
#~ "   /* handle write errors here */\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"
#~ msgstr ""
#~ " if (guestfs_shutdown (g) == -1) {\n"
#~ "   /* handle write errors here */\n"
#~ " }\n"
#~ " guestfs_close (g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_launch (g) == -1)\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ "\n"
#~ msgstr ""
#~ " if (guestfs_launch (g) == -1)\n"
#~ "   exit (EXIT_FAILURE);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *msg;\n"
#~ " int errnum;\n"
#~ " \n"
#~ msgstr ""
#~ " const char *msg;\n"
#~ " int errnum;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " /* This disables the default behaviour of printing errors\n"
#~ "    on stderr. */\n"
#~ " guestfs_set_error_handler (g, NULL, NULL);\n"
#~ " \n"
#~ msgstr ""
#~ " /* This disables the default behaviour of printing errors\n"
#~ "    on stderr. */\n"
#~ " guestfs_set_error_handler (g, NULL, NULL);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " if (guestfs_launch (g) == -1) {\n"
#~ "   /* Examine the error message and print it, throw it,\n"
#~ "      etc. */\n"
#~ "   msg = guestfs_last_error (g);\n"
#~ "   errnum = guestfs_last_errno (g);\n"
#~ " \n"
#~ msgstr ""
#~ " if (guestfs_launch (g) == -1) {\n"
#~ "   /* Examine the error message and print it, throw it,\n"
#~ "      etc. */\n"
#~ "   msg = guestfs_last_error (g);\n"
#~ "   errnum = guestfs_last_errno (g);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   fprintf (stderr, \"%s\", msg);\n"
#~ "   if (errnum != 0)\n"
#~ "     fprintf (stderr, \": %s\", strerror (errnum));\n"
#~ "   fprintf (stderr, \"\\n\");\n"
#~ " \n"
#~ msgstr ""
#~ "   fprintf (stderr, \"%s\", msg);\n"
#~ "   if (errnum != 0)\n"
#~ "     fprintf (stderr, \": %s\", strerror (errnum));\n"
#~ "   fprintf (stderr, \"\\n\");\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* ... */\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ "   /* ... */\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *guestfs_last_error (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " const char *guestfs_last_error (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int guestfs_last_errno (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_last_errno (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
#~ "                                           void *opaque,\n"
#~ "                                           const char *msg);\n"
#~ " void guestfs_set_error_handler (guestfs_h *g,\n"
#~ "                                 guestfs_error_handler_cb cb,\n"
#~ "                                 void *opaque);\n"
#~ "\n"
#~ msgstr ""
#~ " typedef void (*guestfs_error_handler_cb) (guestfs_h *g,\n"
#~ "                                           void *opaque,\n"
#~ "                                           const char *msg);\n"
#~ " void guestfs_set_error_handler (guestfs_h *g,\n"
#~ "                                 guestfs_error_handler_cb cb,\n"
#~ "                                 void *opaque);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
#~ "                                                     void **opaque_rtn);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_error_handler_cb guestfs_get_error_handler (guestfs_h *g,\n"
#~ "                                                     void **opaque_rtn);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void guestfs_push_error_handler (guestfs_h *g,\n"
#~ "                                  guestfs_error_handler_cb cb,\n"
#~ "                                  void *opaque);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_push_error_handler (guestfs_h *g,\n"
#~ "                                  guestfs_error_handler_cb cb,\n"
#~ "                                  void *opaque);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void guestfs_pop_error_handler (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_pop_error_handler (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " typedef void (*guestfs_abort_cb) (void);\n"
#~ " void guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
#~ "                                         guestfs_abort_cb);\n"
#~ "\n"
#~ msgstr ""
#~ " typedef void (*guestfs_abort_cb) (void);\n"
#~ " void guestfs_set_out_of_memory_handler (guestfs_h *g,\n"
#~ "                                         guestfs_abort_cb);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_abort_fn guestfs_get_out_of_memory_handler (guestfs_h *g);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #define GUESTFS_HAVE_DD 1\n"
#~ "\n"
#~ msgstr ""
#~ " #define GUESTFS_HAVE_DD 1\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " AC_CHECK_LIB([guestfs],[guestfs_create])\n"
#~ " AC_CHECK_FUNCS([guestfs_dd])\n"
#~ "\n"
#~ msgstr ""
#~ " AC_CHECK_LIB([guestfs],[guestfs_create])\n"
#~ " AC_CHECK_FUNCS([guestfs_dd])\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " #include <stdio.h>\n"
#~ " #include <stdlib.h>\n"
#~ " #include <unistd.h>\n"
#~ " #include <dlfcn.h>\n"
#~ " #include <guestfs.h>\n"
#~ " \n"
#~ msgstr ""
#~ " #include <stdio.h>\n"
#~ " #include <stdlib.h>\n"
#~ " #include <unistd.h>\n"
#~ " #include <dlfcn.h>\n"
#~ " #include <guestfs.h>\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " main ()\n"
#~ " {\n"
#~ " #ifdef GUESTFS_HAVE_DD\n"
#~ "   void *dl;\n"
#~ "   int has_function;\n"
#~ " \n"
#~ msgstr ""
#~ " main ()\n"
#~ " {\n"
#~ " #ifdef GUESTFS_HAVE_DD\n"
#~ "   void *dl;\n"
#~ "   int has_function;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* Test if the function guestfs_dd is really available. */\n"
#~ "   dl = dlopen (NULL, RTLD_LAZY);\n"
#~ "   if (!dl) {\n"
#~ "     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ "   }\n"
#~ "   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
#~ "   dlclose (dl);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* Test if the function guestfs_dd is really available. */\n"
#~ "   dl = dlopen (NULL, RTLD_LAZY);\n"
#~ "   if (!dl) {\n"
#~ "     fprintf (stderr, \"dlopen: %s\\n\", dlerror ());\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ "   }\n"
#~ "   has_function = dlsym (dl, \"guestfs_dd\") != NULL;\n"
#~ "   dlclose (dl);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   if (!has_function)\n"
#~ "     printf (\"this libguestfs.so does NOT have guestfs_dd function\\n\");\n"
#~ "   else {\n"
#~ "     printf (\"this libguestfs.so has guestfs_dd function\\n\");\n"
#~ "     /* Now it's safe to call\n"
#~ "     guestfs_dd (g, \"foo\", \"bar\");\n"
#~ "     */\n"
#~ "   }\n"
#~ " #else\n"
#~ "   printf (\"guestfs_dd function was not found at compile time\\n\");\n"
#~ " #endif\n"
#~ "  }\n"
#~ "\n"
#~ msgstr ""
#~ "   if (!has_function)\n"
#~ "     printf (\"this libguestfs.so does NOT have guestfs_dd function\\n\");\n"
#~ "   else {\n"
#~ "     printf (\"this libguestfs.so has guestfs_dd function\\n\");\n"
#~ "     /* Now it's safe to call\n"
#~ "     guestfs_dd (g, \"foo\", \"bar\");\n"
#~ "     */\n"
#~ "   }\n"
#~ " #else\n"
#~ "   printf (\"guestfs_dd function was not found at compile time\\n\");\n"
#~ " #endif\n"
#~ "  }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " Requires: libguestfs >= 1.0.80\n"
#~ "\n"
#~ msgstr ""
#~ " Requires: libguestfs >= 1.0.80\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_add_drive_opts (guestfs_h *g, const char *filename, ...);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename, -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename, -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts (g, filename,\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_FORMAT, \"qcow2\",\n"
#~ "                         GUESTFS_ADD_DRIVE_OPTS_READONLY, 1,\n"
#~ "                         -1);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
#~ "                                va_list args);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_add_drive_opts_va (guestfs_h *g, const char *filename,\n"
#~ "                                va_list args);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_add_drive_opts_argv {\n"
#~ "   uint64_t bitmask;\n"
#~ "   int readonly;\n"
#~ "   const char *format;\n"
#~ "   /* ... */\n"
#~ " };\n"
#~ " int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
#~ "              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " struct guestfs_add_drive_opts_argv {\n"
#~ "   uint64_t bitmask;\n"
#~ "   int readonly;\n"
#~ "   const char *format;\n"
#~ "   /* ... */\n"
#~ " };\n"
#~ " int guestfs_add_drive_opts_argv (guestfs_h *g, const char *filename,\n"
#~ "              const struct guestfs_add_drive_opts_argv *optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " struct guestfs_add_drive_opts_argv optargs = {\n"
#~ "   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
#~ "              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
#~ "   .readonly = 1,\n"
#~ "   .format = \"qcow2\"\n"
#~ " };\n"
#~ " \n"
#~ msgstr ""
#~ " struct guestfs_add_drive_opts_argv optargs = {\n"
#~ "   .bitmask = GUESTFS_ADD_DRIVE_OPTS_READONLY_BITMASK |\n"
#~ "              GUESTFS_ADD_DRIVE_OPTS_FORMAT_BITMASK,\n"
#~ "   .readonly = 1,\n"
#~ "   .format = \"qcow2\"\n"
#~ " };\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_add_drive_opts_argv (g, filename, &optargs);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int guestfs_set_event_callback (guestfs_h *g,\n"
#~ "                                 guestfs_event_callback cb,\n"
#~ "                                 uint64_t event_bitmask,\n"
#~ "                                 int flags,\n"
#~ "                                 void *opaque);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_set_event_callback (guestfs_h *g,\n"
#~ "                                 guestfs_event_callback cb,\n"
#~ "                                 uint64_t event_bitmask,\n"
#~ "                                 int flags,\n"
#~ "                                 void *opaque);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_delete_event_callback (guestfs_h *g, int event_handle);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " char *guestfs_event_to_string (uint64_t event);\n"
#~ "\n"
#~ msgstr ""
#~ " char *guestfs_event_to_string (uint64_t event);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " typedef void (*guestfs_event_callback) (\n"
#~ "                  guestfs_h *g,\n"
#~ "                  void *opaque,\n"
#~ "                  uint64_t event,\n"
#~ "                  int event_handle,\n"
#~ "                  int flags,\n"
#~ "                  const char *buf, size_t buf_len,\n"
#~ "                  const uint64_t *array, size_t array_len);\n"
#~ "\n"
#~ msgstr ""
#~ " typedef void (*guestfs_event_callback) (\n"
#~ "                  guestfs_h *g,\n"
#~ "                  void *opaque,\n"
#~ "                  uint64_t event,\n"
#~ "                  int event_handle,\n"
#~ "                  int flags,\n"
#~ "                  const char *buf, size_t buf_len,\n"
#~ "                  const uint64_t *array, size_t array_len);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int eh =\n"
#~ "   guestfs_set_event_callback\n"
#~ "     (g, message_callback,\n"
#~ "      GUESTFS_EVENT_LIBRARY | GUESTFS_EVENT_APPLIANCE |\n"
#~ "      GUESTFS_EVENT_WARNING | GUESTFS_EVENT_TRACE,\n"
#~ "      0, NULL) == -1)\n"
#~ " if (eh == -1) {\n"
#~ "   // handle error in the usual way\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " int eh =\n"
#~ "   guestfs_set_event_callback\n"
#~ "     (g, message_callback,\n"
#~ "      GUESTFS_EVENT_LIBRARY | GUESTFS_EVENT_APPLIANCE |\n"
#~ "      GUESTFS_EVENT_WARNING | GUESTFS_EVENT_TRACE,\n"
#~ "      0, NULL) == -1)\n"
#~ " if (eh == -1) {\n"
#~ "   // handle error in the usual way\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " static void\n"
#~ " message_callback (\n"
#~ "         guestfs_h *g,\n"
#~ "         void *opaque,\n"
#~ "         uint64_t event,\n"
#~ "         int event_handle,\n"
#~ "         int flags,\n"
#~ "         const char *buf, size_t buf_len,\n"
#~ "         const uint64_t *array, size_t array_len)\n"
#~ " {\n"
#~ "   const int priority = LOG_USER|LOG_INFO;\n"
#~ "   if (buf_len > 0)\n"
#~ "     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " static void\n"
#~ " message_callback (\n"
#~ "         guestfs_h *g,\n"
#~ "         void *opaque,\n"
#~ "         uint64_t event,\n"
#~ "         int event_handle,\n"
#~ "         int flags,\n"
#~ "         const char *buf, size_t buf_len,\n"
#~ "         const uint64_t *array, size_t array_len)\n"
#~ " {\n"
#~ "   const int priority = LOG_USER|LOG_INFO;\n"
#~ "   if (buf_len > 0)\n"
#~ "     syslog (priority, \"event 0x%lx: %s\", event, buf);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " main ()\n"
#~ " {\n"
#~ "   guestfs_h *g;\n"
#~ "   char *creds[] = { \"authname\", \"passphrase\", NULL };\n"
#~ "   int r, eh;\n"
#~ " \n"
#~ msgstr ""
#~ " main ()\n"
#~ " {\n"
#~ "   guestfs_h *g;\n"
#~ "   char *creds[] = { \"authname\", \"passphrase\", NULL };\n"
#~ "   int r, eh;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   g = guestfs_create ();\n"
#~ "   if (!g) exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   g = guestfs_create ();\n"
#~ "   if (!g) exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* Tell libvirt what credentials the program supports. */\n"
#~ "   r = guestfs_set_libvirt_supported_credentials (g, creds);\n"
#~ "   if (r == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* Tell libvirt what credentials the program supports. */\n"
#~ "   r = guestfs_set_libvirt_supported_credentials (g, creds);\n"
#~ "   if (r == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* Set up the event handler. */\n"
#~ "   eh = guestfs_set_event_callback (\n"
#~ "       g, do_auth,\n"
#~ "       GUESTFS_EVENT_LIBVIRT_AUTH, 0, NULL);\n"
#~ "   if (eh == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* Set up the event handler. */\n"
#~ "   eh = guestfs_set_event_callback (\n"
#~ "       g, do_auth,\n"
#~ "       GUESTFS_EVENT_LIBVIRT_AUTH, 0, NULL);\n"
#~ "   if (eh == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   /* An example of a call that may ask for credentials. */\n"
#~ "   r = guestfs_add_domain (\n"
#~ "       g, \"dom\",\n"
#~ "       GUESTFS_ADD_DOMAIN_LIBVIRTURI, \"qemu:///system\",\n"
#~ "       -1);\n"
#~ "   if (r == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   /* An example of a call that may ask for credentials. */\n"
#~ "   r = guestfs_add_domain (\n"
#~ "       g, \"dom\",\n"
#~ "       GUESTFS_ADD_DOMAIN_LIBVIRTURI, \"qemu:///system\",\n"
#~ "       -1);\n"
#~ "   if (r == -1)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   exit (EXIT_SUCCESS);\n"
#~ " }\n"
#~ " \n"
#~ msgstr ""
#~ "   exit (EXIT_SUCCESS);\n"
#~ " }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " static void\n"
#~ " do_auth (guestfs_h *g,\n"
#~ "          void *opaque,\n"
#~ "          uint64_t event,\n"
#~ "          int event_handle,\n"
#~ "          int flags,\n"
#~ "          const char *buf, size_t buf_len,\n"
#~ "          const uint64_t *array, size_t array_len)\n"
#~ " {\n"
#~ "   char **creds;\n"
#~ "   size_t i;\n"
#~ "   char *prompt;\n"
#~ "   char *reply;\n"
#~ "   size_t replylen;\n"
#~ "   int r;\n"
#~ " \n"
#~ msgstr ""
#~ " static void\n"
#~ " do_auth (guestfs_h *g,\n"
#~ "          void *opaque,\n"
#~ "          uint64_t event,\n"
#~ "          int event_handle,\n"
#~ "          int flags,\n"
#~ "          const char *buf, size_t buf_len,\n"
#~ "          const uint64_t *array, size_t array_len)\n"
#~ " {\n"
#~ "   char **creds;\n"
#~ "   size_t i;\n"
#~ "   char *prompt;\n"
#~ "   char *reply;\n"
#~ "   size_t replylen;\n"
#~ "   int r;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   // buf will be the libvirt URI.  buf_len may be ignored.\n"
#~ "   printf (\"Authentication required for libvirt conn '%s'\\n\",\n"
#~ "           buf);\n"
#~ " \n"
#~ msgstr ""
#~ "   // buf will be the libvirt URI.  buf_len may be ignored.\n"
#~ "   printf (\"Authentication required for libvirt conn '%s'\\n\",\n"
#~ "           buf);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   // Ask libguestfs what credentials libvirt is demanding.\n"
#~ "   creds = guestfs_get_libvirt_requested_credentials (g);\n"
#~ "   if (creds == NULL)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"
#~ msgstr ""
#~ "   // Ask libguestfs what credentials libvirt is demanding.\n"
#~ "   creds = guestfs_get_libvirt_requested_credentials (g);\n"
#~ "   if (creds == NULL)\n"
#~ "     exit (EXIT_FAILURE);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   // Now ask the user for answers.\n"
#~ "   for (i = 0; creds[i] != NULL; ++i)\n"
#~ "   {\n"
#~ "     if (strcmp (creds[i], \"authname\") == 0 ||\n"
#~ "         strcmp (creds[i], \"passphrase\") == 0)\n"
#~ "     {\n"
#~ "       prompt =\n"
#~ "         guestfs_get_libvirt_requested_credential_prompt (g, i);\n"
#~ "       if (prompt && strcmp (prompt, \"\") != 0)\n"
#~ "         printf (\"%s: \", prompt);\n"
#~ "       free (prompt);\n"
#~ " \n"
#~ msgstr ""
#~ "   // Now ask the user for answers.\n"
#~ "   for (i = 0; creds[i] != NULL; ++i)\n"
#~ "   {\n"
#~ "     if (strcmp (creds[i], \"authname\") == 0 ||\n"
#~ "         strcmp (creds[i], \"passphrase\") == 0)\n"
#~ "     {\n"
#~ "       prompt =\n"
#~ "         guestfs_get_libvirt_requested_credential_prompt (g, i);\n"
#~ "       if (prompt && strcmp (prompt, \"\") != 0)\n"
#~ "         printf (\"%s: \", prompt);\n"
#~ "       free (prompt);\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "       // Some code here to ask for the credential.\n"
#~ "       // ...\n"
#~ "       // Put the reply in 'reply', length 'replylen' (bytes).\n"
#~ " \n"
#~ msgstr ""
#~ "       // Some code here to ask for the credential.\n"
#~ "       // ...\n"
#~ "       // Put the reply in 'reply', length 'replylen' (bytes).\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "      r = guestfs_set_libvirt_requested_credential (g, i,\n"
#~ "          reply, replylen);\n"
#~ "      if (r == -1)\n"
#~ "        exit (EXIT_FAILURE);\n"
#~ "     }\n"
#~ " \n"
#~ msgstr ""
#~ "      r = guestfs_set_libvirt_requested_credential (g, i,\n"
#~ "          reply, replylen);\n"
#~ "      if (r == -1)\n"
#~ "        exit (EXIT_FAILURE);\n"
#~ "     }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "     free (creds[i]);\n"
#~ "   }\n"
#~ " \n"
#~ msgstr ""
#~ "     free (creds[i]);\n"
#~ "   }\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ "   free (creds);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ "   free (creds);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
#~ "\n"
#~ msgstr ""
#~ " void guestfs_set_private (guestfs_h *g, const char *key, void *data);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void *guestfs_get_private (guestfs_h *g, const char *key);\n"
#~ "\n"
#~ msgstr ""
#~ " void *guestfs_get_private (guestfs_h *g, const char *key);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"
#~ msgstr ""
#~ " void *guestfs_first_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"
#~ msgstr ""
#~ " void *guestfs_next_private (guestfs_h *g, const char **key_rtn);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfs_set_private (g, key, NULL);\n"
#~ "\n"
#~ msgstr ""
#~ " guestfs_set_private (g, key, NULL);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"
#~ msgstr ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "       printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"
#~ msgstr ""
#~ " const char *key;\n"
#~ " void *data = guestfs_first_private (g, &key);\n"
#~ " while (data != NULL)\n"
#~ "   {\n"
#~ "     if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "       printf (\"key = %s, data = %p\\n\", key, data);\n"
#~ "     data = guestfs_next_private (g, &key);\n"
#~ "   }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "  const char *key;\n"
#~ "  void *data;\n"
#~ " again:\n"
#~ "  data = guestfs_first_private (g, &key);\n"
#~ "  while (data != NULL)\n"
#~ "    {\n"
#~ "      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "        {\n"
#~ "          guestfs_set_private (g, key, NULL);\n"
#~ "          /* note that 'key' pointer is now invalid, and so is\n"
#~ "             the internal iterator */\n"
#~ "          goto again;\n"
#~ "        }\n"
#~ "      data = guestfs_next_private (g, &key);\n"
#~ "    }\n"
#~ "\n"
#~ msgstr ""
#~ "  const char *key;\n"
#~ "  void *data;\n"
#~ " again:\n"
#~ "  data = guestfs_first_private (g, &key);\n"
#~ "  while (data != NULL)\n"
#~ "    {\n"
#~ "      if (strncmp (key, \"foo_\", strlen (\"foo_\")) == 0)\n"
#~ "        {\n"
#~ "          guestfs_set_private (g, key, NULL);\n"
#~ "          /* note that 'key' pointer is now invalid, and so is\n"
#~ "             the internal iterator */\n"
#~ "          goto again;\n"
#~ "        }\n"
#~ "      data = guestfs_next_private (g, &key);\n"
#~ "    }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "              .provider(\"guestfs\").mark(\"*\")'\n"
#~ "\n"
#~ msgstr ""
#~ " stap -l 'process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "              .provider(\"guestfs\").mark(\"*\")'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " /* Display all calls to guestfs_mkfs* functions. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_mkfs*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"
#~ msgstr ""
#~ " /* Display all calls to guestfs_mkfs* functions. */\n"
#~ " probe process(\"/usr/lib*/libguestfs.so.0\")\n"
#~ "           .function(\"guestfs_mkfs*\") ? {\n"
#~ "       display_time();\n"
#~ "       printf (\"\\t%s %s\\n\", probefunc(), $$parms);\n"
#~ " }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # stap /tmp/test.stap\n"
#~ " ready\n"
#~ "\n"
#~ msgstr ""
#~ " # stap /tmp/test.stap\n"
#~ " ready\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " 1318248056692655 (+0):\tlaunch_start\n"
#~ " 1318248056692850 (+195):       launch_build_appliance_start\n"
#~ " 1318248056818285 (+125435):    launch_build_appliance_end\n"
#~ " 1318248056838059 (+19774):     launch_run_qemu\n"
#~ " 1318248061071167 (+4233108):   launch_end\n"
#~ " 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f device=0x1024e60\n"
#~ "\n"
#~ msgstr ""
#~ " 1318248056692655 (+0):\tlaunch_start\n"
#~ " 1318248056692850 (+195):       launch_build_appliance_start\n"
#~ " 1318248056818285 (+125435):    launch_build_appliance_end\n"
#~ " 1318248056838059 (+19774):     launch_run_qemu\n"
#~ " 1318248061071167 (+4233108):   launch_end\n"
#~ " 1318248061280324 (+209157):    guestfs_mkfs g=0x1024ab0 fstype=0x46116f device=0x1024e60\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                 even numbers for stable: 1.2.x, 1.4.x, ...\n"
#~ "       .-------- odd numbers for development: 1.3.x, 1.5.x, ...\n"
#~ "       |\n"
#~ "       v\n"
#~ " 1  .  3  .  5\n"
#~ " ^           ^\n"
#~ " |           |\n"
#~ " |           `-------- sub-version\n"
#~ " |\n"
#~ " `------ always '1' because we don't change the ABI\n"
#~ "\n"
#~ msgstr ""
#~ "                 even numbers for stable: 1.2.x, 1.4.x, ...\n"
#~ "       .-------- odd numbers for development: 1.3.x, 1.5.x, ...\n"
#~ "       |\n"
#~ "       v\n"
#~ " 1  .  3  .  5\n"
#~ " ^           ^\n"
#~ " |           |\n"
#~ " |           `-------- sub-version\n"
#~ " |\n"
#~ " `------ always '1' because we don't change the ABI\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " local G = require \"guestfs\"\n"
#~ " g = G.create ()\n"
#~ " g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
#~ " g:launch ()\n"
#~ " devices = g:list_devices ()\n"
#~ " g:close ()\n"
#~ "\n"
#~ msgstr ""
#~ " local G = require \"guestfs\"\n"
#~ " g = G.create ()\n"
#~ " g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
#~ " g:launch ()\n"
#~ " devices = g:list_devices ()\n"
#~ " g:close ()\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " local G = require \"guestfs\"\n"
#~ "\n"
#~ msgstr ""
#~ " local G = require \"guestfs\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g = G.create ()\n"
#~ "\n"
#~ msgstr ""
#~ " g = G.create ()\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g = G.create { environment = 0, close_on_exit = 0 }\n"
#~ "\n"
#~ msgstr ""
#~ " g = G.create { environment = 0, close_on_exit = 0 }\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:close ()\n"
#~ "\n"
#~ msgstr ""
#~ " g:close ()\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:set_verbose (true)\n"
#~ "\n"
#~ msgstr ""
#~ " g:set_verbose (true)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:add_drive (\"test.img\")\n"
#~ "\n"
#~ msgstr ""
#~ " g:add_drive (\"test.img\")\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
#~ "\n"
#~ msgstr ""
#~ " g:add_drive (\"test.img\", { format = \"raw\", readonly = true })\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eh = g:set_event_callback (cb, \"close\")\n"
#~ "\n"
#~ msgstr ""
#~ " eh = g:set_event_callback (cb, \"close\")\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " eh = g:set_event_callback (cb, { \"appliance\", \"library\", \"trace\" })\n"
#~ "\n"
#~ msgstr ""
#~ " eh = g:set_event_callback (cb, { \"appliance\", \"library\", \"trace\" })\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " function cb (g, event, eh, flags, buf, array)\n"
#~ "   -- g is the guestfs handle\n"
#~ "   -- event is a string which is the name of the event that fired\n"
#~ "   -- flags is always zero\n"
#~ "   -- buf is the data buffer (eg. log message etc)\n"
#~ "   -- array is the array of 64 bit ints (eg. progress bar status etc)\n"
#~ "   ...\n"
#~ " end\n"
#~ "\n"
#~ msgstr ""
#~ " function cb (g, event, eh, flags, buf, array)\n"
#~ "   -- g is the guestfs handle\n"
#~ "   -- event is a string which is the name of the event that fired\n"
#~ "   -- flags is always zero\n"
#~ "   -- buf is the data buffer (eg. log message etc)\n"
#~ "   -- array is the array of 64 bit ints (eg. progress bar status etc)\n"
#~ "   ...\n"
#~ " end\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " g:delete_event_callback (eh)\n"
#~ "\n"
#~ msgstr ""
#~ " g:delete_event_callback (eh)\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs [--options] input.tar output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs [--options] input.tar output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs [--options] input.tar.gz output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs [--options] input.tar.gz output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs [--options] directory output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs [--options] directory output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs input output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs input output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --type=minix input minixfs.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --type=minix input minixfs.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --partition -- input disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --partition -- input disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --partition=gpt --size=+4T --format=qcow2 input disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-make-fs --format=qcow2 --size=+200M input output.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-make-fs --format=qcow2 --size=+200M input output.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " let g = Guestfs.create () in\n"
#~ " Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " Guestfs.launch g;\n"
#~ "\n"
#~ msgstr ""
#~ " let g = Guestfs.create () in\n"
#~ " Guestfs.add_drive_opts g ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " Guestfs.launch g;\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " let g = new Guestfs.guestfs () in\n"
#~ " g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " g#launch ();\n"
#~ "\n"
#~ msgstr ""
#~ " let g = new Guestfs.guestfs () in\n"
#~ " g#add_drive_opts ~format:\"raw\" ~readonly:true \"disk.img\";\n"
#~ " g#launch ();\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
#~ "or:\n"
#~ " ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
#~ "\n"
#~ msgstr ""
#~ " ocamlfind opt prog.ml -package guestfs -linkpkg -o prog\n"
#~ "or:\n"
#~ " ocamlopt -I +guestfs mlguestfs.cmxa prog.ml -o prog\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " int guestfs_set_verbose (guestfs_h *g, int flag);\n"
#~ "\n"
#~ msgstr ""
#~ " int guestfs_set_verbose (guestfs_h *g, int flag);\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
#~ "\n"
#~ msgstr ""
#~ " val Guestfs.set_verbose : Guestfs.t -> bool -> unit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " method set_verbose : bool -> unit\n"
#~ "\n"
#~ msgstr ""
#~ " method set_verbose : bool -> unit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " use Sys::Guestfs;\n"
#~ " \n"
#~ msgstr ""
#~ " use Sys::Guestfs;\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " my $g = Sys::Guestfs->new ();\n"
#~ " $g->add_drive_opts ('guest.img', format => 'raw');\n"
#~ " $g->launch ();\n"
#~ " $g->mount ('/dev/sda1', '/');\n"
#~ " $g->touch ('/hello');\n"
#~ " $g->shutdown ();\n"
#~ " $g->close ();\n"
#~ "\n"
#~ msgstr ""
#~ " my $g = Sys::Guestfs->new ();\n"
#~ " $g->add_drive_opts ('guest.img', format => 'raw');\n"
#~ " $g->launch ();\n"
#~ " $g->mount ('/dev/sda1', '/');\n"
#~ " $g->touch ('/hello');\n"
#~ " $g->shutdown ();\n"
#~ " $g->close ();\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue [--options] disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue -a /dev/sdc\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue -a /dev/sdc\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> lvs\n"
#~ " LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert\n"
#~ " lv_root vg_f15x32 -wi-a-   8.83G\n"
#~ " lv_swap vg_f15x32 -wi-a- 992.00M\n"
#~ " ><rescue> mount /dev/vg_f15x32/lv_root /sysroot\n"
#~ " ><rescue> mount /dev/vda1 /sysroot/boot\n"
#~ " ><rescue> ls /sysroot\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> lvs\n"
#~ " LV      VG        Attr   LSize   Origin Snap%  Move Log Copy%  Convert\n"
#~ " lv_root vg_f15x32 -wi-a-   8.83G\n"
#~ " lv_swap vg_f15x32 -wi-a- 992.00M\n"
#~ " ><rescue> mount /dev/vg_f15x32/lv_root /sysroot\n"
#~ " ><rescue> mount /dev/vda1 /sysroot/boot\n"
#~ " ><rescue> ls /sysroot\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> chroot /sysroot\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> chroot /sysroot\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue --format=raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue --format=raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue --format=raw -a disk.img --format -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue --format=raw -a disk.img --format -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue guestname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue guestname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " exec 3<>/dev/tcp/redhat.com/80\n"
#~ " echo \"GET /\" >&3\n"
#~ " cat <&3\n"
#~ "\n"
#~ msgstr ""
#~ " exec 3<>/dev/tcp/redhat.com/80\n"
#~ " echo \"GET /\" >&3\n"
#~ " cat <&3\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " truncate -s 4G /tmp/corefiles\n"
#~ " virt-format --partition=mbr --filesystem=ext2 -a /tmp/corefiles\n"
#~ " virt-filesystems -a /tmp/corefiles --all --long -h\n"
#~ "\n"
#~ msgstr ""
#~ " truncate -s 4G /tmp/corefiles\n"
#~ " virt-format --partition=mbr --filesystem=ext2 -a /tmp/corefiles\n"
#~ " virt-filesystems -a /tmp/corefiles --all --long -h\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-rescue --rw [-a ...] -a /tmp/corefiles\n"
#~ "\n"
#~ msgstr ""
#~ " virt-rescue --rw [-a ...] -a /tmp/corefiles\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> mkdir /tmp/mnt\n"
#~ " ><rescue> mount /dev/sdb1 /tmp/mnt\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> mkdir /tmp/mnt\n"
#~ " ><rescue> mount /dev/sdb1 /tmp/mnt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> echo '/tmp/mnt/core.%p' > /proc/sys/kernel/core_pattern\n"
#~ " ><rescue> ulimit -Hc unlimited\n"
#~ " ><rescue> ulimit -Sc unlimited\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> echo '/tmp/mnt/core.%p' > /proc/sys/kernel/core_pattern\n"
#~ " ><rescue> ulimit -Hc unlimited\n"
#~ " ><rescue> ulimit -Sc unlimited\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> ls -l /tmp/mnt\n"
#~ " total 1628\n"
#~ " -rw------- 1 root root 1941504 Dec  7 13:13 core.130\n"
#~ " drwx------ 2 root root   16384 Dec  7 13:00 lost+found\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> ls -l /tmp/mnt\n"
#~ " total 1628\n"
#~ " -rw------- 1 root root 1941504 Dec  7 13:13 core.130\n"
#~ " drwx------ 2 root root   16384 Dec  7 13:00 lost+found\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ><rescue> umount /tmp/mnt\n"
#~ " ><rescue> exit\n"
#~ "\n"
#~ msgstr ""
#~ " ><rescue> umount /tmp/mnt\n"
#~ " ><rescue> exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish --ro -a /tmp/corefiles -m /dev/sda1\n"
#~ " ><fs> ll /\n"
#~ " ><fs> download /core.NNN /tmp/core.NNN\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish --ro -a /tmp/corefiles -m /dev/sda1\n"
#~ " ><fs> ll /\n"
#~ " ><fs> download /core.NNN /tmp/core.NNN\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-resize [--resize /dev/sdaN=[+/-]<size>[%]]\n"
#~ "   [--expand /dev/sdaN] [--shrink /dev/sdaN]\n"
#~ "   [--ignore /dev/sdaN] [--delete /dev/sdaN] [...] indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize [--resize /dev/sdaN=[+/-]<size>[%]]\n"
#~ "   [--expand /dev/sdaN] [--shrink /dev/sdaN]\n"
#~ "   [--ignore /dev/sdaN] [--delete /dev/sdaN] [...] indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-filesystems --long -h --all -a olddisk\n"
#~ " \n"
#~ msgstr ""
#~ " virt-filesystems --long -h --all -a olddisk\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " truncate -r olddisk newdisk\n"
#~ " truncate -s +5G newdisk\n"
#~ " \n"
#~ msgstr ""
#~ " truncate -r olddisk newdisk\n"
#~ " truncate -s +5G newdisk\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " # Note \"/dev/sda2\" is a partition inside the \"olddisk\" file.\n"
#~ " virt-resize --expand /dev/sda2 olddisk newdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # Note \"/dev/sda2\" is a partition inside the \"olddisk\" file.\n"
#~ " virt-resize --expand /dev/sda2 olddisk newdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root \\\n"
#~ "   olddisk newdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virsh dumpxml guestname | xpath /domain/devices/disk/source\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <source dev=\"/dev/vg/lv_guest\" />\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh dumpxml guestname | xpath /domain/devices/disk/source\n"
#~ " Found 1 nodes:\n"
#~ " -- NODE --\n"
#~ " <source dev=\"/dev/vg/lv_guest\" />\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
#~ " Name       Type       Size  Parent\n"
#~ " /dev/sda1  partition  101M  /dev/sda\n"
#~ " /dev/sda2  partition  7.9G  /dev/sda\n"
#~ " /dev/sda   device     8.0G  -\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-filesystems --long --parts --blkdevs -h -a /dev/vg/lv_guest\n"
#~ " Name       Type       Size  Parent\n"
#~ " /dev/sda1  partition  101M  /dev/sda\n"
#~ " /dev/sda2  partition  7.9G  /dev/sda\n"
#~ " /dev/sda   device     8.0G  -\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # rm -f outdisk\n"
#~ " # truncate -s 10G outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # rm -f outdisk\n"
#~ " # truncate -s 10G outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # lvcreate -L 10G -n lv_name vg_name\n"
#~ "\n"
#~ msgstr ""
#~ " # lvcreate -L 10G -n lv_name vg_name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virsh pool-list\n"
#~ " # virsh vol-create-as poolname newvol 10G\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh pool-list\n"
#~ " # virsh vol-create-as poolname newvol 10G\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-resize indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-resize --expand /dev/sda2 indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize --expand /dev/sda2 indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "     indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize --resize /dev/sda1=+200M --expand /dev/sda2 \\\n"
#~ "     indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-resize --expand /dev/sda2 nbd://example.com outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-resize --expand /dev/sda2 nbd://example.com outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virsh edit guestname\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh edit guestname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virsh start guestname\n"
#~ "\n"
#~ msgstr ""
#~ " # virsh start guestname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " fallocate -l size outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " fallocate -l size outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-resize indisk outdisk \\\n"
#~ "   --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root\n"
#~ "\n"
#~ msgstr ""
#~ " virt-resize indisk outdisk \\\n"
#~ "   --expand /dev/sda2 --LV-expand /dev/vg_guest/lv_root\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda2=10G\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda2=10G\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda4=90%\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda4=90%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda2=+1G\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda2=+1G\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda2=-200M\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda2=-200M\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda1=+128K\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda1=+128K\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda1=+10%\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda1=+10%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --resize /dev/sda1=-10%\n"
#~ "\n"
#~ msgstr ""
#~ " --resize /dev/sda1=-10%\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-resize --machine-readable\n"
#~ " virt-resize\n"
#~ " ntfsresize-force\n"
#~ " 32bitok\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-resize --machine-readable\n"
#~ " virt-resize\n"
#~ " ntfsresize-force\n"
#~ " 32bitok\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -i -a newdisk\n"
#~ " ><fs> cat /boot/grub/device.map\n"
#~ " # check the contents of this file are sensible or\n"
#~ " # edit the file if necessary\n"
#~ " ><fs> grub-install / /dev/vda\n"
#~ " ><fs> exit\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -i -a newdisk\n"
#~ " ><fs> cat /boot/grub/device.map\n"
#~ " # check the contents of this file are sensible or\n"
#~ " # edit the file if necessary\n"
#~ " ><fs> grub-install / /dev/vda\n"
#~ " ><fs> exit\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " require 'guestfs'\n"
#~ " g = Guestfs::Guestfs.new()\n"
#~ " g.add_drive_opts(\"disk.img\",\n"
#~ "                  :readonly => 1, :format => \"raw\")\n"
#~ " g.launch()\n"
#~ "\n"
#~ msgstr ""
#~ " require 'guestfs'\n"
#~ " g = Guestfs::Guestfs.new()\n"
#~ " g.add_drive_opts(\"disk.img\",\n"
#~ "                  :readonly => 1, :format => \"raw\")\n"
#~ " g.launch()\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify [--options] indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify [--options] indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify disk.raw --convert qcow2 disk.qcow2\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify disk.raw --convert qcow2 disk.qcow2\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify --ignore /dev/sda1 indisk outdisk\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify --ignore /dev/sda1 indisk outdisk\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sparsify --convert qcow2 \\\n"
#~ "   -o cluster_size=512,preallocation=metadata ...\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sparsify --convert qcow2 \\\n"
#~ "   -o cluster_size=512,preallocation=metadata ...\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-sparsify --machine-readable\n"
#~ " virt-sparsify\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-sparsify --machine-readable\n"
#~ " virt-sparsify\n"
#~ " ntfs\n"
#~ " btrfs\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " mount -o remount,size=10G /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " mount -o remount,size=10G /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
#~ "\n"
#~ msgstr ""
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " @    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n"
#~ " @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
#~ " IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep [--options] -d domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep [--options] -d domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep [--options] -a disk.img [-a disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --enable ssh-hostkeys,udev-persistent-net\n"
#~ "\n"
#~ msgstr ""
#~ " --enable ssh-hostkeys,udev-persistent-net\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep --format raw -a disk.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep --format raw -a disk.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
#~ "\n"
#~ msgstr ""
#~ " virt-sysprep --format raw -a disk.img --format auto -a another.img\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-sysprep --list-operations\n"
#~ " bash-history * Remove the bash history in the guest\n"
#~ " cron-spool * Remove user at-jobs and cron-jobs\n"
#~ " dhcp-client-state * Remove DHCP client leases\n"
#~ " dhcp-server-state * Remove DHCP server leases\n"
#~ " [etc]\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-sysprep --list-operations\n"
#~ " bash-history * Remove the bash history in the guest\n"
#~ " cron-spool * Remove user at-jobs and cron-jobs\n"
#~ " dhcp-client-state * Remove DHCP client leases\n"
#~ " dhcp-server-state * Remove DHCP server leases\n"
#~ " [etc]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --mount-options \"/:noatime\"\n"
#~ "\n"
#~ msgstr ""
#~ " --mount-options \"/:noatime\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " --mount-options \"/:noatime;/var:rw,nodiratime\"\n"
#~ "\n"
#~ msgstr ""
#~ " --mount-options \"/:noatime;/var:rw,nodiratime\"\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                        virt-sysprep\n"
#~ "                             |\n"
#~ "                             v\n"
#~ " original guest --------> template ---------->\n"
#~ "                                      \\------> cloned\n"
#~ "                                       \\-----> guests\n"
#~ "                                        \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                        virt-sysprep\n"
#~ "                             |\n"
#~ "                             v\n"
#~ " original guest --------> template ---------->\n"
#~ "                                      \\------> cloned\n"
#~ "                                       \\-----> guests\n"
#~ "                                        \\---->\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                   dd                 dd\n"
#~ " original guest --------> template ---------->\n"
#~ "                                      \\------> cloned\n"
#~ "                                       \\-----> guests\n"
#~ "                                        \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                   dd                 dd\n"
#~ " original guest --------> template ---------->\n"
#~ "                                      \\------> cloned\n"
#~ "                                       \\-----> guests\n"
#~ "                                        \\---->\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                          snapshot\n"
#~ "                template ---------->\n"
#~ "                            \\------> cloned\n"
#~ "                             \\-----> guests\n"
#~ "                              \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                          snapshot\n"
#~ "                template ---------->\n"
#~ "                            \\------> cloned\n"
#~ "                             \\-----> guests\n"
#~ "                              \\---->\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                    virt-sysprep        virt-sysprep\n"
#~ "                      (reset)      (add user, keys, logos)\n"
#~ "                         |                   |\n"
#~ "                 dd      v          dd       v\n"
#~ " original guest ----> template ---------> copied ------> custom\n"
#~ "                                          template       guest\n"
#~ "\n"
#~ msgstr ""
#~ "                    virt-sysprep        virt-sysprep\n"
#~ "                      (reset)      (add user, keys, logos)\n"
#~ "                         |                   |\n"
#~ "                 dd      v          dd       v\n"
#~ " original guest ----> template ---------> copied ------> custom\n"
#~ "                                          template       guest\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " qemu-img create -f qcow2 -o backing_file=original snapshot.qcow\n"
#~ "\n"
#~ msgstr ""
#~ " qemu-img create -f qcow2 -o backing_file=original snapshot.qcow\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "              virt-sparsify\n"
#~ " original guest --------> template\n"
#~ "\n"
#~ msgstr ""
#~ "              virt-sparsify\n"
#~ " original guest --------> template\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ "                         virt-resize\n"
#~ "                template ---------->\n"
#~ "                            \\------> cloned\n"
#~ "                             \\-----> guests\n"
#~ "                              \\---->\n"
#~ "\n"
#~ msgstr ""
#~ "                         virt-resize\n"
#~ "                template ---------->\n"
#~ "                            \\------> cloned\n"
#~ "                             \\-----> guests\n"
#~ "                              \\---->\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " libguestfs-test-tool [--options]\n"
#~ "\n"
#~ msgstr ""
#~ " libguestfs-test-tool [--options]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ===== TEST FINISHED OK =====\n"
#~ "\n"
#~ msgstr ""
#~ " ===== TEST FINISHED OK =====\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " killall libvirtd lt-libvirtd\n"
#~ " ~/path/to/libvirt/run libguestfs-test-tool\n"
#~ "\n"
#~ msgstr ""
#~ " killall libvirtd lt-libvirtd\n"
#~ " ~/path/to/libvirt/run libguestfs-test-tool\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_BACKEND=libvirt\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_BACKEND=libvirt\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " export LIBGUESTFS_BACKEND=libvirt:qemu:///session\n"
#~ "\n"
#~ msgstr ""
#~ " export LIBGUESTFS_BACKEND=libvirt:qemu:///session\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " getenforce\n"
#~ "\n"
#~ msgstr ""
#~ " getenforce\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " setenforce Permissive\n"
#~ "\n"
#~ msgstr ""
#~ " setenforce Permissive\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " ausearch -m avc -ts recent\n"
#~ "\n"
#~ msgstr ""
#~ " ausearch -m avc -ts recent\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " setenforce Enforcing\n"
#~ "\n"
#~ msgstr ""
#~ " setenforce Enforcing\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-list-filesystems [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-filesystems [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-list-filesystems [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-filesystems [--options] disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-list-partitions [--options] domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-partitions [--options] domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-list-partitions [--options] disk.img [disk.img ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-list-partitions [--options] disk.img [disk.img ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] -x domname directory tarball\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] -x domname directory tarball\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] -u domname tarball directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] -u domname tarball directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] disk.img [disk.img ...] -x directory tarball\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar [--options] disk.img [disk.img ...] -u tarball directory\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar -x domname /home home.tar\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -x domname /home home.tar\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar -zx domname /home home.tar.gz\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -zx domname /home home.tar.gz\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar -u domname uploadstuff.tar /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -u domname uploadstuff.tar /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
#~ "\n"
#~ msgstr ""
#~ " virt-tar -zu domname uploadstuff.tar.gz /tmp\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' name\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg domname 'HKLM\\Path\\To\\Subkey' @\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --merge domname [input.reg ...]\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --merge domname [input.reg ...]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg [--options] disk.img ... # instead of domname\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg [--options] disk.img ... # instead of domname\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-win-reg Windows7 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft'\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
#~ " $ virt-win-reg Windows7 $cvkey ProductName\n"
#~ " Windows 7 Enterprise\n"
#~ "\n"
#~ msgstr ""
#~ " $ cvkey='HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion'\n"
#~ " $ virt-win-reg Windows7 $cvkey ProductName\n"
#~ " Windows 7 Enterprise\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ virt-win-reg --merge Windows7 changes.reg\n"
#~ "\n"
#~ msgstr ""
#~ " $ virt-win-reg --merge Windows7 changes.reg\n"
#~ "\n"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SAM>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SAM>"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SECURITY>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SECURITY>"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SOFTWARE>"

#~ msgid "C<HKEY_LOCAL_MACHINE\\SYSTEM>"
#~ msgstr "C<HKEY_LOCAL_MACHINE\\SYSTEM>"

#~ msgid "C<HKEY_USERS\\.DEFAULT>"
#~ msgstr "C<HKEY_USERS\\.DEFAULT>"

#, no-wrap
#~ msgid ""
#~ " iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
#~ "\n"
#~ msgstr ""
#~ " iconv -f utf-16le -t utf-8 < win.reg | dos2unix > linux.reg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
#~ "\n"
#~ msgstr ""
#~ " unix2dos linux.reg | iconv -f utf-8 -t utf-16le > win.reg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " $ file software.reg\n"
#~ " software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
#~ " with CRLF line terminators\n"
#~ "\n"
#~ msgstr ""
#~ " $ file software.reg\n"
#~ " software.reg: Little-endian UTF-16 Unicode text, with very long lines,\n"
#~ " with CRLF line terminators\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
#~ " [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
#~ " \"Current\"=dword:00000001\n"
#~ " \"Default\"=dword:00000001\n"
#~ " \"Failed\"=dword:00000000\n"
#~ " \"LastKnownGood\"=dword:00000002\n"
#~ "\n"
#~ msgstr ""
#~ " # virt-win-reg WindowsGuest 'HKLM\\SYSTEM\\Select'\n"
#~ " [HKEY_LOCAL_MACHINE\\SYSTEM\\Select]\n"
#~ " \"Current\"=dword:00000001\n"
#~ " \"Default\"=dword:00000001\n"
#~ " \"Failed\"=dword:00000000\n"
#~ " \"LastKnownGood\"=dword:00000002\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " [-HKEY_LOCAL_MACHINE\\Foo]\n"
#~ "\n"
#~ msgstr ""
#~ " [-HKEY_LOCAL_MACHINE\\Foo]\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " [HKEY_LOCAL_MACHINE\\Foo]\n"
#~ " \"Value\"=-\n"
#~ "\n"
#~ msgstr ""
#~ " [HKEY_LOCAL_MACHINE\\Foo]\n"
#~ " \"Value\"=-\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -i -d WindowsGuest upload test.bat /test.bat\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat > test.reg <<'EOF'\n"
#~ " [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
#~ " \"Test\"=\"c:\\\\test.bat\"\n"
#~ " EOF\n"
#~ "\n"
#~ msgstr ""
#~ " cat > test.reg <<'EOF'\n"
#~ " [HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce]\n"
#~ " \"Test\"=\"c:\\\\test.bat\"\n"
#~ " EOF\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --merge WindowsGuest test.reg\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --merge WindowsGuest test.reg\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " guestfish -i -d WindowsGuest <<EOF\n"
#~ "   upload rhsrvany.exe /rhsrvany.exe\n"
#~ "   upload test.exe /test.exe\n"
#~ " EOF\n"
#~ "\n"
#~ msgstr ""
#~ " guestfish -i -d WindowsGuest <<EOF\n"
#~ "   upload rhsrvany.exe /rhsrvany.exe\n"
#~ "   upload test.exe /test.exe\n"
#~ " EOF\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " cat > service.reg <<'EOF'\n"
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
#~ " \"Type\"=dword:00000010\n"
#~ " \"Start\"=dword:00000002\n"
#~ " \"ErrorControl\"=dword:00000001\n"
#~ " \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
#~ " \"DisplayName\"=\"RHSrvAny\"\n"
#~ " \"ObjectName\"=\"NetworkService\"\n"
#~ " \n"
#~ msgstr ""
#~ " cat > service.reg <<'EOF'\n"
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny]\n"
#~ " \"Type\"=dword:00000010\n"
#~ " \"Start\"=dword:00000002\n"
#~ " \"ErrorControl\"=dword:00000001\n"
#~ " \"ImagePath\"=\"c:\\\\rhsrvany.exe\"\n"
#~ " \"DisplayName\"=\"RHSrvAny\"\n"
#~ " \"ObjectName\"=\"NetworkService\"\n"
#~ " \n"

#, no-wrap
#~ msgid ""
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
#~ " \"CommandLine\"=\"c:\\\\test.exe\"\n"
#~ " \"PWD\"=\"c:\\\\Temp\"\n"
#~ " EOF\n"
#~ "\n"
#~ msgstr ""
#~ " [HKLM\\SYSTEM\\ControlSet001\\services\\RHSrvAny\\Parameters]\n"
#~ " \"CommandLine\"=\"c:\\\\test.exe\"\n"
#~ " \"PWD\"=\"c:\\\\Temp\"\n"
#~ " EOF\n"
#~ "\n"

#, no-wrap
#~ msgid ""
#~ " virt-win-reg --merge WindowsGuest service.reg\n"
#~ "\n"
#~ msgstr ""
#~ " virt-win-reg --merge WindowsGuest service.reg\n"
#~ "\n"
